/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _CTMap = __webpack_require__(2);

	var _CTMap2 = _interopRequireDefault(_CTMap);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var scope = typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {};
	if (scope.CTMap) {
	    Object.assign(scope.CTMap, _CTMap2.default);
	} else {
	    scope['CTMap'] = _CTMap2.default;
	}

	// scope['Cesium'] = CTMap;

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _Util = __webpack_require__(3);

	var Util = _interopRequireWildcard(_Util);

	var _PluginManager = __webpack_require__(15);

	var _PluginManager2 = _interopRequireDefault(_PluginManager);

	var _Widget = __webpack_require__(20);

	var _Widget2 = _interopRequireDefault(_Widget);

	var _Tool = __webpack_require__(23);

	var _Tool2 = _interopRequireDefault(_Tool);

	var _Viewer = __webpack_require__(24);

	var _Viewer2 = _interopRequireDefault(_Viewer);

	var _DrawTool = __webpack_require__(38);

	var _DrawTool2 = _interopRequireDefault(_DrawTool);

	var _Measure = __webpack_require__(90);

	var _Measure2 = _interopRequireDefault(_Measure);

	var _tooltip = __webpack_require__(107);

	var _tooltip2 = _interopRequireDefault(_tooltip);

	var _ViewshedAnalyze = __webpack_require__(86);

	var _ViewshedAnalyze2 = _interopRequireDefault(_ViewshedAnalyze);

	var _FloodAnalyze = __webpack_require__(87);

	var _FloodAnalyze2 = _interopRequireDefault(_FloodAnalyze);

	var _EnvEffects = __webpack_require__(93);

	var _EnvEffects2 = _interopRequireDefault(_EnvEffects);

	var _transformEditor = __webpack_require__(108);

	var _transformEditor2 = _interopRequireDefault(_transformEditor);

	var _LayerType = __webpack_require__(30);

	var _LayerType2 = _interopRequireDefault(_LayerType);

	var _LayerStyle = __webpack_require__(32);

	var _LayerStyle2 = _interopRequireDefault(_LayerStyle);

	var _gltfWraper = __webpack_require__(109);

	var _gltfWraper2 = _interopRequireDefault(_gltfWraper);

	var _Cesium3dTilesetExt = __webpack_require__(110);

	var _Cesium3dTilesetExt2 = _interopRequireDefault(_Cesium3dTilesetExt);

	var _TerrainLayerList = __webpack_require__(37);

	var _TerrainLayerList2 = _interopRequireDefault(_TerrainLayerList);

	var _BaiDuImageryProvider = __webpack_require__(112);

	var _BaiDuImageryProvider2 = _interopRequireDefault(_BaiDuImageryProvider);

	var _KeyboardNavigation = __webpack_require__(113);

	var _KeyboardNavigation2 = _interopRequireDefault(_KeyboardNavigation);

	var _HeatMapLayer = __webpack_require__(114);

	var _MapVLayer = __webpack_require__(117);

	var _Clusterpoint = __webpack_require__(121);

	var _Clusterpoint2 = _interopRequireDefault(_Clusterpoint);

	var _LicManager = __webpack_require__(106);

	var _LicManager2 = _interopRequireDefault(_LicManager);

	var _WelcomAPI = __webpack_require__(122);

	var _WelcomAPI2 = _interopRequireDefault(_WelcomAPI);

	var _LatLonGridLayer = __webpack_require__(123);

	var _LatLonGridLayer2 = _interopRequireDefault(_LatLonGridLayer);

	var _WaterFacePrimitive = __webpack_require__(124);

	var _WaterFacePrimitive2 = _interopRequireDefault(_WaterFacePrimitive);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	//粒子特效

	// import tile3DLayer from "./Layer/tile3DLayer"
	//通视分析
	var CTMap = Cesium;
	//模型位置编辑

	CTMap['DrawTool'] = _DrawTool2.default;
	CTMap['PluginManager'] = _PluginManager2.default;
	CTMap['Util'] = Util;
	CTMap['Widget'] = _Widget2.default;
	CTMap['Tool'] = _Tool2.default;
	CTMap['Measure'] = _Measure2.default;
	CTMap['EnvEffects'] = _EnvEffects2.default;
	CTMap['ViewshedAnalyze'] = _ViewshedAnalyze2.default;
	CTMap['FloodAnalyze'] = _FloodAnalyze2.default;
	CTMap['transformEditor'] = _transformEditor2.default;
	CTMap['LayerType'] = _LayerType2.default;
	CTMap['LayerStyle'] = _LayerStyle2.default;
	CTMap['TerrainLayerList'] = _TerrainLayerList2.default;
	CTMap['Viewer'] = _Viewer2.default;
	CTMap['KeyboardNavigation'] = _KeyboardNavigation2.default;
	CTMap['BaiDuImageryProvider'] = _BaiDuImageryProvider2.default;

	CTMap['MapVLayer'] = _MapVLayer.MapVLayer;
	CTMap['Clusterpoint'] = _Clusterpoint2.default;
	CTMap['MapVOpt'] = _MapVLayer.MapVOpt;
	CTMap['HeatMapLayer'] = _HeatMapLayer.HeatMapLayer;
	CTMap['HeatMapOpt'] = _HeatMapLayer.HeatMapOpt;
	CTMap['LatLonGridLayer'] = _LatLonGridLayer2.default;
	CTMap['WaterFacePrimitive'] = _WaterFacePrimitive2.default;

	CTMap['tooltip'] = _tooltip2.default;

	try {
	  CTMap = _LicManager2.default.checkLicense() ? CTMap : {};
	} catch (err) {}

	_WelcomAPI2.default.greeting();

	exports.default = CTMap;

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.syncGetJson = exports.arrayToStr = exports.strToArray = exports.getLocation = exports.aAToa_a = exports.a_aToaA = exports.formatURLByHost = exports.formatURL = exports.formatURL2 = exports.rename = exports.formatString = exports.indexOf = exports.falseFn = exports.createGuid = exports.json2xmlAndaAToa_a = exports.json2xml = exports.xmlToJson = exports.strToXml = exports.jsonSyncPromise = exports.isColor = exports.xmlPromise = exports.filterUnit = exports.isAddUnit = exports.isArray = exports.isStrNumber = exports.isNumber = exports.isString = exports.getJsonLength = exports.toBooleanTrueOrFlse = exports.isTrueOrFalse = exports.isBoolean = exports.isObject = exports.isJson = exports.math = exports.array = exports.$ = undefined;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /*
	                                                                                                                                                                                                                                                                               * 作者：zhuwz
	                                                                                                                                                                                                                                                                               * 日期：2018-12-03 21:39:39.
	                                                                                                                                                                                                                                                                               */


	var _jquery = __webpack_require__(4);

	var _jquery2 = _interopRequireDefault(_jquery);

	var _mathUtil = __webpack_require__(7);

	var _mathUtil2 = _interopRequireDefault(_mathUtil);

	var _arrayUtil = __webpack_require__(8);

	var _arrayUtil2 = _interopRequireDefault(_arrayUtil);

	var _WarnException = __webpack_require__(9);

	var warn = _interopRequireWildcard(_WarnException);

	var _ExceptionMessage = __webpack_require__(13);

	var _ExceptionMessage2 = _interopRequireDefault(_ExceptionMessage);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var $ = exports.$ = _jquery2.default;
	var array = exports.array = _arrayUtil2.default;
	var math = exports.math = _mathUtil2.default;
	/**
	 * 判定对象是否为纯粹的json对象
	 * @param obj {Object} 被判定对象
	 * @return {boolean} 是-true 否-false
	 */
	var isJson = exports.isJson = function isJson(obj) {
	    if ($.isPlainObject(obj)) {
	        try {
	            JSON.stringify(obj);
	            return true;
	        } catch (e) {
	            return false;
	        }
	    } else {
	        return false;
	    }
	};
	/**
	 * 检查参数是否为普通对象
	 * @param obj
	 * @return {boolean}
	 */
	var isObject = exports.isObject = function isObject(obj) {
	    return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && obj !== null;
	};

	/**
	 * 检查参数是否为布尔值
	 * @param obj
	 * @return {boolean}
	 */
	var isBoolean = exports.isBoolean = function isBoolean(obj) {
	    return typeof obj === 'boolean';
	};

	/**
	 * 检查参数是否为布尔值或者为true、false的字符串
	 * @param value
	 * @return {boolean}
	 */
	var isTrueOrFalse = exports.isTrueOrFalse = function isTrueOrFalse(value) {
	    return typeof value === 'boolean' || value === 'true' || value === 'false';
	};

	/**
	 * 将传入的字符串类型的
	 * @param value
	 * @return {boolean/undefined}
	 */
	var toBooleanTrueOrFlse = exports.toBooleanTrueOrFlse = function toBooleanTrueOrFlse(value) {
	    if (value === true || value === 'true' || value === 'TRUE') {
	        return true;
	    } else if (value === false || value === 'false' || value === 'FALSE') {
	        return false;
	    }
	    return undefined;
	};

	if (!("debug" in console)) {
	    console.debug = function () {
	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	            args[_key] = arguments[_key];
	        }

	        console.log.apply(undefined, args);
	    };
	}

	var getJsonLength = exports.getJsonLength = function getJsonLength(obj) {
	    var count = 0;
	    for (var key in obj) {
	        count++;
	    }
	    return count;
	};
	/**
	 * 判定是否为字符串
	 * @param obj {Object}
	 * @return {boolean} 是-true 否-false
	 */
	var isString = exports.isString = function isString(obj) {
	    return typeof obj === 'string' && obj.constructor === String;
	};
	/**
	 * 判定是否为数值
	 * @param obj {Object}
	 * @return {number} 是-true 否-false
	 */
	var isNumber = exports.isNumber = function isNumber(obj) {
	    return typeof obj === 'number' && obj.constructor === Number;
	};

	/**
	 * 判定是否为字符串类型的数值
	 * @param obj {Object}
	 * @return {number} 是-true 否-false
	 */
	var isStrNumber = exports.isStrNumber = function isStrNumber(obj) {
	    if (isString(obj)) {
	        if (isNaN(parseFloat(obj))) return false;
	        return true;
	    }
	    return typeof obj === 'number' && obj.constructor === Number;
	};

	/**
	 * 判定是否为数组
	 * @param obj {Array<any>}
	 * @return {boolean} 是-true 否-false
	 */
	var isArray = exports.isArray = function isArray(obj) {
	    return obj instanceof Array;
	};
	/**
	 * @param {String} string
	 * @description 正则匹配带有单位px或m的属性值
	 */
	var isAddUnit = exports.isAddUnit = function isAddUnit(string) {
	    var reg = new RegExp(/^(\-|\+)?\d+(m|px)?$/);
	    return reg.test(string);
	};
	/**
	 * @param {String} string
	 * @description 正则匹配带有单位m或px的属性值并返回其中的数值
	 */
	var filterUnit = exports.filterUnit = function filterUnit(string) {
	    return isNumber(string) ? string : Number(string.match(/^(\-|\+)?\d+/)[0]);
	};
	/**
	 * ajax获取xml数据
	 */
	var xmlPromise = exports.xmlPromise = function xmlPromise(url) {
	    return $.ajax({ url: url, type: 'get', dataType: 'xml' });
	};
	/**
	 * 
	 * @param {String} string
	 * @description 判断字符串是否为十六进制颜色。例如#FFFFFFFF或者#FFFFFF  
	 */
	var isColor = exports.isColor = function isColor(string) {
	    var regColor = new RegExp('^#([0-9a-fA-F]{6}|[0-9a-fA-F]{8})$');
	    return regColor.test(string);
	};
	/**
	 * ajax获取json数据
	 */
	var jsonSyncPromise = exports.jsonSyncPromise = function jsonSyncPromise(url) {
	    return $.ajax({ url: url, type: 'get', dataType: 'json', async: false });
	};
	var strToXml = exports.strToXml = function strToXml(str) {
	    return new DOMParser().parseFromString(str, 'text/xml');
	};
	/**
	 * xml字符串转换为json
	 * @param xml {String} xml字符串
	 * @return {Json} json对象
	 */
	var xmlToJson = exports.xmlToJson = function xmlToJson(xml) {
	    // Create the return object
	    var obj = {};
	    if (xml.nodeType === 1) {
	        // element
	        // do attributes
	        if (xml.attributes.length > 0) {
	            for (var j = 0; j < xml.attributes.length; j += 1) {
	                var attribute = xml.attributes.item(j);
	                obj[attribute.nodeName] = attribute.nodeValue;
	            }
	        }
	    } else if (xml.nodeType === 3) {
	        // text
	        obj = xml.nodeValue; //--钱晶
	    }
	    if (xml.hasChildNodes()) {
	        for (var i = 0; i < xml.childNodes.length; i += 1) {
	            var item = xml.childNodes.item(i);
	            var nodeName = item.nodeName;
	            if (typeof obj[nodeName] === 'undefined') {
	                var value = null;
	                if (nodeName.toLowerCase() === '#cdata-section') {
	                    value = CDATAtoSTR(xml.innerHTML);
	                    nodeName = 'value';
	                } else {
	                    value = xmlToJson(item);
	                }

	                if (!(nodeName === '#text' && value.replace(/^\s+/g, '') === '') && nodeName !== '#comment') {
	                    // 去除注解
	                    if (nodeName === '#text') {
	                        obj = value;
	                    } else {
	                        obj[nodeName] = value;
	                    }
	                }
	            } else {
	                if (typeof obj[nodeName].length === 'undefined') {
	                    var old = obj[nodeName];
	                    obj[nodeName] = [];
	                    obj[nodeName].push(old);
	                }
	                obj[nodeName].push(xmlToJson(item));
	            }
	        }
	    }
	    return obj;
	};
	/**
	 * json转xml字符串
	 */
	var json2xml = exports.json2xml = function json2xml(json, tag) {
	    var xml = '';
	    if (json instanceof Array) {
	        var _iteratorNormalCompletion = true;
	        var _didIteratorError = false;
	        var _iteratorError = undefined;

	        try {
	            for (var _iterator = json[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	                var v = _step.value;
	                xml += json2xml(v, tag);
	            }
	        } catch (err) {
	            _didIteratorError = true;
	            _iteratorError = err;
	        } finally {
	            try {
	                if (!_iteratorNormalCompletion && _iterator.return) {
	                    _iterator.return();
	                }
	            } finally {
	                if (_didIteratorError) {
	                    throw _iteratorError;
	                }
	            }
	        }
	    } else if (json instanceof Object) {
	        if (tag) xml += '<' + tag + '>';
	        for (var k in json) {
	            xml += json2xml(json[k], k);
	        }if (tag) xml += '</' + tag + '>';
	    } else {
	        xml += '<' + tag + '>' + json + '</' + tag + '>';
	    }
	    return xml;
	};

	var json2xmlAndaAToa_a = exports.json2xmlAndaAToa_a = function json2xmlAndaAToa_a(json, tag) {
	    var xml = '';
	    if (json instanceof Array) {
	        var _iteratorNormalCompletion2 = true;
	        var _didIteratorError2 = false;
	        var _iteratorError2 = undefined;

	        try {
	            for (var _iterator2 = json[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	                var v = _step2.value;
	                xml += json2xmlAndaAToa_a(v, tag);
	            }
	        } catch (err) {
	            _didIteratorError2 = true;
	            _iteratorError2 = err;
	        } finally {
	            try {
	                if (!_iteratorNormalCompletion2 && _iterator2.return) {
	                    _iterator2.return();
	                }
	            } finally {
	                if (_didIteratorError2) {
	                    throw _iteratorError2;
	                }
	            }
	        }
	    } else if (json instanceof Object) {
	        if (tag) xml += '<' + aAToa_a(tag) + '>';
	        for (var k in json) {
	            xml += json2xmlAndaAToa_a(json[k], k);
	        }if (tag) xml += '</' + aAToa_a(tag) + '>';
	    } else {
	        xml += '<' + aAToa_a(tag) + '>' + json + '</' + aAToa_a(tag) + '>';
	    }
	    return xml;
	};

	var createGuid = exports.createGuid = function createGuid() {
	    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
	        var r = Math.random() * 16 | 0;
	        var v = c === 'x' ? r : r & 0x3 | 0x8;
	        return v.toString(16);
	    });
	};

	var falseFn = exports.falseFn = function falseFn() {
	    return false;
	};

	var indexOf = exports.indexOf = function indexOf(obj, arr, key) {
	    for (var i in arr) {
	        if (arr[i][key] === obj[key]) {
	            return i;
	        }
	    }
	    return -1;
	};

	/**
	 * 格式化字符串
	 * @param str {String} 被格式化字符串 如 xx.json?a = {a}&b={b}
	 * @param array {Array} 传入得字符 [{k:a,v:asdf}]
	 */
	var formatString = exports.formatString = function formatString(str, array) {
	    if (array.length !== 0) {
	        var _iteratorNormalCompletion3 = true;
	        var _didIteratorError3 = false;
	        var _iteratorError3 = undefined;

	        try {
	            for (var _iterator3 = array[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	                var o = _step3.value;

	                var re = new RegExp('{' + o.k + '}', 'gm');
	                str = str.replace(re, o.v);
	            }
	        } catch (err) {
	            _didIteratorError3 = true;
	            _iteratorError3 = err;
	        } finally {
	            try {
	                if (!_iteratorNormalCompletion3 && _iterator3.return) {
	                    _iterator3.return();
	                }
	            } finally {
	                if (_didIteratorError3) {
	                    throw _iteratorError3;
	                }
	            }
	        }

	        return str;
	    }
	    return str;
	};

	var rename = exports.rename = function rename() {
	    var nameValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
	    var objMap = arguments[1];
	    var prop = arguments[2];
	    var obj = arguments[3];

	    var count = 0;
	    var uniqueMap = function uniqueMap(str, map, key, self) {
	        // let res = str;
	        for (var mapkey in map) {
	            var compareValue = void 0;
	            if (key) {
	                // 匹配value[key]
	                compareValue = map[mapkey][key];
	            } else {
	                compareValue = map[mapkey];
	            }
	            // console.log(str, compareValue);
	            if (compareValue && str === compareValue && map[mapkey] !== self) return uniqueMap(str + '_' + ++count, map, key, self);
	        }
	        return str;
	    };
	    return uniqueMap(nameValue, objMap, prop, obj);
	};

	var formatURL2 = exports.formatURL2 = function formatURL2(originPath, file) {
	    if (!file) return;
	    var tempUrl = file.split('/');
	    var htmlUrl = originPath; //当前页面路径
	    if (!htmlUrl) return file;
	    htmlUrl = htmlUrl.split('/');

	    // 去掉末尾的‘/’
	    htmlUrl.pop();
	    var res = '';
	    for (var i = 0; i < tempUrl.length; i += 1) {
	        if (i === 0 && tempUrl[i] === '.') i += 1;
	        if (tempUrl[i] === '..') {
	            htmlUrl.pop();
	        } else {
	            htmlUrl.push(tempUrl[i]);
	        }
	    }
	    for (var _i = 0; _i < htmlUrl.length; _i += 1) {
	        var sp = _i === htmlUrl.length - 1 ? '' : '/';
	        res += htmlUrl[_i] + sp;
	    }
	    return res;
	};

	var formatURL = exports.formatURL = function formatURL(file) {
	    if (!file) return;
	    var tempUrl = file.split('/');
	    var htmlUrl = window.location.href; //当前页面路径
	    if (!htmlUrl) return file;
	    htmlUrl = htmlUrl.split('/');

	    // 去掉末尾的‘/’
	    htmlUrl.pop();
	    var res = '';
	    for (var i = 0; i < tempUrl.length; i += 1) {
	        if (i === 0 && tempUrl[i] === '.') i += 1;
	        if (tempUrl[i] === '..') {
	            htmlUrl.pop();
	        } else {
	            htmlUrl.push(tempUrl[i]);
	        }
	    }
	    for (var _i2 = 0; _i2 < htmlUrl.length; _i2 += 1) {
	        var sp = _i2 === htmlUrl.length - 1 ? '' : '/';
	        res += htmlUrl[_i2] + sp;
	    }
	    return res;
	};

	var formatURLByHost = exports.formatURLByHost = function formatURLByHost(file) {
	    if (!file) return;
	    var root = window.location.origin;
	    if (!root) return file;

	    var tempUrl = file.split('/');
	    var url = [root];

	    var res = '';
	    for (var i = 0; i < tempUrl.length; i += 1) {
	        if (i === 0 && tempUrl[i] === '.') i += 1;
	        if (tempUrl[i] === '..') {
	            i += 1;
	        } else {
	            url.push(tempUrl[i]);
	        }
	    }
	    for (var _i3 = 0; _i3 < url.length; _i3 += 1) {
	        var sp = _i3 === url.length - 1 ? '' : '/';
	        res += url[_i3] + sp;
	    }

	    return res;
	};

	/**
	 * xxxx_xx_xx转xxxxXxXx的方法
	 */
	var a_aToaA = exports.a_aToaA = function a_aToaA(str) {
	    return str.replace(/_[a-z]/g, function ($0) {
	        return $0.toUpperCase().charAt(1);
	    });
	};

	/**
	 * xxxxXx转xxxx_xx
	 */
	var aAToa_a = exports.aAToa_a = function aAToa_a(str) {
	    return str.replace(/[A-Z]/g, function ($0) {
	        return '_' + $0.toLowerCase();
	    });
	};

	var getLocation = exports.getLocation = function getLocation(filepath) {
	    var location = { dir: '', filename: '' };
	    if (new RegExp(/^http:\/\//g).test(filepath)) filepath = filepath.substring(6);
	    var dirs = filepath.split('/');
	    for (var i = 0; i < dirs.length; i++) {
	        // 暂时写成以html结尾的路径
	        if (i === dirs.length - 1) {
	            // 最后一个是文件名
	            location.dir += '/';
	            location.filename = dirs[i];
	        } else if (dirs[i] !== null && dirs[i] !== '') {
	            location.dir += '/' + dirs[i];
	        }
	    }
	    location.dir = 'http:/' + location.dir;
	    return location;
	};

	/**
	 * 字符串转数组 样例：'1 2 3,4 5 6' => [[1, 2, 3], [4, 5, 6]]
	 *                   1,2,45,5 =>[1,2,45,5]
	 */
	var strToArray = exports.strToArray = function strToArray(string) {
	    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'float';

	    var points = [];
	    if (typeof string !== 'string') return points;

	    var datas = string.split(',');
	    if (!datas) return points;

	    if (!(datas instanceof Array)) datas = [datas];

	    datas.forEach(function (value) {
	        if (typeof value === 'string') {
	            var tempVecStr = value.split(' ');

	            if (tempVecStr && tempVecStr.length === 1) {
	                points.push(tempVecStr[0]);
	            } else if (tempVecStr && tempVecStr.length > 1) {

	                var tempVec = [];
	                for (var i = 0; i < tempVecStr.length; i++) {
	                    tempVec.push(parseFloat(tempVecStr[i]));
	                }
	                points.push(tempVec);
	            }
	        }
	    });

	    //转换文字类型
	    if (type === 'string' || type === 'String' || type === 'STRING') return points;

	    points.forEach(function (point, pointIndex, pointArr) {
	        if (point instanceof Array) {
	            point.forEach(function (data, index, arr) {
	                switch (type) {
	                    case 'float':
	                        arr[index] = parseFloat(data);
	                        break;

	                    default:
	                        break;
	                }
	            });
	        } else {
	            switch (type) {
	                case 'float':
	                    pointArr[pointIndex] = parseFloat(point);
	                    break;

	                default:
	                    break;
	            }
	        }
	    });

	    return points;
	};

	/**
	 * 数组转字符串样例：[[1, 2, 3], [4, 5, 6]] => '1 2 3,4 5 6'
	 */
	var arrayToStr = exports.arrayToStr = function arrayToStr(points) {
	    var str = '';
	    if (!points || !(points instanceof Array) || points.length === 0) return '';

	    for (var i = 0; i < points.length; i++) {
	        if (i !== 0) str += ',';
	        var data = points[i];
	        if (data instanceof Array) {
	            for (var k = 0; k < data.length; k++) {
	                if (k !== 0) str += ' ';
	                str += '' + data[k];
	            }
	        } else {
	            str += '' + data;
	        }
	    }
	    return str;
	};

	/**
	 * 同步获取json数据
	 */
	var syncGetJson = exports.syncGetJson = function syncGetJson(path) {
	    var response = $.ajax({
	        async: false,
	        url: path,
	        dataType: 'text'
	    });
	    if (response.readyState === 4 && response.status === 200) {
	        return JSON.parse(response.responseText);
	    }
	};

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {"use strict";

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	/*! jQuery v3.1.1 | (c) jQuery Foundation | jquery.org/license */
	!function (a, b) {
	  "use strict";
	  "object" == ( false ? "undefined" : _typeof(module)) && "object" == _typeof(module.exports) ? module.exports = a.document ? b(a, !0) : function (a) {
	    if (!a.document) throw new Error("jQuery requires a window with a document");return b(a);
	  } : b(a);
	}("undefined" != typeof window ? window : undefined, function (a, b) {
	  "use strict";
	  var c = [],
	      d = a.document,
	      e = Object.getPrototypeOf,
	      f = c.slice,
	      g = c.concat,
	      h = c.push,
	      i = c.indexOf,
	      j = {},
	      k = j.toString,
	      l = j.hasOwnProperty,
	      m = l.toString,
	      n = m.call(Object),
	      o = {};function p(a, b) {
	    b = b || d;var c = b.createElement("script");c.text = a, b.head.appendChild(c).parentNode.removeChild(c);
	  }var q = "3.1.1",
	      r = function r(a, b) {
	    return new r.fn.init(a, b);
	  },
	      s = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
	      t = /^-ms-/,
	      u = /-([a-z])/g,
	      v = function v(a, b) {
	    return b.toUpperCase();
	  };r.fn = r.prototype = { jquery: q, constructor: r, length: 0, toArray: function toArray() {
	      return f.call(this);
	    }, get: function get(a) {
	      return null == a ? f.call(this) : a < 0 ? this[a + this.length] : this[a];
	    }, pushStack: function pushStack(a) {
	      var b = r.merge(this.constructor(), a);return b.prevObject = this, b;
	    }, each: function each(a) {
	      return r.each(this, a);
	    }, map: function map(a) {
	      return this.pushStack(r.map(this, function (b, c) {
	        return a.call(b, c, b);
	      }));
	    }, slice: function slice() {
	      return this.pushStack(f.apply(this, arguments));
	    }, first: function first() {
	      return this.eq(0);
	    }, last: function last() {
	      return this.eq(-1);
	    }, eq: function eq(a) {
	      var b = this.length,
	          c = +a + (a < 0 ? b : 0);return this.pushStack(c >= 0 && c < b ? [this[c]] : []);
	    }, end: function end() {
	      return this.prevObject || this.constructor();
	    }, push: h, sort: c.sort, splice: c.splice }, r.extend = r.fn.extend = function () {
	    var a,
	        b,
	        c,
	        d,
	        e,
	        f,
	        g = arguments[0] || {},
	        h = 1,
	        i = arguments.length,
	        j = !1;for ("boolean" == typeof g && (j = g, g = arguments[h] || {}, h++), "object" == (typeof g === "undefined" ? "undefined" : _typeof(g)) || r.isFunction(g) || (g = {}), h === i && (g = this, h--); h < i; h++) {
	      if (null != (a = arguments[h])) for (b in a) {
	        c = g[b], d = a[b], g !== d && (j && d && (r.isPlainObject(d) || (e = r.isArray(d))) ? (e ? (e = !1, f = c && r.isArray(c) ? c : []) : f = c && r.isPlainObject(c) ? c : {}, g[b] = r.extend(j, f, d)) : void 0 !== d && (g[b] = d));
	      }
	    }return g;
	  }, r.extend({ expando: "jQuery" + (q + Math.random()).replace(/\D/g, ""), isReady: !0, error: function error(a) {
	      throw new Error(a);
	    }, noop: function noop() {}, isFunction: function isFunction(a) {
	      return "function" === r.type(a);
	    }, isArray: Array.isArray, isWindow: function isWindow(a) {
	      return null != a && a === a.window;
	    }, isNumeric: function isNumeric(a) {
	      var b = r.type(a);return ("number" === b || "string" === b) && !isNaN(a - parseFloat(a));
	    }, isPlainObject: function isPlainObject(a) {
	      var b, c;return !(!a || "[object Object]" !== k.call(a)) && (!(b = e(a)) || (c = l.call(b, "constructor") && b.constructor, "function" == typeof c && m.call(c) === n));
	    }, isEmptyObject: function isEmptyObject(a) {
	      var b;for (b in a) {
	        return !1;
	      }return !0;
	    }, type: function type(a) {
	      return null == a ? a + "" : "object" == (typeof a === "undefined" ? "undefined" : _typeof(a)) || "function" == typeof a ? j[k.call(a)] || "object" : typeof a === "undefined" ? "undefined" : _typeof(a);
	    }, globalEval: function globalEval(a) {
	      p(a);
	    }, camelCase: function camelCase(a) {
	      return a.replace(t, "ms-").replace(u, v);
	    }, nodeName: function nodeName(a, b) {
	      return a.nodeName && a.nodeName.toLowerCase() === b.toLowerCase();
	    }, each: function each(a, b) {
	      var c,
	          d = 0;if (w(a)) {
	        for (c = a.length; d < c; d++) {
	          if (b.call(a[d], d, a[d]) === !1) break;
	        }
	      } else for (d in a) {
	        if (b.call(a[d], d, a[d]) === !1) break;
	      }return a;
	    }, trim: function trim(a) {
	      return null == a ? "" : (a + "").replace(s, "");
	    }, makeArray: function makeArray(a, b) {
	      var c = b || [];return null != a && (w(Object(a)) ? r.merge(c, "string" == typeof a ? [a] : a) : h.call(c, a)), c;
	    }, inArray: function inArray(a, b, c) {
	      return null == b ? -1 : i.call(b, a, c);
	    }, merge: function merge(a, b) {
	      for (var c = +b.length, d = 0, e = a.length; d < c; d++) {
	        a[e++] = b[d];
	      }return a.length = e, a;
	    }, grep: function grep(a, b, c) {
	      for (var d, e = [], f = 0, g = a.length, h = !c; f < g; f++) {
	        d = !b(a[f], f), d !== h && e.push(a[f]);
	      }return e;
	    }, map: function map(a, b, c) {
	      var d,
	          e,
	          f = 0,
	          h = [];if (w(a)) for (d = a.length; f < d; f++) {
	        e = b(a[f], f, c), null != e && h.push(e);
	      } else for (f in a) {
	        e = b(a[f], f, c), null != e && h.push(e);
	      }return g.apply([], h);
	    }, guid: 1, proxy: function proxy(a, b) {
	      var c, d, e;if ("string" == typeof b && (c = a[b], b = a, a = c), r.isFunction(a)) return d = f.call(arguments, 2), e = function e() {
	        return a.apply(b || this, d.concat(f.call(arguments)));
	      }, e.guid = a.guid = a.guid || r.guid++, e;
	    }, now: Date.now, support: o }), "function" == typeof Symbol && (r.fn[Symbol.iterator] = c[Symbol.iterator]), r.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function (a, b) {
	    j["[object " + b + "]"] = b.toLowerCase();
	  });function w(a) {
	    var b = !!a && "length" in a && a.length,
	        c = r.type(a);return "function" !== c && !r.isWindow(a) && ("array" === c || 0 === b || "number" == typeof b && b > 0 && b - 1 in a);
	  }var x = function (a) {
	    var b,
	        c,
	        d,
	        e,
	        f,
	        g,
	        h,
	        i,
	        j,
	        k,
	        l,
	        m,
	        n,
	        o,
	        p,
	        q,
	        r,
	        s,
	        t,
	        u = "sizzle" + 1 * new Date(),
	        v = a.document,
	        w = 0,
	        x = 0,
	        y = ha(),
	        z = ha(),
	        A = ha(),
	        B = function B(a, b) {
	      return a === b && (l = !0), 0;
	    },
	        C = {}.hasOwnProperty,
	        D = [],
	        E = D.pop,
	        F = D.push,
	        G = D.push,
	        H = D.slice,
	        I = function I(a, b) {
	      for (var c = 0, d = a.length; c < d; c++) {
	        if (a[c] === b) return c;
	      }return -1;
	    },
	        J = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
	        K = "[\\x20\\t\\r\\n\\f]",
	        L = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",
	        M = "\\[" + K + "*(" + L + ")(?:" + K + "*([*^$|!~]?=)" + K + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + L + "))|)" + K + "*\\]",
	        N = ":(" + L + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + M + ")*)|.*)\\)|)",
	        O = new RegExp(K + "+", "g"),
	        P = new RegExp("^" + K + "+|((?:^|[^\\\\])(?:\\\\.)*)" + K + "+$", "g"),
	        Q = new RegExp("^" + K + "*," + K + "*"),
	        R = new RegExp("^" + K + "*([>+~]|" + K + ")" + K + "*"),
	        S = new RegExp("=" + K + "*([^\\]'\"]*?)" + K + "*\\]", "g"),
	        T = new RegExp(N),
	        U = new RegExp("^" + L + "$"),
	        V = { ID: new RegExp("^#(" + L + ")"), CLASS: new RegExp("^\\.(" + L + ")"), TAG: new RegExp("^(" + L + "|[*])"), ATTR: new RegExp("^" + M), PSEUDO: new RegExp("^" + N), CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + K + "*(even|odd|(([+-]|)(\\d*)n|)" + K + "*(?:([+-]|)" + K + "*(\\d+)|))" + K + "*\\)|)", "i"), bool: new RegExp("^(?:" + J + ")$", "i"), needsContext: new RegExp("^" + K + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + K + "*((?:-\\d)?\\d*)" + K + "*\\)|)(?=[^-]|$)", "i") },
	        W = /^(?:input|select|textarea|button)$/i,
	        X = /^h\d$/i,
	        Y = /^[^{]+\{\s*\[native \w/,
	        Z = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
	        $ = /[+~]/,
	        _ = new RegExp("\\\\([\\da-f]{1,6}" + K + "?|(" + K + ")|.)", "ig"),
	        aa = function aa(a, b, c) {
	      var d = "0x" + b - 65536;return d !== d || c ? b : d < 0 ? String.fromCharCode(d + 65536) : String.fromCharCode(d >> 10 | 55296, 1023 & d | 56320);
	    },
	        ba = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	        ca = function ca(a, b) {
	      return b ? "\0" === a ? "\uFFFD" : a.slice(0, -1) + "\\" + a.charCodeAt(a.length - 1).toString(16) + " " : "\\" + a;
	    },
	        da = function da() {
	      m();
	    },
	        ea = ta(function (a) {
	      return a.disabled === !0 && ("form" in a || "label" in a);
	    }, { dir: "parentNode", next: "legend" });try {
	      G.apply(D = H.call(v.childNodes), v.childNodes), D[v.childNodes.length].nodeType;
	    } catch (fa) {
	      G = { apply: D.length ? function (a, b) {
	          F.apply(a, H.call(b));
	        } : function (a, b) {
	          var c = a.length,
	              d = 0;while (a[c++] = b[d++]) {}a.length = c - 1;
	        } };
	    }function ga(a, b, d, e) {
	      var f,
	          h,
	          j,
	          k,
	          l,
	          o,
	          r,
	          s = b && b.ownerDocument,
	          w = b ? b.nodeType : 9;if (d = d || [], "string" != typeof a || !a || 1 !== w && 9 !== w && 11 !== w) return d;if (!e && ((b ? b.ownerDocument || b : v) !== n && m(b), b = b || n, p)) {
	        if (11 !== w && (l = Z.exec(a))) if (f = l[1]) {
	          if (9 === w) {
	            if (!(j = b.getElementById(f))) return d;if (j.id === f) return d.push(j), d;
	          } else if (s && (j = s.getElementById(f)) && t(b, j) && j.id === f) return d.push(j), d;
	        } else {
	          if (l[2]) return G.apply(d, b.getElementsByTagName(a)), d;if ((f = l[3]) && c.getElementsByClassName && b.getElementsByClassName) return G.apply(d, b.getElementsByClassName(f)), d;
	        }if (c.qsa && !A[a + " "] && (!q || !q.test(a))) {
	          if (1 !== w) s = b, r = a;else if ("object" !== b.nodeName.toLowerCase()) {
	            (k = b.getAttribute("id")) ? k = k.replace(ba, ca) : b.setAttribute("id", k = u), o = g(a), h = o.length;while (h--) {
	              o[h] = "#" + k + " " + sa(o[h]);
	            }r = o.join(","), s = $.test(a) && qa(b.parentNode) || b;
	          }if (r) try {
	            return G.apply(d, s.querySelectorAll(r)), d;
	          } catch (x) {} finally {
	            k === u && b.removeAttribute("id");
	          }
	        }
	      }return i(a.replace(P, "$1"), b, d, e);
	    }function ha() {
	      var a = [];function b(c, e) {
	        return a.push(c + " ") > d.cacheLength && delete b[a.shift()], b[c + " "] = e;
	      }return b;
	    }function ia(a) {
	      return a[u] = !0, a;
	    }function ja(a) {
	      var b = n.createElement("fieldset");try {
	        return !!a(b);
	      } catch (c) {
	        return !1;
	      } finally {
	        b.parentNode && b.parentNode.removeChild(b), b = null;
	      }
	    }function ka(a, b) {
	      var c = a.split("|"),
	          e = c.length;while (e--) {
	        d.attrHandle[c[e]] = b;
	      }
	    }function la(a, b) {
	      var c = b && a,
	          d = c && 1 === a.nodeType && 1 === b.nodeType && a.sourceIndex - b.sourceIndex;if (d) return d;if (c) while (c = c.nextSibling) {
	        if (c === b) return -1;
	      }return a ? 1 : -1;
	    }function ma(a) {
	      return function (b) {
	        var c = b.nodeName.toLowerCase();return "input" === c && b.type === a;
	      };
	    }function na(a) {
	      return function (b) {
	        var c = b.nodeName.toLowerCase();return ("input" === c || "button" === c) && b.type === a;
	      };
	    }function oa(a) {
	      return function (b) {
	        return "form" in b ? b.parentNode && b.disabled === !1 ? "label" in b ? "label" in b.parentNode ? b.parentNode.disabled === a : b.disabled === a : b.isDisabled === a || b.isDisabled !== !a && ea(b) === a : b.disabled === a : "label" in b && b.disabled === a;
	      };
	    }function pa(a) {
	      return ia(function (b) {
	        return b = +b, ia(function (c, d) {
	          var e,
	              f = a([], c.length, b),
	              g = f.length;while (g--) {
	            c[e = f[g]] && (c[e] = !(d[e] = c[e]));
	          }
	        });
	      });
	    }function qa(a) {
	      return a && "undefined" != typeof a.getElementsByTagName && a;
	    }c = ga.support = {}, f = ga.isXML = function (a) {
	      var b = a && (a.ownerDocument || a).documentElement;return !!b && "HTML" !== b.nodeName;
	    }, m = ga.setDocument = function (a) {
	      var b,
	          e,
	          g = a ? a.ownerDocument || a : v;return g !== n && 9 === g.nodeType && g.documentElement ? (n = g, o = n.documentElement, p = !f(n), v !== n && (e = n.defaultView) && e.top !== e && (e.addEventListener ? e.addEventListener("unload", da, !1) : e.attachEvent && e.attachEvent("onunload", da)), c.attributes = ja(function (a) {
	        return a.className = "i", !a.getAttribute("className");
	      }), c.getElementsByTagName = ja(function (a) {
	        return a.appendChild(n.createComment("")), !a.getElementsByTagName("*").length;
	      }), c.getElementsByClassName = Y.test(n.getElementsByClassName), c.getById = ja(function (a) {
	        return o.appendChild(a).id = u, !n.getElementsByName || !n.getElementsByName(u).length;
	      }), c.getById ? (d.filter.ID = function (a) {
	        var b = a.replace(_, aa);return function (a) {
	          return a.getAttribute("id") === b;
	        };
	      }, d.find.ID = function (a, b) {
	        if ("undefined" != typeof b.getElementById && p) {
	          var c = b.getElementById(a);return c ? [c] : [];
	        }
	      }) : (d.filter.ID = function (a) {
	        var b = a.replace(_, aa);return function (a) {
	          var c = "undefined" != typeof a.getAttributeNode && a.getAttributeNode("id");return c && c.value === b;
	        };
	      }, d.find.ID = function (a, b) {
	        if ("undefined" != typeof b.getElementById && p) {
	          var c,
	              d,
	              e,
	              f = b.getElementById(a);if (f) {
	            if (c = f.getAttributeNode("id"), c && c.value === a) return [f];e = b.getElementsByName(a), d = 0;while (f = e[d++]) {
	              if (c = f.getAttributeNode("id"), c && c.value === a) return [f];
	            }
	          }return [];
	        }
	      }), d.find.TAG = c.getElementsByTagName ? function (a, b) {
	        return "undefined" != typeof b.getElementsByTagName ? b.getElementsByTagName(a) : c.qsa ? b.querySelectorAll(a) : void 0;
	      } : function (a, b) {
	        var c,
	            d = [],
	            e = 0,
	            f = b.getElementsByTagName(a);if ("*" === a) {
	          while (c = f[e++]) {
	            1 === c.nodeType && d.push(c);
	          }return d;
	        }return f;
	      }, d.find.CLASS = c.getElementsByClassName && function (a, b) {
	        if ("undefined" != typeof b.getElementsByClassName && p) return b.getElementsByClassName(a);
	      }, r = [], q = [], (c.qsa = Y.test(n.querySelectorAll)) && (ja(function (a) {
	        o.appendChild(a).innerHTML = "<a id='" + u + "'></a><select id='" + u + "-\r\\' msallowcapture=''><option selected=''></option></select>", a.querySelectorAll("[msallowcapture^='']").length && q.push("[*^$]=" + K + "*(?:''|\"\")"), a.querySelectorAll("[selected]").length || q.push("\\[" + K + "*(?:value|" + J + ")"), a.querySelectorAll("[id~=" + u + "-]").length || q.push("~="), a.querySelectorAll(":checked").length || q.push(":checked"), a.querySelectorAll("a#" + u + "+*").length || q.push(".#.+[+~]");
	      }), ja(function (a) {
	        a.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var b = n.createElement("input");b.setAttribute("type", "hidden"), a.appendChild(b).setAttribute("name", "D"), a.querySelectorAll("[name=d]").length && q.push("name" + K + "*[*^$|!~]?="), 2 !== a.querySelectorAll(":enabled").length && q.push(":enabled", ":disabled"), o.appendChild(a).disabled = !0, 2 !== a.querySelectorAll(":disabled").length && q.push(":enabled", ":disabled"), a.querySelectorAll("*,:x"), q.push(",.*:");
	      })), (c.matchesSelector = Y.test(s = o.matches || o.webkitMatchesSelector || o.mozMatchesSelector || o.oMatchesSelector || o.msMatchesSelector)) && ja(function (a) {
	        c.disconnectedMatch = s.call(a, "*"), s.call(a, "[s!='']:x"), r.push("!=", N);
	      }), q = q.length && new RegExp(q.join("|")), r = r.length && new RegExp(r.join("|")), b = Y.test(o.compareDocumentPosition), t = b || Y.test(o.contains) ? function (a, b) {
	        var c = 9 === a.nodeType ? a.documentElement : a,
	            d = b && b.parentNode;return a === d || !(!d || 1 !== d.nodeType || !(c.contains ? c.contains(d) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(d)));
	      } : function (a, b) {
	        if (b) while (b = b.parentNode) {
	          if (b === a) return !0;
	        }return !1;
	      }, B = b ? function (a, b) {
	        if (a === b) return l = !0, 0;var d = !a.compareDocumentPosition - !b.compareDocumentPosition;return d ? d : (d = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1, 1 & d || !c.sortDetached && b.compareDocumentPosition(a) === d ? a === n || a.ownerDocument === v && t(v, a) ? -1 : b === n || b.ownerDocument === v && t(v, b) ? 1 : k ? I(k, a) - I(k, b) : 0 : 4 & d ? -1 : 1);
	      } : function (a, b) {
	        if (a === b) return l = !0, 0;var c,
	            d = 0,
	            e = a.parentNode,
	            f = b.parentNode,
	            g = [a],
	            h = [b];if (!e || !f) return a === n ? -1 : b === n ? 1 : e ? -1 : f ? 1 : k ? I(k, a) - I(k, b) : 0;if (e === f) return la(a, b);c = a;while (c = c.parentNode) {
	          g.unshift(c);
	        }c = b;while (c = c.parentNode) {
	          h.unshift(c);
	        }while (g[d] === h[d]) {
	          d++;
	        }return d ? la(g[d], h[d]) : g[d] === v ? -1 : h[d] === v ? 1 : 0;
	      }, n) : n;
	    }, ga.matches = function (a, b) {
	      return ga(a, null, null, b);
	    }, ga.matchesSelector = function (a, b) {
	      if ((a.ownerDocument || a) !== n && m(a), b = b.replace(S, "='$1']"), c.matchesSelector && p && !A[b + " "] && (!r || !r.test(b)) && (!q || !q.test(b))) try {
	        var d = s.call(a, b);if (d || c.disconnectedMatch || a.document && 11 !== a.document.nodeType) return d;
	      } catch (e) {}return ga(b, n, null, [a]).length > 0;
	    }, ga.contains = function (a, b) {
	      return (a.ownerDocument || a) !== n && m(a), t(a, b);
	    }, ga.attr = function (a, b) {
	      (a.ownerDocument || a) !== n && m(a);var e = d.attrHandle[b.toLowerCase()],
	          f = e && C.call(d.attrHandle, b.toLowerCase()) ? e(a, b, !p) : void 0;return void 0 !== f ? f : c.attributes || !p ? a.getAttribute(b) : (f = a.getAttributeNode(b)) && f.specified ? f.value : null;
	    }, ga.escape = function (a) {
	      return (a + "").replace(ba, ca);
	    }, ga.error = function (a) {
	      throw new Error("Syntax error, unrecognized expression: " + a);
	    }, ga.uniqueSort = function (a) {
	      var b,
	          d = [],
	          e = 0,
	          f = 0;if (l = !c.detectDuplicates, k = !c.sortStable && a.slice(0), a.sort(B), l) {
	        while (b = a[f++]) {
	          b === a[f] && (e = d.push(f));
	        }while (e--) {
	          a.splice(d[e], 1);
	        }
	      }return k = null, a;
	    }, e = ga.getText = function (a) {
	      var b,
	          c = "",
	          d = 0,
	          f = a.nodeType;if (f) {
	        if (1 === f || 9 === f || 11 === f) {
	          if ("string" == typeof a.textContent) return a.textContent;for (a = a.firstChild; a; a = a.nextSibling) {
	            c += e(a);
	          }
	        } else if (3 === f || 4 === f) return a.nodeValue;
	      } else while (b = a[d++]) {
	        c += e(b);
	      }return c;
	    }, d = ga.selectors = { cacheLength: 50, createPseudo: ia, match: V, attrHandle: {}, find: {}, relative: { ">": { dir: "parentNode", first: !0 }, " ": { dir: "parentNode" }, "+": { dir: "previousSibling", first: !0 }, "~": { dir: "previousSibling" } }, preFilter: { ATTR: function ATTR(a) {
	          return a[1] = a[1].replace(_, aa), a[3] = (a[3] || a[4] || a[5] || "").replace(_, aa), "~=" === a[2] && (a[3] = " " + a[3] + " "), a.slice(0, 4);
	        }, CHILD: function CHILD(a) {
	          return a[1] = a[1].toLowerCase(), "nth" === a[1].slice(0, 3) ? (a[3] || ga.error(a[0]), a[4] = +(a[4] ? a[5] + (a[6] || 1) : 2 * ("even" === a[3] || "odd" === a[3])), a[5] = +(a[7] + a[8] || "odd" === a[3])) : a[3] && ga.error(a[0]), a;
	        }, PSEUDO: function PSEUDO(a) {
	          var b,
	              c = !a[6] && a[2];return V.CHILD.test(a[0]) ? null : (a[3] ? a[2] = a[4] || a[5] || "" : c && T.test(c) && (b = g(c, !0)) && (b = c.indexOf(")", c.length - b) - c.length) && (a[0] = a[0].slice(0, b), a[2] = c.slice(0, b)), a.slice(0, 3));
	        } }, filter: { TAG: function TAG(a) {
	          var b = a.replace(_, aa).toLowerCase();return "*" === a ? function () {
	            return !0;
	          } : function (a) {
	            return a.nodeName && a.nodeName.toLowerCase() === b;
	          };
	        }, CLASS: function CLASS(a) {
	          var b = y[a + " "];return b || (b = new RegExp("(^|" + K + ")" + a + "(" + K + "|$)")) && y(a, function (a) {
	            return b.test("string" == typeof a.className && a.className || "undefined" != typeof a.getAttribute && a.getAttribute("class") || "");
	          });
	        }, ATTR: function ATTR(a, b, c) {
	          return function (d) {
	            var e = ga.attr(d, a);return null == e ? "!=" === b : !b || (e += "", "=" === b ? e === c : "!=" === b ? e !== c : "^=" === b ? c && 0 === e.indexOf(c) : "*=" === b ? c && e.indexOf(c) > -1 : "$=" === b ? c && e.slice(-c.length) === c : "~=" === b ? (" " + e.replace(O, " ") + " ").indexOf(c) > -1 : "|=" === b && (e === c || e.slice(0, c.length + 1) === c + "-"));
	          };
	        }, CHILD: function CHILD(a, b, c, d, e) {
	          var f = "nth" !== a.slice(0, 3),
	              g = "last" !== a.slice(-4),
	              h = "of-type" === b;return 1 === d && 0 === e ? function (a) {
	            return !!a.parentNode;
	          } : function (b, c, i) {
	            var j,
	                k,
	                l,
	                m,
	                n,
	                o,
	                p = f !== g ? "nextSibling" : "previousSibling",
	                q = b.parentNode,
	                r = h && b.nodeName.toLowerCase(),
	                s = !i && !h,
	                t = !1;if (q) {
	              if (f) {
	                while (p) {
	                  m = b;while (m = m[p]) {
	                    if (h ? m.nodeName.toLowerCase() === r : 1 === m.nodeType) return !1;
	                  }o = p = "only" === a && !o && "nextSibling";
	                }return !0;
	              }if (o = [g ? q.firstChild : q.lastChild], g && s) {
	                m = q, l = m[u] || (m[u] = {}), k = l[m.uniqueID] || (l[m.uniqueID] = {}), j = k[a] || [], n = j[0] === w && j[1], t = n && j[2], m = n && q.childNodes[n];while (m = ++n && m && m[p] || (t = n = 0) || o.pop()) {
	                  if (1 === m.nodeType && ++t && m === b) {
	                    k[a] = [w, n, t];break;
	                  }
	                }
	              } else if (s && (m = b, l = m[u] || (m[u] = {}), k = l[m.uniqueID] || (l[m.uniqueID] = {}), j = k[a] || [], n = j[0] === w && j[1], t = n), t === !1) while (m = ++n && m && m[p] || (t = n = 0) || o.pop()) {
	                if ((h ? m.nodeName.toLowerCase() === r : 1 === m.nodeType) && ++t && (s && (l = m[u] || (m[u] = {}), k = l[m.uniqueID] || (l[m.uniqueID] = {}), k[a] = [w, t]), m === b)) break;
	              }return t -= e, t === d || t % d === 0 && t / d >= 0;
	            }
	          };
	        }, PSEUDO: function PSEUDO(a, b) {
	          var c,
	              e = d.pseudos[a] || d.setFilters[a.toLowerCase()] || ga.error("unsupported pseudo: " + a);return e[u] ? e(b) : e.length > 1 ? (c = [a, a, "", b], d.setFilters.hasOwnProperty(a.toLowerCase()) ? ia(function (a, c) {
	            var d,
	                f = e(a, b),
	                g = f.length;while (g--) {
	              d = I(a, f[g]), a[d] = !(c[d] = f[g]);
	            }
	          }) : function (a) {
	            return e(a, 0, c);
	          }) : e;
	        } }, pseudos: { not: ia(function (a) {
	          var b = [],
	              c = [],
	              d = h(a.replace(P, "$1"));return d[u] ? ia(function (a, b, c, e) {
	            var f,
	                g = d(a, null, e, []),
	                h = a.length;while (h--) {
	              (f = g[h]) && (a[h] = !(b[h] = f));
	            }
	          }) : function (a, e, f) {
	            return b[0] = a, d(b, null, f, c), b[0] = null, !c.pop();
	          };
	        }), has: ia(function (a) {
	          return function (b) {
	            return ga(a, b).length > 0;
	          };
	        }), contains: ia(function (a) {
	          return a = a.replace(_, aa), function (b) {
	            return (b.textContent || b.innerText || e(b)).indexOf(a) > -1;
	          };
	        }), lang: ia(function (a) {
	          return U.test(a || "") || ga.error("unsupported lang: " + a), a = a.replace(_, aa).toLowerCase(), function (b) {
	            var c;do {
	              if (c = p ? b.lang : b.getAttribute("xml:lang") || b.getAttribute("lang")) return c = c.toLowerCase(), c === a || 0 === c.indexOf(a + "-");
	            } while ((b = b.parentNode) && 1 === b.nodeType);return !1;
	          };
	        }), target: function target(b) {
	          var c = a.location && a.location.hash;return c && c.slice(1) === b.id;
	        }, root: function root(a) {
	          return a === o;
	        }, focus: function focus(a) {
	          return a === n.activeElement && (!n.hasFocus || n.hasFocus()) && !!(a.type || a.href || ~a.tabIndex);
	        }, enabled: oa(!1), disabled: oa(!0), checked: function checked(a) {
	          var b = a.nodeName.toLowerCase();return "input" === b && !!a.checked || "option" === b && !!a.selected;
	        }, selected: function selected(a) {
	          return a.parentNode && a.parentNode.selectedIndex, a.selected === !0;
	        }, empty: function empty(a) {
	          for (a = a.firstChild; a; a = a.nextSibling) {
	            if (a.nodeType < 6) return !1;
	          }return !0;
	        }, parent: function parent(a) {
	          return !d.pseudos.empty(a);
	        }, header: function header(a) {
	          return X.test(a.nodeName);
	        }, input: function input(a) {
	          return W.test(a.nodeName);
	        }, button: function button(a) {
	          var b = a.nodeName.toLowerCase();return "input" === b && "button" === a.type || "button" === b;
	        }, text: function text(a) {
	          var b;return "input" === a.nodeName.toLowerCase() && "text" === a.type && (null == (b = a.getAttribute("type")) || "text" === b.toLowerCase());
	        }, first: pa(function () {
	          return [0];
	        }), last: pa(function (a, b) {
	          return [b - 1];
	        }), eq: pa(function (a, b, c) {
	          return [c < 0 ? c + b : c];
	        }), even: pa(function (a, b) {
	          for (var c = 0; c < b; c += 2) {
	            a.push(c);
	          }return a;
	        }), odd: pa(function (a, b) {
	          for (var c = 1; c < b; c += 2) {
	            a.push(c);
	          }return a;
	        }), lt: pa(function (a, b, c) {
	          for (var d = c < 0 ? c + b : c; --d >= 0;) {
	            a.push(d);
	          }return a;
	        }), gt: pa(function (a, b, c) {
	          for (var d = c < 0 ? c + b : c; ++d < b;) {
	            a.push(d);
	          }return a;
	        }) } }, d.pseudos.nth = d.pseudos.eq;for (b in { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 }) {
	      d.pseudos[b] = ma(b);
	    }for (b in { submit: !0, reset: !0 }) {
	      d.pseudos[b] = na(b);
	    }function ra() {}ra.prototype = d.filters = d.pseudos, d.setFilters = new ra(), g = ga.tokenize = function (a, b) {
	      var c,
	          e,
	          f,
	          g,
	          h,
	          i,
	          j,
	          k = z[a + " "];if (k) return b ? 0 : k.slice(0);h = a, i = [], j = d.preFilter;while (h) {
	        c && !(e = Q.exec(h)) || (e && (h = h.slice(e[0].length) || h), i.push(f = [])), c = !1, (e = R.exec(h)) && (c = e.shift(), f.push({ value: c, type: e[0].replace(P, " ") }), h = h.slice(c.length));for (g in d.filter) {
	          !(e = V[g].exec(h)) || j[g] && !(e = j[g](e)) || (c = e.shift(), f.push({ value: c, type: g, matches: e }), h = h.slice(c.length));
	        }if (!c) break;
	      }return b ? h.length : h ? ga.error(a) : z(a, i).slice(0);
	    };function sa(a) {
	      for (var b = 0, c = a.length, d = ""; b < c; b++) {
	        d += a[b].value;
	      }return d;
	    }function ta(a, b, c) {
	      var d = b.dir,
	          e = b.next,
	          f = e || d,
	          g = c && "parentNode" === f,
	          h = x++;return b.first ? function (b, c, e) {
	        while (b = b[d]) {
	          if (1 === b.nodeType || g) return a(b, c, e);
	        }return !1;
	      } : function (b, c, i) {
	        var j,
	            k,
	            l,
	            m = [w, h];if (i) {
	          while (b = b[d]) {
	            if ((1 === b.nodeType || g) && a(b, c, i)) return !0;
	          }
	        } else while (b = b[d]) {
	          if (1 === b.nodeType || g) if (l = b[u] || (b[u] = {}), k = l[b.uniqueID] || (l[b.uniqueID] = {}), e && e === b.nodeName.toLowerCase()) b = b[d] || b;else {
	            if ((j = k[f]) && j[0] === w && j[1] === h) return m[2] = j[2];if (k[f] = m, m[2] = a(b, c, i)) return !0;
	          }
	        }return !1;
	      };
	    }function ua(a) {
	      return a.length > 1 ? function (b, c, d) {
	        var e = a.length;while (e--) {
	          if (!a[e](b, c, d)) return !1;
	        }return !0;
	      } : a[0];
	    }function va(a, b, c) {
	      for (var d = 0, e = b.length; d < e; d++) {
	        ga(a, b[d], c);
	      }return c;
	    }function wa(a, b, c, d, e) {
	      for (var f, g = [], h = 0, i = a.length, j = null != b; h < i; h++) {
	        (f = a[h]) && (c && !c(f, d, e) || (g.push(f), j && b.push(h)));
	      }return g;
	    }function xa(a, b, c, d, e, f) {
	      return d && !d[u] && (d = xa(d)), e && !e[u] && (e = xa(e, f)), ia(function (f, g, h, i) {
	        var j,
	            k,
	            l,
	            m = [],
	            n = [],
	            o = g.length,
	            p = f || va(b || "*", h.nodeType ? [h] : h, []),
	            q = !a || !f && b ? p : wa(p, m, a, h, i),
	            r = c ? e || (f ? a : o || d) ? [] : g : q;if (c && c(q, r, h, i), d) {
	          j = wa(r, n), d(j, [], h, i), k = j.length;while (k--) {
	            (l = j[k]) && (r[n[k]] = !(q[n[k]] = l));
	          }
	        }if (f) {
	          if (e || a) {
	            if (e) {
	              j = [], k = r.length;while (k--) {
	                (l = r[k]) && j.push(q[k] = l);
	              }e(null, r = [], j, i);
	            }k = r.length;while (k--) {
	              (l = r[k]) && (j = e ? I(f, l) : m[k]) > -1 && (f[j] = !(g[j] = l));
	            }
	          }
	        } else r = wa(r === g ? r.splice(o, r.length) : r), e ? e(null, g, r, i) : G.apply(g, r);
	      });
	    }function ya(a) {
	      for (var b, c, e, f = a.length, g = d.relative[a[0].type], h = g || d.relative[" "], i = g ? 1 : 0, k = ta(function (a) {
	        return a === b;
	      }, h, !0), l = ta(function (a) {
	        return I(b, a) > -1;
	      }, h, !0), m = [function (a, c, d) {
	        var e = !g && (d || c !== j) || ((b = c).nodeType ? k(a, c, d) : l(a, c, d));return b = null, e;
	      }]; i < f; i++) {
	        if (c = d.relative[a[i].type]) m = [ta(ua(m), c)];else {
	          if (c = d.filter[a[i].type].apply(null, a[i].matches), c[u]) {
	            for (e = ++i; e < f; e++) {
	              if (d.relative[a[e].type]) break;
	            }return xa(i > 1 && ua(m), i > 1 && sa(a.slice(0, i - 1).concat({ value: " " === a[i - 2].type ? "*" : "" })).replace(P, "$1"), c, i < e && ya(a.slice(i, e)), e < f && ya(a = a.slice(e)), e < f && sa(a));
	          }m.push(c);
	        }
	      }return ua(m);
	    }function za(a, b) {
	      var c = b.length > 0,
	          e = a.length > 0,
	          f = function f(_f, g, h, i, k) {
	        var l,
	            o,
	            q,
	            r = 0,
	            s = "0",
	            t = _f && [],
	            u = [],
	            v = j,
	            x = _f || e && d.find.TAG("*", k),
	            y = w += null == v ? 1 : Math.random() || .1,
	            z = x.length;for (k && (j = g === n || g || k); s !== z && null != (l = x[s]); s++) {
	          if (e && l) {
	            o = 0, g || l.ownerDocument === n || (m(l), h = !p);while (q = a[o++]) {
	              if (q(l, g || n, h)) {
	                i.push(l);break;
	              }
	            }k && (w = y);
	          }c && ((l = !q && l) && r--, _f && t.push(l));
	        }if (r += s, c && s !== r) {
	          o = 0;while (q = b[o++]) {
	            q(t, u, g, h);
	          }if (_f) {
	            if (r > 0) while (s--) {
	              t[s] || u[s] || (u[s] = E.call(i));
	            }u = wa(u);
	          }G.apply(i, u), k && !_f && u.length > 0 && r + b.length > 1 && ga.uniqueSort(i);
	        }return k && (w = y, j = v), t;
	      };return c ? ia(f) : f;
	    }return h = ga.compile = function (a, b) {
	      var c,
	          d = [],
	          e = [],
	          f = A[a + " "];if (!f) {
	        b || (b = g(a)), c = b.length;while (c--) {
	          f = ya(b[c]), f[u] ? d.push(f) : e.push(f);
	        }f = A(a, za(e, d)), f.selector = a;
	      }return f;
	    }, i = ga.select = function (a, b, c, e) {
	      var f,
	          i,
	          j,
	          k,
	          l,
	          m = "function" == typeof a && a,
	          n = !e && g(a = m.selector || a);if (c = c || [], 1 === n.length) {
	        if (i = n[0] = n[0].slice(0), i.length > 2 && "ID" === (j = i[0]).type && 9 === b.nodeType && p && d.relative[i[1].type]) {
	          if (b = (d.find.ID(j.matches[0].replace(_, aa), b) || [])[0], !b) return c;m && (b = b.parentNode), a = a.slice(i.shift().value.length);
	        }f = V.needsContext.test(a) ? 0 : i.length;while (f--) {
	          if (j = i[f], d.relative[k = j.type]) break;if ((l = d.find[k]) && (e = l(j.matches[0].replace(_, aa), $.test(i[0].type) && qa(b.parentNode) || b))) {
	            if (i.splice(f, 1), a = e.length && sa(i), !a) return G.apply(c, e), c;break;
	          }
	        }
	      }return (m || h(a, n))(e, b, !p, c, !b || $.test(a) && qa(b.parentNode) || b), c;
	    }, c.sortStable = u.split("").sort(B).join("") === u, c.detectDuplicates = !!l, m(), c.sortDetached = ja(function (a) {
	      return 1 & a.compareDocumentPosition(n.createElement("fieldset"));
	    }), ja(function (a) {
	      return a.innerHTML = "<a href='#'></a>", "#" === a.firstChild.getAttribute("href");
	    }) || ka("type|href|height|width", function (a, b, c) {
	      if (!c) return a.getAttribute(b, "type" === b.toLowerCase() ? 1 : 2);
	    }), c.attributes && ja(function (a) {
	      return a.innerHTML = "<input/>", a.firstChild.setAttribute("value", ""), "" === a.firstChild.getAttribute("value");
	    }) || ka("value", function (a, b, c) {
	      if (!c && "input" === a.nodeName.toLowerCase()) return a.defaultValue;
	    }), ja(function (a) {
	      return null == a.getAttribute("disabled");
	    }) || ka(J, function (a, b, c) {
	      var d;if (!c) return a[b] === !0 ? b.toLowerCase() : (d = a.getAttributeNode(b)) && d.specified ? d.value : null;
	    }), ga;
	  }(a);r.find = x, r.expr = x.selectors, r.expr[":"] = r.expr.pseudos, r.uniqueSort = r.unique = x.uniqueSort, r.text = x.getText, r.isXMLDoc = x.isXML, r.contains = x.contains, r.escapeSelector = x.escape;var y = function y(a, b, c) {
	    var d = [],
	        e = void 0 !== c;while ((a = a[b]) && 9 !== a.nodeType) {
	      if (1 === a.nodeType) {
	        if (e && r(a).is(c)) break;d.push(a);
	      }
	    }return d;
	  },
	      z = function z(a, b) {
	    for (var c = []; a; a = a.nextSibling) {
	      1 === a.nodeType && a !== b && c.push(a);
	    }return c;
	  },
	      A = r.expr.match.needsContext,
	      B = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i,
	      C = /^.[^:#\[\.,]*$/;function D(a, b, c) {
	    return r.isFunction(b) ? r.grep(a, function (a, d) {
	      return !!b.call(a, d, a) !== c;
	    }) : b.nodeType ? r.grep(a, function (a) {
	      return a === b !== c;
	    }) : "string" != typeof b ? r.grep(a, function (a) {
	      return i.call(b, a) > -1 !== c;
	    }) : C.test(b) ? r.filter(b, a, c) : (b = r.filter(b, a), r.grep(a, function (a) {
	      return i.call(b, a) > -1 !== c && 1 === a.nodeType;
	    }));
	  }r.filter = function (a, b, c) {
	    var d = b[0];return c && (a = ":not(" + a + ")"), 1 === b.length && 1 === d.nodeType ? r.find.matchesSelector(d, a) ? [d] : [] : r.find.matches(a, r.grep(b, function (a) {
	      return 1 === a.nodeType;
	    }));
	  }, r.fn.extend({ find: function find(a) {
	      var b,
	          c,
	          d = this.length,
	          e = this;if ("string" != typeof a) return this.pushStack(r(a).filter(function () {
	        for (b = 0; b < d; b++) {
	          if (r.contains(e[b], this)) return !0;
	        }
	      }));for (c = this.pushStack([]), b = 0; b < d; b++) {
	        r.find(a, e[b], c);
	      }return d > 1 ? r.uniqueSort(c) : c;
	    }, filter: function filter(a) {
	      return this.pushStack(D(this, a || [], !1));
	    }, not: function not(a) {
	      return this.pushStack(D(this, a || [], !0));
	    }, is: function is(a) {
	      return !!D(this, "string" == typeof a && A.test(a) ? r(a) : a || [], !1).length;
	    } });var E,
	      F = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,
	      G = r.fn.init = function (a, b, c) {
	    var e, f;if (!a) return this;if (c = c || E, "string" == typeof a) {
	      if (e = "<" === a[0] && ">" === a[a.length - 1] && a.length >= 3 ? [null, a, null] : F.exec(a), !e || !e[1] && b) return !b || b.jquery ? (b || c).find(a) : this.constructor(b).find(a);if (e[1]) {
	        if (b = b instanceof r ? b[0] : b, r.merge(this, r.parseHTML(e[1], b && b.nodeType ? b.ownerDocument || b : d, !0)), B.test(e[1]) && r.isPlainObject(b)) for (e in b) {
	          r.isFunction(this[e]) ? this[e](b[e]) : this.attr(e, b[e]);
	        }return this;
	      }return f = d.getElementById(e[2]), f && (this[0] = f, this.length = 1), this;
	    }return a.nodeType ? (this[0] = a, this.length = 1, this) : r.isFunction(a) ? void 0 !== c.ready ? c.ready(a) : a(r) : r.makeArray(a, this);
	  };G.prototype = r.fn, E = r(d);var H = /^(?:parents|prev(?:Until|All))/,
	      I = { children: !0, contents: !0, next: !0, prev: !0 };r.fn.extend({ has: function has(a) {
	      var b = r(a, this),
	          c = b.length;return this.filter(function () {
	        for (var a = 0; a < c; a++) {
	          if (r.contains(this, b[a])) return !0;
	        }
	      });
	    }, closest: function closest(a, b) {
	      var c,
	          d = 0,
	          e = this.length,
	          f = [],
	          g = "string" != typeof a && r(a);if (!A.test(a)) for (; d < e; d++) {
	        for (c = this[d]; c && c !== b; c = c.parentNode) {
	          if (c.nodeType < 11 && (g ? g.index(c) > -1 : 1 === c.nodeType && r.find.matchesSelector(c, a))) {
	            f.push(c);break;
	          }
	        }
	      }return this.pushStack(f.length > 1 ? r.uniqueSort(f) : f);
	    }, index: function index(a) {
	      return a ? "string" == typeof a ? i.call(r(a), this[0]) : i.call(this, a.jquery ? a[0] : a) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
	    }, add: function add(a, b) {
	      return this.pushStack(r.uniqueSort(r.merge(this.get(), r(a, b))));
	    }, addBack: function addBack(a) {
	      return this.add(null == a ? this.prevObject : this.prevObject.filter(a));
	    } });function J(a, b) {
	    while ((a = a[b]) && 1 !== a.nodeType) {}return a;
	  }r.each({ parent: function parent(a) {
	      var b = a.parentNode;return b && 11 !== b.nodeType ? b : null;
	    }, parents: function parents(a) {
	      return y(a, "parentNode");
	    }, parentsUntil: function parentsUntil(a, b, c) {
	      return y(a, "parentNode", c);
	    }, next: function next(a) {
	      return J(a, "nextSibling");
	    }, prev: function prev(a) {
	      return J(a, "previousSibling");
	    }, nextAll: function nextAll(a) {
	      return y(a, "nextSibling");
	    }, prevAll: function prevAll(a) {
	      return y(a, "previousSibling");
	    }, nextUntil: function nextUntil(a, b, c) {
	      return y(a, "nextSibling", c);
	    }, prevUntil: function prevUntil(a, b, c) {
	      return y(a, "previousSibling", c);
	    }, siblings: function siblings(a) {
	      return z((a.parentNode || {}).firstChild, a);
	    }, children: function children(a) {
	      return z(a.firstChild);
	    }, contents: function contents(a) {
	      return a.contentDocument || r.merge([], a.childNodes);
	    } }, function (a, b) {
	    r.fn[a] = function (c, d) {
	      var e = r.map(this, b, c);return "Until" !== a.slice(-5) && (d = c), d && "string" == typeof d && (e = r.filter(d, e)), this.length > 1 && (I[a] || r.uniqueSort(e), H.test(a) && e.reverse()), this.pushStack(e);
	    };
	  });var K = /[^\x20\t\r\n\f]+/g;function L(a) {
	    var b = {};return r.each(a.match(K) || [], function (a, c) {
	      b[c] = !0;
	    }), b;
	  }r.Callbacks = function (a) {
	    a = "string" == typeof a ? L(a) : r.extend({}, a);var b,
	        c,
	        d,
	        e,
	        f = [],
	        g = [],
	        h = -1,
	        i = function i() {
	      for (e = a.once, d = b = !0; g.length; h = -1) {
	        c = g.shift();while (++h < f.length) {
	          f[h].apply(c[0], c[1]) === !1 && a.stopOnFalse && (h = f.length, c = !1);
	        }
	      }a.memory || (c = !1), b = !1, e && (f = c ? [] : "");
	    },
	        j = { add: function add() {
	        return f && (c && !b && (h = f.length - 1, g.push(c)), function d(b) {
	          r.each(b, function (b, c) {
	            r.isFunction(c) ? a.unique && j.has(c) || f.push(c) : c && c.length && "string" !== r.type(c) && d(c);
	          });
	        }(arguments), c && !b && i()), this;
	      }, remove: function remove() {
	        return r.each(arguments, function (a, b) {
	          var c;while ((c = r.inArray(b, f, c)) > -1) {
	            f.splice(c, 1), c <= h && h--;
	          }
	        }), this;
	      }, has: function has(a) {
	        return a ? r.inArray(a, f) > -1 : f.length > 0;
	      }, empty: function empty() {
	        return f && (f = []), this;
	      }, disable: function disable() {
	        return e = g = [], f = c = "", this;
	      }, disabled: function disabled() {
	        return !f;
	      }, lock: function lock() {
	        return e = g = [], c || b || (f = c = ""), this;
	      }, locked: function locked() {
	        return !!e;
	      }, fireWith: function fireWith(a, c) {
	        return e || (c = c || [], c = [a, c.slice ? c.slice() : c], g.push(c), b || i()), this;
	      }, fire: function fire() {
	        return j.fireWith(this, arguments), this;
	      }, fired: function fired() {
	        return !!d;
	      } };return j;
	  };function M(a) {
	    return a;
	  }function N(a) {
	    throw a;
	  }function O(a, b, c) {
	    var d;try {
	      a && r.isFunction(d = a.promise) ? d.call(a).done(b).fail(c) : a && r.isFunction(d = a.then) ? d.call(a, b, c) : b.call(void 0, a);
	    } catch (a) {
	      c.call(void 0, a);
	    }
	  }r.extend({ Deferred: function Deferred(b) {
	      var c = [["notify", "progress", r.Callbacks("memory"), r.Callbacks("memory"), 2], ["resolve", "done", r.Callbacks("once memory"), r.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", r.Callbacks("once memory"), r.Callbacks("once memory"), 1, "rejected"]],
	          d = "pending",
	          e = { state: function state() {
	          return d;
	        }, always: function always() {
	          return f.done(arguments).fail(arguments), this;
	        }, "catch": function _catch(a) {
	          return e.then(null, a);
	        }, pipe: function pipe() {
	          var a = arguments;return r.Deferred(function (b) {
	            r.each(c, function (c, d) {
	              var e = r.isFunction(a[d[4]]) && a[d[4]];f[d[1]](function () {
	                var a = e && e.apply(this, arguments);a && r.isFunction(a.promise) ? a.promise().progress(b.notify).done(b.resolve).fail(b.reject) : b[d[0] + "With"](this, e ? [a] : arguments);
	              });
	            }), a = null;
	          }).promise();
	        }, then: function then(b, d, e) {
	          var f = 0;function g(b, c, d, e) {
	            return function () {
	              var h = this,
	                  i = arguments,
	                  j = function j() {
	                var a, j;if (!(b < f)) {
	                  if (a = d.apply(h, i), a === c.promise()) throw new TypeError("Thenable self-resolution");j = a && ("object" == (typeof a === "undefined" ? "undefined" : _typeof(a)) || "function" == typeof a) && a.then, r.isFunction(j) ? e ? j.call(a, g(f, c, M, e), g(f, c, N, e)) : (f++, j.call(a, g(f, c, M, e), g(f, c, N, e), g(f, c, M, c.notifyWith))) : (d !== M && (h = void 0, i = [a]), (e || c.resolveWith)(h, i));
	                }
	              },
	                  k = e ? j : function () {
	                try {
	                  j();
	                } catch (a) {
	                  r.Deferred.exceptionHook && r.Deferred.exceptionHook(a, k.stackTrace), b + 1 >= f && (d !== N && (h = void 0, i = [a]), c.rejectWith(h, i));
	                }
	              };b ? k() : (r.Deferred.getStackHook && (k.stackTrace = r.Deferred.getStackHook()), a.setTimeout(k));
	            };
	          }return r.Deferred(function (a) {
	            c[0][3].add(g(0, a, r.isFunction(e) ? e : M, a.notifyWith)), c[1][3].add(g(0, a, r.isFunction(b) ? b : M)), c[2][3].add(g(0, a, r.isFunction(d) ? d : N));
	          }).promise();
	        }, promise: function promise(a) {
	          return null != a ? r.extend(a, e) : e;
	        } },
	          f = {};return r.each(c, function (a, b) {
	        var g = b[2],
	            h = b[5];e[b[1]] = g.add, h && g.add(function () {
	          d = h;
	        }, c[3 - a][2].disable, c[0][2].lock), g.add(b[3].fire), f[b[0]] = function () {
	          return f[b[0] + "With"](this === f ? void 0 : this, arguments), this;
	        }, f[b[0] + "With"] = g.fireWith;
	      }), e.promise(f), b && b.call(f, f), f;
	    }, when: function when(a) {
	      var b = arguments.length,
	          c = b,
	          d = Array(c),
	          e = f.call(arguments),
	          g = r.Deferred(),
	          h = function h(a) {
	        return function (c) {
	          d[a] = this, e[a] = arguments.length > 1 ? f.call(arguments) : c, --b || g.resolveWith(d, e);
	        };
	      };if (b <= 1 && (O(a, g.done(h(c)).resolve, g.reject), "pending" === g.state() || r.isFunction(e[c] && e[c].then))) return g.then();while (c--) {
	        O(e[c], h(c), g.reject);
	      }return g.promise();
	    } });var P = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;r.Deferred.exceptionHook = function (b, c) {
	    a.console && a.console.warn && b && P.test(b.name) && a.console.warn("jQuery.Deferred exception: " + b.message, b.stack, c);
	  }, r.readyException = function (b) {
	    a.setTimeout(function () {
	      throw b;
	    });
	  };var Q = r.Deferred();r.fn.ready = function (a) {
	    return Q.then(a)["catch"](function (a) {
	      r.readyException(a);
	    }), this;
	  }, r.extend({ isReady: !1, readyWait: 1, holdReady: function holdReady(a) {
	      a ? r.readyWait++ : r.ready(!0);
	    }, ready: function ready(a) {
	      (a === !0 ? --r.readyWait : r.isReady) || (r.isReady = !0, a !== !0 && --r.readyWait > 0 || Q.resolveWith(d, [r]));
	    } }), r.ready.then = Q.then;function R() {
	    d.removeEventListener("DOMContentLoaded", R), a.removeEventListener("load", R), r.ready();
	  }"complete" === d.readyState || "loading" !== d.readyState && !d.documentElement.doScroll ? a.setTimeout(r.ready) : (d.addEventListener("DOMContentLoaded", R), a.addEventListener("load", R));var S = function S(a, b, c, d, e, f, g) {
	    var h = 0,
	        i = a.length,
	        j = null == c;if ("object" === r.type(c)) {
	      e = !0;for (h in c) {
	        S(a, b, h, c[h], !0, f, g);
	      }
	    } else if (void 0 !== d && (e = !0, r.isFunction(d) || (g = !0), j && (g ? (b.call(a, d), b = null) : (j = b, b = function b(a, _b, c) {
	      return j.call(r(a), c);
	    })), b)) for (; h < i; h++) {
	      b(a[h], c, g ? d : d.call(a[h], h, b(a[h], c)));
	    }return e ? a : j ? b.call(a) : i ? b(a[0], c) : f;
	  },
	      T = function T(a) {
	    return 1 === a.nodeType || 9 === a.nodeType || !+a.nodeType;
	  };function U() {
	    this.expando = r.expando + U.uid++;
	  }U.uid = 1, U.prototype = { cache: function cache(a) {
	      var b = a[this.expando];return b || (b = {}, T(a) && (a.nodeType ? a[this.expando] = b : Object.defineProperty(a, this.expando, { value: b, configurable: !0 }))), b;
	    }, set: function set(a, b, c) {
	      var d,
	          e = this.cache(a);if ("string" == typeof b) e[r.camelCase(b)] = c;else for (d in b) {
	        e[r.camelCase(d)] = b[d];
	      }return e;
	    }, get: function get(a, b) {
	      return void 0 === b ? this.cache(a) : a[this.expando] && a[this.expando][r.camelCase(b)];
	    }, access: function access(a, b, c) {
	      return void 0 === b || b && "string" == typeof b && void 0 === c ? this.get(a, b) : (this.set(a, b, c), void 0 !== c ? c : b);
	    }, remove: function remove(a, b) {
	      var c,
	          d = a[this.expando];if (void 0 !== d) {
	        if (void 0 !== b) {
	          r.isArray(b) ? b = b.map(r.camelCase) : (b = r.camelCase(b), b = b in d ? [b] : b.match(K) || []), c = b.length;while (c--) {
	            delete d[b[c]];
	          }
	        }(void 0 === b || r.isEmptyObject(d)) && (a.nodeType ? a[this.expando] = void 0 : delete a[this.expando]);
	      }
	    }, hasData: function hasData(a) {
	      var b = a[this.expando];return void 0 !== b && !r.isEmptyObject(b);
	    } };var V = new U(),
	      W = new U(),
	      X = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	      Y = /[A-Z]/g;function Z(a) {
	    return "true" === a || "false" !== a && ("null" === a ? null : a === +a + "" ? +a : X.test(a) ? JSON.parse(a) : a);
	  }function $(a, b, c) {
	    var d;if (void 0 === c && 1 === a.nodeType) if (d = "data-" + b.replace(Y, "-$&").toLowerCase(), c = a.getAttribute(d), "string" == typeof c) {
	      try {
	        c = Z(c);
	      } catch (e) {}W.set(a, b, c);
	    } else c = void 0;return c;
	  }r.extend({ hasData: function hasData(a) {
	      return W.hasData(a) || V.hasData(a);
	    }, data: function data(a, b, c) {
	      return W.access(a, b, c);
	    }, removeData: function removeData(a, b) {
	      W.remove(a, b);
	    }, _data: function _data(a, b, c) {
	      return V.access(a, b, c);
	    }, _removeData: function _removeData(a, b) {
	      V.remove(a, b);
	    } }), r.fn.extend({ data: function data(a, b) {
	      var c,
	          d,
	          e,
	          f = this[0],
	          g = f && f.attributes;if (void 0 === a) {
	        if (this.length && (e = W.get(f), 1 === f.nodeType && !V.get(f, "hasDataAttrs"))) {
	          c = g.length;while (c--) {
	            g[c] && (d = g[c].name, 0 === d.indexOf("data-") && (d = r.camelCase(d.slice(5)), $(f, d, e[d])));
	          }V.set(f, "hasDataAttrs", !0);
	        }return e;
	      }return "object" == (typeof a === "undefined" ? "undefined" : _typeof(a)) ? this.each(function () {
	        W.set(this, a);
	      }) : S(this, function (b) {
	        var c;if (f && void 0 === b) {
	          if (c = W.get(f, a), void 0 !== c) return c;if (c = $(f, a), void 0 !== c) return c;
	        } else this.each(function () {
	          W.set(this, a, b);
	        });
	      }, null, b, arguments.length > 1, null, !0);
	    }, removeData: function removeData(a) {
	      return this.each(function () {
	        W.remove(this, a);
	      });
	    } }), r.extend({ queue: function queue(a, b, c) {
	      var d;if (a) return b = (b || "fx") + "queue", d = V.get(a, b), c && (!d || r.isArray(c) ? d = V.access(a, b, r.makeArray(c)) : d.push(c)), d || [];
	    }, dequeue: function dequeue(a, b) {
	      b = b || "fx";var c = r.queue(a, b),
	          d = c.length,
	          e = c.shift(),
	          f = r._queueHooks(a, b),
	          g = function g() {
	        r.dequeue(a, b);
	      };"inprogress" === e && (e = c.shift(), d--), e && ("fx" === b && c.unshift("inprogress"), delete f.stop, e.call(a, g, f)), !d && f && f.empty.fire();
	    }, _queueHooks: function _queueHooks(a, b) {
	      var c = b + "queueHooks";return V.get(a, c) || V.access(a, c, { empty: r.Callbacks("once memory").add(function () {
	          V.remove(a, [b + "queue", c]);
	        }) });
	    } }), r.fn.extend({ queue: function queue(a, b) {
	      var c = 2;return "string" != typeof a && (b = a, a = "fx", c--), arguments.length < c ? r.queue(this[0], a) : void 0 === b ? this : this.each(function () {
	        var c = r.queue(this, a, b);r._queueHooks(this, a), "fx" === a && "inprogress" !== c[0] && r.dequeue(this, a);
	      });
	    }, dequeue: function dequeue(a) {
	      return this.each(function () {
	        r.dequeue(this, a);
	      });
	    }, clearQueue: function clearQueue(a) {
	      return this.queue(a || "fx", []);
	    }, promise: function promise(a, b) {
	      var c,
	          d = 1,
	          e = r.Deferred(),
	          f = this,
	          g = this.length,
	          h = function h() {
	        --d || e.resolveWith(f, [f]);
	      };"string" != typeof a && (b = a, a = void 0), a = a || "fx";while (g--) {
	        c = V.get(f[g], a + "queueHooks"), c && c.empty && (d++, c.empty.add(h));
	      }return h(), e.promise(b);
	    } });var _ = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
	      aa = new RegExp("^(?:([+-])=|)(" + _ + ")([a-z%]*)$", "i"),
	      ba = ["Top", "Right", "Bottom", "Left"],
	      ca = function ca(a, b) {
	    return a = b || a, "none" === a.style.display || "" === a.style.display && r.contains(a.ownerDocument, a) && "none" === r.css(a, "display");
	  },
	      da = function da(a, b, c, d) {
	    var e,
	        f,
	        g = {};for (f in b) {
	      g[f] = a.style[f], a.style[f] = b[f];
	    }e = c.apply(a, d || []);for (f in b) {
	      a.style[f] = g[f];
	    }return e;
	  };function ea(a, b, c, d) {
	    var e,
	        f = 1,
	        g = 20,
	        h = d ? function () {
	      return d.cur();
	    } : function () {
	      return r.css(a, b, "");
	    },
	        i = h(),
	        j = c && c[3] || (r.cssNumber[b] ? "" : "px"),
	        k = (r.cssNumber[b] || "px" !== j && +i) && aa.exec(r.css(a, b));if (k && k[3] !== j) {
	      j = j || k[3], c = c || [], k = +i || 1;do {
	        f = f || ".5", k /= f, r.style(a, b, k + j);
	      } while (f !== (f = h() / i) && 1 !== f && --g);
	    }return c && (k = +k || +i || 0, e = c[1] ? k + (c[1] + 1) * c[2] : +c[2], d && (d.unit = j, d.start = k, d.end = e)), e;
	  }var fa = {};function ga(a) {
	    var b,
	        c = a.ownerDocument,
	        d = a.nodeName,
	        e = fa[d];return e ? e : (b = c.body.appendChild(c.createElement(d)), e = r.css(b, "display"), b.parentNode.removeChild(b), "none" === e && (e = "block"), fa[d] = e, e);
	  }function ha(a, b) {
	    for (var c, d, e = [], f = 0, g = a.length; f < g; f++) {
	      d = a[f], d.style && (c = d.style.display, b ? ("none" === c && (e[f] = V.get(d, "display") || null, e[f] || (d.style.display = "")), "" === d.style.display && ca(d) && (e[f] = ga(d))) : "none" !== c && (e[f] = "none", V.set(d, "display", c)));
	    }for (f = 0; f < g; f++) {
	      null != e[f] && (a[f].style.display = e[f]);
	    }return a;
	  }r.fn.extend({ show: function show() {
	      return ha(this, !0);
	    }, hide: function hide() {
	      return ha(this);
	    }, toggle: function toggle(a) {
	      return "boolean" == typeof a ? a ? this.show() : this.hide() : this.each(function () {
	        ca(this) ? r(this).show() : r(this).hide();
	      });
	    } });var ia = /^(?:checkbox|radio)$/i,
	      ja = /<([a-z][^\/\0>\x20\t\r\n\f]+)/i,
	      ka = /^$|\/(?:java|ecma)script/i,
	      la = { option: [1, "<select multiple='multiple'>", "</select>"], thead: [1, "<table>", "</table>"], col: [2, "<table><colgroup>", "</colgroup></table>"], tr: [2, "<table><tbody>", "</tbody></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], _default: [0, "", ""] };la.optgroup = la.option, la.tbody = la.tfoot = la.colgroup = la.caption = la.thead, la.th = la.td;function ma(a, b) {
	    var c;return c = "undefined" != typeof a.getElementsByTagName ? a.getElementsByTagName(b || "*") : "undefined" != typeof a.querySelectorAll ? a.querySelectorAll(b || "*") : [], void 0 === b || b && r.nodeName(a, b) ? r.merge([a], c) : c;
	  }function na(a, b) {
	    for (var c = 0, d = a.length; c < d; c++) {
	      V.set(a[c], "globalEval", !b || V.get(b[c], "globalEval"));
	    }
	  }var oa = /<|&#?\w+;/;function pa(a, b, c, d, e) {
	    for (var f, g, h, i, j, k, l = b.createDocumentFragment(), m = [], n = 0, o = a.length; n < o; n++) {
	      if (f = a[n], f || 0 === f) if ("object" === r.type(f)) r.merge(m, f.nodeType ? [f] : f);else if (oa.test(f)) {
	        g = g || l.appendChild(b.createElement("div")), h = (ja.exec(f) || ["", ""])[1].toLowerCase(), i = la[h] || la._default, g.innerHTML = i[1] + r.htmlPrefilter(f) + i[2], k = i[0];while (k--) {
	          g = g.lastChild;
	        }r.merge(m, g.childNodes), g = l.firstChild, g.textContent = "";
	      } else m.push(b.createTextNode(f));
	    }l.textContent = "", n = 0;while (f = m[n++]) {
	      if (d && r.inArray(f, d) > -1) e && e.push(f);else if (j = r.contains(f.ownerDocument, f), g = ma(l.appendChild(f), "script"), j && na(g), c) {
	        k = 0;while (f = g[k++]) {
	          ka.test(f.type || "") && c.push(f);
	        }
	      }
	    }return l;
	  }!function () {
	    var a = d.createDocumentFragment(),
	        b = a.appendChild(d.createElement("div")),
	        c = d.createElement("input");c.setAttribute("type", "radio"), c.setAttribute("checked", "checked"), c.setAttribute("name", "t"), b.appendChild(c), o.checkClone = b.cloneNode(!0).cloneNode(!0).lastChild.checked, b.innerHTML = "<textarea>x</textarea>", o.noCloneChecked = !!b.cloneNode(!0).lastChild.defaultValue;
	  }();var qa = d.documentElement,
	      ra = /^key/,
	      sa = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	      ta = /^([^.]*)(?:\.(.+)|)/;function ua() {
	    return !0;
	  }function va() {
	    return !1;
	  }function wa() {
	    try {
	      return d.activeElement;
	    } catch (a) {}
	  }function xa(a, b, c, d, e, f) {
	    var g, h;if ("object" == (typeof b === "undefined" ? "undefined" : _typeof(b))) {
	      "string" != typeof c && (d = d || c, c = void 0);for (h in b) {
	        xa(a, h, c, d, b[h], f);
	      }return a;
	    }if (null == d && null == e ? (e = c, d = c = void 0) : null == e && ("string" == typeof c ? (e = d, d = void 0) : (e = d, d = c, c = void 0)), e === !1) e = va;else if (!e) return a;return 1 === f && (g = e, e = function e(a) {
	      return r().off(a), g.apply(this, arguments);
	    }, e.guid = g.guid || (g.guid = r.guid++)), a.each(function () {
	      r.event.add(this, b, e, d, c);
	    });
	  }r.event = { global: {}, add: function add(a, b, c, d, e) {
	      var f,
	          g,
	          h,
	          i,
	          j,
	          k,
	          l,
	          m,
	          n,
	          o,
	          p,
	          q = V.get(a);if (q) {
	        c.handler && (f = c, c = f.handler, e = f.selector), e && r.find.matchesSelector(qa, e), c.guid || (c.guid = r.guid++), (i = q.events) || (i = q.events = {}), (g = q.handle) || (g = q.handle = function (b) {
	          return "undefined" != typeof r && r.event.triggered !== b.type ? r.event.dispatch.apply(a, arguments) : void 0;
	        }), b = (b || "").match(K) || [""], j = b.length;while (j--) {
	          h = ta.exec(b[j]) || [], n = p = h[1], o = (h[2] || "").split(".").sort(), n && (l = r.event.special[n] || {}, n = (e ? l.delegateType : l.bindType) || n, l = r.event.special[n] || {}, k = r.extend({ type: n, origType: p, data: d, handler: c, guid: c.guid, selector: e, needsContext: e && r.expr.match.needsContext.test(e), namespace: o.join(".") }, f), (m = i[n]) || (m = i[n] = [], m.delegateCount = 0, l.setup && l.setup.call(a, d, o, g) !== !1 || a.addEventListener && a.addEventListener(n, g)), l.add && (l.add.call(a, k), k.handler.guid || (k.handler.guid = c.guid)), e ? m.splice(m.delegateCount++, 0, k) : m.push(k), r.event.global[n] = !0);
	        }
	      }
	    }, remove: function remove(a, b, c, d, e) {
	      var f,
	          g,
	          h,
	          i,
	          j,
	          k,
	          l,
	          m,
	          n,
	          o,
	          p,
	          q = V.hasData(a) && V.get(a);if (q && (i = q.events)) {
	        b = (b || "").match(K) || [""], j = b.length;while (j--) {
	          if (h = ta.exec(b[j]) || [], n = p = h[1], o = (h[2] || "").split(".").sort(), n) {
	            l = r.event.special[n] || {}, n = (d ? l.delegateType : l.bindType) || n, m = i[n] || [], h = h[2] && new RegExp("(^|\\.)" + o.join("\\.(?:.*\\.|)") + "(\\.|$)"), g = f = m.length;while (f--) {
	              k = m[f], !e && p !== k.origType || c && c.guid !== k.guid || h && !h.test(k.namespace) || d && d !== k.selector && ("**" !== d || !k.selector) || (m.splice(f, 1), k.selector && m.delegateCount--, l.remove && l.remove.call(a, k));
	            }g && !m.length && (l.teardown && l.teardown.call(a, o, q.handle) !== !1 || r.removeEvent(a, n, q.handle), delete i[n]);
	          } else for (n in i) {
	            r.event.remove(a, n + b[j], c, d, !0);
	          }
	        }r.isEmptyObject(i) && V.remove(a, "handle events");
	      }
	    }, dispatch: function dispatch(a) {
	      var b = r.event.fix(a),
	          c,
	          d,
	          e,
	          f,
	          g,
	          h,
	          i = new Array(arguments.length),
	          j = (V.get(this, "events") || {})[b.type] || [],
	          k = r.event.special[b.type] || {};for (i[0] = b, c = 1; c < arguments.length; c++) {
	        i[c] = arguments[c];
	      }if (b.delegateTarget = this, !k.preDispatch || k.preDispatch.call(this, b) !== !1) {
	        h = r.event.handlers.call(this, b, j), c = 0;while ((f = h[c++]) && !b.isPropagationStopped()) {
	          b.currentTarget = f.elem, d = 0;while ((g = f.handlers[d++]) && !b.isImmediatePropagationStopped()) {
	            b.rnamespace && !b.rnamespace.test(g.namespace) || (b.handleObj = g, b.data = g.data, e = ((r.event.special[g.origType] || {}).handle || g.handler).apply(f.elem, i), void 0 !== e && (b.result = e) === !1 && (b.preventDefault(), b.stopPropagation()));
	          }
	        }return k.postDispatch && k.postDispatch.call(this, b), b.result;
	      }
	    }, handlers: function handlers(a, b) {
	      var c,
	          d,
	          e,
	          f,
	          g,
	          h = [],
	          i = b.delegateCount,
	          j = a.target;if (i && j.nodeType && !("click" === a.type && a.button >= 1)) for (; j !== this; j = j.parentNode || this) {
	        if (1 === j.nodeType && ("click" !== a.type || j.disabled !== !0)) {
	          for (f = [], g = {}, c = 0; c < i; c++) {
	            d = b[c], e = d.selector + " ", void 0 === g[e] && (g[e] = d.needsContext ? r(e, this).index(j) > -1 : r.find(e, this, null, [j]).length), g[e] && f.push(d);
	          }f.length && h.push({ elem: j, handlers: f });
	        }
	      }return j = this, i < b.length && h.push({ elem: j, handlers: b.slice(i) }), h;
	    }, addProp: function addProp(a, b) {
	      Object.defineProperty(r.Event.prototype, a, { enumerable: !0, configurable: !0, get: r.isFunction(b) ? function () {
	          if (this.originalEvent) return b(this.originalEvent);
	        } : function () {
	          if (this.originalEvent) return this.originalEvent[a];
	        }, set: function set(b) {
	          Object.defineProperty(this, a, { enumerable: !0, configurable: !0, writable: !0, value: b });
	        } });
	    }, fix: function fix(a) {
	      return a[r.expando] ? a : new r.Event(a);
	    }, special: { load: { noBubble: !0 }, focus: { trigger: function trigger() {
	          if (this !== wa() && this.focus) return this.focus(), !1;
	        }, delegateType: "focusin" }, blur: { trigger: function trigger() {
	          if (this === wa() && this.blur) return this.blur(), !1;
	        }, delegateType: "focusout" }, click: { trigger: function trigger() {
	          if ("checkbox" === this.type && this.click && r.nodeName(this, "input")) return this.click(), !1;
	        }, _default: function _default(a) {
	          return r.nodeName(a.target, "a");
	        } }, beforeunload: { postDispatch: function postDispatch(a) {
	          void 0 !== a.result && a.originalEvent && (a.originalEvent.returnValue = a.result);
	        } } } }, r.removeEvent = function (a, b, c) {
	    a.removeEventListener && a.removeEventListener(b, c);
	  }, r.Event = function (a, b) {
	    return this instanceof r.Event ? (a && a.type ? (this.originalEvent = a, this.type = a.type, this.isDefaultPrevented = a.defaultPrevented || void 0 === a.defaultPrevented && a.returnValue === !1 ? ua : va, this.target = a.target && 3 === a.target.nodeType ? a.target.parentNode : a.target, this.currentTarget = a.currentTarget, this.relatedTarget = a.relatedTarget) : this.type = a, b && r.extend(this, b), this.timeStamp = a && a.timeStamp || r.now(), void (this[r.expando] = !0)) : new r.Event(a, b);
	  }, r.Event.prototype = { constructor: r.Event, isDefaultPrevented: va, isPropagationStopped: va, isImmediatePropagationStopped: va, isSimulated: !1, preventDefault: function preventDefault() {
	      var a = this.originalEvent;this.isDefaultPrevented = ua, a && !this.isSimulated && a.preventDefault();
	    }, stopPropagation: function stopPropagation() {
	      var a = this.originalEvent;this.isPropagationStopped = ua, a && !this.isSimulated && a.stopPropagation();
	    }, stopImmediatePropagation: function stopImmediatePropagation() {
	      var a = this.originalEvent;this.isImmediatePropagationStopped = ua, a && !this.isSimulated && a.stopImmediatePropagation(), this.stopPropagation();
	    } }, r.each({ altKey: !0, bubbles: !0, cancelable: !0, changedTouches: !0, ctrlKey: !0, detail: !0, eventPhase: !0, metaKey: !0, pageX: !0, pageY: !0, shiftKey: !0, view: !0, "char": !0, charCode: !0, key: !0, keyCode: !0, button: !0, buttons: !0, clientX: !0, clientY: !0, offsetX: !0, offsetY: !0, pointerId: !0, pointerType: !0, screenX: !0, screenY: !0, targetTouches: !0, toElement: !0, touches: !0, which: function which(a) {
	      var b = a.button;return null == a.which && ra.test(a.type) ? null != a.charCode ? a.charCode : a.keyCode : !a.which && void 0 !== b && sa.test(a.type) ? 1 & b ? 1 : 2 & b ? 3 : 4 & b ? 2 : 0 : a.which;
	    } }, r.event.addProp), r.each({ mouseenter: "mouseover", mouseleave: "mouseout", pointerenter: "pointerover", pointerleave: "pointerout" }, function (a, b) {
	    r.event.special[a] = { delegateType: b, bindType: b, handle: function handle(a) {
	        var c,
	            d = this,
	            e = a.relatedTarget,
	            f = a.handleObj;return e && (e === d || r.contains(d, e)) || (a.type = f.origType, c = f.handler.apply(this, arguments), a.type = b), c;
	      } };
	  }), r.fn.extend({ on: function on(a, b, c, d) {
	      return xa(this, a, b, c, d);
	    }, one: function one(a, b, c, d) {
	      return xa(this, a, b, c, d, 1);
	    }, off: function off(a, b, c) {
	      var d, e;if (a && a.preventDefault && a.handleObj) return d = a.handleObj, r(a.delegateTarget).off(d.namespace ? d.origType + "." + d.namespace : d.origType, d.selector, d.handler), this;if ("object" == (typeof a === "undefined" ? "undefined" : _typeof(a))) {
	        for (e in a) {
	          this.off(e, b, a[e]);
	        }return this;
	      }return b !== !1 && "function" != typeof b || (c = b, b = void 0), c === !1 && (c = va), this.each(function () {
	        r.event.remove(this, a, c, b);
	      });
	    } });var ya = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,
	      za = /<script|<style|<link/i,
	      Aa = /checked\s*(?:[^=]|=\s*.checked.)/i,
	      Ba = /^true\/(.*)/,
	      Ca = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Da(a, b) {
	    return r.nodeName(a, "table") && r.nodeName(11 !== b.nodeType ? b : b.firstChild, "tr") ? a.getElementsByTagName("tbody")[0] || a : a;
	  }function Ea(a) {
	    return a.type = (null !== a.getAttribute("type")) + "/" + a.type, a;
	  }function Fa(a) {
	    var b = Ba.exec(a.type);return b ? a.type = b[1] : a.removeAttribute("type"), a;
	  }function Ga(a, b) {
	    var c, d, e, f, g, h, i, j;if (1 === b.nodeType) {
	      if (V.hasData(a) && (f = V.access(a), g = V.set(b, f), j = f.events)) {
	        delete g.handle, g.events = {};for (e in j) {
	          for (c = 0, d = j[e].length; c < d; c++) {
	            r.event.add(b, e, j[e][c]);
	          }
	        }
	      }W.hasData(a) && (h = W.access(a), i = r.extend({}, h), W.set(b, i));
	    }
	  }function Ha(a, b) {
	    var c = b.nodeName.toLowerCase();"input" === c && ia.test(a.type) ? b.checked = a.checked : "input" !== c && "textarea" !== c || (b.defaultValue = a.defaultValue);
	  }function Ia(a, b, c, d) {
	    b = g.apply([], b);var e,
	        f,
	        h,
	        i,
	        j,
	        k,
	        l = 0,
	        m = a.length,
	        n = m - 1,
	        q = b[0],
	        s = r.isFunction(q);if (s || m > 1 && "string" == typeof q && !o.checkClone && Aa.test(q)) return a.each(function (e) {
	      var f = a.eq(e);s && (b[0] = q.call(this, e, f.html())), Ia(f, b, c, d);
	    });if (m && (e = pa(b, a[0].ownerDocument, !1, a, d), f = e.firstChild, 1 === e.childNodes.length && (e = f), f || d)) {
	      for (h = r.map(ma(e, "script"), Ea), i = h.length; l < m; l++) {
	        j = e, l !== n && (j = r.clone(j, !0, !0), i && r.merge(h, ma(j, "script"))), c.call(a[l], j, l);
	      }if (i) for (k = h[h.length - 1].ownerDocument, r.map(h, Fa), l = 0; l < i; l++) {
	        j = h[l], ka.test(j.type || "") && !V.access(j, "globalEval") && r.contains(k, j) && (j.src ? r._evalUrl && r._evalUrl(j.src) : p(j.textContent.replace(Ca, ""), k));
	      }
	    }return a;
	  }function Ja(a, b, c) {
	    for (var d, e = b ? r.filter(b, a) : a, f = 0; null != (d = e[f]); f++) {
	      c || 1 !== d.nodeType || r.cleanData(ma(d)), d.parentNode && (c && r.contains(d.ownerDocument, d) && na(ma(d, "script")), d.parentNode.removeChild(d));
	    }return a;
	  }r.extend({ htmlPrefilter: function htmlPrefilter(a) {
	      return a.replace(ya, "<$1></$2>");
	    }, clone: function clone(a, b, c) {
	      var d,
	          e,
	          f,
	          g,
	          h = a.cloneNode(!0),
	          i = r.contains(a.ownerDocument, a);if (!(o.noCloneChecked || 1 !== a.nodeType && 11 !== a.nodeType || r.isXMLDoc(a))) for (g = ma(h), f = ma(a), d = 0, e = f.length; d < e; d++) {
	        Ha(f[d], g[d]);
	      }if (b) if (c) for (f = f || ma(a), g = g || ma(h), d = 0, e = f.length; d < e; d++) {
	        Ga(f[d], g[d]);
	      } else Ga(a, h);return g = ma(h, "script"), g.length > 0 && na(g, !i && ma(a, "script")), h;
	    }, cleanData: function cleanData(a) {
	      for (var b, c, d, e = r.event.special, f = 0; void 0 !== (c = a[f]); f++) {
	        if (T(c)) {
	          if (b = c[V.expando]) {
	            if (b.events) for (d in b.events) {
	              e[d] ? r.event.remove(c, d) : r.removeEvent(c, d, b.handle);
	            }c[V.expando] = void 0;
	          }c[W.expando] && (c[W.expando] = void 0);
	        }
	      }
	    } }), r.fn.extend({ detach: function detach(a) {
	      return Ja(this, a, !0);
	    }, remove: function remove(a) {
	      return Ja(this, a);
	    }, text: function text(a) {
	      return S(this, function (a) {
	        return void 0 === a ? r.text(this) : this.empty().each(function () {
	          1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = a);
	        });
	      }, null, a, arguments.length);
	    }, append: function append() {
	      return Ia(this, arguments, function (a) {
	        if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
	          var b = Da(this, a);b.appendChild(a);
	        }
	      });
	    }, prepend: function prepend() {
	      return Ia(this, arguments, function (a) {
	        if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
	          var b = Da(this, a);b.insertBefore(a, b.firstChild);
	        }
	      });
	    }, before: function before() {
	      return Ia(this, arguments, function (a) {
	        this.parentNode && this.parentNode.insertBefore(a, this);
	      });
	    }, after: function after() {
	      return Ia(this, arguments, function (a) {
	        this.parentNode && this.parentNode.insertBefore(a, this.nextSibling);
	      });
	    }, empty: function empty() {
	      for (var a, b = 0; null != (a = this[b]); b++) {
	        1 === a.nodeType && (r.cleanData(ma(a, !1)), a.textContent = "");
	      }return this;
	    }, clone: function clone(a, b) {
	      return a = null != a && a, b = null == b ? a : b, this.map(function () {
	        return r.clone(this, a, b);
	      });
	    }, html: function html(a) {
	      return S(this, function (a) {
	        var b = this[0] || {},
	            c = 0,
	            d = this.length;if (void 0 === a && 1 === b.nodeType) return b.innerHTML;if ("string" == typeof a && !za.test(a) && !la[(ja.exec(a) || ["", ""])[1].toLowerCase()]) {
	          a = r.htmlPrefilter(a);try {
	            for (; c < d; c++) {
	              b = this[c] || {}, 1 === b.nodeType && (r.cleanData(ma(b, !1)), b.innerHTML = a);
	            }b = 0;
	          } catch (e) {}
	        }b && this.empty().append(a);
	      }, null, a, arguments.length);
	    }, replaceWith: function replaceWith() {
	      var a = [];return Ia(this, arguments, function (b) {
	        var c = this.parentNode;r.inArray(this, a) < 0 && (r.cleanData(ma(this)), c && c.replaceChild(b, this));
	      }, a);
	    } }), r.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function (a, b) {
	    r.fn[a] = function (a) {
	      for (var c, d = [], e = r(a), f = e.length - 1, g = 0; g <= f; g++) {
	        c = g === f ? this : this.clone(!0), r(e[g])[b](c), h.apply(d, c.get());
	      }return this.pushStack(d);
	    };
	  });var Ka = /^margin/,
	      La = new RegExp("^(" + _ + ")(?!px)[a-z%]+$", "i"),
	      Ma = function Ma(b) {
	    var c = b.ownerDocument.defaultView;return c && c.opener || (c = a), c.getComputedStyle(b);
	  };!function () {
	    function b() {
	      if (i) {
	        i.style.cssText = "box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%", i.innerHTML = "", qa.appendChild(h);var b = a.getComputedStyle(i);c = "1%" !== b.top, g = "2px" === b.marginLeft, e = "4px" === b.width, i.style.marginRight = "50%", f = "4px" === b.marginRight, qa.removeChild(h), i = null;
	      }
	    }var c,
	        e,
	        f,
	        g,
	        h = d.createElement("div"),
	        i = d.createElement("div");i.style && (i.style.backgroundClip = "content-box", i.cloneNode(!0).style.backgroundClip = "", o.clearCloneStyle = "content-box" === i.style.backgroundClip, h.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute", h.appendChild(i), r.extend(o, { pixelPosition: function pixelPosition() {
	        return b(), c;
	      }, boxSizingReliable: function boxSizingReliable() {
	        return b(), e;
	      }, pixelMarginRight: function pixelMarginRight() {
	        return b(), f;
	      }, reliableMarginLeft: function reliableMarginLeft() {
	        return b(), g;
	      } }));
	  }();function Na(a, b, c) {
	    var d,
	        e,
	        f,
	        g,
	        h = a.style;return c = c || Ma(a), c && (g = c.getPropertyValue(b) || c[b], "" !== g || r.contains(a.ownerDocument, a) || (g = r.style(a, b)), !o.pixelMarginRight() && La.test(g) && Ka.test(b) && (d = h.width, e = h.minWidth, f = h.maxWidth, h.minWidth = h.maxWidth = h.width = g, g = c.width, h.width = d, h.minWidth = e, h.maxWidth = f)), void 0 !== g ? g + "" : g;
	  }function Oa(a, b) {
	    return { get: function get() {
	        return a() ? void delete this.get : (this.get = b).apply(this, arguments);
	      } };
	  }var Pa = /^(none|table(?!-c[ea]).+)/,
	      Qa = { position: "absolute", visibility: "hidden", display: "block" },
	      Ra = { letterSpacing: "0", fontWeight: "400" },
	      Sa = ["Webkit", "Moz", "ms"],
	      Ta = d.createElement("div").style;function Ua(a) {
	    if (a in Ta) return a;var b = a[0].toUpperCase() + a.slice(1),
	        c = Sa.length;while (c--) {
	      if (a = Sa[c] + b, a in Ta) return a;
	    }
	  }function Va(a, b, c) {
	    var d = aa.exec(b);return d ? Math.max(0, d[2] - (c || 0)) + (d[3] || "px") : b;
	  }function Wa(a, b, c, d, e) {
	    var f,
	        g = 0;for (f = c === (d ? "border" : "content") ? 4 : "width" === b ? 1 : 0; f < 4; f += 2) {
	      "margin" === c && (g += r.css(a, c + ba[f], !0, e)), d ? ("content" === c && (g -= r.css(a, "padding" + ba[f], !0, e)), "margin" !== c && (g -= r.css(a, "border" + ba[f] + "Width", !0, e))) : (g += r.css(a, "padding" + ba[f], !0, e), "padding" !== c && (g += r.css(a, "border" + ba[f] + "Width", !0, e)));
	    }return g;
	  }function Xa(a, b, c) {
	    var d,
	        e = !0,
	        f = Ma(a),
	        g = "border-box" === r.css(a, "boxSizing", !1, f);if (a.getClientRects().length && (d = a.getBoundingClientRect()[b]), d <= 0 || null == d) {
	      if (d = Na(a, b, f), (d < 0 || null == d) && (d = a.style[b]), La.test(d)) return d;e = g && (o.boxSizingReliable() || d === a.style[b]), d = parseFloat(d) || 0;
	    }return d + Wa(a, b, c || (g ? "border" : "content"), e, f) + "px";
	  }r.extend({ cssHooks: { opacity: { get: function get(a, b) {
	          if (b) {
	            var c = Na(a, "opacity");return "" === c ? "1" : c;
	          }
	        } } }, cssNumber: { animationIterationCount: !0, columnCount: !0, fillOpacity: !0, flexGrow: !0, flexShrink: !0, fontWeight: !0, lineHeight: !0, opacity: !0, order: !0, orphans: !0, widows: !0, zIndex: !0, zoom: !0 }, cssProps: { "float": "cssFloat" }, style: function style(a, b, c, d) {
	      if (a && 3 !== a.nodeType && 8 !== a.nodeType && a.style) {
	        var e,
	            f,
	            g,
	            h = r.camelCase(b),
	            i = a.style;return b = r.cssProps[h] || (r.cssProps[h] = Ua(h) || h), g = r.cssHooks[b] || r.cssHooks[h], void 0 === c ? g && "get" in g && void 0 !== (e = g.get(a, !1, d)) ? e : i[b] : (f = typeof c === "undefined" ? "undefined" : _typeof(c), "string" === f && (e = aa.exec(c)) && e[1] && (c = ea(a, b, e), f = "number"), null != c && c === c && ("number" === f && (c += e && e[3] || (r.cssNumber[h] ? "" : "px")), o.clearCloneStyle || "" !== c || 0 !== b.indexOf("background") || (i[b] = "inherit"), g && "set" in g && void 0 === (c = g.set(a, c, d)) || (i[b] = c)), void 0);
	      }
	    }, css: function css(a, b, c, d) {
	      var e,
	          f,
	          g,
	          h = r.camelCase(b);return b = r.cssProps[h] || (r.cssProps[h] = Ua(h) || h), g = r.cssHooks[b] || r.cssHooks[h], g && "get" in g && (e = g.get(a, !0, c)), void 0 === e && (e = Na(a, b, d)), "normal" === e && b in Ra && (e = Ra[b]), "" === c || c ? (f = parseFloat(e), c === !0 || isFinite(f) ? f || 0 : e) : e;
	    } }), r.each(["height", "width"], function (a, b) {
	    r.cssHooks[b] = { get: function get(a, c, d) {
	        if (c) return !Pa.test(r.css(a, "display")) || a.getClientRects().length && a.getBoundingClientRect().width ? Xa(a, b, d) : da(a, Qa, function () {
	          return Xa(a, b, d);
	        });
	      }, set: function set(a, c, d) {
	        var e,
	            f = d && Ma(a),
	            g = d && Wa(a, b, d, "border-box" === r.css(a, "boxSizing", !1, f), f);return g && (e = aa.exec(c)) && "px" !== (e[3] || "px") && (a.style[b] = c, c = r.css(a, b)), Va(a, c, g);
	      } };
	  }), r.cssHooks.marginLeft = Oa(o.reliableMarginLeft, function (a, b) {
	    if (b) return (parseFloat(Na(a, "marginLeft")) || a.getBoundingClientRect().left - da(a, { marginLeft: 0 }, function () {
	      return a.getBoundingClientRect().left;
	    })) + "px";
	  }), r.each({ margin: "", padding: "", border: "Width" }, function (a, b) {
	    r.cssHooks[a + b] = { expand: function expand(c) {
	        for (var d = 0, e = {}, f = "string" == typeof c ? c.split(" ") : [c]; d < 4; d++) {
	          e[a + ba[d] + b] = f[d] || f[d - 2] || f[0];
	        }return e;
	      } }, Ka.test(a) || (r.cssHooks[a + b].set = Va);
	  }), r.fn.extend({ css: function css(a, b) {
	      return S(this, function (a, b, c) {
	        var d,
	            e,
	            f = {},
	            g = 0;if (r.isArray(b)) {
	          for (d = Ma(a), e = b.length; g < e; g++) {
	            f[b[g]] = r.css(a, b[g], !1, d);
	          }return f;
	        }return void 0 !== c ? r.style(a, b, c) : r.css(a, b);
	      }, a, b, arguments.length > 1);
	    } });function Ya(a, b, c, d, e) {
	    return new Ya.prototype.init(a, b, c, d, e);
	  }r.Tween = Ya, Ya.prototype = { constructor: Ya, init: function init(a, b, c, d, e, f) {
	      this.elem = a, this.prop = c, this.easing = e || r.easing._default, this.options = b, this.start = this.now = this.cur(), this.end = d, this.unit = f || (r.cssNumber[c] ? "" : "px");
	    }, cur: function cur() {
	      var a = Ya.propHooks[this.prop];return a && a.get ? a.get(this) : Ya.propHooks._default.get(this);
	    }, run: function run(a) {
	      var b,
	          c = Ya.propHooks[this.prop];return this.options.duration ? this.pos = b = r.easing[this.easing](a, this.options.duration * a, 0, 1, this.options.duration) : this.pos = b = a, this.now = (this.end - this.start) * b + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), c && c.set ? c.set(this) : Ya.propHooks._default.set(this), this;
	    } }, Ya.prototype.init.prototype = Ya.prototype, Ya.propHooks = { _default: { get: function get(a) {
	        var b;return 1 !== a.elem.nodeType || null != a.elem[a.prop] && null == a.elem.style[a.prop] ? a.elem[a.prop] : (b = r.css(a.elem, a.prop, ""), b && "auto" !== b ? b : 0);
	      }, set: function set(a) {
	        r.fx.step[a.prop] ? r.fx.step[a.prop](a) : 1 !== a.elem.nodeType || null == a.elem.style[r.cssProps[a.prop]] && !r.cssHooks[a.prop] ? a.elem[a.prop] = a.now : r.style(a.elem, a.prop, a.now + a.unit);
	      } } }, Ya.propHooks.scrollTop = Ya.propHooks.scrollLeft = { set: function set(a) {
	      a.elem.nodeType && a.elem.parentNode && (a.elem[a.prop] = a.now);
	    } }, r.easing = { linear: function linear(a) {
	      return a;
	    }, swing: function swing(a) {
	      return .5 - Math.cos(a * Math.PI) / 2;
	    }, _default: "swing" }, r.fx = Ya.prototype.init, r.fx.step = {};var Za,
	      $a,
	      _a = /^(?:toggle|show|hide)$/,
	      ab = /queueHooks$/;function bb() {
	    $a && (a.requestAnimationFrame(bb), r.fx.tick());
	  }function cb() {
	    return a.setTimeout(function () {
	      Za = void 0;
	    }), Za = r.now();
	  }function db(a, b) {
	    var c,
	        d = 0,
	        e = { height: a };for (b = b ? 1 : 0; d < 4; d += 2 - b) {
	      c = ba[d], e["margin" + c] = e["padding" + c] = a;
	    }return b && (e.opacity = e.width = a), e;
	  }function eb(a, b, c) {
	    for (var d, e = (hb.tweeners[b] || []).concat(hb.tweeners["*"]), f = 0, g = e.length; f < g; f++) {
	      if (d = e[f].call(c, b, a)) return d;
	    }
	  }function fb(a, b, c) {
	    var d,
	        e,
	        f,
	        g,
	        h,
	        i,
	        j,
	        k,
	        l = "width" in b || "height" in b,
	        m = this,
	        n = {},
	        o = a.style,
	        p = a.nodeType && ca(a),
	        q = V.get(a, "fxshow");c.queue || (g = r._queueHooks(a, "fx"), null == g.unqueued && (g.unqueued = 0, h = g.empty.fire, g.empty.fire = function () {
	      g.unqueued || h();
	    }), g.unqueued++, m.always(function () {
	      m.always(function () {
	        g.unqueued--, r.queue(a, "fx").length || g.empty.fire();
	      });
	    }));for (d in b) {
	      if (e = b[d], _a.test(e)) {
	        if (delete b[d], f = f || "toggle" === e, e === (p ? "hide" : "show")) {
	          if ("show" !== e || !q || void 0 === q[d]) continue;p = !0;
	        }n[d] = q && q[d] || r.style(a, d);
	      }
	    }if (i = !r.isEmptyObject(b), i || !r.isEmptyObject(n)) {
	      l && 1 === a.nodeType && (c.overflow = [o.overflow, o.overflowX, o.overflowY], j = q && q.display, null == j && (j = V.get(a, "display")), k = r.css(a, "display"), "none" === k && (j ? k = j : (ha([a], !0), j = a.style.display || j, k = r.css(a, "display"), ha([a]))), ("inline" === k || "inline-block" === k && null != j) && "none" === r.css(a, "float") && (i || (m.done(function () {
	        o.display = j;
	      }), null == j && (k = o.display, j = "none" === k ? "" : k)), o.display = "inline-block")), c.overflow && (o.overflow = "hidden", m.always(function () {
	        o.overflow = c.overflow[0], o.overflowX = c.overflow[1], o.overflowY = c.overflow[2];
	      })), i = !1;for (d in n) {
	        i || (q ? "hidden" in q && (p = q.hidden) : q = V.access(a, "fxshow", { display: j }), f && (q.hidden = !p), p && ha([a], !0), m.done(function () {
	          p || ha([a]), V.remove(a, "fxshow");for (d in n) {
	            r.style(a, d, n[d]);
	          }
	        })), i = eb(p ? q[d] : 0, d, m), d in q || (q[d] = i.start, p && (i.end = i.start, i.start = 0));
	      }
	    }
	  }function gb(a, b) {
	    var c, d, e, f, g;for (c in a) {
	      if (d = r.camelCase(c), e = b[d], f = a[c], r.isArray(f) && (e = f[1], f = a[c] = f[0]), c !== d && (a[d] = f, delete a[c]), g = r.cssHooks[d], g && "expand" in g) {
	        f = g.expand(f), delete a[d];for (c in f) {
	          c in a || (a[c] = f[c], b[c] = e);
	        }
	      } else b[d] = e;
	    }
	  }function hb(a, b, c) {
	    var d,
	        e,
	        f = 0,
	        g = hb.prefilters.length,
	        h = r.Deferred().always(function () {
	      delete i.elem;
	    }),
	        i = function i() {
	      if (e) return !1;for (var b = Za || cb(), c = Math.max(0, j.startTime + j.duration - b), d = c / j.duration || 0, f = 1 - d, g = 0, i = j.tweens.length; g < i; g++) {
	        j.tweens[g].run(f);
	      }return h.notifyWith(a, [j, f, c]), f < 1 && i ? c : (h.resolveWith(a, [j]), !1);
	    },
	        j = h.promise({ elem: a, props: r.extend({}, b), opts: r.extend(!0, { specialEasing: {}, easing: r.easing._default }, c), originalProperties: b, originalOptions: c, startTime: Za || cb(), duration: c.duration, tweens: [], createTween: function createTween(b, c) {
	        var d = r.Tween(a, j.opts, b, c, j.opts.specialEasing[b] || j.opts.easing);return j.tweens.push(d), d;
	      }, stop: function stop(b) {
	        var c = 0,
	            d = b ? j.tweens.length : 0;if (e) return this;for (e = !0; c < d; c++) {
	          j.tweens[c].run(1);
	        }return b ? (h.notifyWith(a, [j, 1, 0]), h.resolveWith(a, [j, b])) : h.rejectWith(a, [j, b]), this;
	      } }),
	        k = j.props;for (gb(k, j.opts.specialEasing); f < g; f++) {
	      if (d = hb.prefilters[f].call(j, a, k, j.opts)) return r.isFunction(d.stop) && (r._queueHooks(j.elem, j.opts.queue).stop = r.proxy(d.stop, d)), d;
	    }return r.map(k, eb, j), r.isFunction(j.opts.start) && j.opts.start.call(a, j), r.fx.timer(r.extend(i, { elem: a, anim: j, queue: j.opts.queue })), j.progress(j.opts.progress).done(j.opts.done, j.opts.complete).fail(j.opts.fail).always(j.opts.always);
	  }r.Animation = r.extend(hb, { tweeners: { "*": [function (a, b) {
	        var c = this.createTween(a, b);return ea(c.elem, a, aa.exec(b), c), c;
	      }] }, tweener: function tweener(a, b) {
	      r.isFunction(a) ? (b = a, a = ["*"]) : a = a.match(K);for (var c, d = 0, e = a.length; d < e; d++) {
	        c = a[d], hb.tweeners[c] = hb.tweeners[c] || [], hb.tweeners[c].unshift(b);
	      }
	    }, prefilters: [fb], prefilter: function prefilter(a, b) {
	      b ? hb.prefilters.unshift(a) : hb.prefilters.push(a);
	    } }), r.speed = function (a, b, c) {
	    var e = a && "object" == (typeof a === "undefined" ? "undefined" : _typeof(a)) ? r.extend({}, a) : { complete: c || !c && b || r.isFunction(a) && a, duration: a, easing: c && b || b && !r.isFunction(b) && b };return r.fx.off || d.hidden ? e.duration = 0 : "number" != typeof e.duration && (e.duration in r.fx.speeds ? e.duration = r.fx.speeds[e.duration] : e.duration = r.fx.speeds._default), null != e.queue && e.queue !== !0 || (e.queue = "fx"), e.old = e.complete, e.complete = function () {
	      r.isFunction(e.old) && e.old.call(this), e.queue && r.dequeue(this, e.queue);
	    }, e;
	  }, r.fn.extend({ fadeTo: function fadeTo(a, b, c, d) {
	      return this.filter(ca).css("opacity", 0).show().end().animate({ opacity: b }, a, c, d);
	    }, animate: function animate(a, b, c, d) {
	      var e = r.isEmptyObject(a),
	          f = r.speed(b, c, d),
	          g = function g() {
	        var b = hb(this, r.extend({}, a), f);(e || V.get(this, "finish")) && b.stop(!0);
	      };return g.finish = g, e || f.queue === !1 ? this.each(g) : this.queue(f.queue, g);
	    }, stop: function stop(a, b, c) {
	      var d = function d(a) {
	        var b = a.stop;delete a.stop, b(c);
	      };return "string" != typeof a && (c = b, b = a, a = void 0), b && a !== !1 && this.queue(a || "fx", []), this.each(function () {
	        var b = !0,
	            e = null != a && a + "queueHooks",
	            f = r.timers,
	            g = V.get(this);if (e) g[e] && g[e].stop && d(g[e]);else for (e in g) {
	          g[e] && g[e].stop && ab.test(e) && d(g[e]);
	        }for (e = f.length; e--;) {
	          f[e].elem !== this || null != a && f[e].queue !== a || (f[e].anim.stop(c), b = !1, f.splice(e, 1));
	        }!b && c || r.dequeue(this, a);
	      });
	    }, finish: function finish(a) {
	      return a !== !1 && (a = a || "fx"), this.each(function () {
	        var b,
	            c = V.get(this),
	            d = c[a + "queue"],
	            e = c[a + "queueHooks"],
	            f = r.timers,
	            g = d ? d.length : 0;for (c.finish = !0, r.queue(this, a, []), e && e.stop && e.stop.call(this, !0), b = f.length; b--;) {
	          f[b].elem === this && f[b].queue === a && (f[b].anim.stop(!0), f.splice(b, 1));
	        }for (b = 0; b < g; b++) {
	          d[b] && d[b].finish && d[b].finish.call(this);
	        }delete c.finish;
	      });
	    } }), r.each(["toggle", "show", "hide"], function (a, b) {
	    var c = r.fn[b];r.fn[b] = function (a, d, e) {
	      return null == a || "boolean" == typeof a ? c.apply(this, arguments) : this.animate(db(b, !0), a, d, e);
	    };
	  }), r.each({ slideDown: db("show"), slideUp: db("hide"), slideToggle: db("toggle"), fadeIn: { opacity: "show" }, fadeOut: { opacity: "hide" }, fadeToggle: { opacity: "toggle" } }, function (a, b) {
	    r.fn[a] = function (a, c, d) {
	      return this.animate(b, a, c, d);
	    };
	  }), r.timers = [], r.fx.tick = function () {
	    var a,
	        b = 0,
	        c = r.timers;for (Za = r.now(); b < c.length; b++) {
	      a = c[b], a() || c[b] !== a || c.splice(b--, 1);
	    }c.length || r.fx.stop(), Za = void 0;
	  }, r.fx.timer = function (a) {
	    r.timers.push(a), a() ? r.fx.start() : r.timers.pop();
	  }, r.fx.interval = 13, r.fx.start = function () {
	    $a || ($a = a.requestAnimationFrame ? a.requestAnimationFrame(bb) : a.setInterval(r.fx.tick, r.fx.interval));
	  }, r.fx.stop = function () {
	    a.cancelAnimationFrame ? a.cancelAnimationFrame($a) : a.clearInterval($a), $a = null;
	  }, r.fx.speeds = { slow: 600, fast: 200, _default: 400 }, r.fn.delay = function (b, c) {
	    return b = r.fx ? r.fx.speeds[b] || b : b, c = c || "fx", this.queue(c, function (c, d) {
	      var e = a.setTimeout(c, b);d.stop = function () {
	        a.clearTimeout(e);
	      };
	    });
	  }, function () {
	    var a = d.createElement("input"),
	        b = d.createElement("select"),
	        c = b.appendChild(d.createElement("option"));a.type = "checkbox", o.checkOn = "" !== a.value, o.optSelected = c.selected, a = d.createElement("input"), a.value = "t", a.type = "radio", o.radioValue = "t" === a.value;
	  }();var ib,
	      jb = r.expr.attrHandle;r.fn.extend({ attr: function attr(a, b) {
	      return S(this, r.attr, a, b, arguments.length > 1);
	    }, removeAttr: function removeAttr(a) {
	      return this.each(function () {
	        r.removeAttr(this, a);
	      });
	    } }), r.extend({ attr: function attr(a, b, c) {
	      var d,
	          e,
	          f = a.nodeType;if (3 !== f && 8 !== f && 2 !== f) return "undefined" == typeof a.getAttribute ? r.prop(a, b, c) : (1 === f && r.isXMLDoc(a) || (e = r.attrHooks[b.toLowerCase()] || (r.expr.match.bool.test(b) ? ib : void 0)), void 0 !== c ? null === c ? void r.removeAttr(a, b) : e && "set" in e && void 0 !== (d = e.set(a, c, b)) ? d : (a.setAttribute(b, c + ""), c) : e && "get" in e && null !== (d = e.get(a, b)) ? d : (d = r.find.attr(a, b), null == d ? void 0 : d));
	    }, attrHooks: { type: { set: function set(a, b) {
	          if (!o.radioValue && "radio" === b && r.nodeName(a, "input")) {
	            var c = a.value;return a.setAttribute("type", b), c && (a.value = c), b;
	          }
	        } } }, removeAttr: function removeAttr(a, b) {
	      var c,
	          d = 0,
	          e = b && b.match(K);if (e && 1 === a.nodeType) while (c = e[d++]) {
	        a.removeAttribute(c);
	      }
	    } }), ib = { set: function set(a, b, c) {
	      return b === !1 ? r.removeAttr(a, c) : a.setAttribute(c, c), c;
	    } }, r.each(r.expr.match.bool.source.match(/\w+/g), function (a, b) {
	    var c = jb[b] || r.find.attr;jb[b] = function (a, b, d) {
	      var e,
	          f,
	          g = b.toLowerCase();return d || (f = jb[g], jb[g] = e, e = null != c(a, b, d) ? g : null, jb[g] = f), e;
	    };
	  });var kb = /^(?:input|select|textarea|button)$/i,
	      lb = /^(?:a|area)$/i;r.fn.extend({ prop: function prop(a, b) {
	      return S(this, r.prop, a, b, arguments.length > 1);
	    }, removeProp: function removeProp(a) {
	      return this.each(function () {
	        delete this[r.propFix[a] || a];
	      });
	    } }), r.extend({ prop: function prop(a, b, c) {
	      var d,
	          e,
	          f = a.nodeType;if (3 !== f && 8 !== f && 2 !== f) return 1 === f && r.isXMLDoc(a) || (b = r.propFix[b] || b, e = r.propHooks[b]), void 0 !== c ? e && "set" in e && void 0 !== (d = e.set(a, c, b)) ? d : a[b] = c : e && "get" in e && null !== (d = e.get(a, b)) ? d : a[b];
	    }, propHooks: { tabIndex: { get: function get(a) {
	          var b = r.find.attr(a, "tabindex");return b ? parseInt(b, 10) : kb.test(a.nodeName) || lb.test(a.nodeName) && a.href ? 0 : -1;
	        } } }, propFix: { "for": "htmlFor", "class": "className" } }), o.optSelected || (r.propHooks.selected = { get: function get(a) {
	      var b = a.parentNode;return b && b.parentNode && b.parentNode.selectedIndex, null;
	    }, set: function set(a) {
	      var b = a.parentNode;b && (b.selectedIndex, b.parentNode && b.parentNode.selectedIndex);
	    } }), r.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {
	    r.propFix[this.toLowerCase()] = this;
	  });function mb(a) {
	    var b = a.match(K) || [];return b.join(" ");
	  }function nb(a) {
	    return a.getAttribute && a.getAttribute("class") || "";
	  }r.fn.extend({ addClass: function addClass(a) {
	      var b,
	          c,
	          d,
	          e,
	          f,
	          g,
	          h,
	          i = 0;if (r.isFunction(a)) return this.each(function (b) {
	        r(this).addClass(a.call(this, b, nb(this)));
	      });if ("string" == typeof a && a) {
	        b = a.match(K) || [];while (c = this[i++]) {
	          if (e = nb(c), d = 1 === c.nodeType && " " + mb(e) + " ") {
	            g = 0;while (f = b[g++]) {
	              d.indexOf(" " + f + " ") < 0 && (d += f + " ");
	            }h = mb(d), e !== h && c.setAttribute("class", h);
	          }
	        }
	      }return this;
	    }, removeClass: function removeClass(a) {
	      var b,
	          c,
	          d,
	          e,
	          f,
	          g,
	          h,
	          i = 0;if (r.isFunction(a)) return this.each(function (b) {
	        r(this).removeClass(a.call(this, b, nb(this)));
	      });if (!arguments.length) return this.attr("class", "");if ("string" == typeof a && a) {
	        b = a.match(K) || [];while (c = this[i++]) {
	          if (e = nb(c), d = 1 === c.nodeType && " " + mb(e) + " ") {
	            g = 0;while (f = b[g++]) {
	              while (d.indexOf(" " + f + " ") > -1) {
	                d = d.replace(" " + f + " ", " ");
	              }
	            }h = mb(d), e !== h && c.setAttribute("class", h);
	          }
	        }
	      }return this;
	    }, toggleClass: function toggleClass(a, b) {
	      var c = typeof a === "undefined" ? "undefined" : _typeof(a);return "boolean" == typeof b && "string" === c ? b ? this.addClass(a) : this.removeClass(a) : r.isFunction(a) ? this.each(function (c) {
	        r(this).toggleClass(a.call(this, c, nb(this), b), b);
	      }) : this.each(function () {
	        var b, d, e, f;if ("string" === c) {
	          d = 0, e = r(this), f = a.match(K) || [];while (b = f[d++]) {
	            e.hasClass(b) ? e.removeClass(b) : e.addClass(b);
	          }
	        } else void 0 !== a && "boolean" !== c || (b = nb(this), b && V.set(this, "__className__", b), this.setAttribute && this.setAttribute("class", b || a === !1 ? "" : V.get(this, "__className__") || ""));
	      });
	    }, hasClass: function hasClass(a) {
	      var b,
	          c,
	          d = 0;b = " " + a + " ";while (c = this[d++]) {
	        if (1 === c.nodeType && (" " + mb(nb(c)) + " ").indexOf(b) > -1) return !0;
	      }return !1;
	    } });var ob = /\r/g;r.fn.extend({ val: function val(a) {
	      var b,
	          c,
	          d,
	          e = this[0];{
	        if (arguments.length) return d = r.isFunction(a), this.each(function (c) {
	          var e;1 === this.nodeType && (e = d ? a.call(this, c, r(this).val()) : a, null == e ? e = "" : "number" == typeof e ? e += "" : r.isArray(e) && (e = r.map(e, function (a) {
	            return null == a ? "" : a + "";
	          })), b = r.valHooks[this.type] || r.valHooks[this.nodeName.toLowerCase()], b && "set" in b && void 0 !== b.set(this, e, "value") || (this.value = e));
	        });if (e) return b = r.valHooks[e.type] || r.valHooks[e.nodeName.toLowerCase()], b && "get" in b && void 0 !== (c = b.get(e, "value")) ? c : (c = e.value, "string" == typeof c ? c.replace(ob, "") : null == c ? "" : c);
	      }
	    } }), r.extend({ valHooks: { option: { get: function get(a) {
	          var b = r.find.attr(a, "value");return null != b ? b : mb(r.text(a));
	        } }, select: { get: function get(a) {
	          var b,
	              c,
	              d,
	              e = a.options,
	              f = a.selectedIndex,
	              g = "select-one" === a.type,
	              h = g ? null : [],
	              i = g ? f + 1 : e.length;for (d = f < 0 ? i : g ? f : 0; d < i; d++) {
	            if (c = e[d], (c.selected || d === f) && !c.disabled && (!c.parentNode.disabled || !r.nodeName(c.parentNode, "optgroup"))) {
	              if (b = r(c).val(), g) return b;h.push(b);
	            }
	          }return h;
	        }, set: function set(a, b) {
	          var c,
	              d,
	              e = a.options,
	              f = r.makeArray(b),
	              g = e.length;while (g--) {
	            d = e[g], (d.selected = r.inArray(r.valHooks.option.get(d), f) > -1) && (c = !0);
	          }return c || (a.selectedIndex = -1), f;
	        } } } }), r.each(["radio", "checkbox"], function () {
	    r.valHooks[this] = { set: function set(a, b) {
	        if (r.isArray(b)) return a.checked = r.inArray(r(a).val(), b) > -1;
	      } }, o.checkOn || (r.valHooks[this].get = function (a) {
	      return null === a.getAttribute("value") ? "on" : a.value;
	    });
	  });var pb = /^(?:focusinfocus|focusoutblur)$/;r.extend(r.event, { trigger: function trigger(b, c, e, f) {
	      var g,
	          h,
	          i,
	          j,
	          k,
	          m,
	          n,
	          o = [e || d],
	          p = l.call(b, "type") ? b.type : b,
	          q = l.call(b, "namespace") ? b.namespace.split(".") : [];if (h = i = e = e || d, 3 !== e.nodeType && 8 !== e.nodeType && !pb.test(p + r.event.triggered) && (p.indexOf(".") > -1 && (q = p.split("."), p = q.shift(), q.sort()), k = p.indexOf(":") < 0 && "on" + p, b = b[r.expando] ? b : new r.Event(p, "object" == (typeof b === "undefined" ? "undefined" : _typeof(b)) && b), b.isTrigger = f ? 2 : 3, b.namespace = q.join("."), b.rnamespace = b.namespace ? new RegExp("(^|\\.)" + q.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, b.result = void 0, b.target || (b.target = e), c = null == c ? [b] : r.makeArray(c, [b]), n = r.event.special[p] || {}, f || !n.trigger || n.trigger.apply(e, c) !== !1)) {
	        if (!f && !n.noBubble && !r.isWindow(e)) {
	          for (j = n.delegateType || p, pb.test(j + p) || (h = h.parentNode); h; h = h.parentNode) {
	            o.push(h), i = h;
	          }i === (e.ownerDocument || d) && o.push(i.defaultView || i.parentWindow || a);
	        }g = 0;while ((h = o[g++]) && !b.isPropagationStopped()) {
	          b.type = g > 1 ? j : n.bindType || p, m = (V.get(h, "events") || {})[b.type] && V.get(h, "handle"), m && m.apply(h, c), m = k && h[k], m && m.apply && T(h) && (b.result = m.apply(h, c), b.result === !1 && b.preventDefault());
	        }return b.type = p, f || b.isDefaultPrevented() || n._default && n._default.apply(o.pop(), c) !== !1 || !T(e) || k && r.isFunction(e[p]) && !r.isWindow(e) && (i = e[k], i && (e[k] = null), r.event.triggered = p, e[p](), r.event.triggered = void 0, i && (e[k] = i)), b.result;
	      }
	    }, simulate: function simulate(a, b, c) {
	      var d = r.extend(new r.Event(), c, { type: a, isSimulated: !0 });r.event.trigger(d, null, b);
	    } }), r.fn.extend({ trigger: function trigger(a, b) {
	      return this.each(function () {
	        r.event.trigger(a, b, this);
	      });
	    }, triggerHandler: function triggerHandler(a, b) {
	      var c = this[0];if (c) return r.event.trigger(a, b, c, !0);
	    } }), r.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function (a, b) {
	    r.fn[b] = function (a, c) {
	      return arguments.length > 0 ? this.on(b, null, a, c) : this.trigger(b);
	    };
	  }), r.fn.extend({ hover: function hover(a, b) {
	      return this.mouseenter(a).mouseleave(b || a);
	    } }), o.focusin = "onfocusin" in a, o.focusin || r.each({ focus: "focusin", blur: "focusout" }, function (a, b) {
	    var c = function c(a) {
	      r.event.simulate(b, a.target, r.event.fix(a));
	    };r.event.special[b] = { setup: function setup() {
	        var d = this.ownerDocument || this,
	            e = V.access(d, b);e || d.addEventListener(a, c, !0), V.access(d, b, (e || 0) + 1);
	      }, teardown: function teardown() {
	        var d = this.ownerDocument || this,
	            e = V.access(d, b) - 1;e ? V.access(d, b, e) : (d.removeEventListener(a, c, !0), V.remove(d, b));
	      } };
	  });var qb = a.location,
	      rb = r.now(),
	      sb = /\?/;r.parseXML = function (b) {
	    var c;if (!b || "string" != typeof b) return null;try {
	      c = new a.DOMParser().parseFromString(b, "text/xml");
	    } catch (d) {
	      c = void 0;
	    }return c && !c.getElementsByTagName("parsererror").length || r.error("Invalid XML: " + b), c;
	  };var tb = /\[\]$/,
	      ub = /\r?\n/g,
	      vb = /^(?:submit|button|image|reset|file)$/i,
	      wb = /^(?:input|select|textarea|keygen)/i;function xb(a, b, c, d) {
	    var e;if (r.isArray(b)) r.each(b, function (b, e) {
	      c || tb.test(a) ? d(a, e) : xb(a + "[" + ("object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) && null != e ? b : "") + "]", e, c, d);
	    });else if (c || "object" !== r.type(b)) d(a, b);else for (e in b) {
	      xb(a + "[" + e + "]", b[e], c, d);
	    }
	  }r.param = function (a, b) {
	    var c,
	        d = [],
	        e = function e(a, b) {
	      var c = r.isFunction(b) ? b() : b;d[d.length] = encodeURIComponent(a) + "=" + encodeURIComponent(null == c ? "" : c);
	    };if (r.isArray(a) || a.jquery && !r.isPlainObject(a)) r.each(a, function () {
	      e(this.name, this.value);
	    });else for (c in a) {
	      xb(c, a[c], b, e);
	    }return d.join("&");
	  }, r.fn.extend({ serialize: function serialize() {
	      return r.param(this.serializeArray());
	    }, serializeArray: function serializeArray() {
	      return this.map(function () {
	        var a = r.prop(this, "elements");return a ? r.makeArray(a) : this;
	      }).filter(function () {
	        var a = this.type;return this.name && !r(this).is(":disabled") && wb.test(this.nodeName) && !vb.test(a) && (this.checked || !ia.test(a));
	      }).map(function (a, b) {
	        var c = r(this).val();return null == c ? null : r.isArray(c) ? r.map(c, function (a) {
	          return { name: b.name, value: a.replace(ub, "\r\n") };
	        }) : { name: b.name, value: c.replace(ub, "\r\n") };
	      }).get();
	    } });var yb = /%20/g,
	      zb = /#.*$/,
	      Ab = /([?&])_=[^&]*/,
	      Bb = /^(.*?):[ \t]*([^\r\n]*)$/gm,
	      Cb = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	      Db = /^(?:GET|HEAD)$/,
	      Eb = /^\/\//,
	      Fb = {},
	      Gb = {},
	      Hb = "*/".concat("*"),
	      Ib = d.createElement("a");Ib.href = qb.href;function Jb(a) {
	    return function (b, c) {
	      "string" != typeof b && (c = b, b = "*");var d,
	          e = 0,
	          f = b.toLowerCase().match(K) || [];if (r.isFunction(c)) while (d = f[e++]) {
	        "+" === d[0] ? (d = d.slice(1) || "*", (a[d] = a[d] || []).unshift(c)) : (a[d] = a[d] || []).push(c);
	      }
	    };
	  }function Kb(a, b, c, d) {
	    var e = {},
	        f = a === Gb;function g(h) {
	      var i;return e[h] = !0, r.each(a[h] || [], function (a, h) {
	        var j = h(b, c, d);return "string" != typeof j || f || e[j] ? f ? !(i = j) : void 0 : (b.dataTypes.unshift(j), g(j), !1);
	      }), i;
	    }return g(b.dataTypes[0]) || !e["*"] && g("*");
	  }function Lb(a, b) {
	    var c,
	        d,
	        e = r.ajaxSettings.flatOptions || {};for (c in b) {
	      void 0 !== b[c] && ((e[c] ? a : d || (d = {}))[c] = b[c]);
	    }return d && r.extend(!0, a, d), a;
	  }function Mb(a, b, c) {
	    var d,
	        e,
	        f,
	        g,
	        h = a.contents,
	        i = a.dataTypes;while ("*" === i[0]) {
	      i.shift(), void 0 === d && (d = a.mimeType || b.getResponseHeader("Content-Type"));
	    }if (d) for (e in h) {
	      if (h[e] && h[e].test(d)) {
	        i.unshift(e);break;
	      }
	    }if (i[0] in c) f = i[0];else {
	      for (e in c) {
	        if (!i[0] || a.converters[e + " " + i[0]]) {
	          f = e;break;
	        }g || (g = e);
	      }f = f || g;
	    }if (f) return f !== i[0] && i.unshift(f), c[f];
	  }function Nb(a, b, c, d) {
	    var e,
	        f,
	        g,
	        h,
	        i,
	        j = {},
	        k = a.dataTypes.slice();if (k[1]) for (g in a.converters) {
	      j[g.toLowerCase()] = a.converters[g];
	    }f = k.shift();while (f) {
	      if (a.responseFields[f] && (c[a.responseFields[f]] = b), !i && d && a.dataFilter && (b = a.dataFilter(b, a.dataType)), i = f, f = k.shift()) if ("*" === f) f = i;else if ("*" !== i && i !== f) {
	        if (g = j[i + " " + f] || j["* " + f], !g) for (e in j) {
	          if (h = e.split(" "), h[1] === f && (g = j[i + " " + h[0]] || j["* " + h[0]])) {
	            g === !0 ? g = j[e] : j[e] !== !0 && (f = h[0], k.unshift(h[1]));break;
	          }
	        }if (g !== !0) if (g && a["throws"]) b = g(b);else try {
	          b = g(b);
	        } catch (l) {
	          return { state: "parsererror", error: g ? l : "No conversion from " + i + " to " + f };
	        }
	      }
	    }return { state: "success", data: b };
	  }r.extend({ active: 0, lastModified: {}, etag: {}, ajaxSettings: { url: qb.href, type: "GET", isLocal: Cb.test(qb.protocol), global: !0, processData: !0, async: !0, contentType: "application/x-www-form-urlencoded; charset=UTF-8", accepts: { "*": Hb, text: "text/plain", html: "text/html", xml: "application/xml, text/xml", json: "application/json, text/javascript" }, contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ }, responseFields: { xml: "responseXML", text: "responseText", json: "responseJSON" }, converters: { "* text": String, "text html": !0, "text json": JSON.parse, "text xml": r.parseXML }, flatOptions: { url: !0, context: !0 } }, ajaxSetup: function ajaxSetup(a, b) {
	      return b ? Lb(Lb(a, r.ajaxSettings), b) : Lb(r.ajaxSettings, a);
	    }, ajaxPrefilter: Jb(Fb), ajaxTransport: Jb(Gb), ajax: function ajax(b, c) {
	      "object" == (typeof b === "undefined" ? "undefined" : _typeof(b)) && (c = b, b = void 0), c = c || {};var e,
	          f,
	          g,
	          h,
	          i,
	          j,
	          k,
	          l,
	          m,
	          n,
	          o = r.ajaxSetup({}, c),
	          p = o.context || o,
	          q = o.context && (p.nodeType || p.jquery) ? r(p) : r.event,
	          s = r.Deferred(),
	          t = r.Callbacks("once memory"),
	          u = o.statusCode || {},
	          v = {},
	          w = {},
	          x = "canceled",
	          y = { readyState: 0, getResponseHeader: function getResponseHeader(a) {
	          var b;if (k) {
	            if (!h) {
	              h = {};while (b = Bb.exec(g)) {
	                h[b[1].toLowerCase()] = b[2];
	              }
	            }b = h[a.toLowerCase()];
	          }return null == b ? null : b;
	        }, getAllResponseHeaders: function getAllResponseHeaders() {
	          return k ? g : null;
	        }, setRequestHeader: function setRequestHeader(a, b) {
	          return null == k && (a = w[a.toLowerCase()] = w[a.toLowerCase()] || a, v[a] = b), this;
	        }, overrideMimeType: function overrideMimeType(a) {
	          return null == k && (o.mimeType = a), this;
	        }, statusCode: function statusCode(a) {
	          var b;if (a) if (k) y.always(a[y.status]);else for (b in a) {
	            u[b] = [u[b], a[b]];
	          }return this;
	        }, abort: function abort(a) {
	          var b = a || x;return e && e.abort(b), A(0, b), this;
	        } };if (s.promise(y), o.url = ((b || o.url || qb.href) + "").replace(Eb, qb.protocol + "//"), o.type = c.method || c.type || o.method || o.type, o.dataTypes = (o.dataType || "*").toLowerCase().match(K) || [""], null == o.crossDomain) {
	        j = d.createElement("a");try {
	          j.href = o.url, j.href = j.href, o.crossDomain = Ib.protocol + "//" + Ib.host != j.protocol + "//" + j.host;
	        } catch (z) {
	          o.crossDomain = !0;
	        }
	      }if (o.data && o.processData && "string" != typeof o.data && (o.data = r.param(o.data, o.traditional)), Kb(Fb, o, c, y), k) return y;l = r.event && o.global, l && 0 === r.active++ && r.event.trigger("ajaxStart"), o.type = o.type.toUpperCase(), o.hasContent = !Db.test(o.type), f = o.url.replace(zb, ""), o.hasContent ? o.data && o.processData && 0 === (o.contentType || "").indexOf("application/x-www-form-urlencoded") && (o.data = o.data.replace(yb, "+")) : (n = o.url.slice(f.length), o.data && (f += (sb.test(f) ? "&" : "?") + o.data, delete o.data), o.cache === !1 && (f = f.replace(Ab, "$1"), n = (sb.test(f) ? "&" : "?") + "_=" + rb++ + n), o.url = f + n), o.ifModified && (r.lastModified[f] && y.setRequestHeader("If-Modified-Since", r.lastModified[f]), r.etag[f] && y.setRequestHeader("If-None-Match", r.etag[f])), (o.data && o.hasContent && o.contentType !== !1 || c.contentType) && y.setRequestHeader("Content-Type", o.contentType), y.setRequestHeader("Accept", o.dataTypes[0] && o.accepts[o.dataTypes[0]] ? o.accepts[o.dataTypes[0]] + ("*" !== o.dataTypes[0] ? ", " + Hb + "; q=0.01" : "") : o.accepts["*"]);for (m in o.headers) {
	        y.setRequestHeader(m, o.headers[m]);
	      }if (o.beforeSend && (o.beforeSend.call(p, y, o) === !1 || k)) return y.abort();if (x = "abort", t.add(o.complete), y.done(o.success), y.fail(o.error), e = Kb(Gb, o, c, y)) {
	        if (y.readyState = 1, l && q.trigger("ajaxSend", [y, o]), k) return y;o.async && o.timeout > 0 && (i = a.setTimeout(function () {
	          y.abort("timeout");
	        }, o.timeout));try {
	          k = !1, e.send(v, A);
	        } catch (z) {
	          if (k) throw z;A(-1, z);
	        }
	      } else A(-1, "No Transport");function A(b, c, d, h) {
	        var j,
	            m,
	            n,
	            v,
	            w,
	            x = c;k || (k = !0, i && a.clearTimeout(i), e = void 0, g = h || "", y.readyState = b > 0 ? 4 : 0, j = b >= 200 && b < 300 || 304 === b, d && (v = Mb(o, y, d)), v = Nb(o, v, y, j), j ? (o.ifModified && (w = y.getResponseHeader("Last-Modified"), w && (r.lastModified[f] = w), w = y.getResponseHeader("etag"), w && (r.etag[f] = w)), 204 === b || "HEAD" === o.type ? x = "nocontent" : 304 === b ? x = "notmodified" : (x = v.state, m = v.data, n = v.error, j = !n)) : (n = x, !b && x || (x = "error", b < 0 && (b = 0))), y.status = b, y.statusText = (c || x) + "", j ? s.resolveWith(p, [m, x, y]) : s.rejectWith(p, [y, x, n]), y.statusCode(u), u = void 0, l && q.trigger(j ? "ajaxSuccess" : "ajaxError", [y, o, j ? m : n]), t.fireWith(p, [y, x]), l && (q.trigger("ajaxComplete", [y, o]), --r.active || r.event.trigger("ajaxStop")));
	      }return y;
	    }, getJSON: function getJSON(a, b, c) {
	      return r.get(a, b, c, "json");
	    }, getScript: function getScript(a, b) {
	      return r.get(a, void 0, b, "script");
	    } }), r.each(["get", "post"], function (a, b) {
	    r[b] = function (a, c, d, e) {
	      return r.isFunction(c) && (e = e || d, d = c, c = void 0), r.ajax(r.extend({ url: a, type: b, dataType: e, data: c, success: d }, r.isPlainObject(a) && a));
	    };
	  }), r._evalUrl = function (a) {
	    return r.ajax({ url: a, type: "GET", dataType: "script", cache: !0, async: !1, global: !1, "throws": !0 });
	  }, r.fn.extend({ wrapAll: function wrapAll(a) {
	      var b;return this[0] && (r.isFunction(a) && (a = a.call(this[0])), b = r(a, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && b.insertBefore(this[0]), b.map(function () {
	        var a = this;while (a.firstElementChild) {
	          a = a.firstElementChild;
	        }return a;
	      }).append(this)), this;
	    }, wrapInner: function wrapInner(a) {
	      return r.isFunction(a) ? this.each(function (b) {
	        r(this).wrapInner(a.call(this, b));
	      }) : this.each(function () {
	        var b = r(this),
	            c = b.contents();c.length ? c.wrapAll(a) : b.append(a);
	      });
	    }, wrap: function wrap(a) {
	      var b = r.isFunction(a);return this.each(function (c) {
	        r(this).wrapAll(b ? a.call(this, c) : a);
	      });
	    }, unwrap: function unwrap(a) {
	      return this.parent(a).not("body").each(function () {
	        r(this).replaceWith(this.childNodes);
	      }), this;
	    } }), r.expr.pseudos.hidden = function (a) {
	    return !r.expr.pseudos.visible(a);
	  }, r.expr.pseudos.visible = function (a) {
	    return !!(a.offsetWidth || a.offsetHeight || a.getClientRects().length);
	  }, r.ajaxSettings.xhr = function () {
	    try {
	      return new a.XMLHttpRequest();
	    } catch (b) {}
	  };var Ob = { 0: 200, 1223: 204 },
	      Pb = r.ajaxSettings.xhr();o.cors = !!Pb && "withCredentials" in Pb, o.ajax = Pb = !!Pb, r.ajaxTransport(function (b) {
	    var _c, d;if (o.cors || Pb && !b.crossDomain) return { send: function send(e, f) {
	        var g,
	            h = b.xhr();if (h.open(b.type, b.url, b.async, b.username, b.password), b.xhrFields) for (g in b.xhrFields) {
	          h[g] = b.xhrFields[g];
	        }b.mimeType && h.overrideMimeType && h.overrideMimeType(b.mimeType), b.crossDomain || e["X-Requested-With"] || (e["X-Requested-With"] = "XMLHttpRequest");for (g in e) {
	          h.setRequestHeader(g, e[g]);
	        }_c = function c(a) {
	          return function () {
	            _c && (_c = d = h.onload = h.onerror = h.onabort = h.onreadystatechange = null, "abort" === a ? h.abort() : "error" === a ? "number" != typeof h.status ? f(0, "error") : f(h.status, h.statusText) : f(Ob[h.status] || h.status, h.statusText, "text" !== (h.responseType || "text") || "string" != typeof h.responseText ? { binary: h.response } : { text: h.responseText }, h.getAllResponseHeaders()));
	          };
	        }, h.onload = _c(), d = h.onerror = _c("error"), void 0 !== h.onabort ? h.onabort = d : h.onreadystatechange = function () {
	          4 === h.readyState && a.setTimeout(function () {
	            _c && d();
	          });
	        }, _c = _c("abort");try {
	          h.send(b.hasContent && b.data || null);
	        } catch (i) {
	          if (_c) throw i;
	        }
	      }, abort: function abort() {
	        _c && _c();
	      } };
	  }), r.ajaxPrefilter(function (a) {
	    a.crossDomain && (a.contents.script = !1);
	  }), r.ajaxSetup({ accepts: { script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript" }, contents: { script: /\b(?:java|ecma)script\b/ }, converters: { "text script": function textScript(a) {
	        return r.globalEval(a), a;
	      } } }), r.ajaxPrefilter("script", function (a) {
	    void 0 === a.cache && (a.cache = !1), a.crossDomain && (a.type = "GET");
	  }), r.ajaxTransport("script", function (a) {
	    if (a.crossDomain) {
	      var b, _c2;return { send: function send(e, f) {
	          b = r("<script>").prop({ charset: a.scriptCharset, src: a.url }).on("load error", _c2 = function c(a) {
	            b.remove(), _c2 = null, a && f("error" === a.type ? 404 : 200, a.type);
	          }), d.head.appendChild(b[0]);
	        }, abort: function abort() {
	          _c2 && _c2();
	        } };
	    }
	  });var Qb = [],
	      Rb = /(=)\?(?=&|$)|\?\?/;r.ajaxSetup({ jsonp: "callback", jsonpCallback: function jsonpCallback() {
	      var a = Qb.pop() || r.expando + "_" + rb++;return this[a] = !0, a;
	    } }), r.ajaxPrefilter("json jsonp", function (b, c, d) {
	    var e,
	        f,
	        g,
	        h = b.jsonp !== !1 && (Rb.test(b.url) ? "url" : "string" == typeof b.data && 0 === (b.contentType || "").indexOf("application/x-www-form-urlencoded") && Rb.test(b.data) && "data");if (h || "jsonp" === b.dataTypes[0]) return e = b.jsonpCallback = r.isFunction(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback, h ? b[h] = b[h].replace(Rb, "$1" + e) : b.jsonp !== !1 && (b.url += (sb.test(b.url) ? "&" : "?") + b.jsonp + "=" + e), b.converters["script json"] = function () {
	      return g || r.error(e + " was not called"), g[0];
	    }, b.dataTypes[0] = "json", f = a[e], a[e] = function () {
	      g = arguments;
	    }, d.always(function () {
	      void 0 === f ? r(a).removeProp(e) : a[e] = f, b[e] && (b.jsonpCallback = c.jsonpCallback, Qb.push(e)), g && r.isFunction(f) && f(g[0]), g = f = void 0;
	    }), "script";
	  }), o.createHTMLDocument = function () {
	    var a = d.implementation.createHTMLDocument("").body;return a.innerHTML = "<form></form><form></form>", 2 === a.childNodes.length;
	  }(), r.parseHTML = function (a, b, c) {
	    if ("string" != typeof a) return [];"boolean" == typeof b && (c = b, b = !1);var e, f, g;return b || (o.createHTMLDocument ? (b = d.implementation.createHTMLDocument(""), e = b.createElement("base"), e.href = d.location.href, b.head.appendChild(e)) : b = d), f = B.exec(a), g = !c && [], f ? [b.createElement(f[1])] : (f = pa([a], b, g), g && g.length && r(g).remove(), r.merge([], f.childNodes));
	  }, r.fn.load = function (a, b, c) {
	    var d,
	        e,
	        f,
	        g = this,
	        h = a.indexOf(" ");return h > -1 && (d = mb(a.slice(h)), a = a.slice(0, h)), r.isFunction(b) ? (c = b, b = void 0) : b && "object" == (typeof b === "undefined" ? "undefined" : _typeof(b)) && (e = "POST"), g.length > 0 && r.ajax({ url: a, type: e || "GET", dataType: "html", data: b }).done(function (a) {
	      f = arguments, g.html(d ? r("<div>").append(r.parseHTML(a)).find(d) : a);
	    }).always(c && function (a, b) {
	      g.each(function () {
	        c.apply(this, f || [a.responseText, b, a]);
	      });
	    }), this;
	  }, r.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (a, b) {
	    r.fn[b] = function (a) {
	      return this.on(b, a);
	    };
	  }), r.expr.pseudos.animated = function (a) {
	    return r.grep(r.timers, function (b) {
	      return a === b.elem;
	    }).length;
	  };function Sb(a) {
	    return r.isWindow(a) ? a : 9 === a.nodeType && a.defaultView;
	  }r.offset = { setOffset: function setOffset(a, b, c) {
	      var d,
	          e,
	          f,
	          g,
	          h,
	          i,
	          j,
	          k = r.css(a, "position"),
	          l = r(a),
	          m = {};"static" === k && (a.style.position = "relative"), h = l.offset(), f = r.css(a, "top"), i = r.css(a, "left"), j = ("absolute" === k || "fixed" === k) && (f + i).indexOf("auto") > -1, j ? (d = l.position(), g = d.top, e = d.left) : (g = parseFloat(f) || 0, e = parseFloat(i) || 0), r.isFunction(b) && (b = b.call(a, c, r.extend({}, h))), null != b.top && (m.top = b.top - h.top + g), null != b.left && (m.left = b.left - h.left + e), "using" in b ? b.using.call(a, m) : l.css(m);
	    } }, r.fn.extend({ offset: function offset(a) {
	      if (arguments.length) return void 0 === a ? this : this.each(function (b) {
	        r.offset.setOffset(this, a, b);
	      });var b,
	          c,
	          d,
	          e,
	          f = this[0];if (f) return f.getClientRects().length ? (d = f.getBoundingClientRect(), d.width || d.height ? (e = f.ownerDocument, c = Sb(e), b = e.documentElement, { top: d.top + c.pageYOffset - b.clientTop, left: d.left + c.pageXOffset - b.clientLeft }) : d) : { top: 0, left: 0 };
	    }, position: function position() {
	      if (this[0]) {
	        var a,
	            b,
	            c = this[0],
	            d = { top: 0, left: 0 };return "fixed" === r.css(c, "position") ? b = c.getBoundingClientRect() : (a = this.offsetParent(), b = this.offset(), r.nodeName(a[0], "html") || (d = a.offset()), d = { top: d.top + r.css(a[0], "borderTopWidth", !0), left: d.left + r.css(a[0], "borderLeftWidth", !0) }), { top: b.top - d.top - r.css(c, "marginTop", !0), left: b.left - d.left - r.css(c, "marginLeft", !0) };
	      }
	    }, offsetParent: function offsetParent() {
	      return this.map(function () {
	        var a = this.offsetParent;while (a && "static" === r.css(a, "position")) {
	          a = a.offsetParent;
	        }return a || qa;
	      });
	    } }), r.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function (a, b) {
	    var c = "pageYOffset" === b;r.fn[a] = function (d) {
	      return S(this, function (a, d, e) {
	        var f = Sb(a);return void 0 === e ? f ? f[b] : a[d] : void (f ? f.scrollTo(c ? f.pageXOffset : e, c ? e : f.pageYOffset) : a[d] = e);
	      }, a, d, arguments.length);
	    };
	  }), r.each(["top", "left"], function (a, b) {
	    r.cssHooks[b] = Oa(o.pixelPosition, function (a, c) {
	      if (c) return c = Na(a, b), La.test(c) ? r(a).position()[b] + "px" : c;
	    });
	  }), r.each({ Height: "height", Width: "width" }, function (a, b) {
	    r.each({ padding: "inner" + a, content: b, "": "outer" + a }, function (c, d) {
	      r.fn[d] = function (e, f) {
	        var g = arguments.length && (c || "boolean" != typeof e),
	            h = c || (e === !0 || f === !0 ? "margin" : "border");return S(this, function (b, c, e) {
	          var f;return r.isWindow(b) ? 0 === d.indexOf("outer") ? b["inner" + a] : b.document.documentElement["client" + a] : 9 === b.nodeType ? (f = b.documentElement, Math.max(b.body["scroll" + a], f["scroll" + a], b.body["offset" + a], f["offset" + a], f["client" + a])) : void 0 === e ? r.css(b, c, h) : r.style(b, c, e, h);
	        }, b, g ? e : void 0, g);
	      };
	    });
	  }), r.fn.extend({ bind: function bind(a, b, c) {
	      return this.on(a, null, b, c);
	    }, unbind: function unbind(a, b) {
	      return this.off(a, null, b);
	    }, delegate: function delegate(a, b, c, d) {
	      return this.on(b, a, c, d);
	    }, undelegate: function undelegate(a, b, c) {
	      return 1 === arguments.length ? this.off(a, "**") : this.off(b, a || "**", c);
	    } }), r.parseJSON = JSON.parse, "function" == "function" && __webpack_require__(6) && !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
	    return r;
	  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));var Tb = a.jQuery,
	      Ub = a.$;return r.noConflict = function (b) {
	    return a.$ === r && (a.$ = Ub), b && a.jQuery === r && (a.jQuery = Tb), r;
	  }, b || (a.jQuery = a.$ = r), r;
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))

/***/ }),
/* 5 */
/***/ (function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ }),
/* 6 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;

	/* WEBPACK VAR INJECTION */}.call(exports, {}))

/***/ }),
/* 7 */
/***/ (function(module, exports) {

	/*
	 * 作者：zhuwz
	 * 日期：2018-12-03 21:39:39.
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var math = {};
	/**
	 * Calculates the linearly interpolated value of x between a and b.
	 *
	 * @param {number} a Number
	 * @param {number} b Number
	 * @param {number} x Value to be interpolated.
	 * @return {number} Interpolated value.
	 */
	math.lerp = function (a, b, x) {
	  return a + x * (b - a);
	};
	exports.default = math;

/***/ }),
/* 8 */
/***/ (function(module, exports) {

	/*
	 * 作者：zhuwz
	 * 日期：2018-12-03 21:39:39.
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var array = {};

	/**
	 * Compare function for array sort that is safe for numbers.
	 * @param {*} a The first object to be compared.
	 * @param {*} b The second object to be compared.
	 * @return {number} A negative number, zero, or a positive number as the first
	 *     argument is less than, equal to, or greater than the second.
	 */
	array.numberSafeCompareFunction = function (a, b) {
	    return a > b ? 1 : a < b ? -1 : 0;
	};
	/**
	 * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.
	 *
	 * @param {Array.<*>} haystack Items to search through.
	 * @param {*} needle The item to look for.
	 * @param {Function=} opt_comparator Comparator function.
	 * @return {number} The index of the item if found, -1 if not.
	 */
	array.binarySearch = function (haystack, needle, opt_comparator) {
	    var mid, cmp;
	    var comparator = opt_comparator || array.numberSafeCompareFunction;
	    var low = 0;
	    var high = haystack.length;
	    var found = false;

	    while (low < high) {
	        /* Note that "(low + high) >>> 1" may overflow, and results in a typecast
	         * to double (which gives the wrong results). */
	        mid = low + (high - low >> 1);
	        cmp = +comparator(haystack[mid], needle);

	        if (cmp < 0.0) {
	            /* Too low. */
	            low = mid + 1;
	        } else {
	            /* Key found or too high */
	            high = mid;
	            found = !cmp;
	        }
	    }

	    /* Key not found. */
	    return found ? low : ~low;
	};

	/**
	 * 把第二个值添加至数组
	 * @param arr {Array} 数组
	 * @param data {Array} 添加的对象
	 */
	array.extend = function (arr, data) {
	    var i = void 0;
	    var extension = Array.isArray(data) ? data : [data];
	    var length = extension.length;
	    for (i = 0; i < length; i++) {
	        arr[arr.length] = extension[i];
	    }
	    return 0;
	};

	exports.default = array;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.WarnException = undefined;

	var _Util = __webpack_require__(10);

	var Util = _interopRequireWildcard(_Util);

	var _ExceptionMessage = __webpack_require__(14);

	var _ExceptionMessage2 = _interopRequireDefault(_ExceptionMessage);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	/*
	 * 作者：zhuwz
	 * 日期：2018-12-03 21:39:39.
	 */

	function formatMessage(value, phvList) {
	    var arr = [];
	    var j = void 0;
	    var index = void 0;
	    var i = 0;
	    while (i < value.length) {
	        if (value.charAt(i) === '{') {
	            j = value.indexOf('}', i + 1);
	            if (j === -1) {
	                i++;
	            } else {
	                index = parseInt(value.substring(i + 1, j));
	                if (!isNaN(index) && index >= 0) {
	                    var s = value.substring(0, i);
	                    if (s !== '') {
	                        arr.push(s);
	                    }
	                    arr.push(index);
	                    i = 0;
	                    value = value.substring(j + 1);
	                } else {
	                    i = j + 1;
	                }
	            }
	        } else {
	            i++;
	        }
	    }
	    if (value !== '') {
	        arr.push(value);
	    }
	    value = arr;

	    if (value.length === 1 && typeof value[0] === 'string') {
	        return value[0];
	    }

	    var str = '';
	    if (value.length === 0 && phvList) {
	        for (i = 0; i < phvList.length; i++) {
	            str += phvList[i];
	        }
	        return str;
	    }
	    for (i = 0, j = value.length; i < j; i++) {
	        if (typeof value[i] === 'string') {
	            str += value[i];
	        } else if (phvList && value[i] < phvList.length) {
	            str += phvList[value[i]];
	        }
	    }

	    return str;
	}

	function showMessage(message, type, info) {
	    var infoType = message.type;
	    message = formatMessage(message[_ExceptionMessage2.default.show_language], info);
	    return type + ':' + message;
	}

	var WarnException = exports.WarnException = function WarnException(message) {
	    var obj = void 0;

	    for (var _len = arguments.length, type = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        type[_key - 1] = arguments[_key];
	    }

	    if (type.length > 0) {
	        obj = type.shift();
	    }

	    return showMessage(message, obj, type);
	};

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.syncGetJson = exports.arrayToStr = exports.strToArray = exports.getLocation = exports.aAToa_a = exports.a_aToaA = exports.formatURLByHost = exports.formatURL = exports.formatURL2 = exports.rename = exports.formatString = exports.indexOf = exports.falseFn = exports.createGuid = exports.json2xmlAndaAToa_a = exports.json2xml = exports.xmlToJson = exports.strToXml = exports.jsonSyncPromise = exports.isColor = exports.xmlPromise = exports.filterUnit = exports.isAddUnit = exports.isArray = exports.isStrNumber = exports.isNumber = exports.isString = exports.getJsonLength = exports.toBooleanTrueOrFlse = exports.isTrueOrFalse = exports.isBoolean = exports.isObject = exports.isJson = exports.math = exports.array = exports.$ = undefined;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /*
	                                                                                                                                                                                                                                                                               * 作者：zhuwz
	                                                                                                                                                                                                                                                                               * 日期：2018-12-03 21:39:39.
	                                                                                                                                                                                                                                                                               */


	var _jquery = __webpack_require__(4);

	var _jquery2 = _interopRequireDefault(_jquery);

	var _mathUtil = __webpack_require__(11);

	var _mathUtil2 = _interopRequireDefault(_mathUtil);

	var _arrayUtil = __webpack_require__(12);

	var _arrayUtil2 = _interopRequireDefault(_arrayUtil);

	var _WarnException = __webpack_require__(9);

	var warn = _interopRequireWildcard(_WarnException);

	var _ExceptionMessage = __webpack_require__(13);

	var _ExceptionMessage2 = _interopRequireDefault(_ExceptionMessage);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var $ = exports.$ = _jquery2.default;
	var array = exports.array = _arrayUtil2.default;
	var math = exports.math = _mathUtil2.default;
	/**
	 * 判定对象是否为纯粹的json对象
	 * @param obj {Object} 被判定对象
	 * @return {boolean} 是-true 否-false
	 */
	var isJson = exports.isJson = function isJson(obj) {
	    if ($.isPlainObject(obj)) {
	        try {
	            JSON.stringify(obj);
	            return true;
	        } catch (e) {
	            return false;
	        }
	    } else {
	        return false;
	    }
	};
	/**
	 * 检查参数是否为普通对象
	 * @param obj
	 * @return {boolean}
	 */
	var isObject = exports.isObject = function isObject(obj) {
	    return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && obj !== null;
	};

	/**
	 * 检查参数是否为布尔值
	 * @param obj
	 * @return {boolean}
	 */
	var isBoolean = exports.isBoolean = function isBoolean(obj) {
	    return typeof obj === 'boolean';
	};

	/**
	 * 检查参数是否为布尔值或者为true、false的字符串
	 * @param value
	 * @return {boolean}
	 */
	var isTrueOrFalse = exports.isTrueOrFalse = function isTrueOrFalse(value) {
	    return typeof value === 'boolean' || value === 'true' || value === 'false';
	};

	/**
	 * 将传入的字符串类型的
	 * @param value
	 * @return {boolean/undefined}
	 */
	var toBooleanTrueOrFlse = exports.toBooleanTrueOrFlse = function toBooleanTrueOrFlse(value) {
	    if (value === true || value === 'true' || value === 'TRUE') {
	        return true;
	    } else if (value === false || value === 'false' || value === 'FALSE') {
	        return false;
	    }
	    return undefined;
	};

	if (!("debug" in console)) {
	    console.debug = function () {
	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	            args[_key] = arguments[_key];
	        }

	        console.log.apply(undefined, args);
	    };
	}

	var getJsonLength = exports.getJsonLength = function getJsonLength(obj) {
	    var count = 0;
	    for (var key in obj) {
	        count++;
	    }
	    return count;
	};
	/**
	 * 判定是否为字符串
	 * @param obj {Object}
	 * @return {boolean} 是-true 否-false
	 */
	var isString = exports.isString = function isString(obj) {
	    return typeof obj === 'string' && obj.constructor === String;
	};
	/**
	 * 判定是否为数值
	 * @param obj {Object}
	 * @return {number} 是-true 否-false
	 */
	var isNumber = exports.isNumber = function isNumber(obj) {
	    return typeof obj === 'number' && obj.constructor === Number;
	};

	/**
	 * 判定是否为字符串类型的数值
	 * @param obj {Object}
	 * @return {number} 是-true 否-false
	 */
	var isStrNumber = exports.isStrNumber = function isStrNumber(obj) {
	    if (isString(obj)) {
	        if (isNaN(parseFloat(obj))) return false;
	        return true;
	    }
	    return typeof obj === 'number' && obj.constructor === Number;
	};

	/**
	 * 判定是否为数组
	 * @param obj {Array<any>}
	 * @return {boolean} 是-true 否-false
	 */
	var isArray = exports.isArray = function isArray(obj) {
	    return obj instanceof Array;
	};
	/**
	 * @param {String} string
	 * @description 正则匹配带有单位px或m的属性值
	 */
	var isAddUnit = exports.isAddUnit = function isAddUnit(string) {
	    var reg = new RegExp(/^(\-|\+)?\d+(m|px)?$/);
	    return reg.test(string);
	};
	/**
	 * @param {String} string
	 * @description 正则匹配带有单位m或px的属性值并返回其中的数值
	 */
	var filterUnit = exports.filterUnit = function filterUnit(string) {
	    return isNumber(string) ? string : Number(string.match(/^(\-|\+)?\d+/)[0]);
	};
	/**
	 * ajax获取xml数据
	 */
	var xmlPromise = exports.xmlPromise = function xmlPromise(url) {
	    return $.ajax({ url: url, type: 'get', dataType: 'xml' });
	};
	/**
	 * 
	 * @param {String} string
	 * @description 判断字符串是否为十六进制颜色。例如#FFFFFFFF或者#FFFFFF  
	 */
	var isColor = exports.isColor = function isColor(string) {
	    var regColor = new RegExp('^#([0-9a-fA-F]{6}|[0-9a-fA-F]{8})$');
	    return regColor.test(string);
	};
	/**
	 * ajax获取json数据
	 */
	var jsonSyncPromise = exports.jsonSyncPromise = function jsonSyncPromise(url) {
	    return $.ajax({ url: url, type: 'get', dataType: 'json', async: false });
	};
	var strToXml = exports.strToXml = function strToXml(str) {
	    return new DOMParser().parseFromString(str, 'text/xml');
	};
	/**
	 * xml字符串转换为json
	 * @param xml {String} xml字符串
	 * @return {Json} json对象
	 */
	var xmlToJson = exports.xmlToJson = function xmlToJson(xml) {
	    // Create the return object
	    var obj = {};
	    if (xml.nodeType === 1) {
	        // element
	        // do attributes
	        if (xml.attributes.length > 0) {
	            for (var j = 0; j < xml.attributes.length; j += 1) {
	                var attribute = xml.attributes.item(j);
	                obj[attribute.nodeName] = attribute.nodeValue;
	            }
	        }
	    } else if (xml.nodeType === 3) {
	        // text
	        obj = xml.nodeValue; //--钱晶
	    }
	    if (xml.hasChildNodes()) {
	        for (var i = 0; i < xml.childNodes.length; i += 1) {
	            var item = xml.childNodes.item(i);
	            var nodeName = item.nodeName;
	            if (typeof obj[nodeName] === 'undefined') {
	                var value = null;
	                if (nodeName.toLowerCase() === '#cdata-section') {
	                    value = CDATAtoSTR(xml.innerHTML);
	                    nodeName = 'value';
	                } else {
	                    value = xmlToJson(item);
	                }

	                if (!(nodeName === '#text' && value.replace(/^\s+/g, '') === '') && nodeName !== '#comment') {
	                    // 去除注解
	                    if (nodeName === '#text') {
	                        obj = value;
	                    } else {
	                        obj[nodeName] = value;
	                    }
	                }
	            } else {
	                if (typeof obj[nodeName].length === 'undefined') {
	                    var old = obj[nodeName];
	                    obj[nodeName] = [];
	                    obj[nodeName].push(old);
	                }
	                obj[nodeName].push(xmlToJson(item));
	            }
	        }
	    }
	    return obj;
	};
	/**
	 * json转xml字符串
	 */
	var json2xml = exports.json2xml = function json2xml(json, tag) {
	    var xml = '';
	    if (json instanceof Array) {
	        var _iteratorNormalCompletion = true;
	        var _didIteratorError = false;
	        var _iteratorError = undefined;

	        try {
	            for (var _iterator = json[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	                var v = _step.value;
	                xml += json2xml(v, tag);
	            }
	        } catch (err) {
	            _didIteratorError = true;
	            _iteratorError = err;
	        } finally {
	            try {
	                if (!_iteratorNormalCompletion && _iterator.return) {
	                    _iterator.return();
	                }
	            } finally {
	                if (_didIteratorError) {
	                    throw _iteratorError;
	                }
	            }
	        }
	    } else if (json instanceof Object) {
	        if (tag) xml += '<' + tag + '>';
	        for (var k in json) {
	            xml += json2xml(json[k], k);
	        }if (tag) xml += '</' + tag + '>';
	    } else {
	        xml += '<' + tag + '>' + json + '</' + tag + '>';
	    }
	    return xml;
	};

	var json2xmlAndaAToa_a = exports.json2xmlAndaAToa_a = function json2xmlAndaAToa_a(json, tag) {
	    var xml = '';
	    if (json instanceof Array) {
	        var _iteratorNormalCompletion2 = true;
	        var _didIteratorError2 = false;
	        var _iteratorError2 = undefined;

	        try {
	            for (var _iterator2 = json[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	                var v = _step2.value;
	                xml += json2xmlAndaAToa_a(v, tag);
	            }
	        } catch (err) {
	            _didIteratorError2 = true;
	            _iteratorError2 = err;
	        } finally {
	            try {
	                if (!_iteratorNormalCompletion2 && _iterator2.return) {
	                    _iterator2.return();
	                }
	            } finally {
	                if (_didIteratorError2) {
	                    throw _iteratorError2;
	                }
	            }
	        }
	    } else if (json instanceof Object) {
	        if (tag) xml += '<' + aAToa_a(tag) + '>';
	        for (var k in json) {
	            xml += json2xmlAndaAToa_a(json[k], k);
	        }if (tag) xml += '</' + aAToa_a(tag) + '>';
	    } else {
	        xml += '<' + aAToa_a(tag) + '>' + json + '</' + aAToa_a(tag) + '>';
	    }
	    return xml;
	};

	var createGuid = exports.createGuid = function createGuid() {
	    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
	        var r = Math.random() * 16 | 0;
	        var v = c === 'x' ? r : r & 0x3 | 0x8;
	        return v.toString(16);
	    });
	};

	var falseFn = exports.falseFn = function falseFn() {
	    return false;
	};

	var indexOf = exports.indexOf = function indexOf(obj, arr, key) {
	    for (var i in arr) {
	        if (arr[i][key] === obj[key]) {
	            return i;
	        }
	    }
	    return -1;
	};

	/**
	 * 格式化字符串
	 * @param str {String} 被格式化字符串 如 xx.json?a = {a}&b={b}
	 * @param array {Array} 传入得字符 [{k:a,v:asdf}]
	 */
	var formatString = exports.formatString = function formatString(str, array) {
	    if (array.length !== 0) {
	        var _iteratorNormalCompletion3 = true;
	        var _didIteratorError3 = false;
	        var _iteratorError3 = undefined;

	        try {
	            for (var _iterator3 = array[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	                var o = _step3.value;

	                var re = new RegExp('{' + o.k + '}', 'gm');
	                str = str.replace(re, o.v);
	            }
	        } catch (err) {
	            _didIteratorError3 = true;
	            _iteratorError3 = err;
	        } finally {
	            try {
	                if (!_iteratorNormalCompletion3 && _iterator3.return) {
	                    _iterator3.return();
	                }
	            } finally {
	                if (_didIteratorError3) {
	                    throw _iteratorError3;
	                }
	            }
	        }

	        return str;
	    }
	    return str;
	};

	var rename = exports.rename = function rename() {
	    var nameValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
	    var objMap = arguments[1];
	    var prop = arguments[2];
	    var obj = arguments[3];

	    var count = 0;
	    var uniqueMap = function uniqueMap(str, map, key, self) {
	        // let res = str;
	        for (var mapkey in map) {
	            var compareValue = void 0;
	            if (key) {
	                // 匹配value[key]
	                compareValue = map[mapkey][key];
	            } else {
	                compareValue = map[mapkey];
	            }
	            // console.log(str, compareValue);
	            if (compareValue && str === compareValue && map[mapkey] !== self) return uniqueMap(str + '_' + ++count, map, key, self);
	        }
	        return str;
	    };
	    return uniqueMap(nameValue, objMap, prop, obj);
	};

	var formatURL2 = exports.formatURL2 = function formatURL2(originPath, file) {
	    if (!file) return;
	    var tempUrl = file.split('/');
	    var htmlUrl = originPath; //当前页面路径
	    if (!htmlUrl) return file;
	    htmlUrl = htmlUrl.split('/');

	    // 去掉末尾的‘/’
	    htmlUrl.pop();
	    var res = '';
	    for (var i = 0; i < tempUrl.length; i += 1) {
	        if (i === 0 && tempUrl[i] === '.') i += 1;
	        if (tempUrl[i] === '..') {
	            htmlUrl.pop();
	        } else {
	            htmlUrl.push(tempUrl[i]);
	        }
	    }
	    for (var _i = 0; _i < htmlUrl.length; _i += 1) {
	        var sp = _i === htmlUrl.length - 1 ? '' : '/';
	        res += htmlUrl[_i] + sp;
	    }
	    return res;
	};

	var formatURL = exports.formatURL = function formatURL(file) {
	    if (!file) return;
	    var tempUrl = file.split('/');
	    var htmlUrl = window.location.href; //当前页面路径
	    if (!htmlUrl) return file;
	    htmlUrl = htmlUrl.split('/');

	    // 去掉末尾的‘/’
	    htmlUrl.pop();
	    var res = '';
	    for (var i = 0; i < tempUrl.length; i += 1) {
	        if (i === 0 && tempUrl[i] === '.') i += 1;
	        if (tempUrl[i] === '..') {
	            htmlUrl.pop();
	        } else {
	            htmlUrl.push(tempUrl[i]);
	        }
	    }
	    for (var _i2 = 0; _i2 < htmlUrl.length; _i2 += 1) {
	        var sp = _i2 === htmlUrl.length - 1 ? '' : '/';
	        res += htmlUrl[_i2] + sp;
	    }
	    return res;
	};

	var formatURLByHost = exports.formatURLByHost = function formatURLByHost(file) {
	    if (!file) return;
	    var root = window.location.origin;
	    if (!root) return file;

	    var tempUrl = file.split('/');
	    var url = [root];

	    var res = '';
	    for (var i = 0; i < tempUrl.length; i += 1) {
	        if (i === 0 && tempUrl[i] === '.') i += 1;
	        if (tempUrl[i] === '..') {
	            i += 1;
	        } else {
	            url.push(tempUrl[i]);
	        }
	    }
	    for (var _i3 = 0; _i3 < url.length; _i3 += 1) {
	        var sp = _i3 === url.length - 1 ? '' : '/';
	        res += url[_i3] + sp;
	    }

	    return res;
	};

	/**
	 * xxxx_xx_xx转xxxxXxXx的方法
	 */
	var a_aToaA = exports.a_aToaA = function a_aToaA(str) {
	    return str.replace(/_[a-z]/g, function ($0) {
	        return $0.toUpperCase().charAt(1);
	    });
	};

	/**
	 * xxxxXx转xxxx_xx
	 */
	var aAToa_a = exports.aAToa_a = function aAToa_a(str) {
	    return str.replace(/[A-Z]/g, function ($0) {
	        return '_' + $0.toLowerCase();
	    });
	};

	var getLocation = exports.getLocation = function getLocation(filepath) {
	    var location = { dir: '', filename: '' };
	    if (new RegExp(/^http:\/\//g).test(filepath)) filepath = filepath.substring(6);
	    var dirs = filepath.split('/');
	    for (var i = 0; i < dirs.length; i++) {
	        // 暂时写成以html结尾的路径
	        if (i === dirs.length - 1) {
	            // 最后一个是文件名
	            location.dir += '/';
	            location.filename = dirs[i];
	        } else if (dirs[i] !== null && dirs[i] !== '') {
	            location.dir += '/' + dirs[i];
	        }
	    }
	    location.dir = 'http:/' + location.dir;
	    return location;
	};

	/**
	 * 字符串转数组 样例：'1 2 3,4 5 6' => [[1, 2, 3], [4, 5, 6]]
	 *                   1,2,45,5 =>[1,2,45,5]
	 */
	var strToArray = exports.strToArray = function strToArray(string) {
	    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'float';

	    var points = [];
	    if (typeof string !== 'string') return points;

	    var datas = string.split(',');
	    if (!datas) return points;

	    if (!(datas instanceof Array)) datas = [datas];

	    datas.forEach(function (value) {
	        if (typeof value === 'string') {
	            var tempVecStr = value.split(' ');

	            if (tempVecStr && tempVecStr.length === 1) {
	                points.push(tempVecStr[0]);
	            } else if (tempVecStr && tempVecStr.length > 1) {

	                var tempVec = [];
	                for (var i = 0; i < tempVecStr.length; i++) {
	                    tempVec.push(parseFloat(tempVecStr[i]));
	                }
	                points.push(tempVec);
	            }
	        }
	    });

	    //转换文字类型
	    if (type === 'string' || type === 'String' || type === 'STRING') return points;

	    points.forEach(function (point, pointIndex, pointArr) {
	        if (point instanceof Array) {
	            point.forEach(function (data, index, arr) {
	                switch (type) {
	                    case 'float':
	                        arr[index] = parseFloat(data);
	                        break;

	                    default:
	                        break;
	                }
	            });
	        } else {
	            switch (type) {
	                case 'float':
	                    pointArr[pointIndex] = parseFloat(point);
	                    break;

	                default:
	                    break;
	            }
	        }
	    });

	    return points;
	};

	/**
	 * 数组转字符串样例：[[1, 2, 3], [4, 5, 6]] => '1 2 3,4 5 6'
	 */
	var arrayToStr = exports.arrayToStr = function arrayToStr(points) {
	    var str = '';
	    if (!points || !(points instanceof Array) || points.length === 0) return '';

	    for (var i = 0; i < points.length; i++) {
	        if (i !== 0) str += ',';
	        var data = points[i];
	        if (data instanceof Array) {
	            for (var k = 0; k < data.length; k++) {
	                if (k !== 0) str += ' ';
	                str += '' + data[k];
	            }
	        } else {
	            str += '' + data;
	        }
	    }
	    return str;
	};

	/**
	 * 同步获取json数据
	 */
	var syncGetJson = exports.syncGetJson = function syncGetJson(path) {
	    var response = $.ajax({
	        async: false,
	        url: path,
	        dataType: 'text'
	    });
	    if (response.readyState === 4 && response.status === 200) {
	        return JSON.parse(response.responseText);
	    }
	};

/***/ }),
/* 11 */
/***/ (function(module, exports) {

	/*
	 * 作者：zhuwz
	 * 日期：2018-12-03 21:39:39.
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var math = {};
	/**
	 * Calculates the linearly interpolated value of x between a and b.
	 *
	 * @param {number} a Number
	 * @param {number} b Number
	 * @param {number} x Value to be interpolated.
	 * @return {number} Interpolated value.
	 */
	math.lerp = function (a, b, x) {
	  return a + x * (b - a);
	};
	exports.default = math;

/***/ }),
/* 12 */
/***/ (function(module, exports) {

	/*
	 * 作者：zhuwz
	 * 日期：2018-12-03 21:39:39.
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var array = {};

	/**
	 * Compare function for array sort that is safe for numbers.
	 * @param {*} a The first object to be compared.
	 * @param {*} b The second object to be compared.
	 * @return {number} A negative number, zero, or a positive number as the first
	 *     argument is less than, equal to, or greater than the second.
	 */
	array.numberSafeCompareFunction = function (a, b) {
	    return a > b ? 1 : a < b ? -1 : 0;
	};
	/**
	 * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.
	 *
	 * @param {Array.<*>} haystack Items to search through.
	 * @param {*} needle The item to look for.
	 * @param {Function=} opt_comparator Comparator function.
	 * @return {number} The index of the item if found, -1 if not.
	 */
	array.binarySearch = function (haystack, needle, opt_comparator) {
	    var mid, cmp;
	    var comparator = opt_comparator || array.numberSafeCompareFunction;
	    var low = 0;
	    var high = haystack.length;
	    var found = false;

	    while (low < high) {
	        /* Note that "(low + high) >>> 1" may overflow, and results in a typecast
	         * to double (which gives the wrong results). */
	        mid = low + (high - low >> 1);
	        cmp = +comparator(haystack[mid], needle);

	        if (cmp < 0.0) {
	            /* Too low. */
	            low = mid + 1;
	        } else {
	            /* Key found or too high */
	            high = mid;
	            found = !cmp;
	        }
	    }

	    /* Key not found. */
	    return found ? low : ~low;
	};

	/**
	 * 把第二个值添加至数组
	 * @param arr {Array} 数组
	 * @param data {Array} 添加的对象
	 */
	array.extend = function (arr, data) {
	    var i = void 0;
	    var extension = Array.isArray(data) ? data : [data];
	    var length = extension.length;
	    for (i = 0; i < length; i++) {
	        arr[arr.length] = extension[i];
	    }
	    return 0;
	};

	exports.default = array;

/***/ }),
/* 13 */
/***/ (function(module, exports) {

	/*
	 * 作者：zhuwz
	 * 日期：2018-12-03 21:39:39.
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = {
	    show_language: 'zh',

	    //错误相关
	    ERROR_PARAMS: {
	        type: 'error',
	        zh: '参数错误'
	    },
	    ERRAR_PARAMS_ONLY: {
	        type: 'error',
	        zh: '参数错误,只能是:'
	    },
	    ERROR_GVML_FILE_PARSE: {
	        type: 'error',
	        zh: 'Uninpho文件解析失败，请检查是否拼写错误。'
	    },
	    ERROR_GVML_FILE_READ: {
	        type: 'error',
	        zh: 'Uninpho文件读取失败，请检查路径是否错误。'
	    },
	    ERROR_PARAMS_BOOLEAN: {
	        type: 'error',
	        zh: '参数必须是布尔类型'
	    },
	    ERROR_PARAMS_FUNCTION: {
	        type: 'error',
	        zh: '参数不是一个有效的函数类型'
	    },
	    ERROR_ANIMATE_TYPE: {
	        type: 'error',
	        zh: '不是一个有效的动画类型'
	    },
	    UNDEFINED_PARENT_CONTAINER: {
	        type: 'error',
	        zh: '父容器未定义'
	    },
	    UNDEFINED_DOM: {
	        type: 'error',
	        zh: '页面未包含相应元素'
	    },
	    UNDEFINED_PLUGINPANEL: {
	        type: 'error',
	        zh: '未定义插件面板'
	    },
	    UNDEFINED_PLUGIN_TYPE: {
	        type: 'error',
	        zh: '未定义插件类型,必须指定,类型查看Uninpho.PluginType'
	    },
	    UNDEFINED_EXCEPTION: {
	        type: 'error',
	        zh: '未定义(undefined)异常'
	    },
	    UNDEFINED_PLUGIN: {
	        type: 'error',
	        zh: '未定义插件，请检查插件参数是否正确，或者提前注册该插件！'
	    },
	    ERROR_PLUGIN_TYPE: {
	        type: 'error',
	        zh: '插件类型指定错误,请检查自己的Uninpho数据是否错误'
	    },
	    ERROR_PLUGIN_URL: {
	        type: 'error',
	        zh: '错误插件路径，请检查路径是否指向真实插件路径'
	    },
	    ERROR_IMAGE_SOURCE: {
	        type: 'error',
	        zh: '未指定图层数据源或者图层数据源指定错误'
	    },
	    ERROR_BASEIMAGE_DEFINITION: {
	        type: 'error',
	        zh: '基础图层定义错误'
	    },
	    ERROR_POLYLINE_LENGTH: {
	        type: 'error',
	        zh: 'Polyline最少需要2个折点'
	    },
	    ERROR_POLYGON_LENGTH: {
	        type: 'error',
	        zh: '多边形最少需要3个折点'
	    },
	    centerMessage: {
	        managerService: {
	            error: {
	                zh: '获取所有服务列表失败'
	            }
	        }
	    },
	    UNDEFINED_CACHE_OPTION_PARAM: {
	        type: 'error',
	        zh: 'CacheOption的driver设置有误，须为"filesystem"或"leveldb"'
	    },

	    //警告信息
	    WARN_PARAMS_RANGE: {
	        type: 'warn',
	        zh: '参数范围错误:{0}  取值范围:{1} 单位或枚举:{2}, 使用默认参数 {3}'
	    },

	    WARN_PARAMS_RANGE_NONE: {
	        type: 'warn',
	        zh: '参数范围错误---参数:{0} 取值范围:{1}, 使用默认参数 {2}'
	    },

	    WARN_PARAMS_RANGE_NONEDEFAULT: {
	        type: 'warn',
	        zh: '参数范围错误---参数:{0} 取值范围:{1}'
	    },

	    WARN_PARAMS: {
	        type: 'warn',
	        zh: '参数:{0}--参数类型错误 参数类型:{1}, 使用默认参数 {2}'
	    },

	    WARN_PARAMS_NONE: {
	        type: 'warn',
	        zh: '参数类型错误---参数:{0} 参数类型:{1}'
	    },
	    // 传入参数不为颜色
	    WARN_CORLOR: {
	        type: 'warn',
	        zh: '参数:{0}--参数类型错误,参数应为十六进制颜色#FFFFFFFF或#FFFFFF,使用默认参数:{1}'
	    },

	    //数组错误
	    WARN_ARRAY_ELEMENT_TYPE: {
	        type: 'warn',
	        zh: '参数类型错误---参数:{0} 数组元素参数类型:{1},{2}元素类型为:{3}'
	    },

	    WARN_ARRAY_ELEMENT_PARAMS: {
	        type: 'warn',
	        zh: '参数类型错误---参数:{0} 数组元素取值范围错误'
	    },

	    WARN_ARRAY_LENGHT: {
	        type: 'warn',
	        zh: '参数类型错误---参数:{0},数组长度应{1}{2},当前数组长度为{3}'
	    },

	    WARN_ARRAY_LAYER_EXTENT: {
	        type: 'warn',
	        zh: '获取图层范围失败!',
	        en: 'getExtent failed!'
	    },

	    //自定义，
	    WARN_CUSTOM: {
	        type: 'warn',
	        zh: ''
	    },

	    //提醒

	    // 插件提醒信息
	    ADDED_PLUGIN: {
	        type: 'warn',
	        zh: '插件已经添加过了, 请不要重复添加o(>﹏<)o'
	    },
	    USING_WIDGET: {
	        type: 'warn',
	        zh: '挂件已经在使用中！'
	    },
	    IS_WIDGET_NOT_TOOL: {
	        type: 'warn',
	        zh: '该插件为widget，请使用usingWidget方法添加!'
	    },
	    USING_PLUGIN_FAIL: {
	        type: 'warn',
	        zh: '添加插件{0}失败!'
	    }
	};

/***/ }),
/* 14 */
/***/ (function(module, exports) {

	/*
	 * 作者：zhuwz
	 * 日期：2018-12-03 21:39:39.
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = {
	    show_language: 'zh',

	    //错误相关
	    ERROR_PARAMS: {
	        type: 'error',
	        zh: '参数错误'
	    },
	    ERRAR_PARAMS_ONLY: {
	        type: 'error',
	        zh: '参数错误,只能是:'
	    },
	    ERROR_GVML_FILE_PARSE: {
	        type: 'error',
	        zh: 'Uninpho文件解析失败，请检查是否拼写错误。'
	    },
	    ERROR_GVML_FILE_READ: {
	        type: 'error',
	        zh: 'Uninpho文件读取失败，请检查路径是否错误。'
	    },
	    ERROR_PARAMS_BOOLEAN: {
	        type: 'error',
	        zh: '参数必须是布尔类型'
	    },
	    ERROR_PARAMS_FUNCTION: {
	        type: 'error',
	        zh: '参数不是一个有效的函数类型'
	    },
	    ERROR_ANIMATE_TYPE: {
	        type: 'error',
	        zh: '不是一个有效的动画类型'
	    },
	    UNDEFINED_PARENT_CONTAINER: {
	        type: 'error',
	        zh: '父容器未定义'
	    },
	    UNDEFINED_DOM: {
	        type: 'error',
	        zh: '页面未包含相应元素'
	    },
	    UNDEFINED_PLUGINPANEL: {
	        type: 'error',
	        zh: '未定义插件面板'
	    },
	    UNDEFINED_PLUGIN_TYPE: {
	        type: 'error',
	        zh: '未定义插件类型,必须指定,类型查看Uninpho.PluginType'
	    },
	    UNDEFINED_EXCEPTION: {
	        type: 'error',
	        zh: '未定义(undefined)异常'
	    },
	    UNDEFINED_PLUGIN: {
	        type: 'error',
	        zh: '未定义插件，请检查插件参数是否正确，或者提前注册该插件！'
	    },
	    ERROR_PLUGIN_TYPE: {
	        type: 'error',
	        zh: '插件类型指定错误,请检查自己的Uninpho数据是否错误'
	    },
	    ERROR_PLUGIN_URL: {
	        type: 'error',
	        zh: '错误插件路径，请检查路径是否指向真实插件路径'
	    },
	    ERROR_IMAGE_SOURCE: {
	        type: 'error',
	        zh: '未指定图层数据源或者图层数据源指定错误'
	    },
	    ERROR_BASEIMAGE_DEFINITION: {
	        type: 'error',
	        zh: '基础图层定义错误'
	    },
	    ERROR_POLYLINE_LENGTH: {
	        type: 'error',
	        zh: 'Polyline最少需要2个折点'
	    },
	    ERROR_POLYGON_LENGTH: {
	        type: 'error',
	        zh: '多边形最少需要3个折点'
	    },
	    centerMessage: {
	        managerService: {
	            error: {
	                zh: '获取所有服务列表失败'
	            }
	        }
	    },
	    UNDEFINED_CACHE_OPTION_PARAM: {
	        type: 'error',
	        zh: 'CacheOption的driver设置有误，须为"filesystem"或"leveldb"'
	    },

	    //警告信息
	    WARN_PARAMS_RANGE: {
	        type: 'warn',
	        zh: '参数范围错误:{0}  取值范围:{1} 单位或枚举:{2}, 使用默认参数 {3}'
	    },

	    WARN_PARAMS_RANGE_NONE: {
	        type: 'warn',
	        zh: '参数范围错误---参数:{0} 取值范围:{1}, 使用默认参数 {2}'
	    },

	    WARN_PARAMS_RANGE_NONEDEFAULT: {
	        type: 'warn',
	        zh: '参数范围错误---参数:{0} 取值范围:{1}'
	    },

	    WARN_PARAMS: {
	        type: 'warn',
	        zh: '参数:{0}--参数类型错误 参数类型:{1}, 使用默认参数 {2}'
	    },

	    WARN_PARAMS_NONE: {
	        type: 'warn',
	        zh: '参数类型错误---参数:{0} 参数类型:{1}'
	    },
	    // 传入参数不为颜色
	    WARN_CORLOR: {
	        type: 'warn',
	        zh: '参数:{0}--参数类型错误,参数应为十六进制颜色#FFFFFFFF或#FFFFFF,使用默认参数:{1}'
	    },

	    //数组错误
	    WARN_ARRAY_ELEMENT_TYPE: {
	        type: 'warn',
	        zh: '参数类型错误---参数:{0} 数组元素参数类型:{1},{2}元素类型为:{3}'
	    },

	    WARN_ARRAY_ELEMENT_PARAMS: {
	        type: 'warn',
	        zh: '参数类型错误---参数:{0} 数组元素取值范围错误'
	    },

	    WARN_ARRAY_LENGHT: {
	        type: 'warn',
	        zh: '参数类型错误---参数:{0},数组长度应{1}{2},当前数组长度为{3}'
	    },

	    WARN_ARRAY_LAYER_EXTENT: {
	        type: 'warn',
	        zh: '获取图层范围失败!',
	        en: 'getExtent failed!'
	    },

	    //自定义，
	    WARN_CUSTOM: {
	        type: 'warn',
	        zh: ''
	    },

	    //提醒

	    // 插件提醒信息
	    ADDED_PLUGIN: {
	        type: 'warn',
	        zh: '插件已经添加过了, 请不要重复添加o(>﹏<)o'
	    },
	    USING_WIDGET: {
	        type: 'warn',
	        zh: '挂件已经在使用中！'
	    },
	    IS_WIDGET_NOT_TOOL: {
	        type: 'warn',
	        zh: '该插件为widget，请使用usingWidget方法添加!'
	    },
	    USING_PLUGIN_FAIL: {
	        type: 'warn',
	        zh: '添加插件{0}失败!'
	    }
	};

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Exception = __webpack_require__(16);

	var _Exception2 = _interopRequireDefault(_Exception);

	var _ExceptionMessage = __webpack_require__(13);

	var _ExceptionMessage2 = _interopRequireDefault(_ExceptionMessage);

	var _WarnException = __webpack_require__(17);

	var warn = _interopRequireWildcard(_WarnException);

	var _Event2 = __webpack_require__(18);

	var _Event3 = _interopRequireDefault(_Event2);

	var _Util = __webpack_require__(10);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * 插件管理类
	 * 对继承自{@link Tool} 与 {@link Widget}的类进行管理
	 * @param {Vewer} earth Cesium.Viewer 对象
	 *  @example
	 * //初始化插件
	 *  let pluginManager = new Cesium.PluginManager(viewer);
	 *  pluginManager.currentTool = 'xxx';
	 */
	var PluginManager = function (_Event) {
	    _inherits(PluginManager, _Event);

	    function PluginManager(earth) {
	        _classCallCheck(this, PluginManager);

	        // 用来存放用户已经定制的插件信息
	        var _this = _possibleConstructorReturn(this, (PluginManager.__proto__ || Object.getPrototypeOf(PluginManager)).call(this));

	        _this._centerPlugins = new Map();
	        // 用来存放用户已经初始化（加载）了的widgets
	        _this._widgets = new Map();
	        // 用来存放用户已经初始化（加载）了的tools
	        _this._tools = new Map();
	        // 用来存放用户当前正在使用的tool
	        _this._currentTool = undefined;
	        // 用来存放插件UI
	        _this._customUI = undefined;
	        //当前工具变化事件
	        _this._toolChanged = undefined;

	        _this._earth = earth;
	        earth.pluginManager = _this;
	        //this._earth.container = $(container);
	        //if (earth.plugincenter) this._initCenter(earth.plugincenter);
	        //this._initPlugins(initPlugins);
	        return _this;
	    }

	    /**
	     * 当前的工具
	     * @type {Tool}
	     * @example
	     * //设置当前工具为空
	     * earth.pluginManager.currentTool = '';
	     * //设置当前工具为xxx工具（xxx为工具名称）
	     * earth.pluginManager.currentTool = 'xxx';
	     * //设置当前工具为xxxTool(xxxTool 为继承自Tool的工具对象)
	     * earth.pluginManager.currentTool = xxxTool;
	     * @example
	     * //获取当前工具
	     * var tempTool = earth.pluginManager.currentTool;
	     */


	    _createClass(PluginManager, [{
	        key: 'getPluginByName',


	        /**
	         * 根据名称获取plugin
	         * @param {string} name 插件名称
	         * @return {Plugin}
	         */
	        value: function getPluginByName(name) {
	            var realPlugin = void 0;
	            realPlugin = this._widgets.get(name);
	            if (!realPlugin) {
	                realPlugin = this._tools.get(name);
	                if (realPlugin) return realPlugin;
	            }
	            return realPlugin;
	        }

	        /**
	         * 根据名称获取plugin信息
	         * @param {string} name 插件名称
	         * @return {object}
	         */

	    }, {
	        key: 'getPluginInfoByName',
	        value: function getPluginInfoByName(name) {
	            return this._centerPlugins.get(name);
	        }

	        /**
	         * 获取当前所有已经加载的plugins
	         * @return {Array<Plugin>}
	         */

	    }, {
	        key: 'getInstalledPlugins',
	        value: function getInstalledPlugins() {
	            var plugins = [];
	            this._widgets.forEach(function (value) {
	                plugins.push(value);
	            });
	            this._tools.forEach(function (value) {
	                plugins.push(value);
	            });
	            return plugins;
	        }

	        /**
	         * 获取所有的plugins信息
	         * @return {Map}
	         */

	    }, {
	        key: 'getAllPlugins',
	        value: function getAllPlugins() {
	            return this._centerPlugins;
	        }

	        /**
	         * 添加插件
	         * @param {Plugin|string} plugin 即将加载的插件
	         * @return {Plugin}
	         */

	    }, {
	        key: 'addPlugin',
	        value: function addPlugin(plugin) {
	            console.log('addPlugin: ', plugin);
	            if (typeof plugin === 'string') plugin = this._centerPlugins.get(plugin);
	            if (!plugin) {
	                throw new _Exception2.default(_ExceptionMessage2.default.UNDEFINED_PLUGIN, _ExceptionMessage2.default.UNDEFINED_PLUGIN.type);
	            }
	            var realPlugin = void 0;
	            switch (plugin.type) {
	                case 'widget':
	                    // 挂件
	                    realPlugin = this._widgets.get(plugin.name);
	                    break;
	                case 'tool':
	                    // 工具
	                    realPlugin = this._tools.get(plugin.name);
	                    break;
	                default:
	                    throw new _Exception2.default(_ExceptionMessage2.default.UNDEFINED_PLUGIN_TYPE, _ExceptionMessage2.default.UNDEFINED_PLUGIN_TYPE.type);
	            }
	            if (!realPlugin) {
	                // 添加plugin <script pluginid=''>
	                var pluginClass = this._appendScript(plugin.name, plugin.url, plugin.js);
	                if (!pluginClass) {
	                    throw new _Exception2.default(_ExceptionMessage2.default.UNDEFINED_PLUGIN_TYPE, _ExceptionMessage2.default.UNDEFINED_PLUGIN_TYPE.type);
	                }
	                // 添加DOM <div id='pluginDOM_of_plugin'></div>
	                var panel = this._addRootDOM(plugin);
	                if (!panel) return undefined;
	                realPlugin = new (eval(pluginClass))({
	                    name: plugin.name,
	                    container: panel,
	                    url: plugin.url,
	                    js: plugin.js,
	                    type: plugin.type,
	                    img: plugin.img,
	                    earth: this._earth,
	                    language: plugin.language,
	                    parms: plugin.parms
	                });
	                this._add(realPlugin); // Add To Map
	            } else {
	                throw new _Exception2.default(_ExceptionMessage2.default.ADDED_PLUGIN, _ExceptionMessage2.default.ADDED_PLUGIN.type);
	                // return undefined;
	            }
	            return realPlugin;
	        }

	        /**
	         * 移除插件
	         * @param  {Plugin|string} plugin 即将卸载的插件对象或名称
	         */

	    }, {
	        key: 'removePlugin',
	        value: function removePlugin(plugin) {
	            // 根据info从Map中获取plugin
	            var name = void 0;
	            if (plugin) {
	                if (typeof plugin === 'string') {
	                    // id
	                    name = plugin;
	                } else if (plugin.name !== undefined) {
	                    name = plugin.name;
	                } else {
	                    throw new _Exception2.default(_ExceptionMessage2.default.UNDEFINED_PLUGIN, _ExceptionMessage2.default.UNDEFINED_PLUGIN.type);
	                }
	                var realPlugin = this._widgets.get(name);
	                if (!realPlugin) realPlugin = this._tools.get(name);
	                if (realPlugin) {
	                    // 查到即将删除的插件
	                    console.log('remove: ', realPlugin);
	                    this._remove(realPlugin); // remove from map
	                    // this._removeScript(realPlugin.name);  // remove <script>
	                    this._removeRootDOM(realPlugin); // remove DOM of pluginContainer
	                } else {
	                    // throw new Exception(`${name} : ${ExceptionMessage.UNDEFINED_PLUGIN}`);
	                    throw new _Exception2.default(_ExceptionMessage2.default.UNDEFINED_PLUGIN, _ExceptionMessage2.default.UNDEFINED_PLUGIN.type);
	                }
	            } else {
	                throw new _Exception2.default(_ExceptionMessage2.default.UNDEFINED_PLUGIN, _ExceptionMessage2.default.UNDEFINED_PLUGIN.type);
	            }
	        }

	        /**
	         * 开启挂件
	         * @param {Widget|string} widget 即将使用的挂件或挂件名称
	         */

	    }, {
	        key: 'openWidget',
	        value: function openWidget(widget) {
	            if (!widget) return;
	            var name = void 0;
	            if (typeof widget === 'string') {
	                // id
	                name = widget;
	            } else {
	                name = widget.name;
	            }
	            var realWidget = this._widgets.get(name); // 在已经加载了的插件列表里找到了该widget
	            if (realWidget) {
	                if (realWidget.isUsing === false) {
	                    realWidget._init();
	                    realWidget.isUsing = true;
	                } else {
	                    console.warn(warn.WarnException(_ExceptionMessage2.default.USING_WIDGET));
	                }
	            } else {
	                // 没有找到
	                realWidget = this.addPlugin(name);
	                if (realWidget) realWidget = this.usingWidget(realWidget);
	            }
	            // this.fire('usingWidget');
	            return realWidget;
	        }
	        /**
	         * 关闭widget
	         * @param {Widget|string} widget 即将关闭的挂件名称
	         */

	    }, {
	        key: 'closeWidget',
	        value: function closeWidget(widget) {
	            if (!widget) return;
	            var name = void 0;
	            if (typeof widget === 'string') {
	                // id
	                name = widget;
	            } else {
	                name = widget.name;
	            }
	            var realWidget = this._widgets.get(name);
	            if (realWidget) {
	                realWidget._remove();
	                realWidget.isUsing = false;
	            }
	            // this.fire('unusingwidget');
	        }

	        /*
	         * 设置当前激活Tool
	         * @param {Tool} tool 即将使用的工具
	         */

	    }, {
	        key: '_setCurrentTool',
	        value: function _setCurrentTool(tool) {
	            this.fire('setCurrentTool', tool);
	            var name = void 0;

	            if (!tool) {
	                // 如果传入的值是undefined，则关闭currentTool
	                this._turnOffTools();
	                if (this._toolChanged) this._toolChanged(undefined);
	                return undefined;
	            }
	            if (typeof tool === 'string') {
	                // id
	                name = tool;
	            } else {
	                name = tool.name;
	            }
	            var realTool = this._tools.get(name);

	            if (realTool) {
	                // 找到该tool
	                if (this._currentTool) {
	                    this._currentTool._remove();
	                    this._currentTool.isCurrentTool = false;
	                }
	                realTool._init();
	                if (this._toolChanged) this._toolChanged(realTool);
	            } else {
	                if (this._widgets.get(name)) {
	                    console.warn(warn.WarnException(_ExceptionMessage2.default.IS_WIDGET_NOT_TOOL));
	                    return undefined;
	                }
	                // 在插件列表中没有找到该tool
	                realTool = this.addPlugin(name);
	                if (realTool) realTool = this._setCurrentTool(realTool);
	            }
	            if (realTool) realTool.isCurrentTool = true;
	            return realTool; // currentTool 保持不变
	        }

	        /*
	         * 初始化用户已经定制的插件
	         */

	    }, {
	        key: '_initCenter',
	        value: function _initCenter(url) {
	            if (!url) return; // 说明没有 配置 插件中心
	            var json = (0, _Util.jsonSyncPromise)(url).responseJSON;
	            if (!json) return; // 插件中心获取消息失败
	            // 我这里只会管是否是插件中心以及本地
	            var data = json.results;
	            this._centerPlugins = new Map();
	            for (var i in data) {
	                this._centerPlugins.set(data[i].name, data[i]);
	            }
	            // console.log(data);
	            this._data = data;
	        }

	        /*
	         * 初始化：加载默认插件
	         * @param initPlugins {tool: [{id: ''}...], widget: [{id: ''}...]}
	         */

	    }, {
	        key: '_initPlugins',
	        value: function _initPlugins(initPlugins) {
	            var _this2 = this;

	            var plugins = []; // [{id, type}...]
	            var centers = this._centerPlugins;
	            if (initPlugins.tool && initPlugins.tool.constructor === Array) initPlugins.tool.forEach(function (value) {
	                plugins.push({
	                    id: value.id,
	                    type: 'tool'
	                });
	            });else if (initPlugins.tool) plugins.push({
	                id: initPlugins.tool.id,
	                type: 'tool'
	            });
	            if (initPlugins.widget && initPlugins.widget.constructor === Array) initPlugins.widget.forEach(function (value) {
	                plugins.push({
	                    id: value.id,
	                    type: 'widget'
	                });
	            });else if (initPlugins.widget) plugins.push({
	                id: initPlugins.widget.id,
	                type: 'widget'
	            });
	            plugins.forEach(function (item) {
	                var pluginInfo = centers.get(item.id);
	                if (pluginInfo) {
	                    // 从插件中心获取到该插件
	                    if (item.type !== pluginInfo.type) {
	                        throw new _Exception2.default(_ExceptionMessage2.default.ERROR_PLUGIN_TYPE);
	                    }
	                    _this2.addPlugin(pluginInfo);
	                    if (pluginInfo.type === 'widget') _this2.usingWidget(pluginInfo);
	                } else {
	                    // 未能获取该插件
	                    throw new _Exception2.default(item.id + ' : ' + _ExceptionMessage2.default.UNDEFINED_PLUGIN);
	                }
	            });
	        }

	        /*
	         * 添加插件根节点
	         * @param plugin {Object}
	         */

	    }, {
	        key: '_addRootDOM',
	        value: function _addRootDOM(plugin) {
	            var key = plugin.name;
	            var container = null;
	            if (plugin.customUI) {
	                if (this._customUI) {
	                    container = this._customUI;
	                } else {
	                    throw new _Exception2.default(_ExceptionMessage2.default.UNDEFINED_PLUGINPANEL);
	                }
	            } else {
	                container = this._earth.container;
	            }
	            var isAdded = function isAdded(id) {
	                if (container.hasChildNodes()) return;
	                var children = container.childNodes;
	                for (var i = 0; i < children.length; i += 1) {
	                    if (children[i].id === id) return true;
	                }
	                return false;
	            };
	            var pid = this._earth.container.id + '_of_' + key;
	            if (isAdded(pid) === true) return undefined;
	            var pluginDOM = document.createElement('div');
	            pluginDOM.id = pid;
	            if (!plugin.customUI) pluginDOM.style.position = 'relative';
	            pluginDOM.style.top = '-100%';
	            // pluginDOM.style.width = '0';
	            pluginDOM.style.height = '0';
	            container.appendChild(pluginDOM);
	            return pluginDOM;
	        }

	        /*
	         * 删除界面根节点
	         * @param plugin {Object}
	         */

	    }, {
	        key: '_removeRootDOM',
	        value: function _removeRootDOM(plugin) {
	            var key = plugin.name;
	            var container = null;
	            var containerID = this._earth.container.id;
	            if (plugin.customUI) {
	                if (this._customUI) {
	                    container = this._customUI;
	                } else {
	                    throw new _Exception2.default(_ExceptionMessage2.default.UNDEFINED_PLUGINPANEL);
	                }
	            } else {
	                container = document.getElementById(containerID);
	            }
	            var dom = document.getElementById(containerID + '_of_' + key);
	            container.removeChild(dom);
	            // for(let item of container.childNodes){
	            //     if(item.id==dom.id){
	            //         container.removeChild(dom);
	            //         break;
	            //     }
	            // }
	        }

	        /*
	         * 添加script标签
	         * @param path 路径
	         * @param fileName 插件文件名
	         */

	    }, {
	        key: '_appendScript',
	        value: function _appendScript(plugin, path, fileName) {
	            var container = this._earth.container;
	            // 判断当前url的插件是否被引入
	            var isAppended = function isAppended(name) {
	                var scripts = document.getElementsByTagName('script');
	                for (var i = 0; i < scripts.length; i += 1) {
	                    if (scripts[i].getAttribute('pluginId') === name) return true;
	                }
	                return false;
	            };
	            var script = document.createElement('script');
	            script.setAttribute('pluginId', plugin);
	            if (isAppended(plugin) === false) {
	                var response = _Util.$.ajax({
	                    async: false,
	                    url: '' + path + fileName + '.js',
	                    dataType: 'text'
	                });
	                if (response.readyState === 4 && response.status === 200) {
	                    document.head.appendChild(script);
	                    script.innerHTML = response.responseText.replace('<br>', '\n');
	                    return fileName;
	                }
	                return undefined;
	            }
	            return fileName;
	        }

	        /*
	         * 移除script标签
	         * @param url 路径
	         */

	    }, {
	        key: '_removeScript',
	        value: function _removeScript(plugin) {
	            // 判断当前url的插件是否被引入
	            var appendedScript = function appendedScript(name) {
	                var scripts = document.getElementsByTagName('script');
	                for (var i = 0; i < scripts.length; i += 1) {
	                    if (scripts[i].getAttribute('pluginId') === name) return scripts[i];
	                }
	                return undefined;
	            };
	            var removeScript = appendedScript(plugin);
	            if (removeScript) document.head.removeChild(removeScript);
	            return this;
	        }
	        /*
	         * 关闭所有tool
	         */

	    }, {
	        key: '_turnOffTools',
	        value: function _turnOffTools() {
	            if (this._currentTool) {
	                this._currentTool._remove();
	                this._currentTool.isCurrentTool = false;
	            }

	            this._currentTool = undefined;
	        }

	        /*
	         * 加载插件实现
	         * @param plugin
	         */

	    }, {
	        key: '_add',
	        value: function _add(plugin) {
	            if (!plugin) return;
	            switch (plugin.type) {
	                case 'widget':
	                    // 挂件
	                    this._addToMap(plugin, this._widgets);
	                    break;
	                case 'tool':
	                    // 工具
	                    this._addToMap(plugin, this._tools);
	                    break;
	                default:
	                    throw new _Exception2.default(_ExceptionMessage2.default.UNDEFINED_PLUGIN_TYPE, _ExceptionMessage2.default.UNDEFINED_PLUGIN_TYPE.type);
	            }
	            plugin._manager = this;
	        }

	        /*
	         * 移除插件实现
	         * @param plugin
	         */

	    }, {
	        key: '_remove',
	        value: function _remove(plugin) {
	            if (!plugin) return;
	            switch (plugin.type) {
	                case 'widget':
	                    // 挂件
	                    this._removeFormMap(plugin, this._widgets);
	                    break;
	                case 'tool':
	                    // 工具
	                    this._removeFormMap(plugin, this._tools);
	                    break;
	                default:
	                    break;
	            }
	            plugin._remove();
	        }
	    }, {
	        key: '_removeFormMap',
	        value: function _removeFormMap(plugin, mapObject) {
	            if (mapObject.has(plugin.key)) {
	                mapObject.delete(plugin.key);
	            }
	            return this;
	        }
	    }, {
	        key: '_addToMap',
	        value: function _addToMap(plugin, mapObject) {
	            if (mapObject.has(plugin.key)) {
	                throw new _Exception2.default(_ExceptionMessage2.default.ADDED_PLUGIN, _ExceptionMessage2.default.ADDED_PLUGIN.type);
	            } else {
	                mapObject.set(plugin.key, plugin);
	            }
	            return this;
	        }
	    }, {
	        key: 'toTags',
	        value: function toTags() {
	            var widgets = '';
	            var tools = '';
	            this._widgets.forEach(function (item) {
	                if (item) {
	                    widgets += '<widget><id>' + item.key + '</id></widget>';
	                }
	            });
	            this._tools.forEach(function (item) {
	                if (item) {
	                    tools += '<tool><id>' + item.key + '</id></tool>';
	                }
	            });
	            return '<plugins>' + widgets + tools + '</plugins>';
	        }
	    }, {
	        key: 'toJson',
	        value: function toJson() {
	            var plugins = [];
	            this._widgets.forEach(function (item) {
	                if (item) {
	                    plugins.push({
	                        widget: {
	                            id: item.key
	                        }
	                    });
	                }
	            });
	            this._tools.forEach(function (item) {
	                if (item) {
	                    plugins.push({
	                        tool: {
	                            id: item.key
	                        }
	                    });
	                }
	            });
	            return plugins;
	        }
	    }, {
	        key: 'currentTool',
	        set: function set(currentTool) {
	            this._currentTool = this._setCurrentTool(currentTool);
	        },
	        get: function get() {
	            return this._currentTool;
	        }

	        /**
	         * 当前工具变化事件
	         * @param {Object} evt 当前工具变化事件
	         * @example
	         * //设置工具变化事件
	         *  pluginManager.toolChanged = (tool)=>{
	         *     console.log(tool.name)
	         *  };
	         */

	    }, {
	        key: 'toolChanged',
	        set: function set(evt) {
	            this._toolChanged = evt;
	        }

	        /**
	         * 设置当前插件UI面板
	         * @type {string | object}
	         */

	    }, {
	        key: 'customUI',
	        set: function set(panel) {
	            var uiPanel = void 0;
	            if (typeof panel === 'string') {
	                // id
	                uiPanel = document.getElementById(panel);
	            } else {
	                uiPanel = panel;
	            }
	            this._customUI = uiPanel;
	        }
	    }]);

	    return PluginManager;
	}(_Event3.default);

	exports.default = PluginManager;

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	 * 作者：zhuwz
	 * 日期：2018-12-03 21:39:39.
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Util = __webpack_require__(10);

	var Util = _interopRequireWildcard(_Util);

	var _ExceptionMessage = __webpack_require__(13);

	var _ExceptionMessage2 = _interopRequireDefault(_ExceptionMessage);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Exception = function () {
	    function Exception(message) {
	        _classCallCheck(this, Exception);

	        for (var _len = arguments.length, type = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	            type[_key - 1] = arguments[_key];
	        }

	        if (type.length > 0) {
	            this.type = type.shift();
	        }

	        this.showMessage(message, type);
	    }

	    _createClass(Exception, [{
	        key: 'formatMessage',
	        value: function formatMessage(value, phvList) {
	            var arr = [];
	            var j = void 0;
	            var index = void 0;
	            var i = 0;
	            while (i < value.length) {
	                if (value.charAt(i) === '{') {
	                    j = value.indexOf('}', i + 1);
	                    if (j === -1) {
	                        i++;
	                    } else {
	                        index = parseInt(value.substring(i + 1, j));
	                        if (!isNaN(index) && index >= 0) {
	                            var s = value.substring(0, i);
	                            if (s !== '') {
	                                arr.push(s);
	                            }
	                            arr.push(index);
	                            i = 0;
	                            value = value.substring(j + 1);
	                        } else {
	                            i = j + 1;
	                        }
	                    }
	                } else {
	                    i++;
	                }
	            }
	            if (value !== '') {
	                arr.push(value);
	            }
	            value = arr;

	            if (value.length === 0) {
	                return '';
	            }
	            if (value.length === 1 && typeof value[0] === 'string') {
	                return value[0];
	            }

	            var str = '';
	            for (i = 0, j = value.length; i < j; i++) {
	                if (typeof value[i] === 'string') {
	                    str += value[i];
	                } else if (phvList && value[i] < phvList.length) {
	                    str += phvList[value[i]];
	                }
	            }

	            return str;
	        }

	        /**
	         * 输出消息
	         * @param message {string} 消息体
	         */

	    }, {
	        key: 'showMessage',
	        value: function showMessage(message, type) {
	            var infoType = message.type;
	            message = this.formatMessage(message[_ExceptionMessage2.default.show_language], type);
	            switch (infoType) {
	                case 'error':
	                    console.error(this.type + ':' + message);
	                    break;
	                case 'warn':
	                    console.warn(this.type + ':' + message);
	                    break;
	                case 'info':
	                    console.info(this.type + ':' + message);
	                    break;
	                default:

	                    break;
	            }
	        }
	    }, {
	        key: 'type',
	        set: function set(value) {
	            this._type = value || 'Exception';
	        },
	        get: function get() {
	            return this._type;
	        }
	    }]);

	    return Exception;
	}();

	exports.default = Exception;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.WarnException = undefined;

	var _Util = __webpack_require__(10);

	var Util = _interopRequireWildcard(_Util);

	var _ExceptionMessage = __webpack_require__(13);

	var _ExceptionMessage2 = _interopRequireDefault(_ExceptionMessage);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	/*
	 * 作者：zhuwz
	 * 日期：2018-12-03 21:39:39.
	 */

	function formatMessage(value, phvList) {
	    var arr = [];
	    var j = void 0;
	    var index = void 0;
	    var i = 0;
	    while (i < value.length) {
	        if (value.charAt(i) === '{') {
	            j = value.indexOf('}', i + 1);
	            if (j === -1) {
	                i++;
	            } else {
	                index = parseInt(value.substring(i + 1, j));
	                if (!isNaN(index) && index >= 0) {
	                    var s = value.substring(0, i);
	                    if (s !== '') {
	                        arr.push(s);
	                    }
	                    arr.push(index);
	                    i = 0;
	                    value = value.substring(j + 1);
	                } else {
	                    i = j + 1;
	                }
	            }
	        } else {
	            i++;
	        }
	    }
	    if (value !== '') {
	        arr.push(value);
	    }
	    value = arr;

	    if (value.length === 1 && typeof value[0] === 'string') {
	        return value[0];
	    }

	    var str = '';
	    if (value.length === 0 && phvList) {
	        for (i = 0; i < phvList.length; i++) {
	            str += phvList[i];
	        }
	        return str;
	    }
	    for (i = 0, j = value.length; i < j; i++) {
	        if (typeof value[i] === 'string') {
	            str += value[i];
	        } else if (phvList && value[i] < phvList.length) {
	            str += phvList[value[i]];
	        }
	    }

	    return str;
	}

	function showMessage(message, type, info) {
	    var infoType = message.type;
	    message = formatMessage(message[_ExceptionMessage2.default.show_language], info);
	    return type + ':' + message;
	}

	var WarnException = exports.WarnException = function WarnException(message) {
	    var obj = void 0;

	    for (var _len = arguments.length, type = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        type[_key - 1] = arguments[_key];
	    }

	    if (type.length > 0) {
	        obj = type.shift();
	    }

	    return showMessage(message, obj, type);
	};

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	 * 作者：zhuwz
	 * 日期：2018-12-03 21:39:39.
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Util = __webpack_require__(3);

	var Util = _interopRequireWildcard(_Util);

	var _Class2 = __webpack_require__(19);

	var _Class3 = _interopRequireDefault(_Class2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * 事件类
	 * @module core
	 * @namespace GV
	 * @class Event
	 */
	var Event = function (_Class) {
	    _inherits(Event, _Class);

	    function Event() {
	        _classCallCheck(this, Event);

	        return _possibleConstructorReturn(this, (Event.__proto__ || Object.getPrototypeOf(Event)).apply(this, arguments));
	    }

	    _createClass(Event, [{
	        key: 'on',

	        /**
	         * 添加对象的事件监听方法
	         * @method on
	         * @param types {string | json} 事件名称或者json,例如:<br/>1.'click' <br/> 2.{click:onClick,mouseMove:onMouseMove}
	         * @param fn {Function} 回调方法
	         * @param context {Object} 上下文
	         * @return {Object} 返回使用对象
	         * @example
	         *      gvml.on('mouse-click',function(event){
	         *      });
	         * @example
	         *      gvml.on('mouse-click',function(event){
	         *      })
	         */
	        value: function on(types, fn, context) {
	            // 类型可以是一个Map集合;
	            if (Util.isJson(types)) {
	                for (var type in types) {
	                    this._on(type, types[type], fn);
	                }
	            } else {
	                this._on(types, fn, context);
	            }
	            return this;
	        }

	        /**
	         * 添加监听真正入口
	         * @param type {string} 方法名称
	         * @param fn {Function} 回调方法
	         * @param context {Object} 上下文
	         */

	    }, {
	        key: '_on',
	        value: function _on(type, fn, context) {
	            this._events = this._events || {};
	            // 获取注册的监听
	            var typeListeners = this._events[type];
	            // 容错 及初始化
	            if (!typeListeners) {
	                typeListeners = [];
	                this._events[type] = typeListeners;
	            }
	            if (context === this) {
	                // 释放部分内存
	                context = undefined;
	            }
	            var newListener = { fn: fn, ctx: context };
	            var listeners = typeListeners;
	            // 检查回调函数是否已经存在
	            for (var i = 0, len = listeners.length; i < len; i++) {
	                if (listeners[i].fn === fn && listeners[i].ctx === context) {
	                    return;
	                }
	            }
	            listeners.push(newListener);
	        }

	        /**
	         * 移除对象的事件监听方法
	         * @method off
	         * @param types {string/map} 事件名称或者Map,例如: 'click' 或者 {click:onClick,mouseMove:onMouseMove}
	         * @param fn {Function} 回调方法
	         * @param context {Object} 上下文
	         * @return {Object} 返回使用对象
	         */

	    }, {
	        key: 'off',
	        value: function off(types, fn, context) {
	            if (!types) {
	                // 没有参数的时候移除所有方法
	                delete this._events;
	            } else if ((typeof types === 'undefined' ? 'undefined' : _typeof(types)) === 'object') {
	                for (var type in types) {
	                    this._off(type, types[type], fn);
	                }
	            } else {
	                this._off(types, fn, context);
	            }
	            return this;
	        }

	        /**
	         * 移除监听真正入口
	         * @param type {string} 方法名称
	         * @param fn {Function} 回调方法
	         * @param context {Object} 上下文
	         * @private 私有
	         */

	    }, {
	        key: '_off',
	        value: function _off(type, fn, context) {
	            // 没有监听维护时返回
	            if (!this._events) {
	                return;
	            }
	            // 获取监听类型集合
	            var listeners = this._events[type];
	            // 不存在时返回
	            if (!listeners) {
	                return;
	            }
	            // 如果回调不为空
	            if (fn) {
	                // 遍历
	                for (var i = 0, len = listeners.length; i < len; i++) {
	                    listeners[i].fn = Util.falseFn;
	                }
	                delete this._events[type];
	                return;
	            }
	            if (context === this) {
	                context = undefined;
	            }
	            // 找到回调方法并移除
	            for (var _i = 0, _len = listeners.length; _i < _len; _i++) {
	                var l = listeners[_i];
	                if (l.ctx === context && l.fn === fn) {
	                    l.fn = Util.falseFn;
	                    if (this._firingCount) {
	                        this._events[type] = listeners = listeners.slice();
	                    }
	                    listeners.splice(_i, 1);
	                    return;
	                }
	            }
	        }

	        /**
	         * 激活对象的某个监听事件,可以附件数据,并可以传递给父对象
	         * @method fire
	         * @param type {string} 事件名称
	         * @param data {Object} 数据
	         * @return {Object} 返回使用对象
	         */

	    }, {
	        key: 'fire',
	        value: function fire(type, data) {
	            if (!this.listens(type)) {
	                return this;
	            }
	            if (this._events) {
	                var listeners = this._events[type];
	                if (listeners) {
	                    this._firingCount = this._firingCount + 1 || 1;
	                    for (var i = 0, len = listeners.length; i < len; i++) {
	                        var l = listeners[i];
	                        l.fn.call(l.ctx || this, data);
	                    }
	                    this._firingCount--;
	                }
	            }
	            return this;
	        }

	        /**
	         * 查询是否有指定类型的监听器
	         * @param type {string} 事件类型
	         * @param propagate {boolean} 是否向上传递
	         */

	    }, {
	        key: 'listens',
	        value: function listens(type) {
	            var listeners = this._events && this._events[type];
	            if (listeners && listeners.length > 0) {
	                return true;
	            }
	            return false;
	        }
	    }]);

	    return Event;
	}(_Class3.default);

	exports.default = Event;

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

	
	/*
	 * 作者：zhuwz
	 * 日期：2018-12-03 21:39:39.
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Util = __webpack_require__(3);

	var Util = _interopRequireWildcard(_Util);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Class = function () {
	    // 通用构造方法
	    function Class(params) {
	        _classCallCheck(this, Class);

	        if (params && Util.isJson(params)) {
	            this._uuid = params.uuid;
	            this._parseJson(params);
	        }
	        this._uuid = this._uuid || Util.createGuid();
	    }

	    _createClass(Class, [{
	        key: '_parseJson',
	        value: function _parseJson(params, post) {}

	        /**
	         * 绑定回调事件,为了方便,都写到这里了
	         * @param callback {Function} 回调函数
	         */

	    }, {
	        key: 'bindCallback',
	        value: function bindCallback(callback) {
	            var _target = null;
	            if (this.map) {
	                _target = this.map._messageManager;
	            } else if (this._messageManager) {
	                _target = this._messageManager;
	            }
	            if (_target != null) {
	                _target.bindCallback(this.id, callback, this);
	            }
	        }

	        /**
	         * 设置地球实体
	         * @param map {Uninpho.Map} Map对象
	         */

	    }, {
	        key: 'setMap',
	        value: function setMap(map) {
	            this.map = map;
	            if (this._callBack && Util.$.isFunction(this._callBack)) {
	                this.bindCallback(this._callBack);
	            }
	        }
	    }, {
	        key: 'setProps',
	        value: function setProps(options) {
	            for (var key in options) {
	                this[key] = options[key];
	            }
	        }

	        /**
	         * 向实体传送消息
	         * @param messageType {String} 消息类型
	         * @param para1 {Object} 消息参数
	         * @param para2 {Object} 消息参数
	         */

	    }, {
	        key: 'postMessage',
	        value: function postMessage(messageType, para1, para2) {
	            var _target = null;
	            if (this.map) {
	                _target = this.map._messageManager;
	                _target.postMessage(this.id, messageType, para1, para2);
	            } else if (this._messageManager) {
	                _target = this._messageManager;
	                _target.postMessage(messageType, para1, para2);
	            }
	        }
	    }, {
	        key: 'toXml',


	        /**
	         * 转化为xml描述
	         * @return {string} xml描述文本
	         */
	        value: function toXml() {
	            return this._toXml();
	        }

	        /**
	         * 转化为xml描述
	         * @param innerXML {string} 插入到标签中的xml文本
	         * @return {string} xml描述文本
	         * @private
	         */

	    }, {
	        key: '_toXml',
	        value: function _toXml() {
	            var innerXML = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

	            return Util.replaceXmlSpace('<' + this.tag + '><uuid>' + this.id + '</uuid>' + innerXML + '</' + this.tag + '>');
	        }

	        /**
	         * 转换为json数据
	         */

	    }, {
	        key: '_toJson',
	        value: function _toJson(child) {
	            var obj = { uuid: this.id };
	            if (child) {
	                for (var key in child) {
	                    obj[key] = child[key];
	                }
	            }

	            return _defineProperty({}, this.tag, obj);
	        }
	    }, {
	        key: 'uuid',
	        set: function set(uuid) {
	            if (!this._uuid) {
	                this._uuid = uuid;
	            }
	        }
	    }, {
	        key: 'id',
	        get: function get() {
	            return this._uuid;
	        }

	        /**
	         * 返回该类对应的xml标签
	         * @return {string}
	         */

	    }, {
	        key: 'tag',
	        get: function get() {
	            return 'Class';
	        }
	    }]);

	    return Class;
	}();

	exports.default = Class;

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Plugin2 = __webpack_require__(21);

	var _Plugin3 = _interopRequireDefault(_Plugin2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 作者：zhuwz
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 日期：2018-12-03 21:39:39.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


	/**
	 * (挂件类基类)需要用户继承该类实现自己的类。
	 * 由{@link PluginManager}统一管理.
	 * 继承挂件的类之间是不互斥的（多了个插件可以同时开启）
	 * @augments Plugin 
	 */
	var Widget = function (_Plugin) {
	    _inherits(Widget, _Plugin);

	    function Widget(options) {
	        _classCallCheck(this, Widget);

	        var _this = _possibleConstructorReturn(this, (Widget.__proto__ || Object.getPrototypeOf(Widget)).call(this, options));

	        _this._type = 'widget';
	        _this._isUsing = false;
	        return _this;
	    }

	    _createClass(Widget, [{
	        key: 'type',
	        set: function set(type) {
	            this._type = 'widget';
	        },
	        get: function get() {
	            return this._type;
	        }
	    }, {
	        key: 'isUsing',
	        set: function set(isusing) {
	            this._isUsing = isusing;
	        }

	        /**
	         * 判断挂件是否使用
	         * @type {boolean}
	         */
	        ,
	        get: function get() {
	            return this._isUsing;
	        }

	        // 与c++插件关联

	    }, {
	        key: 'registerName',
	        set: function set(registerName) {
	            this._registerName = registerName;
	            if (this.earth && this._registerName) {
	                // this.earth._usingWidget(this._registerName, this);
	            }
	        }
	    }]);

	    return Widget;
	}(_Plugin3.default);

	exports.default = Widget;

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Event2 = __webpack_require__(18);

	var _Event3 = _interopRequireDefault(_Event2);

	var _Util = __webpack_require__(10);

	var _i18n = __webpack_require__(22);

	var _i18n2 = _interopRequireDefault(_i18n);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 作者：zhuwz
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 日期：2018-12-03 21:39:39.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


	var varRegExp = /\\?\{\{([^{}]+)\}\}/g;

	/**
	 * （抽象类）插件基类 {@link Tool} 与 {@link Widget} 继承自该类
	 */

	var Plugin = function (_Event) {
	    _inherits(Plugin, _Event);

	    function Plugin(params) {
	        _classCallCheck(this, Plugin);

	        var _this = _possibleConstructorReturn(this, (Plugin.__proto__ || Object.getPrototypeOf(Plugin)).call(this, params));

	        for (var key in params) {
	            if (params[key] && key !== 'uuid') {
	                _this[key] = params[key];
	            }
	        }
	        _this._loadLanguage();
	        return _this;
	    }

	    _createClass(Plugin, [{
	        key: '_loadLanguage',
	        value: function _loadLanguage() {
	            if (this.language) {
	                var lanProp = {
	                    path: this.url,
	                    name: this.language,
	                    mode: 'map',
	                    language: 'zh'
	                };
	                _i18n2.default.properties(lanProp);
	            }
	        }
	    }, {
	        key: '_loadLanguageCallback',
	        value: function _loadLanguageCallback() {
	            this._isLoadLanguageOk = true;
	        }
	    }, {
	        key: 'getValue',
	        value: function getValue(key) {
	            return _i18n2.default.prop(key);
	        }
	    }, {
	        key: '_init',
	        value: function _init() {
	            if (this.reference) {
	                this.reference();
	                var isLoad = false;
	                if (this.html) {
	                    this.loadHtml(this.html);
	                    isLoad = true;
	                }
	                if (this.css) {
	                    this.loadCss(this.css);
	                    isLoad = true;
	                }
	                if (this.script) {
	                    this.synLoadScript(this.script);
	                } else {
	                    this.init();
	                }
	            } else {
	                this.init();
	            }
	        }

	        /**
	         * 插件被启用时调用
	         */

	    }, {
	        key: 'init',
	        value: function init() {}
	    }, {
	        key: '_remove',
	        value: function _remove() {
	            this.remove();
	            this._removeUI();
	        }

	        /**
	         * 插件被关闭时调用
	         */

	    }, {
	        key: 'remove',
	        value: function remove() {}
	    }, {
	        key: 'loadCss',
	        value: function loadCss(urls) {
	            var _this2 = this;

	            if (typeof urls === 'string') urls = [urls];
	            var head = document.getElementsByTagName('head')[0];
	            var _iteratorNormalCompletion = true;
	            var _didIteratorError = false;
	            var _iteratorError = undefined;

	            try {
	                var _loop = function _loop() {
	                    var url = _step.value;

	                    var link = document.createElement('link');
	                    link.type = 'text/css';
	                    link.rel = 'stylesheet';
	                    link.href = _this2.formatURL(url);
	                    var response = _Util.$.ajax({
	                        async: false,
	                        url: link.href
	                    });
	                    response.done(function () {
	                        head.appendChild(link);
	                        if (!_this2.link) {
	                            _this2.link = [];
	                        }
	                        _this2.link.push(link);
	                    });
	                    response.fail(function (msg) {
	                        console.error(msg);
	                    });
	                };

	                for (var _iterator = urls[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	                    _loop();
	                }
	            } catch (err) {
	                _didIteratorError = true;
	                _iteratorError = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion && _iterator.return) {
	                        _iterator.return();
	                    }
	                } finally {
	                    if (_didIteratorError) {
	                        throw _iteratorError;
	                    }
	                }
	            }
	        }
	    }, {
	        key: 'loadScript',
	        value: function loadScript(urls) {
	            var _this3 = this;

	            if (typeof urls === 'string') urls = [urls];
	            var head = document.getElementsByTagName('head')[0];
	            var _iteratorNormalCompletion2 = true;
	            var _didIteratorError2 = false;
	            var _iteratorError2 = undefined;

	            try {
	                var _loop2 = function _loop2() {
	                    var url = _step2.value;

	                    var jsScript = document.createElement('script');
	                    jsScript.src = _this3.formatURL(url);
	                    head.appendChild(jsScript);
	                    jsScript.onload = function () {
	                        if (!_this3.scripts) _this3.scripts = [];
	                        _this3.scripts.push(jsScript);
	                        if (urls.length === _this3.scripts.length) _this3.init();
	                    };
	                };

	                for (var _iterator2 = urls[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	                    _loop2();
	                }
	            } catch (err) {
	                _didIteratorError2 = true;
	                _iteratorError2 = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
	                        _iterator2.return();
	                    }
	                } finally {
	                    if (_didIteratorError2) {
	                        throw _iteratorError2;
	                    }
	                }
	            }
	        }
	    }, {
	        key: 'synLoadScript',
	        value: function synLoadScript(urls) {
	            var tempUrls = void 0;
	            if (typeof urls === 'string') {
	                tempUrls = [urls];
	            } else {
	                tempUrls = [];
	                var _iteratorNormalCompletion3 = true;
	                var _didIteratorError3 = false;
	                var _iteratorError3 = undefined;

	                try {
	                    for (var _iterator3 = urls[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	                        var item = _step3.value;

	                        tempUrls.push(item);
	                    }
	                } catch (err) {
	                    _didIteratorError3 = true;
	                    _iteratorError3 = err;
	                } finally {
	                    try {
	                        if (!_iteratorNormalCompletion3 && _iterator3.return) {
	                            _iterator3.return();
	                        }
	                    } finally {
	                        if (_didIteratorError3) {
	                            throw _iteratorError3;
	                        }
	                    }
	                }
	            }
	            this._synLoadScript(tempUrls);
	        }
	    }, {
	        key: '_synLoadScript',
	        value: function _synLoadScript(urls) {
	            var _this4 = this;

	            var head = document.getElementsByTagName('head')[0];
	            var jsScript = document.createElement('script');
	            jsScript.src = this.formatURL(urls[0]);
	            //head.appendChild(jsScript);
	            head.insertBefore(jsScript, head.childNodes[0]);
	            jsScript.onload = function () {
	                urls.splice(0, 1);
	                if (urls[0]) {
	                    if (!_this4.scripts) _this4.scripts = [];
	                    _this4.scripts.push(jsScript);
	                    _this4.synLoadScript(urls);
	                } else {
	                    _this4.init();
	                }
	            };
	        }
	    }, {
	        key: 'loadHtml',
	        value: function loadHtml(url) {
	            var _this5 = this;

	            if (url instanceof Array) {
	                url = url[0];
	                console.warn('暂不支持一个插件包含多个界面');
	            }
	            var htmlObj = _Util.$.ajax({
	                url: this.formatURL(url),
	                dataType: 'html',
	                async: false
	            });
	            var start = htmlObj.responseText.indexOf('<body>') + 6;
	            var end = htmlObj.responseText.indexOf('</body>');
	            if (start < 6 || start > end) return;
	            var htmlStr = htmlObj.responseText.substring(start, end);
	            htmlStr = htmlStr.replace(/src=".\/\S*"/g, function ($0) {
	                var fullUrl = _this5.formatURL($0.substring(5, $0.length - 1));
	                return 'src="' + fullUrl + '"';
	            });
	            htmlStr = htmlStr.replace(/url\(('|"){0,1}.\/\S*('|"){0,1}\)/g, function ($0) {
	                if (/^url\(('|")/.test($0)) return 'url(' + _this5.formatURL($0.substring(5, $0.length - 2)) + ')';
	                return 'url(' + _this5.formatURL($0.substring(4, $0.length - 1)) + ')';
	            });
	            if (htmlStr) {
	                htmlStr = this._formatMessage(htmlStr);
	                var parseHTML = _Util.$.parseHTML(htmlStr, true);
	                var _iteratorNormalCompletion4 = true;
	                var _didIteratorError4 = false;
	                var _iteratorError4 = undefined;

	                try {
	                    for (var _iterator4 = parseHTML[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
	                        var preHTML = _step4.value;

	                        if ((0, _Util.$)(preHTML).attr('src')) {
	                            (0, _Util.$)(preHTML).attr('src', this.formatURL((0, _Util.$)(preHTML).attr('src')));
	                        } else if ((0, _Util.$)(preHTML).attr('href')) {
	                            (0, _Util.$)(preHTML).attr('href', this.formatURL((0, _Util.$)(preHTML).attr('href')));
	                        }
	                    }
	                } catch (err) {
	                    _didIteratorError4 = true;
	                    _iteratorError4 = err;
	                } finally {
	                    try {
	                        if (!_iteratorNormalCompletion4 && _iterator4.return) {
	                            _iterator4.return();
	                        }
	                    } finally {
	                        if (_didIteratorError4) {
	                            throw _iteratorError4;
	                        }
	                    }
	                }

	                (0, _Util.$)(this.container).append(parseHTML);
	            }
	        }
	    }, {
	        key: '_formatMessage',
	        value: function _formatMessage(bodyStr) {
	            var _this6 = this;

	            return bodyStr.replace(varRegExp, function (match, name) {
	                return _this6.getValue(name.replace(/(^\s*)|(\s*$)/g, ''));
	            });
	        }
	    }, {
	        key: '_removeUI',
	        value: function _removeUI() {

	            if (this.container) {
	                var childs = this.container.childNodes;
	                while (childs.length > 0) {
	                    this.container.removeChild(childs[childs.length - 1]);
	                }
	            }
	            var head = document.getElementsByTagName('head')[0];
	            if (this.link && this.link.length > 0) {
	                for (var i = 0; i < this.link.length; i++) {
	                    if (this.link[i]) head.removeChild(this.link[i]);
	                }
	                this.link = [];
	            }

	            if (this.scripts && this.scripts.length > 0) {
	                for (var j = 0; j < this.scripts.length; j++) {
	                    if (this.scripts[j]) head.removeChild(this.scripts[j]);
	                }
	                this.scripts = [];
	            }
	        }

	        /**
	         * 以插件目录为根目录获取文件网络路径
	         * @param {string} file 相对插件目录的相对路径
	         */

	    }, {
	        key: 'formatURL',
	        value: function formatURL(file) {
	            //判断是否是网络路径
	            if (file.startsWith('https:')) return file;

	            // 没有比较就没有相对路径, 自己定义的路径认为绝对路径
	            if (!this.url || this.url === null) return file;
	            var tempUrl = file.split('/');
	            var base = this.url.split('/');
	            // 去掉末尾的‘/’
	            if (base[base.length - 1] === '') base.pop();
	            var res = '';
	            for (var i = 0; i < tempUrl.length; i += 1) {
	                if (i === 0 && tempUrl[i] === '.') i += 1;
	                if (tempUrl[i] === '..') {
	                    base.pop();
	                } else {
	                    base.push(tempUrl[i]);
	                }
	            }
	            for (var _i = 0; _i < base.length; _i += 1) {
	                var sp = _i === base.length - 1 ? '' : '/';
	                res += base[_i] + sp;
	            }
	            return res;
	        }
	    }, {
	        key: 'formatHostURL',
	        value: function formatHostURL(file) {
	            return window.location.origin ? window.location.origin + this.formatURL(file) : this.formatURL(file);
	        }
	    }, {
	        key: 'display',
	        value: function display(isshow) {
	            if (isshow === false) {
	                this.container.style.display = 'none';
	            } else {
	                var id = this.container.id;
	                (0, _Util.$)('#' + id).attr('style', '');
	            }
	        }
	    }, {
	        key: 'type',
	        get: function get() {
	            return this.type;
	        }
	    }, {
	        key: 'key',
	        get: function get() {
	            return this.name;
	        }
	    }, {
	        key: 'transition',
	        set: function set(isTrans) {
	            if (isTrans === true) {
	                this.container.className = 'transition_left';
	            }
	            this._transition = isTrans;
	        },
	        get: function get() {
	            if (this._transition) return this._transition;
	            return false;
	        }
	    }, {
	        key: 'setting',
	        get: function get() {
	            // let param = '';
	            // let setURL = '';
	            // if (this.earth && this.earth.plugincenter) {
	            //     param += this.earth.plugincenter.split('?')[1];
	            //     param += `&plugin=${this.name}`;
	            //     setURL = `${Config.Center.PluginCenter.getPluginSetting}${param === '' ? '' : `?${param}`}`;
	            // } else {
	            //     setURL = `${this.url}setting.json`;
	            // }
	            var setURL = this.url + 'setting.json';
	            var response = _Util.$.ajax({
	                async: false,
	                url: setURL
	            });
	            if (/^Cannot/.test(response.responseText) === true) return undefined;else if (response.responseText === '') return undefined;
	            try {
	                JSON.parse(response.responseText);
	            } catch (e) {
	                return undefined;
	            }
	            return JSON.parse(response.responseText)[this.name] ? JSON.parse(response.responseText)[this.name] : JSON.parse(response.responseText);
	        }
	    }]);

	    return Plugin;
	}(_Event3.default);

	exports.default = Plugin;

/***/ }),
/* 22 */
/***/ (function(module, exports) {

	/*
	 * 作者：zhuwz
	 * 日期：2018-12-03 21:39:39.
	 */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var i18n = {};

	/** Map holding bundle keys (if mode: 'map') */
	i18n.map = {};

	var debug = function debug(message) {
	    console.log('i18n::' + message);
	};

	/**
	 * Load and parse message bundle files (.properties),
	 * making bundles keys available as javascript variables.
	 *
	 * i18n files are named <name>.js, or <name>_<language>.js or <name>_<language>_<country>.js
	 * Where:
	 *      The <language> argument is a valid ISO Language Code. These codes are the lower-case,
	 *      two-letter codes as defined by ISO-639. You can find a full list of these codes at a
	 *      number of sites, such as: http://www.loc.gov/standards/iso639-2/englangn.html
	 *      The <country> argument is a valid ISO Country Code. These codes are the upper-case,
	 *      two-letter codes as defined by ISO-3166. You can find a full list of these codes at a
	 *      number of sites, such as: http://www.iso.ch/iso/en/prods-services/iso3166ma/02iso-3166-code-lists/list-en1.html
	 *
	 * Sample usage for a bundles/Messages.properties bundle:
	 * i18n.properties({
	     *      name:      'Messages',
	     *      language:  'en_US',
	     *      path:      'bundles'
	     * });
	 * @param  name      (string/string[], optional) names of file to load (eg, 'Messages' or ['Msg1','Msg2']). Defaults to "Messages"
	 * @param  language    (string, optional) language/country code (eg, 'en', 'en_US', 'pt_BR'). if not specified, language reported by the browser will be used instead.
	 * @param  path      (string, optional) path of directory that contains file to load
	 * @param  mode      (string, optional) whether bundles keys are available as JavaScript variables/functions or as a map (eg, 'vars' or 'map')
	 * @param  debug     (boolean, optional) whether debug statements are logged at the console
	 * @param  cache        (boolean, optional) whether bundles should be cached by the browser, or forcibly reloaded on each page load. Defaults to false (i.e. forcibly reloaded)
	 * @param  encoding  (string, optional) the encoding to request for bundles. Property file resource bundles are specified to be in ISO-8859-1 format. Defaults to UTF-8 for backward compatibility.
	 * @param  callback     (function, optional) callback function to be called after script is terminated
	 */
	i18n.properties = function (settings) {

	    var defaults = {
	        name: 'Messages',
	        language: '',
	        path: '',
	        mode: 'vars',
	        cache: false,
	        debug: false,
	        encoding: 'UTF-8',
	        async: false,
	        callback: null
	    };
	    settings = $.extend(defaults, settings);

	    // Ensure a trailing slash
	    if (!settings.path.match(/\/$/)) settings.path += '/';

	    // Try to ensure that we have at a least a two letter language code
	    settings.language = this.normaliseLanguageCode(settings.language);

	    // Ensure an array
	    var files = settings.name && settings.name.constructor === Array ? settings.name : [settings.name];

	    // A locale is at least a language code which means at least two files per name. If
	    // we also have a country code, thats an extra file per name.
	    settings.totalFiles = files.length * 2 + (settings.language.length >= 5 ? files.length : 0);
	    if (settings.debug) {
	        debug('totalFiles: ' + settings.totalFiles);
	    }

	    settings.filesLoaded = 0;

	    files.forEach(function (file) {

	        var defaultFileName, shortFileName, longFileName;
	        // 1. load base (eg, Messages.properties)
	        defaultFileName = settings.path + file + '.properties';
	        // 2. with language code (eg, Messages_pt.properties)
	        var shortCode = settings.language.substring(0, 2);
	        shortFileName = settings.path + file + '_' + shortCode + '.properties';
	        // 3. with language code and country code (eg, Messages_pt_BR.properties)
	        if (settings.language.length >= 5) {
	            var longCode = settings.language.substring(0, 5);
	            longFileName = settings.path + file + '_' + longCode + '.properties';
	        }
	        loadAndParseFiles([defaultFileName, shortFileName, longFileName], settings);
	    });

	    // call callback
	    if (settings.callback && !settings.async) {
	        settings.callback();
	    }
	}; // properties

	/**
	 * When configured with mode: 'map', allows access to bundle values by specifying its key.
	 * Eg, jQuery.i18n.prop('com.company.bundles.menu_add')
	 */
	i18n.prop = function (key /* Add parameters as function arguments as necessary  */) {

	    var value = i18n.map[key];
	    if (value === null) {
	        return '[' + key + ']';
	    }
	    if (typeof value === 'undefined') {
	        return key;
	    }

	    var phvList;
	    if (arguments.length == 2 && $.isArray(arguments[1])) {
	        // An array was passed as the only parameter, so assume it is the list of place holder values.
	        phvList = arguments[1];
	    }

	    // Place holder replacement
	    /**
	     * Tested with:
	     *   test.t1=asdf ''{0}''
	     *   test.t2=asdf '{0}' '{1}'{1}'zxcv
	     *   test.t3=This is \"a quote" 'a''{0}''s'd{fgh{ij'
	        *   test.t4="'''{'0}''" {0}{a}
	        *   test.t5="'''{0}'''" {1}
	        *   test.t6=a {1} b {0} c
	        *   test.t7=a 'quoted \\ s\ttringy' \t\t x
	        *
	        * Produces:
	        *   test.t1, p1 ==> asdf 'p1'
	        *   test.t2, p1 ==> asdf {0} {1}{1}zxcv
	        *   test.t3, p1 ==> This is "a quote" a'{0}'sd{fgh{ij
	        *   test.t4, p1 ==> "'{0}'" p1{a}
	        *   test.t5, p1 ==> "'{0}'" {1}
	        *   test.t6, p1 ==> a {1} b p1 c
	        *   test.t6, p1, p2 ==> a p2 b p1 c
	        *   test.t6, p1, p2, p3 ==> a p2 b p1 c
	        *   test.t7 ==> a quoted \ s	tringy 		 x
	        */

	    var i;
	    if (typeof value == 'string') {
	        // Handle escape characters. Done separately from the tokenizing loop below because escape characters are
	        // active in quoted strings.
	        i = 0;
	        while ((i = value.indexOf('\\', i)) != -1) {
	            if (value.charAt(i + 1) == 't') {
	                value = value.substring(0, i) + '\t' + value.substring(i++ + 2); // tab
	            } else if (value.charAt(i + 1) == 'r') {
	                value = value.substring(0, i) + '\r' + value.substring(i++ + 2); // return
	            } else if (value.charAt(i + 1) == 'n') {
	                value = value.substring(0, i) + '\n' + value.substring(i++ + 2); // line feed
	            } else if (value.charAt(i + 1) == 'f') {
	                value = value.substring(0, i) + '\f' + value.substring(i++ + 2); // form feed
	            } else if (value.charAt(i + 1) == '\\') {
	                value = value.substring(0, i) + '\\' + value.substring(i++ + 2); // \
	            } else {
	                value = value.substring(0, i) + value.substring(i + 1); // Quietly drop the character
	            }
	        }

	        // Lazily convert the string to a list of tokens.
	        var arr = [],
	            j,
	            index;
	        i = 0;
	        while (i < value.length) {
	            if (value.charAt(i) == '\'') {
	                // Handle quotes
	                if (i == value.length - 1) {
	                    value = value.substring(0, i); // Silently drop the trailing quote
	                } else if (value.charAt(i + 1) == '\'') {
	                    value = value.substring(0, i) + value.substring(++i); // Escaped quote
	                } else {
	                    // Quoted string
	                    j = i + 2;
	                    while ((j = value.indexOf('\'', j)) != -1) {
	                        if (j == value.length - 1 || value.charAt(j + 1) != '\'') {
	                            // Found start and end quotes. Remove them
	                            value = value.substring(0, i) + value.substring(i + 1, j) + value.substring(j + 1);
	                            i = j - 1;
	                            break;
	                        } else {
	                            // Found a double quote, reduce to a single quote.
	                            value = value.substring(0, j) + value.substring(++j);
	                        }
	                    }

	                    if (j == -1) {
	                        // There is no end quote. Drop the start quote
	                        value = value.substring(0, i) + value.substring(i + 1);
	                    }
	                }
	            } else if (value.charAt(i) == '{') {
	                // Beginning of an unquoted place holder.
	                j = value.indexOf('}', i + 1);
	                if (j == -1) {
	                    i++; // No end. Process the rest of the line. Java would throw an exception
	                } else {
	                    // Add 1 to the index so that it aligns with the function arguments.
	                    index = parseInt(value.substring(i + 1, j));
	                    if (!isNaN(index) && index >= 0) {
	                        // Put the line thus far (if it isn't empty) into the array
	                        var s = value.substring(0, i);
	                        if (s !== "") {
	                            arr.push(s);
	                        }
	                        // Put the parameter reference into the array
	                        arr.push(index);
	                        // Start the processing over again starting from the rest of the line.
	                        i = 0;
	                        value = value.substring(j + 1);
	                    } else {
	                        i = j + 1; // Invalid parameter. Leave as is.
	                    }
	                }
	            } else {
	                i++;
	            }
	        } // while

	        // Put the remainder of the no-empty line into the array.
	        if (value !== "") {
	            arr.push(value);
	        }
	        value = arr;

	        // Make the array the value for the entry.
	        i18n.map[key] = arr;
	    }

	    if (value.length === 0) {
	        return "";
	    }
	    if (value.length == 1 && typeof value[0] == "string") {
	        return value[0];
	    }

	    var str = "";
	    for (i = 0, j = value.length; i < j; i++) {
	        if (typeof value[i] == "string") {
	            str += value[i];
	        } else if (phvList && value[i] < phvList.length) {
	            // Must be a number
	            str += phvList[value[i]];
	        } else if (!phvList && value[i] + 1 < arguments.length) {
	            str += arguments[value[i] + 1];
	        } else {
	            str += "{" + value[i] + "}";
	        }
	    }

	    return str;
	};

	function callbackIfComplete(settings) {

	    if (settings.debug) {
	        debug('callbackIfComplete()');
	        debug('totalFiles: ' + settings.totalFiles);
	        debug('filesLoaded: ' + settings.filesLoaded);
	    }

	    if (settings.async) {
	        if (settings.filesLoaded === settings.totalFiles) {
	            if (settings.callback) {
	                settings.callback();
	            }
	        }
	    }
	}

	function loadAndParseFiles(filenames, settings) {

	    if (settings.debug) debug('loadAndParseFiles');

	    if (filenames !== null && filenames.length > 0) {
	        loadAndParseFile(filenames[0], settings, function () {
	            filenames.shift();
	            loadAndParseFiles(filenames, settings);
	        });
	    } else {
	        callbackIfComplete(settings);
	    }
	}

	/** Load and parse .properties files */
	function loadAndParseFile(filename, settings, nextFile) {

	    if (settings.debug) {
	        debug('loadAndParseFile(\'' + filename + '\')');
	        debug('totalFiles: ' + settings.totalFiles);
	        debug('filesLoaded: ' + settings.filesLoaded);
	    }

	    if (filename !== null && typeof filename !== 'undefined') {
	        $.ajax({
	            url: filename,
	            async: settings.async,
	            cache: settings.cache,
	            dataType: 'text',
	            success: function success(data, status) {

	                if (settings.debug) {
	                    debug('Succeeded in downloading ' + filename + '.');
	                    debug(data);
	                }

	                parseData(data, settings);
	                nextFile();
	            },
	            error: function error(jqXHR, textStatus, errorThrown) {

	                if (settings.debug) {
	                    debug('Failed to download or parse ' + filename + '. errorThrown: ' + errorThrown);
	                }
	                if (jqXHR.status === 404) {
	                    settings.totalFiles -= 1;
	                }
	                nextFile();
	            }
	        });
	    }
	}

	/** Parse .properties files */
	function parseData(data, settings) {

	    var parsed = '';
	    var lines = data.split(/\n/);
	    var regPlaceHolder = /(\{\d+})/g;
	    var regRepPlaceHolder = /\{(\d+)}/g;
	    var unicodeRE = /(\\u.{4})/ig;
	    lines.forEach(function (line, i) {

	        line = line.trim();
	        if (line.length > 0 && line.match("^#") != "#") {
	            // skip comments
	            var pair = line.split('=');
	            if (pair.length > 0) {
	                /** Process key & value */
	                var name = decodeURI(pair[0]).trim();
	                var value = pair.length == 1 ? "" : pair[1];
	                // process multi-line values
	                while (value.match(/\\$/) === "\\") {
	                    value = value.substring(0, value.length - 1);
	                    value += lines[++i].trimRight();
	                }
	                // Put values with embedded '='s back together
	                for (var s = 2; s < pair.length; s++) {
	                    value += '=' + pair[s];
	                }
	                value = value.trim();

	                /** Mode: bundle keys in a map */
	                if (settings.mode == 'map' || settings.mode == 'both') {
	                    // handle unicode chars possibly left out
	                    var unicodeMatches = value.match(unicodeRE);
	                    if (unicodeMatches) {
	                        unicodeMatches.forEach(function (match) {
	                            value = value.replace(match, unescapeUnicode(match));
	                        });
	                    }
	                    // add to map
	                    i18n.map[name] = value;
	                }

	                /** Mode: bundle keys as vars/functions */
	                if (settings.mode == 'vars' || settings.mode == 'both') {
	                    value = value.replace(/"/g, '\\"'); // escape quotation mark (")

	                    // make sure namespaced key exists (eg, 'some.key')
	                    checkKeyNamespace(name);

	                    // value with variable substitutions
	                    if (regPlaceHolder.test(value)) {
	                        var parts = value.split(regPlaceHolder);
	                        // process function args
	                        var first = true;
	                        var fnArgs = '';
	                        var usedArgs = [];
	                        parts.forEach(function (part) {

	                            if (regPlaceHolder.test(part) && (usedArgs.length === 0 || usedArgs.indexOf(part) == -1)) {
	                                if (!first) {
	                                    fnArgs += ',';
	                                }
	                                fnArgs += part.replace(regRepPlaceHolder, 'v$1');
	                                usedArgs.push(part);
	                                first = false;
	                            }
	                        });
	                        parsed += name + '=function(' + fnArgs + '){';
	                        // process function body
	                        var fnExpr = '"' + value.replace(regRepPlaceHolder, '"+v$1+"') + '"';
	                        parsed += 'return ' + fnExpr + ';' + '};';
	                        // simple value
	                    } else {
	                        parsed += name + '="' + value + '";';
	                    }
	                } // END: Mode: bundle keys as vars/functions
	            } // END: if(pair.length > 0)
	        } // END: skip comments
	    });
	    eval(parsed);
	    settings.filesLoaded += 1;
	}

	/** Make sure namespace exists (for keys with dots in name) */
	// TODO key parts that start with numbers quietly fail. i.e. month.short.1=Jan
	function checkKeyNamespace(key) {

	    var regDot = /\./;
	    if (regDot.test(key)) {
	        var fullname = '';
	        var names = key.split(/\./);
	        names.forEach(function (name, i) {

	            if (i > 0) {
	                fullname += '.';
	            }
	            fullname += name;
	            if (eval('typeof ' + fullname + ' == "undefined"')) {
	                eval(fullname + '={};');
	            }
	        });
	    }
	}

	/** Ensure language code is in the format aa_AA. */
	i18n.normaliseLanguageCode = function (lang) {

	    if (!lang || lang.length < 2) {
	        lang = navigator.languages ? navigator.languages[0] : navigator.language || navigator.userLanguage /* IE */ || 'en';
	    }

	    lang = lang.toLowerCase();
	    lang = lang.replace(/-/, "_"); // some browsers report language as en-US instead of en_US
	    if (lang.length > 3) {
	        lang = lang.substring(0, 3) + lang.substring(3).toUpperCase();
	    }
	    return lang;
	};

	/** Unescape unicode chars ('\u00e3') */
	function unescapeUnicode(str) {

	    // unescape unicode codes
	    var codes = [];
	    var code = parseInt(str.substr(2), 16);
	    if (code >= 0 && code < Math.pow(2, 16)) {
	        codes.push(code);
	    }
	    // convert codes to text
	    return codes.reduce(function (acc, val) {
	        return acc + String.fromCharCode(val);
	    }, '');
	}
	exports.default = i18n;

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Plugin2 = __webpack_require__(21);

	var _Plugin3 = _interopRequireDefault(_Plugin2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 作者：zhuwz
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 日期：2018-12-03 21:39:39.
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


	/**
	 * (工具类基类)需要用户继承该类实现自己的类。
	 * 由{@link PluginManager}统一管理.
	 * 继承工具的类之间是相互互斥的（一次正能开启一个工具）
	 * @augments Plugin 
	 */
	var Tool = function (_Plugin) {
	    _inherits(Tool, _Plugin);

	    function Tool(options) {
	        _classCallCheck(this, Tool);

	        var _this = _possibleConstructorReturn(this, (Tool.__proto__ || Object.getPrototypeOf(Tool)).call(this, options));

	        _this._type = 'tool';
	        _this._isCurrentTool = false;
	        return _this;
	    }

	    _createClass(Tool, [{
	        key: 'type',
	        set: function set(type) {
	            this._type = 'tool';
	        },
	        get: function get() {
	            return this._type;
	        }
	    }, {
	        key: 'isCurrentTool',
	        set: function set(isCurrentTool) {
	            this._isCurrentTool = isCurrentTool;
	        }

	        /**
	         * 是否是当前工具
	         * @type {boolean}
	         */
	        ,
	        get: function get() {
	            return this._isCurrentTool;
	        }
	    }, {
	        key: 'active',
	        set: function set() {
	            var status = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

	            this._active = status;
	            if (typeof status === 'boolean' && status) {
	                if (this._manager) {
	                    this._manager._activeTool(this);
	                }
	            }
	        },
	        get: function get() {
	            return this._active;
	        }
	    }]);

	    return Tool;
	}(_Plugin3.default);

	exports.default = Tool;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Project = __webpack_require__(25);

	var _Project2 = _interopRequireDefault(_Project);

	var _ImageResource = __webpack_require__(69);

	var _ImageResource2 = _interopRequireDefault(_ImageResource);

	var _Navigation = __webpack_require__(70);

	var _Navigation2 = _interopRequireDefault(_Navigation);

	var _EventHelper = __webpack_require__(78);

	var _EventHelper2 = _interopRequireDefault(_EventHelper);

	var _GraphicLayer = __webpack_require__(79);

	var _GraphicLayer2 = _interopRequireDefault(_GraphicLayer);

	var _DrawTool = __webpack_require__(38);

	var _DrawTool2 = _interopRequireDefault(_DrawTool);

	var _Config = __webpack_require__(26);

	var _Config2 = _interopRequireDefault(_Config);

	var _Analysis = __webpack_require__(80);

	var _Analysis2 = _interopRequireDefault(_Analysis);

	var _EnvEffects = __webpack_require__(93);

	var _EnvEffects2 = _interopRequireDefault(_EnvEffects);

	var _CanvasRecorder = __webpack_require__(105);

	var _CanvasRecorder2 = _interopRequireDefault(_CanvasRecorder);

	var _PluginManager = __webpack_require__(15);

	var _PluginManager2 = _interopRequireDefault(_PluginManager);

	var _LicManager = __webpack_require__(106);

	var _LicManager2 = _interopRequireDefault(_LicManager);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 作者：zhuwz
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 日期：2018.11.22
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

	//import CesiumNavigation from "cesium-navigation-es6";


	var Viewer = function (_Cesium$Viewer) {
	    _inherits(Viewer, _Cesium$Viewer);

	    /**
	     * @param {Element} container 地球初始化的div元素
	     * @param {Object} [options] 地图配置属性
	     * @param {String} [options.baseLayerPicker=false] 基础影像
	     */
	    function Viewer(container, options) {
	        _classCallCheck(this, Viewer);

	        var defaultOptions = {
	            shouldAnimate: true,
	            animation: false,
	            baseLayerPicker: false,
	            fullscreenButton: false,
	            vrButton: false,
	            geocoder: false,
	            homeButton: false,
	            infoBox: false,
	            sceneModePicker: false,
	            navigation: true,
	            timeline: false,
	            navigationHelpButton: false,
	            navigationInstructionsInitiallyVisible: false,
	            // imageryProvider: new Cesium.SingleTileImageryProvider({
	            //     url: Config.baseMapUrl()
	            // }),
	            contextOptions: {
	                webgl: {
	                    alpha: true,
	                    depth: false,
	                    stencil: true,
	                    antialias: true,
	                    premultipliedAlpha: true,
	                    preserveDrawingBuffer: true, //通过canvas.toDataURL()实现截图需要将该项设置为true
	                    failIfMajorPerformanceCaveat: true
	                },
	                allowTextureFilterAnisotropic: true
	            }
	        };

	        if (!options) {
	            options = defaultOptions;
	        } else {
	            for (var key in defaultOptions) {
	                if (!Cesium.defined(options[key])) {
	                    options[key] = defaultOptions[key];
	                }
	            }
	        }
	        // if(options.globe==false)
	        //     options.imageryProvider = undefined;
	        if (options.globe == true) options.imageryProvider = new Cesium.SingleTileImageryProvider({
	            url: _Config2.default.baseMapUrl()
	        }),

	        //修改相机默认视角
	        Cesium.Camera.DEFAULT_VIEW_RECTANGLE = Cesium.Rectangle.fromDegrees(73, 13, 135, 53);
	        //构造函数

	        var _this = _possibleConstructorReturn(this, (Viewer.__proto__ || Object.getPrototypeOf(Viewer)).call(this, container, options));

	        var result = _LicManager2.default.checkLicense();
	        if (!result) {
	            _this.destroy();
	            return _possibleConstructorReturn(_this);
	        }
	        //导航控件
	        var navOpts = {};
	        // 用于在使用重置导航重置地图视图时设置默认视图控制。接受的值是Cesium.Cartographic 和 Cesium.Rectangle.
	        navOpts.defaultResetView = Cesium.Rectangle.fromDegrees(80, 22, 130, 50);
	        // 用于启用或禁用罗盘。true是启用罗盘，false是禁用罗盘。默认值为true。如果将选项设置为false，则罗盘将不会添加到地图中。
	        navOpts.enableCompass = true;
	        // 用于启用或禁用缩放控件。true是启用，false是禁用。默认值为true。如果将选项设置为false，则缩放控件将不会添加到地图中。
	        navOpts.enableZoomControls = true;
	        // 用于启用或禁用距离图例。true是启用，false是禁用。默认值为true。如果将选项设置为false，距离图例将不会添加到地图中。
	        navOpts.enableDistanceLegend = true;
	        // 用于启用或禁用指南针外环。true是启用，false是禁用。默认值为true。如果将选项设置为false，则该环将可见但无效。
	        navOpts.enableCompassOuterRing = true;
	        // if(options.navigation)
	        //        this.extend(NavigationMixin);

	        //CesiumNavigation(this, options);

	        _this._container = Cesium.getElement(container);
	        _this._drawTool = new _DrawTool2.default(_this);
	        _this._navigation = new _Navigation2.default(_this);

	        //初始化插件中心
	        _this._pluginManager = new _PluginManager2.default(_this);
	        _this._project = new _Project2.default(_this);
	        _this._layerManager = _this._project._layerManager;
	        _this._graphicLayer = new _GraphicLayer2.default(_this);
	        _this._analysis = new _Analysis2.default(_this);
	        _this._envEffects = new _EnvEffects2.default(_this);
	        _this._recorder = null;
	        _this._Config = new _Config2.default(_this);

	        _this._init();
	        return _this;
	    }

	    _createClass(Viewer, [{
	        key: '_init',
	        value: function _init() {
	            //禁止镜头穿地
	            var self = this;
	            this.camera.changed.addEventListener(function () {
	                if (Cesium.GlobeSurfaceOption && Cesium.GlobeSurfaceOption.underGround.enabled) {
	                    return;
	                }
	                if (self.camera._suspendTerrainAdjustment && self.scene.mode === Cesium.SceneMode.SCENE3D) {
	                    self.camera._suspendTerrainAdjustment = false;
	                    self.camera._adjustHeightForTerrain();
	                }
	            });
	            //隐藏底部
	            document.getElementsByClassName("cesium-viewer-bottom")[0].style.display = "none";

	            var evt = new _EventHelper2.default(this);
	            evt.registHotKey();
	        }

	        /**
	         * 是否显示帧率
	         * @type Boolean
	         *
	         * @default false
	         */

	    }, {
	        key: 'fullScreen',


	        /**
	        * 全屏
	        */
	        value: function fullScreen() {
	            this._navigation.ViewPort.fullScreen();
	        }

	        /**
	        * 退出全屏
	        */

	    }, {
	        key: 'exitFullScreen',
	        value: function exitFullScreen() {
	            this._navigation.ViewPort.exitFullScreen();
	        }
	        /**
	         * 鼠标位置挂件
	         * @type {ViewPort} 
	         * @readonly
	         */

	    }, {
	        key: 'exportImage',


	        /**
	         * 导出图片
	         * @param {number} width 宽度
	         * @param {number} height 高度
	         * @return {string} base64格式的图片
	         */
	        value: function exportImage(width, height) {
	            return this._navigation.ViewPort.exportImage(width, height);
	        }

	        /**
	        * 鼠标位置挂件
	        * @type {mousePosition} 
	        * @readonly
	        */

	    }, {
	        key: 'trackPolygon',


	        /**
	         * 绘制多边形
	         * @param {function} callback 绘制完成回调函数
	         */
	        value: function trackPolygon(callback, clampToGround) {
	            return this._graphicLayer.trackPolygon(callback, clampToGround);
	        }

	        /**
	        * 绘制线
	        * @param {function} callback 绘制完成回调函数
	        */

	    }, {
	        key: 'trackPolyline',
	        value: function trackPolyline(callback, clampToGround) {
	            return this._graphicLayer.trackPolyline(callback, clampToGround);
	        }

	        /**
	         * 清空绘制的对象
	         */

	    }, {
	        key: 'clearGraphic',
	        value: function clearGraphic() {
	            return this._graphicLayer.clear();
	        }

	        /**
	         * 图层管理对象
	         * @param {LayerManager}
	         * @readonly
	         */

	    }, {
	        key: 'addPlugin',


	        /**
	         * 添加插件
	         * @param  {Plugin|Object|string} plugin  要添加的插件或者插件中心中的插件名称或者自己定义插件配置
	         * @return {Plugin}      返回插件
	         */
	        value: function addPlugin(plugin) {
	            if (!this._pluginManager) return undefined;
	            return this._pluginManager.addPlugin(plugin);
	        }

	        /**
	         * 移除插件
	         * @param  plugin {CTMap.Plugin|string} 插件名称或者插件信息
	         */

	    }, {
	        key: 'removePlugin',
	        value: function removePlugin(plugin) {
	            if (!this._pluginManager) return undefined;
	            return this._pluginManager.removePlugin(plugin);
	        }

	        /**
	         * 当前工具变化事件
	         * @param  evt {Object} 当前工具发生变化时间
	         */

	    }, {
	        key: 'removePlugin',


	        /**
	         * 移除插件
	         * @param  plugin {CTMap.Plugin|string} 插件名称或者插件信息
	         */
	        value: function removePlugin(plugin) {
	            if (!this._pluginManager) return undefined;
	            return this._pluginManager.removePlugin(plugin);
	        }

	        /**
	         * 使用某个挂件
	         * @param {CTMap.Widget|string} widget 挂件名称或者挂件信息
	         * @return {Widget} 返回挂件
	         */

	    }, {
	        key: 'openWidget',
	        value: function openWidget(widget) {
	            if (!this._pluginManager) return undefined;
	            return this._pluginManager.usingWidget(widget);
	        }

	        /**
	         * 不使用某个挂件
	         * @param {CTMap.Widget|string} widget 挂件名称或者挂件信息
	         */

	    }, {
	        key: 'closeWidget',
	        value: function closeWidget(widget) {
	            if (!this._pluginManager) return undefined;
	            return this._pluginManager.unusingWidget(widget);
	        }

	        /**
	         * 设置当前工具
	         * @param {CTMap.Tool|string} tool 工具名称或者工具信息(当参数为空时关闭所有工具)
	         * @return {CTMap.Tool} 返回工具
	         */

	    }, {
	        key: 'setCurrentTool',
	        value: function setCurrentTool(tool) {
	            if (!this._pluginManager) return undefined;

	            this._pluginManager.currentTool = tool;
	            this._pluginManager.fire('setCurrenTool', tool);
	            if (this._toolChanged) this._toolChanged(tool);
	            return this._pluginManager.currentTool;
	        }

	        /**
	         * 获取当前工具
	         * @return {CTMap.Tool} 返回工具
	         */

	    }, {
	        key: 'getCurrentTool',
	        value: function getCurrentTool() {
	            return this._pluginManager ? this._pluginManager.currentTool : undefined;
	        }

	        /**
	         * 获取已加载插件
	         * @return {Array<Plugin>} 返回插件数组
	         */

	    }, {
	        key: 'getInstalledPlugins',
	        value: function getInstalledPlugins() {
	            if (!this._pluginManager) return undefined;

	            return this._pluginManager.getInstalledPlugins();
	        }

	        /**
	         * 根据名称获取已加载插件
	         * @return {Plugin} 返回插件
	         */

	    }, {
	        key: 'getPluginByName',
	        value: function getPluginByName(name) {
	            if (!this._pluginManager) return undefined;
	            return this._pluginManager.getPluginByName(name);
	        }

	        /**
	        * 定位
	        * @param {number} lon 经度
	        * @param {number} lat 纬度
	        * @param {number} alt 高度
	        * @param {number} duration 动画时间
	        * 
	        */

	    }, {
	        key: 'goto',
	        value: function goto(lon, lat, alt, duration) {
	            return this._navigation.goto(lon, lat, alt, duration);
	        }

	        /**
	        * 加载工程
	        * @param {String|URL} data 场景文件
	        * @param {function} callback 场景加载回调函数
	        * 
	        */

	    }, {
	        key: 'loadProject',
	        value: function loadProject(data, callback) {
	            return this.project.load(data, callback);
	        }
	        /**
	        * 保存工程
	        *  
	        * @return {string} 场景文件
	        */

	    }, {
	        key: 'saveProject',
	        value: function saveProject() {
	            return this.project.save();
	        }

	        /**
	        * 创建工程
	        *  
	        * @return {string} 场景文件
	        */

	    }, {
	        key: 'createProject',
	        value: function createProject() {
	            return this.project.create();
	        }

	        /**
	         * 父容器
	         * @param {Element}
	         * @readonly
	         */

	    }, {
	        key: 'setBaseImage',


	        /**
	         * 设置背景底图
	         * @param {ImageResource} resource 底图类型
	         *  
	         */
	        value: function setBaseImage(resource) {
	            this.project._layerManager.setBaseImage(resource);
	        }
	    }, {
	        key: 'FPS',
	        get: function get() {
	            return this.scene.debugShowFramesPerSecond;
	        },
	        set: function set(val) {
	            this.scene.debugShowFramesPerSecond = val;
	        }

	        /**
	        * 三角网渲染模式
	        * @type Boolean
	        *
	        * @default false
	        */

	    }, {
	        key: 'wireframe',
	        get: function get() {
	            return this.scene.globe._surface.tileProvider._debug.wireframe;
	        },
	        set: function set(val) {
	            this.scene.globe._surface.tileProvider._debug.wireframe = val;
	            this.scene.requestRender();
	        }

	        /**
	         * 获取录屏
	         * @readonly
	         */

	    }, {
	        key: 'recorder',
	        get: function get() {
	            if (!this._recorder) this._recorder = new _CanvasRecorder2.default(this.canvas);
	            return this._recorder;
	        }

	        /**
	         * 获取导航控件
	         * @readonly
	         */

	    }, {
	        key: 'navigation',
	        get: function get() {
	            return this._navigation;
	        }

	        /**
	         * 获取粒子特效
	         * @readonly
	         */

	    }, {
	        key: 'envEffects',
	        get: function get() {
	            return this._envEffects;
	        }
	    }, {
	        key: 'viewPort',
	        get: function get() {
	            return this._navigation.ViewPort;
	        }
	    }, {
	        key: 'mousePosition',
	        get: function get() {
	            return this._navigation.mousePosition;
	        }
	        /**
	         * 场景管理器对象
	         * @type {Project} 
	         * @readonly
	         */

	    }, {
	        key: 'project',
	        get: function get() {
	            return this._project;
	        }
	        /**
	         * 分析工具
	         * @type {Analysis} 
	         * @readonly
	         */

	    }, {
	        key: 'analysis',
	        get: function get() {
	            return this._analysis;
	        }

	        /**
	         * 标绘工具
	         * @type {DrawTool} 
	         * @readonly
	         */

	    }, {
	        key: 'drawTool',
	        get: function get() {
	            return this._drawTool;
	        }
	    }, {
	        key: 'layerManager',
	        get: function get() {
	            return this._layerManager;
	        }

	        /**
	        * 插件管理器对象
	        * @type {PluginManager} 
	        * @readonly
	        */

	    }, {
	        key: 'pluginManager',
	        get: function get() {
	            return this._pluginManager;
	        },
	        set: function set(val) {
	            return this._pluginManager = val;
	        }
	    }, {
	        key: 'currentToolChanged',
	        set: function set(evt) {
	            this._toolChanged = evt;
	        }
	    }, {
	        key: 'container',
	        get: function get() {
	            return this._container;
	        }
	    }]);

	    return Viewer;
	}(Cesium.Viewer);

	exports.default = Viewer;

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Config = __webpack_require__(26);

	var _Config2 = _interopRequireDefault(_Config);

	var _LayerManager = __webpack_require__(28);

	var _LayerManager2 = _interopRequireDefault(_LayerManager);

	var _DrawTool = __webpack_require__(38);

	var _DrawTool2 = _interopRequireDefault(_DrawTool);

	var _flyManager = __webpack_require__(67);

	var _flyManager2 = _interopRequireDefault(_flyManager);

	var _BookmarkManager = __webpack_require__(68);

	var _BookmarkManager2 = _interopRequireDefault(_BookmarkManager);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Project = function () {

	    /**
	     * 工程类
	     *
	     * @alias Project
	     * @constructor
	     *
	     * @param {Object} viewer viewer对象
	     * 
	     *
	     */
	    function Project(viewer) {
	        _classCallCheck(this, Project);

	        this.viewer = viewer;
	        //图层管理类
	        this._layerManager = new _LayerManager2.default(this.viewer);
	        //标绘管理类
	        this._drawTool = this.viewer.drawTool;
	        //飞行管理类
	        this._flyManager = new _flyManager2.default(this.viewer);
	        //场景配置类
	        this._config = new _Config2.default(this.viewer);
	        //书签管理类
	        this._bookmarkManager = new _BookmarkManager2.default(this.viewer);
	        //工程文件
	        this._prjData = {};
	    }

	    _createClass(Project, [{
	        key: "_getPrjInfo",
	        value: function _getPrjInfo(name) {
	            return {
	                "version": "V1.0",
	                "id": Cesium.createGuid(),
	                "classify": {},
	                "name": name,
	                "description": "",
	                "tags": [],
	                "author": "管理员",
	                "thumbnail": "缩图路径",
	                "date": new Date().getTime(),
	                "view": {},
	                "layers": {},
	                "bookmarks": {},
	                "plottings": {},
	                "sceneConfig": {}

	            };
	        }
	        /**
	         * 书签管理工具
	         * @return {BookmarkManager}} 书签管理工具
	         */

	    }, {
	        key: "load",


	        /**
	        * 加载工程
	        * @param  {Object|string} data  要打开的工程，可以是json对象或url地址
	        * @param {function}   callback 场景加载回调函数
	        */
	        value: function load(data, callback) {
	            var promise = data;
	            if (typeof data === 'string' || data instanceof Cesium.Resource) {
	                data = Cesium.Resource.createIfNeeded(data);
	                promise = data.fetchJson();
	            }
	            var that = this;
	            return Cesium.when(promise, function (json) {
	                return that._loadPrjData(that, json, callback);
	            }).otherwise(function (error) {
	                if (callback) callback(error);
	            });
	        }
	    }, {
	        key: "_loadPrjData",
	        value: function _loadPrjData(project, data, callback) {
	            //   let  projectData = JSON.parse(project);
	            project._prjData = data;
	            var sceneData = data;
	            //1、加载场景配置
	            project._config.fromJSON(sceneData.sceneConfig);
	            //2、加载图层
	            project._layerManager.fromJSON(sceneData.layers);
	            // 3、加载标绘
	            project._drawTool.fromJSON(sceneData.plottings, true);
	            // 4、加载飞行路径
	            //todo       
	            // 5、加载书签 
	            project._bookmarkManager.fromJSON(sceneData.bookmarks);
	            //6、加载初始视角
	            project.viewer.viewPort.fromJSON(sceneData.view);
	            if (callback) callback("ok");
	            return true;
	        }

	        /**
	         * 保存工程
	         * 
	         * @return {Object} 返回保存的结果， JSON格式
	         */

	    }, {
	        key: "save",
	        value: function save(name) {
	            var prjData = this._getPrjInfo(name);
	            prjData.view = this.viewer.viewPort.toJSON();
	            prjData.sceneConfig = this._config.toJSON();
	            prjData.layers = this._layerManager.toJSON();
	            prjData.bookmarks = this._bookmarkManager.toJSON();
	            prjData.plottings = this._drawTool.toJSON();
	            prjData.flyPaths = {};

	            return prjData;
	        }

	        /**
	         * 创建工程
	         *
	         * @return {Boolean} 返回创建结果，是否成功
	         */

	    }, {
	        key: "create",
	        value: function create() {
	            this._layerManager.removeAll();
	            this._bookmarkManager.removeAll();
	            this._drawTool.removeAll();
	            this.viewer.navigation.ViewPort.gotoHome();
	        }

	        /**
	         * 用户自定义数据
	         *
	         * @return {Object} 返回用户数据
	         */

	    }, {
	        key: "bookmarkManager",
	        get: function get() {
	            return this._bookmarkManager;
	        }
	    }, {
	        key: "userData",
	        get: function get() {

	            return this._prjData.userData;
	        }

	        /**
	         * 用户自定义数据
	         * @param  {Object} data 用户数据
	         */
	        ,
	        set: function set(data) {
	            this._prjData.userData = data;
	        }

	        /**
	         * 获取场景版本
	         *
	         * @return {string} 返回场景版本
	         */

	    }, {
	        key: "version",
	        get: function get() {
	            return this._prjData.version;
	        }
	        /**
	         * 工程名称
	         * 
	         * @return {string} 返回名称
	         */

	    }, {
	        key: "name",
	        get: function get() {
	            return this._prjData.name;
	        }
	        /**
	         * 工程名称
	         * @param  {String} val 工程名称
	         */
	        ,
	        set: function set(val) {
	            this._prjData.name = val;
	        }
	    }, {
	        key: "description",
	        get: function get() {
	            return this._prjData.description;
	        },
	        set: function set(val) {
	            this._prjData.description = val;
	        }
	    }]);

	    return Project;
	}();

	exports.default = Project;

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*
	作者：zhuwz
	描述:场景配置类，用于配置场景初始化相关参数
	日期：2019.5.16
	


	var _Skybox = __webpack_require__(27);

	var _Skybox2 = _interopRequireDefault(_Skybox);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var scriptRegex = /((?:.*\/)|^)CTMap[\w-]*\.js(?:\W|$)/i;

	var SceneConfig = function () {
	    function SceneConfig(viewer) {
	        _classCallCheck(this, SceneConfig);

	        this.viewer = viewer;
	        this.Skybox = new _Skybox2.default(viewer);
	    }

	    _createClass(SceneConfig, [{
	        key: 'fromJSON',
	        value: function fromJSON(config) {
	            this.viewer.scene.mode = Cesium.defaultValue(config.sceneMode, Cesium.SceneMode.SCENE3D);
	            //是否显示帧率
	            this.viewer.scene.debugShowFramesPerSecond = Cesium.defaultValue(config.fps, false);
	            //镜头最大最小缩放距离
	            this.viewer.scene.screenSpaceCameraController.maximumZoomDistance = Cesium.defaultValue(config.maximumZoomDistance, Number.POSITIVE_INFINITY);
	            this.viewer.scene.screenSpaceCameraController.minimumZoomDistance = Cesium.defaultValue(config.minimumZoomDistance, 1);
	            //是否显示鼠标位置
	            this.viewer.mousePosition.show = Cesium.defaultValue(config.mousePosition, false);
	            //配置场景的亮度、对比度等参数
	            if (config.bloomOpt) {
	                var bloom = this.viewer.scene.postProcessStages.bloom;
	                bloom.enabled = config.bloomOpt.enabled;
	                var uniforms = config.bloomOpt.uniforms;
	                bloom.uniforms.glowOnly = Boolean(uniforms.glowOnly);
	                bloom.uniforms.contrast = Number(uniforms.contrast);
	                bloom.uniforms.brightness = Number(uniforms.brightness);
	                bloom.uniforms.delta = Number(uniforms.delta);
	                bloom.uniforms.sigma = Number(uniforms.sigma);
	                bloom.uniforms.stepSize = Number(uniforms.stepSize);
	            }
	            //场景抗锯齿设置
	            this.viewer.scene.postProcessStages.fxaa.enabled = Cesium.defaultValue(config.fxaa, false);
	            //场景HDR设置
	            this.viewer.scene.highDynamicRange = Cesium.defaultValue(config.highDynamicRange, true);

	            //深度检测开关
	            this.viewer.scene.globe.depthTestAgainstTerrain = Cesium.defaultValue(config.depthTestAgainstTerrain, true);
	        }
	    }, {
	        key: 'toJSON',
	        value: function toJSON() {
	            var sceneConfig = {};
	            sceneConfig.sceneMode = this.viewer.scene.mode;
	            //是否显示帧率
	            sceneConfig.fps = this.viewer.scene.debugShowFramesPerSecond;
	            //镜头最大最小缩放距离
	            sceneConfig.maximumZoomDistance = this.viewer.scene.screenSpaceCameraController.maximumZoomDistance;
	            sceneConfig.minimumZoomDistance = this.viewer.scene.screenSpaceCameraController.minimumZoomDistance;
	            //是否显示状态栏
	            sceneConfig.mousePosition = this.viewer.mousePosition.show;
	            //场景抗锯齿设置
	            sceneConfig.fxaa = this.viewer.scene.postProcessStages.fxaa.enabled;
	            //HDR开关
	            sceneConfig.highDynamicRange = this.viewer.scene.highDynamicRange;
	            //配置场景的亮度、对比度等参数
	            var bloom = this.viewer.scene.postProcessStages.bloom;
	            var uniforms = {
	                glowOnly: bloom.uniforms.glowOnly,
	                contrast: bloom.uniforms.contrast,
	                brightness: bloom.uniforms.brightness,
	                delta: bloom.uniforms.delta,
	                sigma: bloom.uniforms.sigma,
	                stepSize: bloom.uniforms.stepSize
	            };
	            sceneConfig.bloomOpt = {
	                enabled: bloom.enabled,
	                uniforms: uniforms
	            };

	            //深度检测开关
	            sceneConfig.depthTestAgainstTerrain = this.viewer.scene.globe.depthTestAgainstTerrain;

	            //天空盒
	            //天空大气圈
	            //地面大气圈

	            return sceneConfig;
	        }
	    }], [{
	        key: 'getBaseUrlFromCesiumScript',
	        value: function getBaseUrlFromCesiumScript() {
	            var scripts = document.getElementsByTagName('script');
	            for (var i = 0, len = scripts.length; i < len; ++i) {
	                var src = scripts[i].getAttribute('src');
	                var result = scriptRegex.exec(src);
	                if (result !== null) {
	                    return result[1];
	                }
	            }
	            return undefined;
	        }
	    }, {
	        key: 'baseMapUrl',
	        value: function baseMapUrl() {
	            return this.getResource('Assets/Images/baseMap/globe.jpg');
	        }
	    }, {
	        key: 'getResource',
	        value: function getResource(res) {
	            var baseurl = this.getBaseUrlFromCesiumScript();
	            return baseurl + '/' + res;
	        }
	    }, {
	        key: 'zoomDuration',
	        value: function zoomDuration() {
	            return 1;
	        }
	    }]);

	    return SceneConfig;
	}();

	exports.default = SceneConfig;

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Config = __webpack_require__(26);

	var _Config2 = _interopRequireDefault(_Config);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Skybox = function () {
	    /**
	     * 场景配置类
	     *
	     * @alias Skybox
	     * @constructor
	     *
	     * @param {Object} viewer viewer对象
	     *
	     */
	    function Skybox(viewer) {
	        _classCallCheck(this, Skybox);

	        this.viewer = viewer;
	        // this._setSkyBox();
	    }

	    _createClass(Skybox, [{
	        key: "_setSkyBox",
	        value: function _setSkyBox() {
	            var _this = this;

	            var viewer = this.viewer;
	            var baseUrl = _Config2.default.getResource('Assets/Images/skybox/lantian/');
	            this.lantianSkybox = new Cesium.SkyBox({
	                nearGround: !0,
	                sources: {
	                    positiveX: baseUrl + "posx.jpg",
	                    negativeX: baseUrl + "negx.jpg",
	                    positiveY: baseUrl + "posy.jpg",
	                    negativeY: baseUrl + "negy.jpg",
	                    positiveZ: baseUrl + "posz.jpg",
	                    negativeZ: baseUrl + "negz.jpg"
	                }
	            });
	            this.defaultSkybox = viewer.scene.skyBox;
	            viewer.scene.postRender.addEventListener(function () {
	                var e = viewer.camera.position;
	                Cesium.Cartographic.fromCartesian(e).height < 23e4 ? (_this.lantianSkybox && (viewer.scene.skyBox = _this.lantianSkybox), viewer.scene.skyAtmosphere.show = !1) : (_this.defaultSkybox && (viewer.scene.skyBox = _this.defaultSkybox), viewer.scene.skyAtmosphere.show = !0);
	            });
	        }
	    }]);

	    return Skybox;
	}();

	exports.default = Skybox;

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _GroupLayer = __webpack_require__(29);

	var _GroupLayer2 = _interopRequireDefault(_GroupLayer);

	var _ImageLayer = __webpack_require__(33);

	var _ImageLayer2 = _interopRequireDefault(_ImageLayer);

	var _VectorLayer = __webpack_require__(34);

	var _VectorLayer2 = _interopRequireDefault(_VectorLayer);

	var _ModelLayer = __webpack_require__(35);

	var _ModelLayer2 = _interopRequireDefault(_ModelLayer);

	var _LayerType = __webpack_require__(30);

	var _LayerType2 = _interopRequireDefault(_LayerType);

	var _TerrainLayer = __webpack_require__(36);

	var _TerrainLayer2 = _interopRequireDefault(_TerrainLayer);

	var _TerrainLayerList = __webpack_require__(37);

	var _TerrainLayerList2 = _interopRequireDefault(_TerrainLayerList);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var LayerManager = function () {
	    function LayerManager(viewer) {
	        _classCallCheck(this, LayerManager);

	        this.earth = viewer;
	        this._layerDataSet = new Map();
	        this._rootGroup = [{
	            id: "userLayers",
	            name: "用户图层",
	            show: true,
	            type: _LayerType2.default.Group,
	            children: []
	        }, {
	            id: "modelLayers",
	            name: "模型图层",
	            show: true,
	            type: _LayerType2.default.Group,
	            children: []
	        }, {
	            id: "vectorLayers",
	            name: "矢量图层",
	            show: true,
	            type: _LayerType2.default.Group,
	            children: []
	        }, {
	            id: "imageLayers",
	            name: "基础影像",
	            show: true,
	            type: _LayerType2.default.Group,
	            children: []
	        }, {
	            id: "terrainLayers",
	            name: "地形图层",
	            show: true,
	            type: _LayerType2.default.Group,
	            children: []
	        }];
	        this._layerList = Cesium.clone(this._rootGroup, true);
	        this.imageryLayers = this.earth.imageryLayers;
	        this.dataSources = this.earth.dataSources;
	        this.primitives = this.earth.scene.primitives;
	        this._terrainLayerList = null;
	    }

	    //默认图层组


	    _createClass(LayerManager, [{
	        key: 'addRoot',


	        /**
	         * addRoot 创建根节点图层组
	         * @param {string} name 图层组名称
	         */
	        value: function addRoot(name) {
	            if (name) {
	                var config = new _GroupLayer2.default(name).config;
	                this._layerList.push(config);
	                return config;
	            }
	        }

	        /**
	         * addLayer 移除图层
	         * @param {string} pid 图层的父节点id
	         * @param {Object} config  图层配置信息
	         * 
	         * @example
	         * 
	         * //加载地形默认参数
	         * var terrainLayer = viewer.LayerManager.addLayer("pid",{
	         *      name : '地形图层', 
	         *      type:"CesiumTerrain",   
	         *      options:{ 
	         *          url:""
	         *      },
	         * });
	         * //加载地形图层
	         * var terrainLayer = viewer.LayerManager.addLayer("pid",{
	         *      name : '未命名', //默认值
	         *      show:true,//默认值
	         *      type:"CesiumTerrain",   
	         *      options:{ 
	         *          url:""
	         *          requestVertexNormals:false,//默认值
	         *          requestWaterMask:false//默认值
	         *      },
	         *      style:{
	         * 
	         *      }
	         * });
	         * 
	         *  @example
	         * //加载wms图层 默认参数
	         * var wmsLayer = viewer.LayerManager.addLayer("pid",{
	         *      name : 'WMS图层', //默认值
	         *      type:"WMS",   
	         *      options:{ 
	         *          url:""
	         *          layer:""  
	         *      }
	         * });
	         * 
	         * @example
	         * //加载wms图层
	         * var wmsLayer = viewer.LayerManager.addLayer("pid",{
	         *      name : '未命名', //默认值
	         *      show:true,//默认值
	         *      type:"WMS",   
	         *      options:{ 
	         *          url:""
	         *          layer:""  
	         *          minimumLevel：0, //默认值
	         *          maximumLevel:21,//默认值 
	         *          tilingScheme:"GeographicTilingScheme"//默认值 
	         *      },
	         *      style:{
	         *          alpha:1.0, //默认值
	         *          brightness:1.0,//默认值
	         *          contrast:1.0,//默认值
	         *          hue	:0.0 ,//默认值
	         *          saturation:1.0 ,//默认值
	         *          gamma:1.0,//默认值
	         *          colorToAlpha:undefined,//默认值
	         *          colorToAlphaThreshold:0.004//默认值
	         * 
	         *      }
	         * });
	         * 
	         *  @example
	         * //加载矢量图层 默认参数
	         * var terrainLayer = viewer.LayerManager.addLayer("pid",{
	         *      name : 'GeoJSON图层', //默认值
	         *      type:"GeoJSON",   
	         *      options:{ 
	         *          url:""
	         *      }
	         * });
	         * 
	         *  @example
	         * //加载矢量图层
	         * var terrainLayer = viewer.LayerManager.addLayer("pid",{
	         *      name : '未命名', //默认值
	         *      show:true,//默认值
	         *      type:"GeoJSON",   
	         *      options:{ 
	         *          url:""
	         *          clampToGround:false,////默认值
	         *          stroke: Cesium.Color.HOTPINK,//默认值
	         *          fill: Cesium.Color.PINK,//默认值
	         *          strokeWidth: 3,//默认值
	         *          markerSymbol: '?'//默认值
	         *      },
	         *      style:{
	         * 
	         *      }
	         * });
	         * 
	         * @example
	         * //加载倾斜模型图层   
	         * var modelLayer = viewer.LayerManager.addLayer("pid",{
	         *      name : '倾斜模型图层', //默认值
	         *      type:"Cesium3DTile",   
	         *      options:{ 
	         *          url:""         
	         *      }
	         * });
	         * @example
	         * //加载倾斜模型图层   
	         * var modelLayer = viewer.LayerManager.addLayer("pid",{
	         *      name : '未命名', //默认值
	         *      show:true,//默认值
	         *      type:"Cesium3DTile",   
	         *      options:{ 
	         *          url:""     
	         *          maximumScreenSpaceError:16,//默认值
	         *          maximumMemoryUsage:512,//默认值
	         *          debugColorizeTiles:false,//默认值
	         *          debugWireframe:false,//默认值
	         *          debugShowBoundingVolume:false,//默认值
	         *          debugShowUrl:false,   //默认值     
	         *         
	         *      },
	         *      style:{
	         *         // 查看 Cesium3DTileStyle配置
	         * 
	         *      }
	         * });
	         * 
	         * 
	         * 
	         * 
	         */

	    }, {
	        key: 'addLayer',
	        value: function addLayer(pid, config) {
	            var layerNode = this._findItem(pid);
	            if (layerNode) {
	                var layerData = this._initLayer(config);
	                if (layerData) {
	                    layerNode.children.push(layerData.config);
	                    this._layerDataSet.set(layerData.id, layerData);
	                    return layerData.config;
	                }
	            } else {
	                console.log("无法找到父节点");
	            }
	        }

	        /**
	         * getAllLayer 获取所有图层
	         * @return {Array} 图层节点集合
	         */

	    }, {
	        key: 'getAllLayer',
	        value: function getAllLayer() {
	            var layers = [];
	            var _iteratorNormalCompletion = true;
	            var _didIteratorError = false;
	            var _iteratorError = undefined;

	            try {
	                for (var _iterator = this._layerList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	                    var item = _step.value;

	                    var players = this._recurrenceLayer(item, []);
	                    layers = layers.concat(players);
	                }
	            } catch (err) {
	                _didIteratorError = true;
	                _iteratorError = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion && _iterator.return) {
	                        _iterator.return();
	                    }
	                } finally {
	                    if (_didIteratorError) {
	                        throw _iteratorError;
	                    }
	                }
	            }

	            return layers;
	        }

	        /**
	         * removeLayer 移除图层
	         * @param {string} layerid 图层的id
	         * @return {bool} 成功返回true,否则返回false
	         */

	    }, {
	        key: 'removeLayer',
	        value: function removeLayer(layerid) {
	            var pnode = this._findParent(layerid);
	            if (pnode) {
	                var lnode = this._findItem(layerid);
	                if (lnode) {
	                    this._removeLayer(pnode.id, layerid);
	                }
	            } else {
	                consloe.log("父节点不存在!");
	            }
	        }

	        /**
	         * getLayerVisible 获取图层的显隐状态
	         * @param {string} layerid 图层的id
	         * @return {bool} 图层是否显示
	         */

	    }, {
	        key: 'getLayerVisible',
	        value: function getLayerVisible(layerid) {
	            var layer = this.getLayerDataByID(layerid);
	            if (layer) return layer.show;else return false;
	        }
	        /**
	         * setLayerVisible 设置图层的显隐状态
	         * @param {string} layerid 图层的id
	         * @param {visible} 图层是否显示
	         */

	    }, {
	        key: 'setLayerVisible',
	        value: function setLayerVisible(layerid, visible) {
	            var layer = this.getLayerDataByID(layerid);
	            if (layer) {
	                layer.show = visible;
	            }
	            var layerCfg = this._layerDataSet.get(layerid);
	            if (layerCfg.type == _LayerType2.default.CesiumTerrain) {
	                //地形图层需要特殊处理
	                this.earth.terrainProvider = layer.show ? layer.dataLayer : new Cesium.EllipsoidTerrainProvider();
	            }
	        }

	        /**
	         * getLayerName 获取图层的名称
	         * @param {string} layerid 图层的id
	         * @return {string} 图层名称
	         */

	    }, {
	        key: 'getLayerName',
	        value: function getLayerName(layerid) {
	            var layer = this._layerDataSet.get(layerid);
	            if (layer) {
	                return layer.name;
	            }
	        }
	        /**
	         * setLayerName 设置图层的显隐状态
	         * @param {string} layerid 图层的id
	         * @param {string} 图层名称
	         */

	    }, {
	        key: 'setLayerName',
	        value: function setLayerName(layerid, newName) {
	            var layer = this._layerDataSet.get(layerid);
	            if (layer) {
	                layer.name = newName;
	            }
	        }

	        /**
	         * layerExist 图层是否存在
	         * @param {string} layerid 图层的id
	         * @return {bool} 图层是否存在
	         */

	    }, {
	        key: 'layerExist',
	        value: function layerExist(layerid) {
	            var layer = this.getLayerDataByID(layerid);
	            return layer ? true : false;
	        }

	        /**
	         * getLayerConfig 获取图层配置信息
	         * @param {string} layerid 图层的id
	         * @param {return} config 图层配置信息
	         */

	    }, {
	        key: 'getLayerConfig',
	        value: function getLayerConfig(layerid) {
	            return this.getLayerDataByID(layerid);
	        }

	        /**
	         * setLayerConfig 更新图层
	         * @param {string} layerid 图层的id
	         * @param {object} config 图层配置信息
	         */

	    }, {
	        key: 'setLayerStyle',
	        value: function setLayerStyle(layerid, style) {
	            var layer = this.getLayerDataByID(layerid);
	            if (layer) {
	                layer.update(style);
	            }
	        }

	        /**
	        * setLayerConfig  获取图层配置
	        * @param {string} layerid 图层的id
	        * @return {object} config 图层配置信息
	        */

	    }, {
	        key: 'getLayerStyle',
	        value: function getLayerStyle(layerid) {
	            var layer = this.getLayerDataByID(layerid);
	            if (layer) {
	                return layer.config.style;
	            }
	        }

	        /**
	         * getLayerById  获取图层对象
	         * @param {string} layerid 图层的id
	         * @return {object} config 图层配置信息
	         */

	    }, {
	        key: 'getLayer',
	        value: function getLayer(layerid) {
	            var layer = this.getLayerDataByID(layerid);
	            if (layer) {
	                return layer;
	            }
	        }

	        /**
	        * getParent  获取父节点对象
	        * @param {string} layerid 图层的id
	        * @return {object} config 图层配置信息
	        */

	    }, {
	        key: 'getParent',
	        value: function getParent(layerid) {
	            var layer = this.getLayerDataByID(layerid);
	            if (layer) {
	                var parent = this._findParent(layerid);
	                if (!parent) {
	                    console.log("父节点为空");
	                } else {
	                    return parent;
	                }
	            }
	        }

	        /**
	        * flyToLayer  定位到图层
	        * @param {string} layerid 图层的id
	        */

	    }, {
	        key: 'flyToLayer',
	        value: function flyToLayer(layerid) {
	            var layer = this.getLayerDataByID(layerid);
	            if (layer) {
	                this.earth.flyTo(layer.dataLayer);
	            }
	        }

	        /**
	         * addGroup 创建新图层组
	         * @param {string} pid 父节点id
	         * @param {string} name 图层组名称
	         */

	    }, {
	        key: 'addGroup',
	        value: function addGroup(pid, name) {
	            var pnode = this._findItem(pid);
	            if (pnode) {
	                var config = new _GroupLayer2.default(name).config;
	                pnode.children.push(config);
	                return config;
	            }
	        }
	        /**
	         * removeGroup 移除图层组
	         * @param {string} id 图层组的id
	         */

	    }, {
	        key: 'removeGroup',
	        value: function removeGroup(id) {
	            var _this = this;

	            var item = this._findItem(id);
	            if (item.type !== _LayerType2.default.Group) {
	                console.log("节点不是图层组");
	                return;
	            }
	            var parent = this._findParent(id);
	            if (!parent) {
	                console.log("父节点为空");
	                return;
	            }
	            //1.删除viewer中的图层         
	            var layers = this._recurrenceLayer(item, []);
	            layers.map(function (it) {
	                return _this._removeLayerData(it.id);
	            });
	            //2.删除节点
	            this._removeLayerConfig(parent.id, id);
	            return parent;
	        }

	        /**
	         * setGroupName 设置图层组名称
	         * @param {string} id 图层组的id
	         * @param {string} newName 图层组的id
	         */

	    }, {
	        key: 'setGroupName',
	        value: function setGroupName(id, newName) {
	            var item = this._findItem(id);
	            if (item) item.name = newName;
	        }
	        /**
	         * removeGroup 移除图层组
	         * @param {string} id 图层组的id
	         * @return {string} 图层组的名称
	         */

	    }, {
	        key: 'getGroupName',
	        value: function getGroupName(id) {
	            var item = this._findItem(id);
	            if (item) return item.name;
	        }

	        /**
	         * setGroupVisible 移除图层组
	         * @param {string} id 图层组的id
	         * @return {string} show  
	         */

	    }, {
	        key: 'setGroupVisible',
	        value: function setGroupVisible(id, show) {
	            this._setGroupVisible(id, show);
	        }
	        /**
	         * getGroupVisible 移除图层组
	         * @param {string} id 图层组的id
	         */

	    }, {
	        key: 'getGroupVisible',
	        value: function getGroupVisible(id) {
	            var item = this._findItem(id);
	            if (item) return item.show;
	        }

	        /**
	         * removeAll 移除所有图层
	         */

	    }, {
	        key: 'removeAll',
	        value: function removeAll() {
	            //地形
	            this.earth.terrainProvider = new Cesium.EllipsoidTerrainProvider();
	            //影像
	            //todo移除影像
	            var _iteratorNormalCompletion2 = true;
	            var _didIteratorError2 = false;
	            var _iteratorError2 = undefined;

	            try {
	                for (var _iterator2 = this._layerDataSet[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	                    var kv = _step2.value;

	                    var item = kv[1];
	                    var type = this._getLayerType(item.type);
	                    var dataLayer = item.dataLayer;
	                    switch (type) {
	                        case "terrian":
	                            {
	                                //todo
	                                // this.dataSources.remove(layerData);
	                                break;
	                            }
	                        case "image":
	                            {
	                                this.imageryLayers.remove(dataLayer);
	                                break;
	                            }
	                        case "vector":
	                            {
	                                this.dataSources.remove(dataLayer);
	                                break;
	                            }
	                        case "model":
	                            {
	                                this.primitives.remove(dataLayer);
	                                break;
	                            }
	                    }
	                }
	            } catch (err) {
	                _didIteratorError2 = true;
	                _iteratorError2 = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
	                        _iterator2.return();
	                    }
	                } finally {
	                    if (_didIteratorError2) {
	                        throw _iteratorError2;
	                    }
	                }
	            }

	            this._layerDataSet = new Map();
	            this._layerList = Cesium.clone(this._rootGroup, true);
	        }

	        /**
	         * layerList 图层列表
	         */

	    }, {
	        key: 'fromJSON',


	        //初始化图层管理
	        value: function fromJSON(layers) {
	            this.removeAll();
	            this._layerList = Cesium.clone(layers, true);
	            this._addLayers(this._layerList);
	        }
	    }, {
	        key: 'toJSON',
	        value: function toJSON() {
	            return this._layerList;
	        }

	        //通过ID获取图层

	    }, {
	        key: 'getLayerDataByID',
	        value: function getLayerDataByID(id) {
	            var rlayer = void 0;
	            var _iteratorNormalCompletion3 = true;
	            var _didIteratorError3 = false;
	            var _iteratorError3 = undefined;

	            try {
	                for (var _iterator3 = this._layerDataSet[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	                    var _step3$value = _slicedToArray(_step3.value, 2),
	                        key = _step3$value[0],
	                        value = _step3$value[1];

	                    if (value.id == id) {
	                        rlayer = value;
	                        break;
	                    }
	                }
	            } catch (err) {
	                _didIteratorError3 = true;
	                _iteratorError3 = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion3 && _iterator3.return) {
	                        _iterator3.return();
	                    }
	                } finally {
	                    if (_didIteratorError3) {
	                        throw _iteratorError3;
	                    }
	                }
	            }

	            return rlayer;
	        }

	        /***********************************************私有方法************************************************ */

	    }, {
	        key: '_setGroupVisible',
	        value: function _setGroupVisible(id, show) {
	            var node = this._findItem(id);
	            if (node.type == _LayerType2.default.Group) {
	                var _iteratorNormalCompletion4 = true;
	                var _didIteratorError4 = false;
	                var _iteratorError4 = undefined;

	                try {
	                    for (var _iterator4 = node.children[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
	                        var item = _step4.value;

	                        this._setGroupVisible(item.id, show);
	                    }
	                } catch (err) {
	                    _didIteratorError4 = true;
	                    _iteratorError4 = err;
	                } finally {
	                    try {
	                        if (!_iteratorNormalCompletion4 && _iterator4.return) {
	                            _iterator4.return();
	                        }
	                    } finally {
	                        if (_didIteratorError4) {
	                            throw _iteratorError4;
	                        }
	                    }
	                }

	                node.show = show;
	            } else {
	                node.show = show;
	            }
	        }
	    }, {
	        key: '_removeLayerConfig',
	        value: function _removeLayerConfig(pid, layerid) {
	            //移除图层节点
	            var pnode = this._findItem(pid);
	            if (pnode) {
	                for (var i = 0; i < pnode.children.length; i++) {
	                    var lyrNode = pnode.children[i];
	                    if (layerid == lyrNode.id) {
	                        pnode.children.splice(i, 1);
	                        break;
	                    }
	                }
	            }
	        }
	    }, {
	        key: '_removeLayerData',
	        value: function _removeLayerData(layerid) {
	            var pLayer = this._layerDataSet.get(layerid);
	            var type = this._getLayerType(pLayer.type);
	            if (pLayer && type != _LayerType2.default.Group) {
	                var layerData = pLayer.dataLayer;
	                switch (type) {
	                    case "terrian":
	                        {
	                            //todo
	                            // this.dataSources.remove(layerData);
	                            break;
	                        }
	                    case "image":
	                        {
	                            this.imageryLayers.remove(layerData);
	                            break;
	                        }
	                    case "vector":
	                        {
	                            this.dataSources.remove(layerData);
	                            break;
	                        }
	                    case "model":
	                        {
	                            this.primitives.remove(layerData);
	                            break;
	                        }
	                }
	                this._layerDataSet.delete(layerid);
	            }
	        }
	    }, {
	        key: '_removeLayer',
	        value: function _removeLayer(pid, layerid) {
	            this._removeLayerData(layerid);
	            this._removeLayerConfig(pid, layerid);
	        }
	    }, {
	        key: '_getAllLayernodes',
	        value: function _getAllLayernodes() {
	            var layers = [];
	            for (var i = 0; i < this._layerList.length; i++) {
	                var nodes = this._recurrenceLayer(this._layerList[i], []);
	                layers = layers.concat(nodes);
	            }
	            return layers;
	        }
	    }, {
	        key: '_recurrenceLayer',
	        value: function _recurrenceLayer(node, layers) {
	            if (node.type != _LayerType2.default.Group) {
	                layers.push(node);
	            } else {
	                if (node.children) {
	                    for (var i = 0; i < node.children.length; i++) {
	                        this._recurrenceLayer(node.children[i], layers);
	                    }
	                }
	            }
	            return layers;
	        }
	    }, {
	        key: '_recurrenceItem',
	        value: function _recurrenceItem(node, id) {
	            if (node.id == id) return node;else {
	                if (node.children) {
	                    for (var i = 0; i < node.children.length; i++) {
	                        var tnode = this._recurrenceItem(node.children[i], id);
	                        if (tnode) return tnode;
	                    }
	                }
	            }
	        }
	    }, {
	        key: '_findItem',
	        value: function _findItem(id) {
	            var pnode = void 0;
	            for (var i = 0; i < this._layerList.length; i++) {
	                pnode = this._recurrenceItem(this._layerList[i], id);
	                if (pnode) break;
	            }
	            return pnode;
	        }
	    }, {
	        key: '_findParent',
	        value: function _findParent(id) {
	            var pnode = [];
	            for (var i = 0; i < this._layerList.length; i++) {
	                this._recurrenceParent(this._layerList[i], id, pnode);
	            }
	            if (pnode.length > 0) return pnode[0];else {
	                return undefined;
	            }
	        }
	    }, {
	        key: '_recurrenceParent',
	        value: function _recurrenceParent(pnode, id, result) {
	            if (pnode.type == _LayerType2.default.Group) {
	                var _iteratorNormalCompletion5 = true;
	                var _didIteratorError5 = false;
	                var _iteratorError5 = undefined;

	                try {
	                    for (var _iterator5 = pnode.children[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
	                        var item = _step5.value;

	                        if (item.id == id) {
	                            result.push(pnode);
	                            break;
	                        } else {
	                            if (item.type == _LayerType2.default.Group) {
	                                var _iteratorNormalCompletion6 = true;
	                                var _didIteratorError6 = false;
	                                var _iteratorError6 = undefined;

	                                try {
	                                    for (var _iterator6 = pnode.children[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
	                                        var lyr = _step6.value;

	                                        this._recurrenceParent(lyr, id, result);
	                                    }
	                                } catch (err) {
	                                    _didIteratorError6 = true;
	                                    _iteratorError6 = err;
	                                } finally {
	                                    try {
	                                        if (!_iteratorNormalCompletion6 && _iterator6.return) {
	                                            _iterator6.return();
	                                        }
	                                    } finally {
	                                        if (_didIteratorError6) {
	                                            throw _iteratorError6;
	                                        }
	                                    }
	                                }
	                            } else {
	                                if (item.id == id) {
	                                    result.push(pnode);
	                                    break;
	                                }
	                            }
	                        }
	                    }
	                } catch (err) {
	                    _didIteratorError5 = true;
	                    _iteratorError5 = err;
	                } finally {
	                    try {
	                        if (!_iteratorNormalCompletion5 && _iterator5.return) {
	                            _iterator5.return();
	                        }
	                    } finally {
	                        if (_didIteratorError5) {
	                            throw _iteratorError5;
	                        }
	                    }
	                }
	            }
	        }
	    }, {
	        key: '_getLayerType',
	        value: function _getLayerType(type) {
	            var mtype = "";
	            switch (type) {
	                case _LayerType2.default.CesiumTerrain:
	                case _LayerType2.default.VRWTerrain:
	                case _LayerType2.default.ArcGISTerrain:
	                    {
	                        mtype = "terrian";
	                        break;
	                    }
	                case _LayerType2.default.WMS:
	                case _LayerType2.default.WMTS:
	                case _LayerType2.default.TMS:
	                case _LayerType2.default.SingleImage:
	                case _LayerType2.default.UrlTemplate:
	                case _LayerType2.default.TileGrid:
	                case _LayerType2.default.ArcGIS:
	                    {
	                        mtype = "image";
	                        break;
	                    }
	                case _LayerType2.default.CZML:
	                case _LayerType2.default.GeoJSON:
	                case _LayerType2.default.KML:
	                case _LayerType2.default.VectorTile:
	                case _LayerType2.default.SHP:
	                    {
	                        mtype = "vector";
	                        break;
	                    }
	                //模型数据 
	                case _LayerType2.default.Cesium3DTile:
	                case _LayerType2.default.Custom3DTile:
	                case _LayerType2.default.GLTF:
	                    {
	                        mtype = "model";
	                        break;
	                    }
	                //组图层 
	                case _LayerType2.default.Group:
	                    {
	                        mtype = "group";
	                        break;
	                    }

	            }

	            return mtype;
	        }

	        //影像图层

	    }, {
	        key: '_addImageLayer',
	        value: function _addImageLayer(config) {
	            var isBaseImage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

	            var mLayer = new _ImageLayer2.default(config);
	            var lData = mLayer.initLayer();
	            if (lData) {
	                this.imageryLayers.add(lData);
	                return mLayer;
	            }
	        }

	        //矢量图层

	    }, {
	        key: '_addVectorLayer',
	        value: function _addVectorLayer(config) {
	            var mLayer = new _VectorLayer2.default(config);
	            var lData = mLayer.initLayer();
	            if (lData) {
	                this.earth.dataSources.add(lData);
	                return mLayer;
	            }
	        }

	        //模型图层

	    }, {
	        key: '_add3DModelLayer',
	        value: function _add3DModelLayer(config) {
	            var mLayer = new _ModelLayer2.default(config);
	            var lData = mLayer.initLayer();
	            if (lData) {
	                this.primitives.add(lData);
	                return mLayer;
	            }
	        }

	        //地形图层

	    }, {
	        key: '_addTerrainLayer',
	        value: function _addTerrainLayer(config) {
	            var mLayer = new _TerrainLayer2.default(config);
	            var lData = mLayer.initLayer();
	            if (lData) {
	                if (!this._terrainLayerList) this._terrainLayerList = new _TerrainLayerList2.default(this.earth);
	                this._terrainLayerList.add(mLayer);
	                //.earth.terrainProvider =  lData;
	                return mLayer;
	            }
	        }
	    }, {
	        key: '_initLayer',
	        value: function _initLayer(layerConfig) {
	            var ctype = this._getLayerType(layerConfig.type);
	            var layerData = void 0;
	            switch (ctype) {
	                //图层组
	                case _LayerType2.default.Group:
	                    {
	                        break;
	                    }
	                //地形数据
	                case "terrian":
	                    {
	                        layerData = this._addTerrainLayer(layerConfig);
	                        break;
	                    }
	                //影像数据
	                case "image":
	                    {
	                        layerData = this._addImageLayer(layerConfig);
	                        break;
	                    }
	                //矢量数据        
	                case "vector":
	                    {
	                        layerData = this._addVectorLayer(layerConfig);
	                        break;
	                    }
	                //模型数据 
	                case "model":
	                    {
	                        layerData = this._add3DModelLayer(layerConfig);
	                        break;
	                    }

	                default:
	                    {
	                        break;
	                    }
	            }
	            return layerData;
	        }
	    }, {
	        key: '_addLayers',
	        value: function _addLayers(layers) {
	            var _this2 = this;

	            var lyrs = this._getAllLayernodes(layers);
	            lyrs.map(function (item) {
	                var layerData = _this2._initLayer(item);
	                _this2._layerDataSet.set(layerData.id, layerData);
	            });
	        }
	    }, {
	        key: 'rootGroup',
	        get: function get() {
	            return Cesium.clone(this._rootGroup, true);
	        },
	        set: function set(val) {
	            this._rootGroup = val;
	            this.removeAll();
	        }
	    }, {
	        key: 'layerList',
	        get: function get() {
	            return Cesium.clone(this._layerList, true);
	        }
	    }]);

	    return LayerManager;
	}();

	exports.default = LayerManager;

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _LayerType = __webpack_require__(30);

	var _LayerType2 = _interopRequireDefault(_LayerType);

	var _BaseLayer = __webpack_require__(31);

	var _BaseLayer2 = _interopRequireDefault(_BaseLayer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var GroupLayer = function (_baseLayer) {
	    _inherits(GroupLayer, _baseLayer);

	    function GroupLayer(name) {
	        _classCallCheck(this, GroupLayer);

	        var data = {
	            name: name,
	            type: _LayerType2.default.Group,
	            children: []
	        };
	        return _possibleConstructorReturn(this, (GroupLayer.__proto__ || Object.getPrototypeOf(GroupLayer)).call(this, data));
	    }

	    _createClass(GroupLayer, [{
	        key: "addLayer",
	        value: function addLayer() {}
	    }]);

	    return GroupLayer;
	}(_BaseLayer2.default);

	exports.default = GroupLayer;

/***/ }),
/* 30 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var LayerType = function LayerType() {
	  _classCallCheck(this, LayerType);
	};

	//图层组


	LayerType.Group = "Group";
	//地形
	LayerType.CesiumTerrain = "CesiumTerrain";
	LayerType.VRWTerrain = "VRWTerrain";
	LayerType.ArcGISTerrain = "ArcGISTerrain";
	//影像数据
	LayerType.WMS = "WMS";
	LayerType.WMTS = "WMTS";
	LayerType.TMS = "TMS";
	LayerType.SingleImage = "SingleImage";
	LayerType.UrlTemplate = "UrlTemplate";
	LayerType.TileGrid = "TileGrid";
	LayerType.ArcGIS = "ArcGIS";
	//矢量数据
	LayerType.CZML = "CZML";
	LayerType.GeoJSON = "GeoJSON";
	LayerType.KML = "KML";
	LayerType.VectorTile = "VectorTile";

	LayerType.SHP = "SHP";
	//模型数据
	LayerType.Cesium3DTile = "Cesium3DTile";
	LayerType.Custom3DTile = "Custom3DTile";
	LayerType.GLTF = "GLTF";

	exports.default = LayerType;

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _LayerStyle = __webpack_require__(32);

	var _LayerStyle2 = _interopRequireDefault(_LayerStyle);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var defaultValue = Cesium.defaultValue;

	var BaseLayer = function () {
	    function BaseLayer(data) {
	        _classCallCheck(this, BaseLayer);

	        data.id = defaultValue(data.id, Cesium.createGuid());
	        data.name = defaultValue(data.name, "未命名");
	        data.show = defaultValue(data.show, true);
	        data.style = defaultValue(data.style, {});
	        this._config = data;
	        this.dataLayer = null;
	    }

	    _createClass(BaseLayer, [{
	        key: "initLayer",
	        value: function initLayer() {}
	    }, {
	        key: "_checkDefStyles",
	        value: function _checkDefStyles(sytle) {
	            var mstyle = _LayerStyle2.default.getDefStyle(this.type);
	            var defaults = Cesium.clone(mstyle, true);
	            for (var item in defaults) {
	                if (!Cesium.defined(sytle[item])) sytle[item] = defaults[item];
	            }
	        }
	    }, {
	        key: "id",
	        get: function get() {
	            return this._config.id;
	        }
	    }, {
	        key: "name",
	        get: function get() {
	            return this._config.name;
	        },
	        set: function set(val) {
	            this._config.name = val;
	        }
	    }, {
	        key: "show",
	        get: function get() {
	            return this._config.show;
	        },
	        set: function set(val) {
	            this.dataLayer.show = val;
	            this._config.show = val;
	        }
	    }, {
	        key: "type",
	        get: function get() {
	            return this._config.type;
	        }
	    }, {
	        key: "config",
	        get: function get() {
	            return this._config;
	        }
	    }]);

	    return BaseLayer;
	}();

	exports.default = BaseLayer;

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _LayerType = __webpack_require__(30);

	var _LayerType2 = _interopRequireDefault(_LayerType);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var LayerStyle = function () {
	    function LayerStyle() {
	        _classCallCheck(this, LayerStyle);
	    }

	    _createClass(LayerStyle, null, [{
	        key: "defImageStyle",
	        value: function defImageStyle() {
	            return {
	                alpha: 1.0,
	                brightness: Cesium.ImageryLayer.DEFAULT_BRIGHTNESS,
	                contrast: Cesium.ImageryLayer.DEFAULT_CONTRAST,
	                hue: Cesium.ImageryLayer.DEFAULT_HUE,
	                saturation: Cesium.ImageryLayer.DEFAULT_SATURATION,
	                gamma: Cesium.ImageryLayer.DEFAULT_GAMMA,
	                colorToAlpha: undefined,
	                colorToAlphaThreshold: Cesium.ImageryLayer.DEFAULT_APPLY_COLOR_TO_ALPHA_THRESHOLD
	            };
	        }
	    }, {
	        key: "defModelStyle",
	        value: function defModelStyle() {
	            return {
	                maximumScreenSpaceError: 16,
	                maximumMemoryUsage: 512,
	                debugColorizeTiles: false,
	                debugWireframe: false,
	                debugShowBoundingVolume: false,
	                debugShowUrl: false
	            };
	        }
	    }, {
	        key: "getDefStyle",
	        value: function getDefStyle(type) {
	            var mtype = LayerStyle._getType(type);
	            if (mtype == "image") {
	                return LayerStyle.defImageStyle();
	            } else if (mtype == "model") {
	                return LayerStyle.defModelStyle();
	            } else {
	                return null;
	            }
	        }
	    }, {
	        key: "_getType",
	        value: function _getType(type) {
	            var mtype = "";
	            switch (type) {
	                case _LayerType2.default.CesiumTerrain:
	                case _LayerType2.default.VRWTerrain:
	                case _LayerType2.default.ArcGISTerrain:
	                    {
	                        mtype = "terrian";
	                        break;
	                    }
	                case _LayerType2.default.WMS:
	                case _LayerType2.default.WMTS:
	                case _LayerType2.default.TMS:
	                case _LayerType2.default.SingleImage:
	                case _LayerType2.default.UrlTemplate:
	                case _LayerType2.default.TileGrid:
	                case _LayerType2.default.ArcGIS:
	                    {
	                        mtype = "image";
	                        break;
	                    }
	                case _LayerType2.default.CZML:
	                case _LayerType2.default.GeoJSON:
	                case _LayerType2.default.KML:
	                case _LayerType2.default.VectorTile:
	                case _LayerType2.default.SHP:
	                    {
	                        mtype = "vector";
	                        break;
	                    }
	                //模型数据 
	                case _LayerType2.default.Cesium3DTile:
	                case _LayerType2.default.Custom3DTile:
	                case _LayerType2.default.GLTF:
	                    {
	                        mtype = "model";
	                        break;
	                    }
	                //组图层 
	                case _LayerType2.default.Group:
	                    {
	                        mtype = "group";
	                        break;
	                    }

	            }
	            return mtype;
	        }
	    }]);

	    return LayerStyle;
	}();

	exports.default = LayerStyle;


	LayerStyle.Image_Dark = {};

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _LayerType = __webpack_require__(30);

	var _LayerType2 = _interopRequireDefault(_LayerType);

	var _BaseLayer = __webpack_require__(31);

	var _BaseLayer2 = _interopRequireDefault(_BaseLayer);

	var _Exception = __webpack_require__(16);

	var _Exception2 = _interopRequireDefault(_Exception);

	var _ExceptionMessage = __webpack_require__(13);

	var _ExceptionMessage2 = _interopRequireDefault(_ExceptionMessage);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var ImageLayer = function (_baseLayer) {
	    _inherits(ImageLayer, _baseLayer);

	    function ImageLayer(config) {
	        _classCallCheck(this, ImageLayer);

	        return _possibleConstructorReturn(this, (ImageLayer.__proto__ || Object.getPrototypeOf(ImageLayer)).call(this, config));
	    }

	    _createClass(ImageLayer, [{
	        key: "initLayer",
	        value: function initLayer() {

	            var type = this.config.type;
	            var options = this.config.options;
	            var style = this.config.style;
	            this._checkDefStyles(style);
	            if (!options.url) {
	                throw new _Exception2.default(_ExceptionMessage2.default.ERROR_PARAMS);
	                return null;
	            }
	            switch (type) {
	                case _LayerType2.default.WMS:
	                    {
	                        if (options.url && options.layers) {
	                            options.parameters = Cesium.defaultValue(options.parameters, {});
	                            var parms = options.parameters;
	                            if (!parms.format) parms.format = "image/png";
	                            if (!parms.transparent) parms.transparent = true;
	                            var provider = new Cesium.WebMapServiceImageryProvider(options);
	                            this.dataLayer = new Cesium.ImageryLayer(provider, style);
	                        } else {
	                            throw new _Exception2.default(_ExceptionMessage2.default.ERROR_PARAMS);
	                            // throw new Exception("layers 为必选参数");
	                        }
	                        break;
	                    }

	                case _LayerType2.default.WMTS:
	                    {
	                        var _provider = new Cesium.WebMapTileServiceImageryProvider(options);
	                        this.dataLayer = new Cesium.ImageryLayer(_provider, style);
	                        break;
	                    }

	                case _LayerType2.default.TMS:
	                    {
	                        var _provider2 = new Cesium.WebMapTileServiceImageryProvider(options);
	                        this.dataLayer = new Cesium.ImageryLayer(_provider2, style);
	                        break;
	                    }

	                case _LayerType2.default.SingleImage:
	                    {
	                        var extent;
	                        if (options.rectangle && options.rectangle.length == 4) extent = Cesium.Rectangle.fromDegrees(options.rectangle[0], options.rectangle[1], options.rectangle[2], options.rectangle[3]);
	                        var _provider3 = new Cesium.SingleTileImageryProvider({
	                            url: options.url,
	                            rectangle: extent
	                        });
	                        this.dataLayer = new Cesium.ImageryLayer(_provider3, style);
	                        break;
	                    }

	                case _LayerType2.default.UrlTemplate:
	                    {
	                        var _provider4 = new Cesium.UrlTemplateImageryProvider(options);
	                        this.dataLayer = new Cesium.ImageryLayer(_provider4, style);
	                        break;
	                    }

	                case _LayerType2.default.TileGrid:
	                    {}

	                case _LayerType2.default.ArcGIS:
	                    {
	                        var _provider5 = new Cesium.ArcGisMapServerImageryProvider(options);
	                        this.dataLayer = new Cesium.ImageryLayer(_provider5, style);
	                        break;
	                    }

	            }
	            return this.dataLayer;
	        }
	    }, {
	        key: "update",
	        value: function update(style) {
	            if (this.dataLayer) {
	                for (var item in style) {
	                    this.config.style[item] = style[item];
	                    this.dataLayer[item] = style[item];
	                }
	            }
	        }
	    }]);

	    return ImageLayer;
	}(_BaseLayer2.default);

	exports.default = ImageLayer;

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _LayerType = __webpack_require__(30);

	var _LayerType2 = _interopRequireDefault(_LayerType);

	var _BaseLayer = __webpack_require__(31);

	var _BaseLayer2 = _interopRequireDefault(_BaseLayer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var VectorLayer = function (_baseLayer) {
	    _inherits(VectorLayer, _baseLayer);

	    function VectorLayer(config) {
	        _classCallCheck(this, VectorLayer);

	        return _possibleConstructorReturn(this, (VectorLayer.__proto__ || Object.getPrototypeOf(VectorLayer)).call(this, config));
	    }

	    _createClass(VectorLayer, [{
	        key: "initLayer",
	        value: function initLayer() {
	            var dataLayer = void 0;
	            var type = this.config.type;
	            var params = this.config.params;
	            var options = this.config.options;
	            switch (type) {
	                case _LayerType2.default.CZML:
	                    {
	                        var provider = new Cesium.CzmlDataSource();
	                        dataLayer = provider.load(params.url, options);
	                        break;
	                    }
	                case _LayerType2.default.GeoJSON:
	                    {
	                        var _provider = new Cesium.GeoJsonDataSource();
	                        dataLayer = _provider.load(params.url, options);
	                        break;
	                    }
	                case _LayerType2.default.KML:
	                    {
	                        var _provider2 = new Cesium.KmlDataSource();
	                        dataLayer = _provider2.load(params.url, options);
	                        break;
	                    }
	                case _LayerType2.default.VectorTile:
	                    {

	                        break;
	                    }
	                case _LayerType2.default.SHP:
	                    {

	                        break;
	                    }
	            }

	            return dataLayer;
	        }
	    }]);

	    return VectorLayer;
	}(_BaseLayer2.default);

	exports.default = VectorLayer;

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _LayerType = __webpack_require__(30);

	var _LayerType2 = _interopRequireDefault(_LayerType);

	var _BaseLayer = __webpack_require__(31);

	var _BaseLayer2 = _interopRequireDefault(_BaseLayer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	//import tile3Dlayer from './tile3DLayer'

	var ModelLayer = function (_baseLayer) {
	    _inherits(ModelLayer, _baseLayer);

	    function ModelLayer(config) {
	        _classCallCheck(this, ModelLayer);

	        return _possibleConstructorReturn(this, (ModelLayer.__proto__ || Object.getPrototypeOf(ModelLayer)).call(this, config));
	    }

	    _createClass(ModelLayer, [{
	        key: "initLayer",
	        value: function initLayer() {
	            var type = this.config.type;

	            var style = this.config.style;
	            this._checkDefStyles(style);

	            var options = this.config.options;
	            switch (type) {
	                case _LayerType2.default.Cesium3DTile:
	                    {
	                        this.dataLayer = new Cesium.Cesium3DTileset(options);
	                        break;
	                    }
	                case _LayerType2.default.Custom3DTile:
	                    {
	                        // this.dataLayer  = new tile3Dlayer(options);
	                        break;
	                    }
	            }
	            this.update(style);

	            return this.dataLayer;
	        }
	    }, {
	        key: "update",
	        value: function update(config) {
	            if (this.dataLayer) {
	                for (var item in config) {
	                    if (item == "url") continue;
	                    this.config.style[item] = config[item];
	                    this.dataLayer[item] = config[item];
	                }
	            }
	        }
	    }]);

	    return ModelLayer;
	}(_BaseLayer2.default);

	exports.default = ModelLayer;

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _LayerType = __webpack_require__(30);

	var _LayerType2 = _interopRequireDefault(_LayerType);

	var _BaseLayer = __webpack_require__(31);

	var _BaseLayer2 = _interopRequireDefault(_BaseLayer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var TerrainLayer = function (_baseLayer) {
	    _inherits(TerrainLayer, _baseLayer);

	    function TerrainLayer(config) {
	        _classCallCheck(this, TerrainLayer);

	        return _possibleConstructorReturn(this, (TerrainLayer.__proto__ || Object.getPrototypeOf(TerrainLayer)).call(this, config));
	    }

	    _createClass(TerrainLayer, [{
	        key: "initLayer",
	        value: function initLayer() {
	            var type = this.config.type;
	            var options = this.config.options;
	            switch (type) {
	                case _LayerType2.default.CesiumTerrain:
	                    {
	                        this.dataLayer = new Cesium.CesiumTerrainProvider(options);
	                        break;
	                    }

	                case _LayerType2.default.VRWTerrain:
	                    {
	                        this.dataLayer = new Cesium.VRTheWorldTerrainProvider(options);
	                        break;
	                    }
	                case _LayerType2.default.ArcGISTerrain:
	                    {

	                        break;
	                    }
	            }
	            return this.dataLayer;
	        }
	    }]);

	    return TerrainLayer;
	}(_BaseLayer2.default);

	exports.default = TerrainLayer;

/***/ }),
/* 37 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var TerrainLayerList = function () {

	    //构造函数
	    function TerrainLayerList(viewer) {
	        _classCallCheck(this, TerrainLayerList);

	        this._terrainLayers = new Map();
	        this._show = true;
	        this._baseProvider = new Cesium.EllipsoidTerrainProvider();

	        this.earth = viewer;
	        this._initBaseTerrain(this._baseProvider);
	        this.earth.terrainProvider = this._baseProvider;
	    }

	    _createClass(TerrainLayerList, [{
	        key: "_initBaseTerrain",
	        value: function _initBaseTerrain(provider) {
	            var _this = this;

	            provider.requestTileGeometry = function (x, y, level, request) {
	                return _this._getTerrainData(x, y, level, request);
	            };
	        }
	    }, {
	        key: "_getTerrainData",
	        value: function _getTerrainData(x, y, level, request) {
	            var selectionLayer = [];
	            //筛选地形图层
	            var _iteratorNormalCompletion = true;
	            var _didIteratorError = false;
	            var _iteratorError = undefined;

	            try {
	                for (var _iterator = this._terrainLayers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	                    var item = _step.value;

	                    var isShow = item[1].show;
	                    if (isShow) {
	                        var available = item[1].dataLayer.getTileDataAvailable(x, y, level);
	                        if (available) {
	                            selectionLayer.push(item);
	                        }
	                    }
	                }
	                //对地形图层排序
	            } catch (err) {
	                _didIteratorError = true;
	                _iteratorError = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion && _iterator.return) {
	                        _iterator.return();
	                    }
	                } finally {
	                    if (_didIteratorError) {
	                        throw _iteratorError;
	                    }
	                }
	            }

	            var layers = selectionLayer.sort(function (a, b) {
	                return b[1].index - a[1].index;
	            });
	            if (layers.length > 0) return layers[0][1].dataLayer.requestTileGeometry(x, y, level, request);else {
	                return null;
	            }
	        }
	    }, {
	        key: "_reloadTerain",
	        value: function _reloadTerain() {
	            this.earth.terrainProvider = this._baseProvider;
	        }

	        /**
	         * 目标图层的显隐
	         * @method show 
	         * 
	         * ```
	         * 示例代码
	         * targetLayer.show=false;
	         * ```
	         */

	    }, {
	        key: "add",


	        /**
	        * 添加目标对象
	        * @method add 
	        * @param  item 目标对象
	        * @return 
	        * 
	        * ```
	        * 示例代码
	        * var tTarget = new GV.TargetItem("targetData.id",113.454,36.45,10000,0);
	        *  targetLayer.add(tTarget);
	        * 
	        * ```
	        */
	        value: function add(item) {
	            this._terrainLayers.set(item.id, item);
	            return item;
	        }

	        /**
	        * 通过删除目标对象
	        * @method remove 
	        * @param  itemid 目标对象的id
	        * @return 
	        *  
	        * ```
	        * 示例代码
	        *  targetLayer.remove("targetData.id");
	        * 
	        * ```
	        */

	    }, {
	        key: "remove",
	        value: function remove(itemid) {
	            var item = this._terrainLayers.get(itemid);
	            this._terrainLayers.delete(itemid);

	            return item[1];
	        }

	        /**
	         * 清空地形图层
	         * @method removeAll 
	         * @return {Boolean}
	         *  
	         * ```
	         * 示例代码
	         *  targetLayer.removeAll();
	         * 
	         * ```
	         */

	    }, {
	        key: "removeAll",
	        value: function removeAll() {
	            this._terrainLayers = new Map();
	        }

	        //#endregion


	    }, {
	        key: "show",
	        get: function get() {
	            return this._show;
	        },
	        set: function set(val) {
	            this._show = val;
	            var _iteratorNormalCompletion2 = true;
	            var _didIteratorError2 = false;
	            var _iteratorError2 = undefined;

	            try {
	                for (var _iterator2 = this._terrainLayers[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	                    var item = _step2.value;

	                    item[1].show = val;
	                }
	            } catch (err) {
	                _didIteratorError2 = true;
	                _iteratorError2 = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
	                        _iterator2.return();
	                    }
	                } finally {
	                    if (_didIteratorError2) {
	                        throw _iteratorError2;
	                    }
	                }
	            }
	        }
	    }]);

	    return TerrainLayerList;
	}();

	exports.default = TerrainLayerList;

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); //todo 


	var _DrawUtils = __webpack_require__(39);

	var _DrawUtils2 = _interopRequireDefault(_DrawUtils);

	var _BillboardControl = __webpack_require__(40);

	var _BillboardControl2 = _interopRequireDefault(_BillboardControl);

	var _PolylineControl = __webpack_require__(43);

	var _PolylineControl2 = _interopRequireDefault(_PolylineControl);

	var _PolylineExControl = __webpack_require__(45);

	var _PolylineExControl2 = _interopRequireDefault(_PolylineExControl);

	var _PolygonControl = __webpack_require__(47);

	var _PolygonControl2 = _interopRequireDefault(_PolygonControl);

	var _ModelControl = __webpack_require__(50);

	var _ModelControl2 = _interopRequireDefault(_ModelControl);

	var _LabelControl = __webpack_require__(51);

	var _LabelControl2 = _interopRequireDefault(_LabelControl);

	var _WallControl = __webpack_require__(52);

	var _WallControl2 = _interopRequireDefault(_WallControl);

	var _RectangleControl = __webpack_require__(54);

	var _RectangleControl2 = _interopRequireDefault(_RectangleControl);

	var _PolylineVolumeControl = __webpack_require__(57);

	var _PolylineVolumeControl2 = _interopRequireDefault(_PolylineVolumeControl);

	var _EllipseControl = __webpack_require__(59);

	var _EllipseControl2 = _interopRequireDefault(_EllipseControl);

	var _EllipsoidControl = __webpack_require__(61);

	var _EllipsoidControl2 = _interopRequireDefault(_EllipsoidControl);

	var _EventControl = __webpack_require__(63);

	var _EventControl2 = _interopRequireDefault(_EventControl);

	var _Util = __webpack_require__(65);

	var _Util2 = _interopRequireDefault(_Util);

	var _Config = __webpack_require__(26);

	var _Config2 = _interopRequireDefault(_Config);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/*
	 * 作者：zhuwz
	 * 描述:对象绘制
	 * 日期：2019.5.16
	 */
	var DrawTool = function () {
	    /**
	     * 绘制类
	     *
	     * @alias DrawTool
	     * @constructor
	     *
	     * @param {Object} [options] 配置项如下:
	     * @param {Strng} [options.dragIcon='Assets/Images/plotIcon/marker/dragIcon.png'] 编辑后拖动的节点图标.
	     * @param {Object} [options.onStopDrawing=null] 绘制结束事件.
	     * @param {Object} [options.onStartEditing=null] 开始编辑事件. 
	     * @param {Object} [options.onStopEditing=null] 停止标绘事件.
	     * @param {Object} [options.onChangeEditing=null] 标绘对象改变事件.
	     * @param {Boolean} [options.hasEdit=false] 绘制的对象是否可编辑.
	     * 
	     * @example
	     * 
	     * //初始化绘制工具
	     * var tool = new Cesium.Draw( {
	     *     hasEdit : true
	     *      });
	     * 
	     *
	     */
	    function DrawTool(viewer) {
	        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

	        _classCallCheck(this, DrawTool);

	        this.control = {
	            billboard: _BillboardControl2.default,
	            label: _LabelControl2.default,
	            ellipse: _EllipseControl2.default,
	            polyline: _PolylineControl2.default,
	            //polylineEx:PolylineExControl,
	            polylineVolume: _PolylineVolumeControl2.default,
	            polygon: _PolygonControl2.default,

	            ellipsoid: _EllipsoidControl2.default,
	            wall: _WallControl2.default,
	            point: _BillboardControl2.default,
	            rectangle: _RectangleControl2.default,
	            model: _ModelControl2.default
	        };

	        this.defDragIcon = Cesium.defaultValue(options.dragIcon, _Config2.default.getResource('Assets/Images/plotIcon/marker/dragIcon.png'));

	        this._onStopDrawing = options.onStopDrawing;
	        this.onStartEditing = options.onStartEditing;
	        this._onStopEditing = options.onStopEditing;
	        this._onChangeEditing = options.onChangeEditing;

	        this._onChangeDrawing = options.onChangeDrawing;
	        this._onMoveDrawing = options.onMoveDrawing;

	        this.options = options;

	        this.viewer = viewer;
	        this.scene = this.viewer.scene;

	        this.dragIcon = this.defDragIcon;

	        this.dataSource = new Cesium.CustomDataSource();
	        this.viewer.dataSources.add(this.dataSource);
	        this.currentEntity = null;
	        this.arrEntity = [];
	        this.eventCortol = new _EventControl2.default(this.viewer);

	        //是否可以编辑
	        this._hasEdit = false;
	        this.hasEdit(options.hasEdit);
	    }

	    _createClass(DrawTool, [{
	        key: "hasEdit",


	        /**
	         * 设置对象是否可编辑.
	         * @param {Boolean}  val 是否编辑
	         *
	         */
	        value: function hasEdit(val) {
	            if (this._hasEdit != null && this._hasEdit == val) return;
	            var onStopEditing = this._onStopEditing;
	            this._hasEdit = val;
	            var self = this;
	            var eventCortol = this.eventCortol;

	            if (val) {
	                //初始化编辑相关事件
	                eventCortol.createEditSelectHandler(function (pickedEntity) {

	                    //正在绘制中跳出
	                    if (self.currentEntity && self.currentEntity.inProgress) return;

	                    if (pickedEntity !== self.currentEntity) {
	                        if (self.currentEntity && self.currentEntity.stopEditing) {
	                            self.currentEntity.stopEditing();
	                            self.currentEntity = null;
	                        }
	                        self.currentEntity = pickedEntity;
	                        if (self.currentEntity && self.currentEntity.startEditing) {
	                            self.currentEntity.startEditing();
	                        }
	                    } else {
	                        if (self._onStopEditing && typeof self._onStopEditing == "function") {
	                            self._onStopEditing(pickedEntity);
	                        }
	                    }
	                });
	                eventCortol.createEditDraggerHandler();
	            } else {
	                this.stopDraw();
	                eventCortol.destroyEditHandler();
	            }
	        }

	        /**
	         * 停止绘制.
	         * @param {Object} noevent 回调函数返回绘制的对象
	         *
	         */

	    }, {
	        key: "stopDraw",
	        value: function stopDraw(noevent) {
	            var currentEntity = this.currentEntity;
	            var arrEntity = this.arrEntity;
	            var dataSource = this.dataSource;
	            //释放上次未完成的绘制
	            this.eventCortol.destroyDrawHandler();
	            if (currentEntity && currentEntity.inProgress) {
	                currentEntity.stopDrawing(noevent);
	                dataSource.entities.remove(currentEntity);
	                this.removeArrayOne(arrEntity, currentEntity); //arrEntity.remove(currentEntity);
	            }

	            //释放在编辑的对象
	            if (currentEntity && currentEntity.stopEditing) {
	                currentEntity.stopEditing(noevent);
	                currentEntity = null;
	            }
	            return this;
	        }

	        /**
	         * 开始绘制.
	         * @param {Object} option 绘制选项
	         * 
	         * @example
	         * 
	         * 绘制点标
	         * 
	         * //初始化绘图工具
	         * var drawTool = new Uninpho.Draw();
	         * //绘制点
	         * var pointOption = {
	        edittype: "imagepoint", //编辑类型
	        style: {
	        image: '../../../pointPlotting/icon/location_1.png',
	        opacity: 1,
	        rotation: 0,
	        scale: 1,
	        distanceDisplayCondition: false,
	        distanceDisplayCondition_far: 10000,
	        distanceDisplayCondition_near: 0,
	        scaleByDistance: false,
	        scaleByDistance_far: 1000000,
	        scaleByDistance_farValue: 0.1,
	        scaleByDistance_near: 1000,
	        scaleByDistance_nearValue: 1,
	        width: 35,
	        height: 45
	        },
	        attr: { //属性信息
	        id: "20181127103054",
	        name: '点',
	        remark: ''
	        	},
	        name: "点",
	        type: "billboard" // 绘制的对象类型
	            };
	             //开始绘制线标
	            drawTool.startDraw(defLine);
	            //绘制完成的回调函数       
	            drawTool.onStopDrawing(function(entity){
	                //write your code herer
	            });
	         * @example
	         * 
	         * 绘制线
	         * 
	         * 
	         * var defLine = {
	        attr: {  //默认属性
	        id: "20181127104055",
	        name: "线",
	        remark: ""
	        },
	        edittype: "polyline",
	        name: "线",
	        style: { //样式信息
	        clampToGround: false,
	        color: "#3388ff",
	        lineType: "solid",
	        opacity: 1,
	        outline: false,
	        outlineColor: "#ffffff",
	        outlineWidth: 2,
	        width: 4
	        },
	        position: { 
	        height: true,
	        minCount: 2
	        },
	        type: "polyline" //绘制的类型
	            };
	            //开始绘制线标
	            drawTool.startDraw(defLine);
	            //绘制完成的回调函数
	            drawTool.onStopDrawing(function(entity){
	                //write your code herer
	            });
	          * @example
	         * 
	         * 绘制多边形    
	         * 
	         * var defPolygon= {
	                attr:{
	                    id:"20181127103055",
	                    name:"面",
	                    remark:""
	                },
	                edittype:"polygon",//多边形类型
	                name:"面",
	                style:{ //默认样式
	                    color: "#3388ff",
	                    opacity: 0.6,
	                    outline: true,
	                    outlineColor: "#ffffff",
	                    outlineOpacity: 1,
	                    perPositionHeight: false
	                },
	                position:{
	                    height:true,
	                    minCount:3
	                },
	                type:"polygon" //多边形类型
	            }
	            //开始绘制线标
	            drawTool.startDraw(defLine);
	            //绘制完成的回调函数
	            drawTool.onStopDrawing(function(entity){
	                //write your code herer
	            });
	           * @example
	         * 
	         * 绘制体对象    
	         * 
	         * var defPolygonEx= {
	                attr:{
	                    id: "20181127104055",
	                    name: "拉伸面", 
	                    remark: ""
	                },
	                edittype:"extrudedPolygon",
	                name:"拉伸面",
	                style:{
	                    color:"#00FF00",
	                    extrudedHeight:100,
	                    opacity:0.6,
	                    outline:true,
	                    outlineColor:"#ffffff",
	                    outlineOpacity:1,
	                    perPositionHeight:true
	                },
	                position:{
	                    height:true,
	                    minCount:3
	                },
	                type:"polygon"
	            }
	            //开始绘制线标
	            drawTool.startDraw(defPolygonEx);
	            //绘制完成的回调函数
	            drawTool.onStopDrawing(function(entity){
	                //write your  code herer
	            });
	         
	         * @example
	         * 
	         * 绘制矩形对象    
	         * 
	         * 
	         * var defRectangle= {
	                attr:{
	                    id: "20181127104055",
	                    name: "矩形",
	                    type:"RectanglePlotting",
	                    remark: ""
	                },
	                edittype:"rectangle",
	                name:"矩形",
	                style:{
	                    color: "#3388ff",
	                    opacity:0.81,
	                    rotation:0
	                },
	                position:{
	                    height: false,
	                    minCount: 2,
	                    maxCount: 2
	                },
	                type:"rectangle"
	            }
	            //开始绘制线标
	            drawTool.startDraw(defRectangle);
	            //绘制完成的回调函数
	            drawTool.onStopDrawing(function(entity){
	                //write your  code herer
	            });
	               
	         *
	         */

	    }, {
	        key: "startDraw",
	        value: function startDraw(option) {
	            this.stopDraw();
	            if (option == null || option.type == null) {
	                throw '请传入需要绘制的类型参数';
	                return;
	            }

	            option.style = option.style || {};
	            option.attr = option.attr || {};

	            var type = option.type;
	            var control = this.control;
	            var eventCortol = this.eventCortol;

	            var dataSource = this.dataSource;

	            if (control[type] == null) {
	                throw '传入的[' + type + ']类型参数有误';
	                return;
	            }
	            var entity = control[type].startDraw(dataSource, option);
	            //uid 用于唯一标示对象
	            entity.uid = entity.id;

	            switch (type) {
	                case "label":
	                case "point":
	                case "billboard":
	                case "model":
	                case "ellipse":
	                case "ellipsoid":
	                    //点
	                    eventCortol.createDrawPointHandler(entity);
	                    break;
	                case "polyline":
	                case "polylineEx":
	                case "polylineVolume":
	                    //线

	                    eventCortol.createDrawPolylineHandler(entity, control[type].getPositions(entity));
	                    break;
	                case "polygon":
	                    //面
	                    eventCortol.createDrawPolygonHandler(entity, control[type].getPositions(entity));
	                    break;
	                case "rectangle":
	                case "extrudedRectangle":
	                case "measureHeight":
	                    //两个点的对象
	                    eventCortol.createTwoPointsModelHandler(entity, control[type].getPositions(entity));
	                    break;
	                case "wall":
	                    //墙
	                    var ePositions = control[type].getPositions(entity);
	                    var eMinimumHeights = control[type].getMinimumHeights(entity);
	                    var eMaximumHeights = control[type].getMaximumHeights(entity);
	                    eventCortol.createDrawWallHandler(entity, ePositions, eMinimumHeights, eMaximumHeights);
	                    break;
	            }
	            this.extendEntity(entity);
	            this.arrEntity.push(entity);

	            entity.startDrawing();
	            this.currentEntity = entity;

	            return entity;
	        }
	        /**
	         * 加载goejson数据
	         * @param {Object} json geojson字符串
	         * @param {Object} isClear 是否清空已有的模型
	         */

	    }, {
	        key: "fromJSON",
	        value: function fromJSON(json, isClear, isFly) {

	            if (!json) return;
	            var control = this.control;

	            var jsonObjs = json;
	            try {
	                if (_Util2.default.isString(json)) jsonObjs = JSON.parse(json);
	            } catch (e) {
	                console.error(e.name + ": " + e.message + " \n请确认json文件格式正确!!!");
	                return;
	            }
	            if (isClear) {
	                this.removeAll();
	            }
	            var arrthis = [];
	            var jsonFeatures = jsonObjs.features;
	            if (!jsonFeatures) return;
	            for (var i = 0; i < jsonFeatures.length; i++) {
	                var feature = jsonFeatures[i];

	                if (!feature.properties || !feature.properties.type) {
	                    //非本身保存的外部其他geojson数据
	                    feature.properties = feature.properties || {};
	                    debugger;
	                    switch (feature.geometry.type) {
	                        case "MultiPolygon":
	                        case "Polygon":
	                            feature.properties.type = "polygon";
	                            break;
	                        case "MultiLineString":
	                        case "LineString":
	                            feature.properties.type = "polyline";
	                            break;
	                        case "MultiPoint":
	                        case "Point":
	                            feature.properties.type = "point";
	                            break;
	                    }
	                }

	                var type = feature.properties.type;
	                if (control[type] == null) {
	                    throw '数据无法识别或者数据的[' + type + ']类型参数有误';
	                    return;
	                }
	                feature.properties.style = feature.properties.style || {};

	                var entity = control[type].startDraw(this.dataSource, feature.properties);
	                //添加id值
	                //-------------------
	                //todo:重复的id会有Bug
	                //-------------------
	                entity.uid = feature.properties.id;
	                var positions = _DrawUtils2.default.getPositionsFromJson(feature.geometry);
	                control[type].setPositions(entity, positions);
	                this.extendEntity(entity);
	                this.arrEntity.push(entity);

	                arrthis.push(entity);
	            }

	            if (isFly) this.viewer.flyTo(arrthis);

	            return arrthis;
	        }

	        /**
	         * 将所有标绘对象导出为JSON数据
	         * @param {Object} entity geojson字符串
	         */

	    }, {
	        key: "toJSON",
	        value: function toJSON(entity) {
	            var arrEntity = this.arrEntity;
	            var control = this.control;
	            if (entity == null) {
	                //全部数据
	                if (arrEntity.length == 0) return null;

	                var features = [];
	                for (var i = 0; i < arrEntity.length; i++) {
	                    var entity = arrEntity[i];

	                    var type = entity.attribute.type;
	                    var geojson = control[type].toGeoJSON(entity);
	                    //添加id值
	                    geojson.properties.id = entity.uid;
	                    features.push(geojson);
	                }
	                var geojson = {
	                    type: "FeatureCollection",
	                    features: features
	                };
	                return geojson;
	            } else {
	                var type = entity.attribute.type;
	                var geojson = control[type].toGeoJSON(entity);
	                geojson.properties.id = entity.id;
	                return geojson;
	            }
	        }

	        /**
	         * 加载标记信息json文件，一数组的字符串Array<Object>，
	         * @private
	         * @param {Object} json   
	         * @param {Object} style  标记的样式
	         * @param {Object} isClear  是否清空已有模型 
	         */

	    }, {
	        key: "markersInfoToEntity",
	        value: function markersInfoToEntity(json, style, isClear) {
	            var arr = json;
	            try {
	                if (_Util2.default.isString(json)) arr = JSON.parse(json);
	            } catch (e) {
	                console.error(e.name + ": " + e.message + " \n请确认json文件格式正确!!!");
	                return;
	            }

	            if (!(arr instanceof Array)) {
	                console.error("请确认json文件格式正确!!!");
	                return;
	            }
	            if (isClear) {
	                removeAll();
	            }

	            for (var i = 0; i < arr.length; i++) {
	                var item = arr[i];
	                if (!item.x || !item.y) {
	                    console.error(e.name + ": " + e.message + " \n请确认json文件格式正确!!!");
	                    return;
	                }
	                var attr = {
	                    id: item.id || item.ID || "",
	                    name: item.name || item.NAME || "",
	                    remark: item.remark || item.REMA || ""
	                };
	                var attribute = {
	                    type: style.type || "billboard",
	                    attr: attr,
	                    style: style.style
	                };

	                var markerPosition = Cesium.Cartesian3.fromDegrees(item.x, item.y, item.z || 0.0);
	                var entity = this.control[attribute.type].startDraw(this.dataSource, attribute);
	                this.control[attribute.type].setPositions(entity, markerPosition);
	                this.extendEntity(entity);
	                this.arrEntity.push(entity);
	            }

	            return this.arrEntity;
	        }

	        /**
	         * 获取当前的标绘对象
	         * @returns {Object} 当前的标绘对象
	         */

	    }, {
	        key: "getCurrentEntity",
	        value: function getCurrentEntity() {
	            return this.currentEntity;
	        }

	        /**
	         * 获取所有绘制的实体对象列表
	         * @returns {Array} 实体对象列表
	         */

	    }, {
	        key: "getEntitys",
	        value: function getEntitys() {
	            return this.arrEntity;
	        }

	        /**
	         * 通过id获取实体对象列表
	         * @returns {Object} 实体对象
	         */

	    }, {
	        key: "getEntityById",
	        value: function getEntityById(id) {
	            for (var i = 0; i < this.arrEntity.length; i++) {
	                var entity = this.arrEntity[i];
	                if (id == entity.uid) {
	                    return entity;
	                }
	            }
	            return null;
	        }

	        /**
	         * 删除所有标绘对象
	         */

	    }, {
	        key: "removeAll",
	        value: function removeAll() {
	            this.stopDraw();
	            this.dataSource.entities.removeAll();
	            this.arrEntity = [];
	        }
	        /**
	         * 设置标绘图层是否可见
	         *  @param {Boolean} visible 是否可见
	         */

	    }, {
	        key: "setVisible",
	        value: function setVisible(visible) {
	            var dataSource = this.dataSource;
	            var arrEntity = this.arrEntity;

	            arrEntity.forEach(function (i, item) {
	                if (visible) {
	                    if (!dataSource.entities.contains(item)) dataSource.entities.add(item);
	                } else {
	                    if (dataSource.entities.contains(item)) dataSource.entities.remove(item);
	                }
	            });
	        }
	        /**
	         * 删除标绘对象
	         *  @param {Object} entity 需要删除的对象
	         */

	    }, {
	        key: "deleteEntity",
	        value: function deleteEntity(entity) {
	            if (entity == null) return;
	            entity.stopEditing(true);
	            this.removeArrayOne(this.arrEntity, entity); //arrEntity.remove(entity);
	            this.dataSource.entities.remove(entity);
	        }

	        /**
	         * @private
	         */

	    }, {
	        key: "hasDraw",
	        value: function hasDraw() {
	            return this.arrEntity.length > 0;
	        }
	        /**
	         * @private
	         * 获取数据源
	         */

	    }, {
	        key: "getDataSource",
	        value: function getDataSource() {
	            return this.dataSource;
	        }
	        /**
	         * @private
	         * 获取实体的经纬度值 坐标数组
	         */

	    }, {
	        key: "getCoordinates",
	        value: function getCoordinates(entity) {
	            var type = entity.attribute.type;
	            var positions = this.control[type].getCoordinates(entity);
	            return positions;
	        }

	        /**
	         * @private
	         * 获取实体的坐标数组
	         */

	    }, {
	        key: "getPositions",
	        value: function getPositions(entity) {
	            var type = entity.attribute.type;
	            var positions = this.control[type].getPositions(entity);
	            return positions;
	        }

	        /**
	         * @private
	         * 设置实体的坐标数组
	         */

	    }, {
	        key: "setPositions",
	        value: function setPositions(entity, positions) {
	            var type = entity.attribute.type;
	            this.control[type].setPositions(entity, positions);
	        }
	        /**
	         * @private
	         * 删除当前entity
	         */

	    }, {
	        key: "deleteCurrentEntity",
	        value: function deleteCurrentEntity() {
	            var currentEntity = this.currentEntity;
	            var dataSource = this.dataSource;
	            if (currentEntity) {
	                currentEntity.stopEditing(true);
	                this.removeArrayOne(this.arrEntity, currentEntity); //arrEntity.remove(currentEntity); 
	                dataSource.entities.remove(currentEntity);
	                currentEntity = null;
	            }
	        }

	        /**
	         * @private
	         * 修改了属性
	         */

	    }, {
	        key: "updateAttribute",
	        value: function updateAttribute(attribute, entity) {
	            var control = this.control;
	            var currentEntity = this.currentEntity;
	            if (entity != null) currentEntity = entity;

	            if (currentEntity == null || attribute == null) return;
	            attribute.style = attribute.style || {};
	            attribute.attr = attribute.attr || {};

	            var type = currentEntity.attribute.type;
	            control[type].attribute2Entity(attribute, currentEntity[type]);
	            if (type == "model") control[type].attribute2Model(attribute, currentEntity);
	            currentEntity.attribute = attribute;

	            if (type == "ellipse" || type == "polygon" || type == "wall" || type == "rectangle") {
	                currentEntity.editor.updateDraggers();
	            }
	            return currentEntity;
	        }

	        /**
	         * @private
	         * 修改坐标、高程
	         */

	    }, {
	        key: "updateGeometry",
	        value: function updateGeometry(positions, entity) {

	            var dragIcon = this.dragIcon;
	            var control = this.control;
	            if (entity == null) entity = this.currentEntity;
	            if (entity == null || positions == null) return;
	            var type = entity.attribute.type;

	            control[type].setPositions(entity, positions);

	            if (entity.editor && entity.editor.destroy) {

	                entity.editor.destroy();
	                var type1 = entity.attribute.type;
	                entity.editor = control[type1].getEditor(dataSource, entity, {
	                    dragIcon: dragIcon
	                });
	            }

	            return entity;
	        }

	        /**
	         * @private
	         * 扩展entity实体，绑定一些方法
	         */

	    }, {
	        key: "extendEntity",
	        value: function extendEntity(entity) {

	            var control = this.control;
	            var _hasEdit = this._hasEdit;
	            var dataSource = this.dataSource;
	            var self = this;

	            var dragIcon = this.dragIcon;
	            //绘制开始、修改、结束
	            entity.startDrawing = function () {
	                //修改鼠标样式
	                //$('.cesium-viewer').css('cursor', 'crosshair');

	                var entity = this;
	                if (self._onStartDrawing && typeof self._onStartDrawing == "function") {
	                    self._onStartDrawing(entity);
	                }
	            };
	            entity.changeDrawing = function () {
	                var entity = this;
	                if (self._onChangeDrawing && typeof self._onChangeDrawing == "function") {
	                    self._onChangeDrawing(entity);
	                }
	            };
	            entity.moveDrawing = function () {
	                var entity = this;
	                if (self._onMoveDrawing && typeof self._onMoveDrawing == "function") {
	                    self._onMoveDrawing(entity);
	                }
	            };
	            entity.stopDrawing = function () {
	                //恢复鼠标样式
	                //$('.cesium-viewer').css('cursor', '');

	                var entity = this;
	                if (self._onStopDrawing && typeof self._onStopDrawing == "function") {
	                    self._onStopDrawing(entity);
	                }
	            };

	            //编辑开始、修改、结束
	            entity.startEditing = function () {
	                if (!self._hasEdit) return;

	                var entity = this;
	                self.currentEntity = entity;

	                //绑定编辑器
	                if (entity.editor == null) {
	                    var type = entity.attribute.type;
	                    entity.editor = control[type].getEditor(dataSource, entity, {
	                        dragIcon: dragIcon
	                    });
	                }

	                if (self._onStartEditing && typeof self._onStartEditing == "function") {
	                    self._onStartEditing(entity);
	                }
	            };

	            entity.stopEditing = function (noevent) {
	                var entity = this;

	                //释放编辑器
	                if (entity.editor) {
	                    entity.editor.destroy();
	                    entity.editor = null;
	                }

	                if (!noevent && self._onStopEditing && typeof self._onStopEditing == "function") {
	                    self._onStopEditing(entity);
	                }
	            };

	            entity.changeEditing = function () {
	                var entity = this;
	                if (self._onChangeEditing && typeof self._onChangeEditing == "function") {
	                    self._onChangeEditing(entity);
	                }
	            };

	            entity.updatePositions = function (positions) {
	                var entity = this;
	                var type = entity.attribute.type;
	                if (type == "ellipse") {
	                    var height = Cesium.Cartographic.fromCartesian(positions).height;
	                    entity.attribute.style.height = Number(height.toFixed(2));
	                    if (entity.ellipse.height) entity.ellipse.height._value = entity.attribute.style.height;else entity.ellipse.height = entity.attribute.style.height;
	                    if (entity.attribute.style.extrudedHeight) {
	                        var extrudedHeight = Number(height) + Number(entity.attribute.style.extrudedHeight);
	                        entity.ellipse.extrudedHeight._value = Number(extrudedHeight.toFixed(2));
	                        entity.attribute.style.extrudedHeight = Number(extrudedHeight.toFixed(2));
	                    }
	                }
	                control[type].setPositions(self.currentEntity, positions);
	            };
	        }

	        /**
	         * @private
	         * 删除数组的1个
	         */

	    }, {
	        key: "removeArrayOne",
	        value: function removeArrayOne(arr, val) {
	            for (var i = 0; i < arr.length; i++) {
	                if (arr[i] == val) {
	                    arr.splice(i, 1);
	                    break;
	                }
	            }
	        }
	    }, {
	        key: "onChangeDrawing",
	        set: function set(val) {
	            this._onChangeDrawing = val;
	        }
	    }, {
	        key: "onMoveDrawing",
	        set: function set(val) {
	            this._onMoveDrawing = val;
	        }
	        /**
	         * 设置绘制停止事件.
	         * @param {Object} val 回调事件.
	         *
	         */

	    }, {
	        key: "onStopDrawing",
	        set: function set(val) {
	            this._onStopDrawing = val;
	        }
	        /**
	         * 设置编辑开始事件.
	         * @param {Object}  val 回调事件.
	         *
	         */

	    }, {
	        key: "onStartEditing",
	        set: function set(val) {
	            this._onStartEditing = val;
	        }
	        /**
	         * 设置编辑结束事件.
	         * @param {Object}  val 回调事件.
	         *
	         */

	    }, {
	        key: "onStopEditing",
	        set: function set(val) {
	            this._onStopEditing = val;
	        }
	        /**
	         * 设置编辑对象变化事件.
	         * @param {Object}  val 回调事件.
	         *
	         */

	    }, {
	        key: "onChangeEditing",
	        set: function set(val) {
	            this._onChangeEditing = val;
	        }
	    }]);

	    return DrawTool;
	}();

	exports.default = DrawTool;

/***/ }),
/* 39 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/*
	 * 对象绘制公共方法库
	 */
	var DrawUtils = function () {
	    function DrawUtils(options) {
	        _classCallCheck(this, DrawUtils);
	    }
	    /**
	     * 创建Dragger拖动点的公共方法
	     */


	    _createClass(DrawUtils, null, [{
	        key: 'createDragger',
	        value: function createDragger(dataSource, options) {
	            var dragger;
	            if (options.dragger) {
	                dragger = options.dragger;
	            } else {
	                var position = Cesium.defaultValue(options.position, Cesium.Cartesian3.ZERO);
	                var icon = Cesium.defaultValue(options.dragIcon, "dragIcon.png");
	                dragger = dataSource.entities.add({
	                    position: position,
	                    // point:{
	                    //     color:Cesium.Color.YELLOW,
	                    //     outlineWidth:2,
	                    //     pixelSize:6,
	                    //     outlineColor:Cesium.Color.LIME
	                    // }
	                    billboard: {
	                        scale: 1,
	                        heightReference: options.heightReference ? Cesium.HeightReference.CLAMP_TO_GROUND : Cesium.HeightReference.NONE,
	                        image: icon
	                    }
	                });
	            }

	            dragger._isDragger = true;
	            dragger.onDrag = Cesium.defaultValue(options.onDrag, null);
	            dragger.horizontal = Cesium.defaultValue(options.horizontal, true);
	            dragger.vertical = Cesium.defaultValue(options.vertical, false);
	            dragger.verticalCtrl = Cesium.defaultValue(options.vertical, false);

	            return dragger;
	        }
	        /**
	         * 将Cartesian坐标数组  转换为  经纬度坐标数组
	         * @param {Array} positions Array<Cartesian3> 笛卡尔坐标数组
	         */

	    }, {
	        key: 'getCoordinates',
	        value: function getCoordinates(positions) {
	            var coordinates = [];
	            for (var i = 0; i < positions.length; i++) {
	                var carto = Cesium.Cartographic.fromCartesian(positions[i]);

	                var lng = Number(Cesium.Math.toDegrees(carto.longitude).toFixed(6));
	                var lat = Number(Cesium.Math.toDegrees(carto.latitude).toFixed(6));
	                var height = Number(carto.height.toFixed(1));

	                coordinates.push([lng, lat, height]);
	            }
	            return coordinates;
	        }
	        /**
	         * 获取坐标数组中最高高程值
	         * @param {Array} positions Array<Cartesian3> 笛卡尔坐标数组
	         * @param {Number} defaultVal 默认高程值
	         */

	    }, {
	        key: 'getMaxHeightForPositions',
	        value: function getMaxHeightForPositions(positions, defaultVal) {
	            if (defaultVal == null) defaultVal = 0;

	            var maxHeight = defaultVal;
	            if (positions == null || positions.length == 0) return maxHeight;

	            var extrudedPosition = positions[0];
	            for (var i = 0; i < positions.length; i++) {
	                var tempCarto = Cesium.Cartographic.fromCartesian(positions[i]);
	                if (tempCarto.height > maxHeight) {
	                    maxHeight = tempCarto.height;
	                }
	            }
	            return maxHeight;
	        }
	        /**
	         * 设定带有高度的坐标,参数positions为Cartesian3类型,返回类型为Cartesian3类型(的数组)
	         * @param {Array} positions Cartesian3类型的数组
	         * @param {Number} height 高度值
	         * @return {Array} Cartesian3类型的数组
	         */

	    }, {
	        key: 'getPositionsWithHeight',
	        value: function getPositionsWithHeight(positions, height) {
	            if (positions instanceof Array) {
	                var lonlats = [];
	                for (var i = 0; i < positions.length; i++) {
	                    var cartographic = Cesium.Ellipsoid.WGS84.cartesianToCartographic(positions[i]);
	                    var tempcarto = {
	                        lon: Cesium.Math.toDegrees(cartographic.longitude),
	                        lat: Cesium.Math.toDegrees(cartographic.latitude),
	                        hgt: Math.ceil(Number(cartographic.height) + Number(height))
	                    };
	                    var lonlat = [tempcarto.lon, tempcarto.lat, tempcarto.hgt];
	                    lonlats = lonlats.concat(lonlat);
	                }
	                return Cesium.Cartesian3.fromDegreesArrayHeights(lonlats);
	            } else {
	                var cartographic = Cesium.Ellipsoid.WGS84.cartesianToCartographic(positions);
	                var lon = Cesium.Math.toDegrees(cartographic.longitude);
	                var lat = Cesium.Math.toDegrees(cartographic.latitude);
	                return Cesium.Cartesian3.fromDegrees(lon, lat, Number(cartographic.height) + Number(height));
	            }
	        }

	        /**
	         * 带有高度差的两点，判断其直角点
	         * @param {Cartesian3} cartesian1
	         * @param {Cartesian3} cartesian2
	         * @return {Cartesian3}
	         */

	    }, {
	        key: 'getZHeightPosition',
	        value: function getZHeightPosition(cartesian1, cartesian2) {
	            var carto1 = Cesium.Cartographic.fromCartesian(cartesian1);
	            var lng1 = Number(Cesium.Math.toDegrees(carto1.longitude));
	            var lat1 = Number(Cesium.Math.toDegrees(carto1.latitude));
	            var height1 = Number(carto1.height.toFixed(2));

	            var carto2 = Cesium.Cartographic.fromCartesian(cartesian2);
	            var lng2 = Number(Cesium.Math.toDegrees(carto2.longitude));
	            var lat2 = Number(Cesium.Math.toDegrees(carto2.latitude));
	            var height2 = Number(carto2.height.toFixed(2));

	            if (height1 > height2) return Cesium.Cartesian3.fromDegrees(lng2, lat2, height1);else return Cesium.Cartesian3.fromDegrees(lng1, lat1, height2);
	        }

	        /**
	         * 带有高度差的两点，计算两点间的水平距离
	         * @param {Cartesian3} cartesian1
	         * @param {Cartesian3} cartesian2
	         * @return {Number}
	         */

	    }, {
	        key: 'getHDistance',
	        value: function getHDistance(cartesian1, cartesian2) {
	            var zCartesian = this.getZHeightPosition(cartesian1, cartesian2);

	            var carto1 = Cesium.Cartographic.fromCartesian(cartesian2);
	            var cartoZ = Cesium.Cartographic.fromCartesian(zCartesian);

	            var hDistance = Cesium.Cartesian3.distance(cartesian1, zCartesian);

	            if (Math.abs(Number(cartoZ.height) - Number(carto1.height)) < 0.01) {
	                hDistance = Cesium.Cartesian3.distance(cartesian2, zCartesian);
	            }

	            return hDistance;
	        }

	        /**
	         * 计算两点之间的中点
	         * @param {Cartesian3} cartesian1
	         * @param {Cartesian3} cartesian2
	         * @return {Cartesian3}
	         */

	    }, {
	        key: 'getMidPosition',
	        value: function getMidPosition(cartesian1, cartesian2) {
	            var carto1 = Cesium.Cartographic.fromCartesian(cartesian1);
	            var lng1 = Number(Cesium.Math.toDegrees(carto1.longitude));
	            var lat1 = Number(Cesium.Math.toDegrees(carto1.latitude));
	            var height1 = Number(carto1.height.toFixed(2));

	            var carto2 = Cesium.Cartographic.fromCartesian(cartesian2);
	            var lng2 = Number(Cesium.Math.toDegrees(carto2.longitude));
	            var lat2 = Number(Cesium.Math.toDegrees(carto2.latitude));
	            var height2 = Number(carto2.height.toFixed(2));

	            var newLng = (lng1 + lng2) / 2;
	            var newLat = (lat1 + lat2) / 2;
	            var newHeight = (height1 + height2) / 2;

	            return Cesium.Cartesian3.fromDegrees(newLng, newLat, newHeight);
	        }
	    }, {
	        key: 'getPositionsFromJson',
	        value: function getPositionsFromJson(geometry) {
	            if (!geometry) {
	                return null;
	            }
	            switch (geometry.type) {
	                case 'Point':
	                    return this.lonLatToCartesian(geometry.coordinates[0]);
	                case 'MultiPoint':
	                    return this.lonLatsToCartesians(geometry.coordinates);
	                case 'LineString':
	                    return this.lonLatsToCartesians(geometry.coordinates);
	                case "MultiLineString":
	                    return this.lonLatsToCartesians(geometry.coordinates[0]);
	                case 'Polygon':
	                    return this.lonLatsToCartesians(geometry.coordinates[0]);
	                case 'MultiPolygon':
	                    return this.lonLatsToCartesians(geometry.coordinates[0][0]);
	                default:
	                    throw new Error('Invalid GeoJSON object.');
	            }
	        }

	        /**
	         * 根据单个经纬度坐标值数组,求出笛卡尔坐标
	         * @param {Array} [coords=[longitude,latitude,height]] 值数组
	         * @return {Cartesian3}
	         */

	    }, {
	        key: 'lonLatToCartesian',
	        value: function lonLatToCartesian(coords) {
	            return Cesium.Cartesian3.fromDegrees(Number(coords[0]), Number(coords[1]), Number(coords[2] || 0));
	        }

	        /**
	         * 根据多个经纬度坐标值数组,求出笛卡尔坐标
	         * @param {Array} [coords=[[longitude,latitude,height],[longitude,latitude,height],...]]
	         * @return {Array} Cartesian3类型的数组
	         */

	    }, {
	        key: 'lonLatsToCartesians',
	        value: function lonLatsToCartesians(coords) {
	            var lonlats = [];
	            for (var i = 0; i < coords.length; i++) {
	                var lonlat = [Number(coords[i][0]), Number(coords[i][1]), Number(coords[i][2] || 0)];
	                lonlats = lonlats.concat(lonlat);
	            }
	            return Cesium.Cartesian3.fromDegreesArrayHeights(lonlats);
	        }

	        //格式化为业务格式数据

	    }, {
	        key: 'normalizeJsonData',
	        value: function normalizeJsonData(businessData) {
	            var jsonData = {};
	            jsonData.type = "FeatureCollection";
	            jsonData.features = [];
	            var _businessData;
	            if (typeof businessData == "string") {
	                _businessData = JSON.parse(businessData);
	            } else _businessData = businessData;
	            if (_businessData instanceof Array) {
	                for (var i = 0; i < _businessData.length; i++) {
	                    var tempObj = {
	                        type: "Feature"
	                    };
	                    tempObj.properties = _businessData[i].properties || _businessData[i].PROPERTIES;
	                    tempObj.geometry = _businessData[i].geometry || _businessData[i].GEOMETRY;
	                    jsonData.features.push(tempObj);
	                }
	                return JSON.stringify(jsonData);
	            } else if (businessData.features && businessData.features instanceof Array) {
	                return businessData;
	            }
	        }
	        //格式化为geojson数据

	    }, {
	        key: 'normalizeBusinessData',
	        value: function normalizeBusinessData(jsonData) {
	            var jsonObjs = {};
	            try {
	                jsonObjs = JSON.parse(jsonData);
	            } catch (e) {
	                haoutil.alert(e.name + ": " + e.message + " \n请确认json文件格式正确!!!");
	                return;
	            }
	            var features = jsonObjs.features;
	            var terminalObjs = [];
	            for (var i = 0; i < features.length; i++) {
	                var feature = features[i];
	                var tempObj = {
	                    dataID: feature.properties.attr.id,
	                    dataType: feature.properties.attr.type,
	                    properties: feature.properties,
	                    geometry: feature.geometry
	                };
	                terminalObjs.push(tempObj);
	            }
	            return JSON.stringify(terminalObjs);
	        }
	    }]);

	    return DrawUtils;
	}();

	exports.default = DrawUtils;

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _DynamicProperty = __webpack_require__(41);

	var _DynamicProperty2 = _interopRequireDefault(_DynamicProperty);

	var _DrawUtils = __webpack_require__(39);

	var _DrawUtils2 = _interopRequireDefault(_DrawUtils);

	var _PointEditor = __webpack_require__(42);

	var _PointEditor2 = _interopRequireDefault(_PointEditor);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var BillboardControl = function () {
	    function BillboardControl(options) {
	        _classCallCheck(this, BillboardControl);

	        this.typename = "billboard";
	    }

	    _createClass(BillboardControl, null, [{
	        key: "startDraw",
	        value: function startDraw(dataSource, attribute) {
	            var entityattr = this.attribute2Entity(attribute);
	            var entity = dataSource.entities.add({
	                billboard: entityattr,
	                attribute: attribute
	            });

	            return entity;
	        }
	    }, {
	        key: "attribute2Entity",
	        value: function attribute2Entity(attribute, entityattr) {
	            attribute = attribute || {};
	            attribute.style = attribute.style || {};
	            if (entityattr == null) {
	                //默认值
	                entityattr = {
	                    scale: 1,
	                    horizontalOrigin: Cesium.HorizontalOrigin.CENTER,
	                    verticalOrigin: Cesium.VerticalOrigin.BOTTOM
	                };
	            }

	            //Style赋值值Entity
	            for (var key in attribute.style) {
	                var value = attribute.style[key];
	                switch (key) {
	                    default:
	                        //直接赋值
	                        entityattr[key] = value;
	                        break;
	                    case "scaleByDistance_near": //跳过扩展其他属性的参数
	                    case "scaleByDistance_nearValue":
	                    case "scaleByDistance_far":
	                    case "scaleByDistance_farValue":
	                    case "distanceDisplayCondition_far":
	                    case "distanceDisplayCondition_near":
	                        break;
	                    case "opacity":
	                        //透明度
	                        entityattr.color = new Cesium.Color.fromCssColorString("#FFFFFF").withAlpha(Number(value || 1.0));
	                        break;
	                    case "rotation":
	                        //旋转角度
	                        entityattr.rotation = Cesium.Math.toRadians(value);
	                        break;
	                    case "scaleByDistance":
	                        //是否按视距缩放
	                        if (value) {
	                            entityattr.scaleByDistance = new Cesium.NearFarScalar(Number(attribute.style.scaleByDistance_near || 1000), Number(attribute.style.scaleByDistance_nearValue || 1.0), Number(attribute.style.scaleByDistance_far || 1000000), Number(attribute.style.scaleByDistance_farValue || 0.1));
	                        } else {
	                            entityattr.scaleByDistance = null;
	                        }
	                        break;
	                    case "distanceDisplayCondition":
	                        //是否按视距显示
	                        if (value) {
	                            entityattr.distanceDisplayCondition = new Cesium.DistanceDisplayCondition(Number(attribute.style.distanceDisplayCondition_near || 0), Number(attribute.style.distanceDisplayCondition_far || 100000));
	                        } else {
	                            entityattr.distanceDisplayCondition = null;
	                        }
	                        break;
	                }
	            }

	            return entityattr;
	        }
	    }, {
	        key: "getEditor",
	        value: function getEditor(dataSource, entity, options) {
	            return new _PointEditor2.default(dataSource, entity, options);
	        }
	    }, {
	        key: "setPositions",
	        value: function setPositions(entity, position) {
	            entity.position = new _DynamicProperty2.default(position);
	        }
	    }, {
	        key: "getPositions",
	        value: function getPositions(entity) {
	            return [entity.position._value];
	        }
	    }, {
	        key: "getCoordinates",
	        value: function getCoordinates(entity) {
	            var positions = this.getPositions(entity);
	            var coordinates = _DrawUtils2.default.getCoordinates(positions);
	            return coordinates;
	        }
	    }, {
	        key: "toGeoJSON",
	        value: function toGeoJSON(entity) {
	            var coordinates = this.getCoordinates(entity);

	            return {
	                type: "Feature",
	                properties: entity.attribute,
	                geometry: {
	                    type: "Point",
	                    coordinates: coordinates
	                }
	            };
	        }
	    }]);

	    return BillboardControl;
	}();

	exports.default = BillboardControl;

/***/ }),
/* 41 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var DynamicProperty = function () {
	    function DynamicProperty(value) {
	        _classCallCheck(this, DynamicProperty);

	        this._value = undefined;
	        this._hasClone = false;
	        this._hasEquals = false;
	        this._definitionChanged = new Cesium.Event();
	        this._constant = false;
	        this.setValue(value);
	    }

	    _createClass(DynamicProperty, [{
	        key: 'getValue',
	        value: function getValue(time, result) {
	            return this._hasClone ? this._value.clone(result) : this._value;
	        }
	    }, {
	        key: 'setValue',
	        value: function setValue(value) {
	            var oldValue = this._value;
	            if (oldValue !== value) {
	                var isDefined = Cesium.defined(value);
	                var hasClone = isDefined && typeof value.clone === 'function';
	                var hasEquals = isDefined && typeof value.equals === 'function';

	                this._hasClone = hasClone;
	                this._hasEquals = hasEquals;

	                var changed = !hasEquals || !value.equals(oldValue);
	                if (changed) {
	                    this._value = !hasClone ? value : value.clone();
	                    this._definitionChanged.raiseEvent(this);
	                }
	            }
	        }
	    }, {
	        key: 'equals',
	        value: function equals(other) {
	            return this === other || //
	            other instanceof DynamicProperty && ( //
	            !this._hasEquals && this._value === other._value || //
	            this._hasEquals && this._value.equals(other._value));
	        }
	    }, {
	        key: 'valueOf',
	        value: function valueOf(other) {
	            return this._value;
	        }
	    }, {
	        key: 'toString',
	        value: function toString(other) {
	            return String(this._value);
	        }
	    }, {
	        key: 'isConstant',
	        get: function get() {
	            return this._constant;
	        },
	        set: function set(value) {
	            if (this._constant !== value) {
	                this._constant = value;
	                this._definitionChanged.raiseEvent(this);
	            }
	        }
	    }, {
	        key: 'definitionChanged',
	        get: function get() {
	            return this._definitionChanged;
	        }
	    }]);

	    return DynamicProperty;
	}();

	exports.default = DynamicProperty;

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _DrawUtils = __webpack_require__(39);

	var _DrawUtils2 = _interopRequireDefault(_DrawUtils);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var PointEditor = function () {
	    function PointEditor(dataSource, entity, options) {
	        _classCallCheck(this, PointEditor);

	        this.dataSource = dataSource;
	        this.entity = entity;
	        this.draggers = [];

	        var dragger = _DrawUtils2.default.createDragger(this.dataSource, {
	            dragger: entity,
	            onDrag: function onDrag(dragger, newPosition) {
	                var diff = new Cesium.Cartesian3();
	                Cesium.Cartesian3.subtract(newPosition, entity.position._value, diff);
	                entity.position._value = newPosition;

	                entity.changeEditing();
	            }
	        });
	    }

	    _createClass(PointEditor, [{
	        key: "destroy",
	        value: function destroy() {
	            this.draggers = [];
	        }
	    }]);

	    return PointEditor;
	}();

	exports.default = PointEditor;

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _DynamicProperty = __webpack_require__(41);

	var _DynamicProperty2 = _interopRequireDefault(_DynamicProperty);

	var _DrawUtils = __webpack_require__(39);

	var _DrawUtils2 = _interopRequireDefault(_DrawUtils);

	var _PolylineEditor = __webpack_require__(44);

	var _PolylineEditor2 = _interopRequireDefault(_PolylineEditor);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var PolylineControl = function () {
	    function PolylineControl() {
	        _classCallCheck(this, PolylineControl);
	    }

	    _createClass(PolylineControl, null, [{
	        key: "typename",
	        value: function typename() {
	            return "polyline";
	        }
	    }, {
	        key: "startDraw",
	        value: function startDraw(dataSource, attribute) {
	            var entityattr = this.attribute2Entity(attribute);

	            var entity = dataSource.entities.add({
	                //name: 'Entity ' + arrEntity.length,
	                polyline: entityattr,
	                attribute: attribute
	            });

	            return entity;
	        }
	    }, {
	        key: "attribute2Entity",
	        value: function attribute2Entity(attribute, entityattr) {
	            attribute = attribute || {};
	            attribute.style = attribute.style || {};
	            if (entityattr == null) {
	                entityattr = {
	                    followSurface: true,
	                    positions: new _DynamicProperty2.default([])
	                };
	            }

	            //Style赋值值Entity
	            for (var key in attribute.style) {
	                var value = attribute.style[key];
	                switch (key) {
	                    default:
	                        //直接赋值
	                        entityattr[key] = value;
	                        break;
	                    case "lineType": //跳过扩展其他属性的参数
	                    case "color":
	                    case "opacity":
	                    case "outline":
	                    case "outlineWidth":
	                    case "outlineColor":
	                    case "outlineOpacity":
	                        break;
	                }
	            }

	            var color = new Cesium.Color.fromCssColorString(attribute.style.color || "#FFFF00").withAlpha(Number(attribute.style.opacity || 1.0));

	            switch (attribute.style.lineType) {
	                default:
	                case "solid":
	                    //实线

	                    if (attribute.style.outline) {
	                        //存在衬色时
	                        entityattr.material = new Cesium.PolylineOutlineMaterialProperty({
	                            color: color,
	                            outlineWidth: Number(attribute.style.outlineWidth || 1.0),
	                            outlineColor: new Cesium.Color.fromCssColorString(attribute.style.outlineColor || "#FFFF00").withAlpha(Number(attribute.style.outlineOpacity || attribute.style.opacity || 1.0))
	                        });
	                    } else {
	                        entityattr.material = color;
	                    }
	                    break;
	                case "dash":
	                    //虚线
	                    entityattr.material = new Cesium.PolylineDashMaterialProperty({
	                        color: color
	                    });
	                    break;
	            }

	            if (attribute.style.material) {
	                var material = attribute.style.material;
	                var reverse = material.reverse || false;
	                var offset = 0.001;
	                entityattr.material = new Cesium.StripeMaterialProperty({
	                    evenColor: new Cesium.Color.fromCssColorString(material.evenColor || "#000000").withAlpha(Number(attribute.style.opacity || 1.0)),
	                    oddColor: new Cesium.Color.fromCssColorString(material.oddColor || "#FFFFFF").withAlpha(Number(attribute.style.opacity || 1.0)),
	                    repeat: Number(material.repeat || 20.0),
	                    orientation: Cesium.StripeOrientation.VERTICAL,
	                    offset: new Cesium.CallbackProperty(function () {
	                        reverse ? offset += 0.001 : offset -= 0.001;
	                        return offset;
	                    }, false)
	                });
	            }

	            return entityattr;
	        }
	    }, {
	        key: "getEditor",
	        value: function getEditor(dataSource, entity, options) {
	            return new _PolylineEditor2.default(dataSource, entity, options);
	        }
	    }, {
	        key: "setPositions",
	        value: function setPositions(entity, positions) {
	            entity.polyline.positions.setValue(positions);
	        }
	    }, {
	        key: "getPositions",
	        value: function getPositions(entity) {
	            return entity.polyline.positions._value;
	        }
	    }, {
	        key: "getCoordinates",
	        value: function getCoordinates(entity) {
	            var positions = this.getPositions(entity);
	            var coordinates = _DrawUtils2.default.getCoordinates(positions);
	            return coordinates;
	        }
	    }, {
	        key: "toGeoJSON",
	        value: function toGeoJSON(entity) {
	            var coordinates = this.getCoordinates(entity);

	            return {
	                type: "Feature",
	                properties: entity.attribute,
	                geometry: {
	                    type: "LineString",
	                    coordinates: coordinates
	                }
	            };
	        }
	    }]);

	    return PolylineControl;
	}();

	exports.default = PolylineControl;

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _DrawUtils = __webpack_require__(39);

	var _DrawUtils2 = _interopRequireDefault(_DrawUtils);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var PolylineEditor = function () {
	    function PolylineEditor(dataSource, entity, options) {
	        _classCallCheck(this, PolylineEditor);

	        this.dataSource = dataSource;
	        this.entity = entity;
	        this.draggers = [];

	        var positions = entity.polyline.positions._value;
	        for (var i = 0; i < positions.length; i++) {
	            var loc = positions[i];
	            var dragger = _DrawUtils2.default.createDragger(this.dataSource, {
	                dragIcon: options.dragIcon,
	                position: loc,
	                onDrag: function onDrag(dragger, position) {
	                    positions[dragger.index] = position;
	                    entity.polyline.positions = positions;
	                    entity.changeEditing();
	                }
	            });
	            dragger.index = i;
	            this.draggers.push(dragger);
	        }
	    }

	    _createClass(PolylineEditor, [{
	        key: "updateDraggers",
	        value: function updateDraggers() {
	            var positions = this.entity.polyline.positions.getValue();
	            for (var i = 0; i < this.draggers.length; i++) {
	                var position = positions[i];
	                this.draggers[i].position = position;
	            }
	        }
	    }, {
	        key: "destroy",
	        value: function destroy() {
	            for (var i = 0; i < this.draggers.length; i++) {
	                this.dataSource.entities.remove(this.draggers[i]);
	            }
	            this.draggers = [];
	        }
	    }]);

	    return PolylineEditor;
	}();

	exports.default = PolylineEditor;

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _DynamicProperty = __webpack_require__(41);

	var _DynamicProperty2 = _interopRequireDefault(_DynamicProperty);

	var _DrawUtils = __webpack_require__(39);

	var _DrawUtils2 = _interopRequireDefault(_DrawUtils);

	var _PolylineExEditor = __webpack_require__(46);

	var _PolylineExEditor2 = _interopRequireDefault(_PolylineExEditor);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var PolylineExControl = function () {
	    function PolylineExControl() {
	        _classCallCheck(this, PolylineExControl);
	    }

	    _createClass(PolylineExControl, null, [{
	        key: "typename",
	        value: function typename() {
	            return "polylineEx";
	        }
	    }, {
	        key: "startDraw",
	        value: function startDraw(dataSource, attribute) {
	            var entityExattr = this.attribute2Entity(attribute);
	            var entity = dataSource.entities.add({
	                //corridor: entityExattr,
	                polyline: entityExattr,
	                attribute: attribute
	            });
	            //  entity.polyline.width=1;
	            return entity;
	        }
	    }, {
	        key: "attribute2Entity",
	        value: function attribute2Entity(attribute, entityattr) {
	            attribute = attribute || {};
	            attribute.style = attribute.style || {};
	            if (entityattr == null) {
	                entityattr = {
	                    followSurface: true,
	                    positions: new _DynamicProperty2.default([])
	                };
	            }

	            //Style赋值值Entity
	            for (var key in attribute.style) {
	                var value = attribute.style[key];
	                switch (key) {
	                    default:
	                        //直接赋值
	                        entityattr[key] = value;
	                        break;
	                    case "lineType": //跳过扩展其他属性的参数
	                    case "color":
	                    case "opacity":
	                    case "outline":
	                    case "outlineWidth":
	                    case "outlineColor":
	                    case "outlineOpacity":
	                        break;
	                }
	            }

	            var color = new Cesium.Color.fromCssColorString(attribute.style.color || "#FFFF00").withAlpha(Number(attribute.style.opacity || 1.0));

	            if (attribute.style.material) {
	                var material = attribute.style.material;
	                var reverse = material.reverse || false;
	                var offset = 0.001;
	                entityattr.material = new Cesium.StripeMaterialProperty({
	                    evenColor: new Cesium.Color.fromCssColorString(material.evenColor || "#FFFF00").withAlpha(Number(material.evenColorOpacity || 1.0)),
	                    oddColor: new Cesium.Color.fromCssColorString(material.oddColor || "#FFFFFF").withAlpha(Number(material.oddColorOpacity || 1.0)),
	                    repeat: Number(material.repeat || 20.0),
	                    orientation: Cesium.StripeOrientation.VERTICAL,
	                    offset: new Cesium.CallbackProperty(function () {
	                        reverse ? offset += 0.001 : offset -= 0.001;
	                        return offset;
	                    }, false)
	                });
	            } else {
	                if (attribute.style.outline) {
	                    //存在衬色时
	                    entityattr.material = new Cesium.PolylineOutlineMaterialProperty({
	                        color: color,
	                        outlineWidth: Number(attribute.style.outlineWidth || 1.0),
	                        outlineColor: new Cesium.Color.fromCssColorString(attribute.style.outlineColor || "#FFFF00").withAlpha(Number(attribute.style.outlineOpacity || attribute.style.opacity || 1.0))
	                    });
	                } else {
	                    entityattr.material = color;
	                }
	            }

	            return entityattr;
	        }
	    }, {
	        key: "getEditor",
	        value: function getEditor(dataSource, entity, options) {
	            return new _PolylineExEditor2.default(dataSource, entity, options);
	        }
	    }, {
	        key: "setPositions",
	        value: function setPositions(entity, positions) {
	            entity.polyline.positions.setValue(positions);
	            //entity.corridor.positions.setValue(positions);
	        }
	    }, {
	        key: "getPositions",
	        value: function getPositions(entity) {
	            return entity.polyline.positions._value;
	        }
	    }, {
	        key: "getCoordinates",
	        value: function getCoordinates(entity) {
	            var positions = this.getPositions(entity);
	            var coordinates = _DrawUtils2.default.getCoordinates(positions);
	            return coordinates;
	        }
	    }, {
	        key: "toGeoJSON",
	        value: function toGeoJSON(entity) {
	            var coordinates = this.getCoordinates(entity);

	            return {
	                type: "Feature",
	                properties: entity.attribute,
	                geometry: {
	                    type: "LineString",
	                    coordinates: coordinates
	                }
	            };
	        }
	    }]);

	    return PolylineExControl;
	}();

	exports.default = PolylineExControl;

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _DrawUtils = __webpack_require__(39);

	var _DrawUtils2 = _interopRequireDefault(_DrawUtils);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var PolylineExEditor = function () {
	    function PolylineExEditor(dataSource, entity, options) {
	        _classCallCheck(this, PolylineExEditor);

	        this.dataSource = dataSource;
	        this.entity = entity;
	        this.draggers = [];

	        var positions = entity.polyline.positions._value;
	        for (var i = 0; i < positions.length; i++) {
	            var loc = positions[i];
	            var dragger = _DrawUtils2.default.createDragger(this.dataSource, {
	                dragIcon: options.dragIcon,
	                position: loc,
	                onDrag: function onDrag(dragger, position) {
	                    positions[dragger.index] = position;
	                    entity.polyline.positions = positions;
	                    entity.changeEditing();
	                }
	            });
	            dragger.index = i;
	            this.draggers.push(dragger);
	        }
	    }

	    _createClass(PolylineExEditor, [{
	        key: "updateDraggers",
	        value: function updateDraggers() {
	            var positions = this.entity.polyline.positions.getValue();
	            for (var i = 0; i < this.draggers.length; i++) {
	                var position = positions[i];
	                this.draggers[i].position = position;
	            }
	        }
	    }, {
	        key: "destroy",
	        value: function destroy() {
	            for (var i = 0; i < this.draggers.length; i++) {
	                this.dataSource.entities.remove(this.draggers[i]);
	            }
	            this.draggers = [];
	        }
	    }]);

	    return PolylineExEditor;
	}();

	exports.default = PolylineExEditor;

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _DrawUtils = __webpack_require__(39);

	var _DrawUtils2 = _interopRequireDefault(_DrawUtils);

	var _ExtrudedPolygonEditor = __webpack_require__(48);

	var _ExtrudedPolygonEditor2 = _interopRequireDefault(_ExtrudedPolygonEditor);

	var _PolygonEditor = __webpack_require__(49);

	var _PolygonEditor2 = _interopRequireDefault(_PolygonEditor);

	var _DynamicProperty = __webpack_require__(41);

	var _DynamicProperty2 = _interopRequireDefault(_DynamicProperty);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var PolygonControl = function () {
	    function PolygonControl(options) {
	        _classCallCheck(this, PolygonControl);

	        this.typename = "polygon";
	    }

	    _createClass(PolygonControl, null, [{
	        key: "typename",
	        value: function typename() {
	            return "polygon";
	        }
	    }, {
	        key: "startDraw",
	        value: function startDraw(dataSource, attribute) {
	            var entityattr = this.attribute2Entity(attribute);
	            var entity = dataSource.entities.add({
	                //name: 'Entity ' + arrEntity.length,
	                polygon: entityattr,
	                attribute: attribute
	            });

	            return entity;
	        }
	    }, {
	        key: "attribute2Entity",
	        value: function attribute2Entity(attribute, entityattr) {
	            attribute = attribute || {};
	            attribute.style = attribute.style || {};
	            if (entityattr == null) {
	                entityattr = {
	                    fill: true,
	                    classificationType: Cesium.ClassificationType.BOTH,
	                    // hierarchy: new DynamicProperty([])
	                    hierarchy: Cesium.Cartesian3.fromDegreesArray([])
	                };
	            }

	            //Style赋值值Entity
	            for (var key in attribute.style) {
	                var value = attribute.style[key];
	                switch (key) {
	                    default:
	                        //直接赋值
	                        entityattr[key] = value;
	                        break;
	                    case "opacity": //跳过扩展其他属性的参数
	                    case "outlineOpacity":
	                        break;
	                    case "outlineColor":
	                        //边框颜色
	                        entityattr.outlineColor = new Cesium.Color.fromCssColorString(value || "#FFFF00").withAlpha(attribute.style.outlineOpacity || attribute.style.opacity || 1.0);
	                        break;
	                    case "color":
	                        //填充颜色
	                        entityattr.material = new Cesium.Color.fromCssColorString(value || "#FFFF00").withAlpha(Number(attribute.style.opacity || 1.0));
	                        break;
	                    case "extrudedHeight":
	                        //高度 
	                        var maxHight = _DrawUtils2.default.getMaxHeightForPositions(entityattr.hierarchy._value);
	                        entityattr.extrudedHeight = Number(value) + maxHight;
	                        break;
	                    case "clampToGround":
	                        //贴地
	                        entityattr.perPositionHeight = !value;
	                        break;
	                }
	            }

	            //如果未设置任何material，默认设置随机颜色
	            if (attribute.style.color == null) {
	                entityattr.material = Cesium.Color.fromRandom({
	                    minimumGreen: 0.75,
	                    maximumBlue: 0.75,
	                    alpha: Number(attribute.style.opacity || 1.0)
	                });
	            }

	            return entityattr;
	        }
	    }, {
	        key: "getEditor",
	        value: function getEditor(dataSource, entity, options) {
	            if (entity.polygon.extrudedHeight) {
	                return new _ExtrudedPolygonEditor2.default(dataSource, entity, options);
	            } else {
	                return new _PolygonEditor2.default(dataSource, entity, options);
	            }
	        }
	    }, {
	        key: "setPositions",
	        value: function setPositions(entity, position) {
	            entity.polygon.hierarchy = new _DynamicProperty2.default(position);
	            if (entity.attribute.style.extrudedHeight) {
	                //存在extrudedHeight高度设置时
	                var maxHight = _DrawUtils2.default.getMaxHeightForPositions(position);
	                entity.polygon.extrudedHeight = maxHight + Number(entity.attribute.style.extrudedHeight);
	            }
	        }
	    }, {
	        key: "getPositions",
	        value: function getPositions(entity) {
	            var arr = entity.polygon.hierarchy._value;

	            if (arr.positions && this.isArray(arr.positions)) return arr.positions;
	            return arr;
	        }
	    }, {
	        key: "isArray",
	        value: function isArray(obj) {
	            return (typeof obj === "undefined" ? "undefined" : _typeof(obj)) == 'object' && obj.constructor == Array;
	        }
	    }, {
	        key: "getCoordinates",
	        value: function getCoordinates(entity) {
	            var positions = this.getPositions(entity);
	            var coordinates = _DrawUtils2.default.getCoordinates(positions);
	            return coordinates;
	        }
	    }, {
	        key: "toGeoJSON",
	        value: function toGeoJSON(entity) {
	            var coordinates = this.getCoordinates(entity);

	            if (coordinates.length > 0) {
	                var first = coordinates[0];
	                var last = coordinates[coordinates.length - 1];
	                if (first[0] != last[0] || first[1] != last[1] || first[2] != last[2]) {
	                    coordinates.push(first);
	                }
	            }

	            return {
	                type: "Feature",
	                properties: entity.attribute,
	                geometry: {
	                    type: "Polygon",
	                    coordinates: [coordinates]
	                }
	            };
	        }
	    }]);

	    return PolygonControl;
	}();

	exports.default = PolygonControl;

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _DrawUtils = __webpack_require__(39);

	var _DrawUtils2 = _interopRequireDefault(_DrawUtils);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var ExtrudedPolygonEditor = function () {
	    function ExtrudedPolygonEditor(dataSource, entity, options) {
	        _classCallCheck(this, ExtrudedPolygonEditor);

	        this.dataSource = dataSource;
	        this.entity = entity;
	        this.draggers = [];
	        this.heightDraggers = [];

	        var that = this;
	        var i = 0;
	        var positions = entity.polygon.hierarchy._value;
	        //entity.polygon.hierarchy.isConstant = false;
	        for (i = 0; i < positions.length; i++) {
	            var loc = positions[i];
	            if (entity.polygon.height != undefined) {
	                var carto = Cesium.Cartographic.fromCartesian(loc);
	                carto.height += entity.polygon.height._value;
	                loc = Cesium.Cartesian3.fromRadians(carto.longitude, carto.latitude, carto.height);
	            }

	            var dragger = _DrawUtils2.default.createDragger(this.dataSource, {
	                dragIcon: options.dragIcon,
	                position: loc,
	                onDrag: function onDrag(dragger, position) {
	                    dragger.positions[dragger.index] = position;

	                    var entityPositions = entity.polygon.hierarchy._value;
	                    var extrudedPs = entityPositions[0];
	                    for (var i = 1; i < entityPositions.length; i++) {
	                        var tempCarto1 = Cesium.Cartographic.fromCartesian(extrudedPs);
	                        var tempCarto2 = Cesium.Cartographic.fromCartesian(entityPositions[i]);
	                        if (Number(tempCarto2.height) > Number(tempCarto1.height)) {
	                            extrudedPs = entityPositions[i];
	                        }
	                    }
	                    var extrHeight = Number(entity.polygon.extrudedHeight) - Number(Cesium.Cartographic.fromCartesian(extrudedPs).height);
	                    entity.attribute.style.extrudedHeight = Number(extrHeight).toFixed(2);

	                    that.updateDraggers();
	                    entity.changeEditing();
	                }
	            });
	            dragger.index = i;
	            dragger.positions = positions;
	            this.draggers.push(dragger);
	        }

	        // Add a dragger that will change the extruded height on the polygon.
	        //创建高程拖拽点
	        if (entity.polygon.extrudedHeight) {
	            for (i = 0; i < positions.length; i++) {
	                var position = positions[i];
	                var cartoLoc = Cesium.Cartographic.fromCartesian(position);
	                cartoLoc.height = entity.polygon.extrudedHeight._value;
	                var draggerPs = Cesium.Cartesian3.fromRadians(cartoLoc.longitude, cartoLoc.latitude, cartoLoc.height);

	                var dragger = _DrawUtils2.default.createDragger(this.dataSource, {
	                    dragIcon: options.dragIcon,
	                    position: draggerPs,
	                    onDrag: function onDrag(dragger, position) {
	                        var entityPositions = that.entity.polygon.hierarchy._value;
	                        var extrudedPs = entityPositions[0];
	                        for (var i = 1; i < entityPositions.length; i++) {
	                            var tempCarto1 = Cesium.Cartographic.fromCartesian(extrudedPs);
	                            var tempCarto2 = Cesium.Cartographic.fromCartesian(entityPositions[i]);
	                            if (Number(tempCarto2.height) > Number(tempCarto1.height)) {
	                                extrudedPs = entityPositions[i];
	                            }
	                        }
	                        var cartoLoc = Cesium.Cartographic.fromCartesian(position);
	                        entity.polygon.extrudedHeight = new Cesium.ConstantProperty(Number(cartoLoc.height));
	                        var extrHeight = Number(cartoLoc.height) - Number(Cesium.Cartographic.fromCartesian(extrudedPs).height);
	                        entity.attribute.style.extrudedHeight = Number(extrHeight).toFixed(2);
	                        that.updateDraggers();
	                        entity.changeEditing();
	                    },
	                    vertical: true,
	                    horizontal: false
	                });
	                dragger.index = i;
	                this.heightDraggers.push(dragger);
	            }
	        }
	    }

	    _createClass(ExtrudedPolygonEditor, [{
	        key: "updateDraggers",
	        value: function updateDraggers() {
	            var positions = this.entity.polygon.hierarchy._value;
	            var extrudedHeight = this.entity.polygon.extrudedHeight._value;
	            var height = 0;
	            if (this.entity.polygon.height != undefined) {
	                height = this.entity.polygon.height._value;
	            }
	            for (var i = 0; i < this.heightDraggers.length; i++) {
	                var position = positions[i];
	                var heightDragger = this.heightDraggers[i];
	                var extrudedCarto = Cesium.Cartographic.fromCartesian(position);
	                extrudedCarto.height = extrudedHeight;
	                var loc = Cesium.Cartesian3.fromRadians(extrudedCarto.longitude, extrudedCarto.latitude, extrudedCarto.height);
	                heightDragger.position = loc;

	                var dragger = this.draggers[i];
	                var carto = Cesium.Cartographic.fromCartesian(position);
	                carto.height += height;
	                loc = Cesium.Cartesian3.fromRadians(carto.longitude, carto.latitude, carto.height);
	                dragger.position = loc;
	            }
	        }
	    }, {
	        key: "destroy",
	        value: function destroy() {
	            var i = 0;

	            for (i = 0; i < this.draggers.length; i++) {
	                this.dataSource.entities.remove(this.draggers[i]);
	            }
	            this.draggers = [];

	            for (i = 0; i < this.heightDraggers.length; i++) {
	                this.dataSource.entities.remove(this.heightDraggers[i]);
	            }
	            this.heightDraggers = [];
	        }
	    }]);

	    return ExtrudedPolygonEditor;
	}();

	exports.default = ExtrudedPolygonEditor;

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _DrawUtils = __webpack_require__(39);

	var _DrawUtils2 = _interopRequireDefault(_DrawUtils);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var PolygonEditor = function () {
	    function PolygonEditor(dataSource, entity, options) {
	        _classCallCheck(this, PolygonEditor);

	        this.dataSource = dataSource;
	        this.entity = entity;
	        this.draggers = [];

	        var positions = entity.polygon.hierarchy._value.positions;
	        //entity.polygon.hierarchy.isConstant = false;
	        for (var i = 0; i < positions.length; i++) {
	            var loc = positions[i];
	            var dragger = _DrawUtils2.default.createDragger(this.dataSource, {
	                dragIcon: options.dragIcon,
	                position: loc,
	                heightReference: !entity.attribute.style.perPositionHeight,
	                onDrag: function onDrag(dragger, position) {
	                    dragger.positions[dragger.index] = position;
	                    entity.polygon.hierarchy = dragger.positions;
	                    entity.changeEditing();
	                }
	            });
	            dragger.index = i;
	            dragger.positions = positions;
	            this.draggers.push(dragger);
	        }
	    }

	    _createClass(PolygonEditor, [{
	        key: "updateDraggers",
	        value: function updateDraggers() {
	            var positions = this.entity.polygon.hierarchy._value;
	            for (var i = 0; i < this.draggers.length; i++) {
	                var position = positions[i];
	                this.draggers[i].position = position;
	            }
	        }
	    }, {
	        key: "destroy",
	        value: function destroy() {
	            for (var i = 0; i < this.draggers.length; i++) {
	                this.dataSource.entities.remove(this.draggers[i]);
	            }
	            this.draggers = [];
	        }
	    }]);

	    return PolygonEditor;
	}();

	exports.default = PolygonEditor;

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _DrawUtils = __webpack_require__(39);

	var _DrawUtils2 = _interopRequireDefault(_DrawUtils);

	var _PointEditor = __webpack_require__(42);

	var _PointEditor2 = _interopRequireDefault(_PointEditor);

	var _DynamicProperty = __webpack_require__(41);

	var _DynamicProperty2 = _interopRequireDefault(_DynamicProperty);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var ModelControl = function () {
	    function ModelControl(options) {
	        _classCallCheck(this, ModelControl);

	        this.typename = "model";
	    }

	    _createClass(ModelControl, null, [{
	        key: "startDraw",
	        value: function startDraw(dataSource, attribute) {
	            var entityattr = this.attribute2Entity(attribute);

	            var entity = dataSource.entities.add({
	                model: entityattr,
	                attribute: attribute
	            });

	            return entity;
	        }
	    }, {
	        key: "attribute2Entity",
	        value: function attribute2Entity(attribute, entityattr) {
	            attribute = attribute || {};
	            attribute.style = attribute.style || {};
	            if (entityattr == null) {
	                //默认值
	                entityattr = {};
	            }

	            //Style赋值值Entity
	            for (var key in attribute.style) {
	                var value = attribute.style[key];
	                switch (key) {
	                    default:
	                        //直接赋值
	                        entityattr[key] = value;
	                        break;
	                    case "silhouette": //跳过扩展其他属性的参数
	                    case "silhouetteColor":
	                    case "silhouetteAlpha":
	                    case "silhouetteSize":
	                    case "fill":
	                    case "color":
	                    case "opacity":
	                        break;
	                    case "modelUrl":
	                        //模型uri
	                        entityattr.uri = value;
	                        break;
	                }
	            }

	            //轮廓
	            if (attribute.style.silhouette) {
	                entityattr.silhouetteColor = new Cesium.Color.fromCssColorString(attribute.style.silhouetteColor || "#FFFFFF").withAlpha(Number(attribute.style.silhouetteAlpha || 1.0));
	                entityattr.silhouetteSize = Number(attribute.style.silhouetteSize || 1.0);
	            } else entityattr.silhouetteSize = 0.0;

	            //透明度、颜色
	            if (attribute.style.fill) entityattr.color = new Cesium.Color.fromCssColorString(attribute.style.color || "#FFFFFF").withAlpha(Number(attribute.style.opacity || 1.0));else entityattr.color = new Cesium.Color.fromCssColorString("#FFFFFF").withAlpha(Number(attribute.style.opacity || 1.0));

	            return entityattr;
	        }
	    }, {
	        key: "attribute2Model",
	        value: function attribute2Model(attribute, model) {
	            //角度控制
	            var heading = Cesium.Math.toRadians(Number(model.attribute.style.heading || 0.0));
	            var pitch = Cesium.Math.toRadians(Number(model.attribute.style.pitch || 0.0));
	            var roll = Cesium.Math.toRadians(Number(model.attribute.style.roll || 0.0));
	            var hpr = new Cesium.HeadingPitchRoll(heading, pitch, roll);

	            if (model.orientation) {
	                model.orientation = Cesium.Transforms.headingPitchRollQuaternion(model.position._value, hpr);
	            }
	        }
	    }, {
	        key: "getEditor",
	        value: function getEditor(dataSource, entity, options) {
	            return new _PointEditor2.default(dataSource, entity, options);
	        }
	    }, {
	        key: "setPositions",
	        value: function setPositions(entity, position) {
	            entity.position = new _DynamicProperty2.default(position);
	            var heading = Cesium.Math.toRadians(Number(entity.attribute.style.heading || 0.0));
	            var pitch = Cesium.Math.toRadians(Number(entity.attribute.style.pitch || 0.0));
	            var roll = Cesium.Math.toRadians(Number(entity.attribute.style.roll || 0.0));
	            var hpr = new Cesium.HeadingPitchRoll(heading, pitch, roll);
	            entity.orientation = Cesium.Transforms.headingPitchRollQuaternion(entity.position._value, hpr);
	        }
	    }, {
	        key: "getPositions",
	        value: function getPositions(entity) {
	            return [entity.position._value];
	        }
	    }, {
	        key: "getCoordinates",
	        value: function getCoordinates(entity) {
	            var positions = this.getPositions(entity);
	            var coordinates = _DrawUtils2.default.getCoordinates(positions);
	            return coordinates;
	        }
	    }, {
	        key: "toGeoJSON",
	        value: function toGeoJSON(entity) {
	            var coordinates = this.getCoordinates(entity);

	            return {
	                type: "Feature",
	                properties: entity.attribute,
	                geometry: {
	                    type: "Point",
	                    coordinates: coordinates
	                }
	            };
	        }
	    }]);

	    return ModelControl;
	}();

	exports.default = ModelControl;

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _DrawUtils = __webpack_require__(39);

	var _DrawUtils2 = _interopRequireDefault(_DrawUtils);

	var _PointEditor = __webpack_require__(42);

	var _PointEditor2 = _interopRequireDefault(_PointEditor);

	var _DynamicProperty = __webpack_require__(41);

	var _DynamicProperty2 = _interopRequireDefault(_DynamicProperty);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var LabelControl = function () {
	    function LabelControl(options) {
	        _classCallCheck(this, LabelControl);

	        this.typename = "label";
	    }

	    _createClass(LabelControl, null, [{
	        key: "startDraw",
	        value: function startDraw(dataSource, attribute) {
	            var entityattr = this.attribute2Entity(attribute);

	            var entity = dataSource.entities.add({
	                //name: 'Entity ' + arrEntity.length,
	                label: entityattr,
	                attribute: attribute
	            });

	            return entity;
	        }
	    }, {
	        key: "attribute2Entity",
	        value: function attribute2Entity(attribute, entityattr) {
	            attribute = attribute || {};
	            attribute.style = attribute.style || {};
	            if (entityattr == null) {
	                //默认值
	                entityattr = {
	                    scale: 1.0,
	                    //disableDepthTestDistance:Number.POSITIVE_INFINITY,
	                    horizontalOrigin: Cesium.HorizontalOrigin.CENTER,
	                    verticalOrigin: Cesium.VerticalOrigin.BOTTOM
	                };
	            }

	            //Style赋值值Entity
	            for (var key in attribute.style) {
	                var value = attribute.style[key];
	                switch (key) {
	                    default:
	                        //直接赋值
	                        entityattr[key] = value;
	                        break;
	                    case "font_style": //跳过扩展其他属性的参数
	                    case "font_weight":
	                    case "font_size":
	                    case "font_family":
	                    case "text":
	                    case "scaleByDistance_near":
	                    case "scaleByDistance_nearValue":
	                    case "scaleByDistance_far":
	                    case "scaleByDistance_farValue":
	                    case "distanceDisplayCondition_far":
	                    case "distanceDisplayCondition_near":
	                        break;
	                    case "color":
	                        //颜色
	                        entityattr.fillColor = new Cesium.Color.fromCssColorString(value || "#FFFF00").withAlpha(Number(attribute.style.opacity || 1.0));
	                        break;

	                    case "border":
	                        //是否衬色
	                        entityattr.style = value ? Cesium.LabelStyle.FILL_AND_OUTLINE : Cesium.LabelStyle.FILL;
	                        break;
	                    case "border_color":
	                        //衬色
	                        entityattr.outlineColor = new Cesium.Color.fromCssColorString(value || "#FFFF00").withAlpha(Number(attribute.style.opacity || 1.0));
	                        break;
	                    case "border_width":
	                        entityattr.outlineWidth = value;
	                        break;
	                    case "background":
	                        //是否背景色
	                        entityattr.showBackground = value;
	                        break;
	                    case "background_color":
	                        //背景色
	                        entityattr.backgroundColor = new Cesium.Color.fromCssColorString(value || "#FFFF00").withAlpha(Number(attribute.style.opacity || 1.0));
	                        break;
	                    case "pixelOffset":
	                        //偏移量
	                        entityattr.pixelOffset = new Cesium.Cartesian2(attribute.style.pixelOffset[0], attribute.style.pixelOffset[1]);
	                        break;
	                    case "scaleByDistance":
	                        //是否按视距缩放
	                        if (value) {
	                            entityattr.scaleByDistance = new Cesium.NearFarScalar(Number(attribute.style.scaleByDistance_near || 1000), Number(attribute.style.scaleByDistance_nearValue || 1.0), Number(attribute.style.scaleByDistance_far || 1000000), Number(attribute.style.scaleByDistance_farValue || 0.1));
	                        } else {
	                            entityattr.scaleByDistance = null;
	                        }
	                        break;
	                    case "distanceDisplayCondition":
	                        //是否按视距显示
	                        if (value) {
	                            entityattr.distanceDisplayCondition = new Cesium.DistanceDisplayCondition(Number(attribute.style.distanceDisplayCondition_near || 0), Number(attribute.style.distanceDisplayCondition_far || 100000));
	                        } else {
	                            entityattr.distanceDisplayCondition = null;
	                        }
	                        break;
	                }
	            }

	            //文字内容
	            entityattr.text = attribute.style.text || '文字'; //.replace(new RegExp("<br />", "gm"), "\n");

	            //样式（倾斜、加粗等）
	            var fontStyle = (attribute.style.font_style || "normal") + " " + (attribute.style.font_weight || "normal") + " " + (attribute.style.font_size || "30") + "px " + (attribute.style.font_family || "微软雅黑");
	            entityattr.font = fontStyle;

	            return entityattr;
	        }
	    }, {
	        key: "getEditor",
	        value: function getEditor(dataSource, entity, options) {
	            return new _PointEditor2.default(dataSource, entity, options);
	        }
	    }, {
	        key: "setPositions",
	        value: function setPositions(entity, position) {
	            entity.position = new _DynamicProperty2.default(position);
	        }
	    }, {
	        key: "getPositions",
	        value: function getPositions(entity) {
	            return [entity.position._value];
	        }
	    }, {
	        key: "getCoordinates",
	        value: function getCoordinates(entity) {
	            var positions = this.getPositions(entity);
	            var coordinates = _DrawUtils2.default.getCoordinates(positions);
	            return coordinates;
	        }
	    }, {
	        key: "toGeoJSON",
	        value: function toGeoJSON(entity) {
	            var coordinates = this.getCoordinates(entity);

	            return {
	                type: "Feature",
	                properties: entity.attribute,
	                geometry: {
	                    type: "Point",
	                    coordinates: coordinates
	                }
	            };
	        }
	    }]);

	    return LabelControl;
	}();

	exports.default = LabelControl;

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _DynamicProperty = __webpack_require__(41);

	var _DynamicProperty2 = _interopRequireDefault(_DynamicProperty);

	var _DrawUtils = __webpack_require__(39);

	var _DrawUtils2 = _interopRequireDefault(_DrawUtils);

	var _WallEditor = __webpack_require__(53);

	var _WallEditor2 = _interopRequireDefault(_WallEditor);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var WallControl = function () {
	    function WallControl() {
	        _classCallCheck(this, WallControl);
	    }

	    _createClass(WallControl, null, [{
	        key: "typename",
	        value: function typename() {
	            return "wall";
	        }
	    }, {
	        key: "startDraw",
	        value: function startDraw(dataSource, attribute) {
	            var entityattr = this.attribute2Entity(attribute);

	            var entity = dataSource.entities.add({
	                //name: 'Entity ' + arrEntity.length,
	                wall: entityattr,
	                attribute: attribute
	            });

	            return entity;
	        }
	    }, {
	        key: "attribute2Entity",
	        value: function attribute2Entity(attribute, entityattr) {
	            attribute = attribute || {};
	            attribute.style = attribute.style || {};

	            if (!entityattr) {
	                entityattr = {
	                    fill: true,
	                    minimumHeights: [],
	                    maximumHeights: [],
	                    positions: new _DynamicProperty2.default([])
	                };
	            }

	            //Style赋值值Entity
	            for (var key in attribute.style) {
	                var value = attribute.style[key];
	                switch (key) {
	                    default:
	                        //直接赋值
	                        entityattr[key] = value;
	                        break;
	                    case "opacity": //跳过扩展其他属性的参数
	                    case "outlineOpacity":
	                        break;
	                    case "outlineColor":
	                        //边框颜色
	                        entityattr.outlineColor = new Cesium.Color.fromCssColorString(value || "#FFFF00").withAlpha(attribute.style.outlineOpacity || attribute.style.opacity || 1.0);
	                        break;
	                    case "color":
	                        //填充颜色
	                        entityattr.material = new Cesium.Color.fromCssColorString(value || "#FFFF00").withAlpha(Number(attribute.style.opacity || 1.0));
	                        break;
	                }
	            }

	            //如果未设置任何material，设置默认颜色
	            if (entityattr.material == null) {
	                entityattr.material = Cesium.Color.fromRandom({
	                    minimumGreen: 0.75,
	                    maximumBlue: 0.75,
	                    alpha: Number(attribute.style.opacity || 1.0)
	                });
	            }

	            return entityattr;
	        }
	    }, {
	        key: "getEditor",
	        value: function getEditor(dataSource, entity, options) {
	            return new _WallEditor2.default(dataSource, entity, options);
	        }
	    }, {
	        key: "setPositions",
	        value: function setPositions(entity, position) {
	            entity.wall.positions = new _DynamicProperty2.default(position);

	            if (entity.wall.maximumHeights && entity.wall.minimumHeights) {
	                for (var i = 0; i < position.length; i++) {
	                    var carto = Cesium.Cartographic.fromCartesian(position[i]);
	                    entity.wall.minimumHeights._value[i] = Number(carto.height);
	                    entity.wall.maximumHeights._value[i] = Number(carto.height) + Number(entity.attribute.style.extrudedHeight);
	                }
	            }
	        }
	    }, {
	        key: "getPositions",
	        value: function getPositions(entity) {
	            return entity.wall.positions._value;
	        }
	    }, {
	        key: "setMaximumHeights",
	        value: function setMaximumHeights(entity, maximumHeights) {
	            entity.wall.maximumHeights = new _DynamicProperty2.default(maximumHeights);
	        }
	    }, {
	        key: "getMaximumHeights",
	        value: function getMaximumHeights(entity) {
	            return entity.wall.maximumHeights._value;
	        }
	    }, {
	        key: "setMinimumHeights",
	        value: function setMinimumHeights(entity, minimumHeights) {
	            entity.wall.minimumHeights = new _DynamicProperty2.default(minimumHeights);
	        }
	    }, {
	        key: "getMinimumHeights",
	        value: function getMinimumHeights(entity) {
	            return entity.wall.minimumHeights._value;
	        }
	    }, {
	        key: "getCoordinates",
	        value: function getCoordinates(entity) {
	            var positions = this.getPositions(entity);
	            var coordinates = _DrawUtils2.default.getCoordinates(positions);
	            return coordinates;
	        }
	    }, {
	        key: "toGeoJSON",
	        value: function toGeoJSON(entity) {
	            var coordinates = this.getCoordinates(entity);

	            return {
	                type: "Feature",
	                properties: entity.attribute,
	                geometry: {
	                    type: "LineString",
	                    coordinates: coordinates
	                }
	            };
	        }
	    }]);

	    return WallControl;
	}();

	exports.default = WallControl;

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _DrawUtils = __webpack_require__(39);

	var _DrawUtils2 = _interopRequireDefault(_DrawUtils);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var WallEditor = function () {
	    function WallEditor(dataSource, entity, options) {
	        _classCallCheck(this, WallEditor);

	        this.dataSource = dataSource;
	        this.entity = entity;
	        this.draggers = [];
	        this.heightDraggers = [];

	        var that = this;
	        var i = 0;
	        var positions = entity.wall.positions._value;
	        //entity.wall.positions.isConstant = false;
	        for (i = 0; i < positions.length; i++) {
	            var loc = positions[i];
	            var dragger = _drawutils.createDragger(this.dataSource, {
	                dragIcon: options.dragIcon,
	                position: loc,
	                onDrag: function onDrag(dragger, position) {
	                    dragger.positions[dragger.index] = position;
	                    that.updateDraggers();
	                    entity.changeEditing();
	                }
	            });
	            dragger.index = i;
	            dragger.positions = positions;
	            this.draggers.push(dragger);
	        }

	        if (entity.wall.maximumHeights) {
	            for (i = 0; i < positions.length; i++) {
	                var position = positions[i];
	                var carto = Cesium.Cartographic.fromCartesian(position.clone());
	                carto.height = entity.wall.maximumHeights._value[i];
	                var loc = Cesium.Cartesian3.fromRadians(carto.longitude, carto.latitude, carto.height);

	                var dragger = _drawutils.createDragger(this.dataSource, {
	                    dragIcon: options.dragIcon,
	                    position: loc,
	                    onDrag: function onDrag(dragger, position) {
	                        var cartoLoc = Cesium.Cartographic.fromCartesian(position);
	                        var minimumHeights = that.entity.wall.minimumHeights._value;
	                        var extrudedHeight = Number(cartoLoc.height) - Number(minimumHeights[dragger.index]);
	                        entity.attribute.style.extrudedHeight = extrudedHeight.toFixed(2);
	                        that.updateDraggers();
	                        entity.changeEditing();
	                    },
	                    vertical: true,
	                    horizontal: false
	                });
	                dragger.index = i;
	                this.heightDraggers.push(dragger);
	            }
	        }
	    }

	    _createClass(WallEditor, [{
	        key: "updateDraggers",
	        value: function updateDraggers() {
	            var positions = this.entity.wall.positions._value;
	            var minimumHeights = this.entity.wall.minimumHeights._value;
	            var maximumHeights = this.entity.wall.maximumHeights._value;
	            var miniHeights;
	            for (var i = 0; i < this.heightDraggers.length; i++) {
	                var position = positions[i].clone();
	                var heightDragger = this.heightDraggers[i];
	                var extrudedCarto = Cesium.Cartographic.fromCartesian(position);
	                minimumHeights[i] = extrudedCarto.height;
	                maximumHeights[i] = Number(extrudedCarto.height) + Number(this.entity.attribute.style.extrudedHeight);

	                heightDragger.position = _DrawUtils2.default.getPositionsWithHeight(position, this.entity.attribute.style.extrudedHeight);

	                this.draggers[i].position = position;
	            }
	        }
	    }, {
	        key: "destroy",
	        value: function destroy() {
	            var i = 0;

	            for (i = 0; i < this.draggers.length; i++) {
	                this.dataSource.entities.remove(this.draggers[i]);
	            }
	            this.draggers = [];

	            for (i = 0; i < this.heightDraggers.length; i++) {
	                this.dataSource.entities.remove(this.heightDraggers[i]);
	            }
	            this.heightDraggers = [];
	        }
	    }]);

	    return WallEditor;
	}();

	exports.default = WallEditor;

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _DrawUtils = __webpack_require__(39);

	var _DrawUtils2 = _interopRequireDefault(_DrawUtils);

	var _RectangleExtrudedEditor = __webpack_require__(55);

	var _RectangleExtrudedEditor2 = _interopRequireDefault(_RectangleExtrudedEditor);

	var _RectangleEditor = __webpack_require__(56);

	var _RectangleEditor2 = _interopRequireDefault(_RectangleEditor);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var PolygonControl = function () {
	    function PolygonControl(options) {
	        _classCallCheck(this, PolygonControl);

	        this.typename = "rectangle";
	    }

	    _createClass(PolygonControl, null, [{
	        key: "typename",
	        value: function typename() {
	            return "rectangle";
	        }
	    }, {
	        key: "startDraw",
	        value: function startDraw(dataSource, attribute) {
	            var entityattr = this.attribute2Entity(attribute);

	            var entity = dataSource.entities.add({
	                rectangle: entityattr,
	                attribute: attribute
	            });

	            return entity;
	        }
	    }, {
	        key: "attribute2Entity",
	        value: function attribute2Entity(attribute, entityattr) {
	            attribute = attribute || {};
	            attribute.style = attribute.style || {};

	            if (!entityattr) {
	                var coor = Cesium.Rectangle.fromDegrees(78.654473, 34.878143, 78.654673, 34.878316);
	                entityattr = {
	                    fill: true,
	                    closeTop: true,
	                    closeBottom: true,
	                    coordinates: coor
	                };
	            }

	            //Style赋值值Entity
	            for (var key in attribute.style) {
	                var value = attribute.style[key];
	                switch (key) {
	                    default:
	                        //直接赋值
	                        entityattr[key] = value;
	                        break;
	                    case "opacity": //跳过扩展其他属性的参数
	                    case "outlineOpacity":
	                        break;
	                    case "outlineColor":
	                        //边框颜色
	                        entityattr.outlineColor = new Cesium.Color.fromCssColorString(value || "#FFFF00").withAlpha(attribute.style.outlineOpacity || attribute.style.opacity || 1.0);
	                        break;
	                    case "height":
	                        entityattr.height = Number(value);
	                        entityattr.extrudedHeight = Number(attribute.style.extrudedHeight) + Number(value);
	                        break;
	                    case "extrudedHeight":
	                        entityattr.extrudedHeight = Number(entityattr.height) + Number(value);
	                        break;
	                    case "color":
	                        //填充颜色
	                        entityattr.material = new Cesium.Color.fromCssColorString(value || "#FFFF00").withAlpha(Number(attribute.style.opacity || 1.0));
	                        break;
	                    case "image":
	                        //填充图片
	                        entityattr.material = attribute.style.image;
	                        break;
	                    case "rotation":
	                        //旋转角度 
	                        entityattr.rotation = Cesium.Math.toRadians(value);
	                        if (!attribute.style.stRotation) entityattr.stRotation = Cesium.Math.toRadians(value);
	                        break;
	                    case "stRotation":
	                        entityattr.stRotation = Cesium.Math.toRadians(value);
	                        break;
	                }
	            }

	            //如果未设置任何material，设置默认颜色
	            if (entityattr.material == null) {
	                entityattr.material = Cesium.Color.fromRandom({
	                    minimumGreen: 0.75,
	                    maximumBlue: 0.75,
	                    alpha: Number(attribute.style.opacity || 1.0)
	                });
	            }

	            return entityattr;
	        }
	    }, {
	        key: "getEditor",
	        value: function getEditor(dataSource, entity, options) {
	            if (entity.rectangle.extrudedHeight) {
	                return new _RectangleExtrudedEditor2.default(dataSource, entity, options);
	            } else {
	                return new _RectangleEditor2.default(dataSource, entity, options);
	            }
	        }
	    }, {
	        key: "setPositions",
	        value: function setPositions(entity, position) {
	            if (position instanceof Array) {
	                position = Cesium.Rectangle.fromCartesianArray(position);
	            }
	            entity.rectangle.coordinates.setValue(position); // = new _DynamicProperty(position);
	        }
	    }, {
	        key: "getPositions",
	        value: function getPositions(entity) {
	            return entity.rectangle.coordinates;
	        }
	    }, {
	        key: "getCoordinates",
	        value: function getCoordinates(entity) {
	            var positions = this.getDiagonalPositions(entity);
	            var coordinates = _DrawUtils2.default.getCoordinates(positions);
	            return coordinates;
	        }
	    }, {
	        key: "getDiagonalPositions",
	        value: function getDiagonalPositions(entity) {
	            var rectangle = entity.rectangle.coordinates._value;
	            var nw = Cesium.Rectangle.northwest(rectangle);
	            var se = Cesium.Rectangle.southeast(rectangle);
	            return Cesium.Cartesian3.fromRadiansArray([nw.longitude, nw.latitude, se.longitude, se.latitude]);
	        }
	    }, {
	        key: "toGeoJSON",
	        value: function toGeoJSON(entity) {
	            var coordinates = this.getCoordinates(entity);

	            return {
	                type: "Feature",
	                properties: entity.attribute,
	                geometry: {
	                    type: "MultiPoint",
	                    coordinates: coordinates
	                }
	            };
	        }
	    }]);

	    return PolygonControl;
	}();

	exports.default = PolygonControl;

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _DrawUtils = __webpack_require__(39);

	var _DrawUtils2 = _interopRequireDefault(_DrawUtils);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var RectangleExtrudedEditor = function () {
	    function RectangleExtrudedEditor(dataSource, entity, options) {
	        _classCallCheck(this, RectangleExtrudedEditor);

	        this.dataSource = dataSource;
	        this.entity = entity;
	        this.draggers = [];
	        this.heightDraggers = [];

	        var that = this;
	        var i = 0;

	        var positions = this.getDraggersPositions(); // entity.rectangle.coordinates._value;
	        //entity.rectangle.coordinates.isConstant = false;
	        for (i = 0; i < positions.length; i++) {
	            var loc = positions[i];
	            if (entity.rectangle.height != undefined) {
	                var carto = Cesium.Cartographic.fromCartesian(loc);
	                carto.height += entity.rectangle.height._value;
	                loc = Cesium.Cartesian3.fromRadians(carto.longitude, carto.latitude, carto.height);
	            }

	            var dragger = _DrawUtils2.default.createDragger(this.dataSource, {
	                dragIcon: options.dragIcon,
	                position: loc,
	                onDrag: function onDrag(dragger, position) {
	                    dragger.positions[dragger.index] = position;
	                    var coord;
	                    if (dragger.index == 0) {
	                        coord = Cesium.Rectangle.fromCartesianArray([position, dragger.positions[1]]);
	                    } else {
	                        coord = Cesium.Rectangle.fromCartesianArray([position, dragger.positions[0]]);
	                    }
	                    entity.rectangle.coordinates.setValue(coord);
	                    that.updateDraggers();
	                    entity.changeEditing();
	                }
	            });
	            dragger.index = i;
	            dragger.positions = positions;
	            this.draggers.push(dragger);
	        }

	        // Add a dragger that will change the extruded height on the rectangle.
	        if (entity.rectangle.extrudedHeight) {
	            for (i = 0; i < positions.length; i++) {
	                var position = positions[i];
	                var carto = Cesium.Cartographic.fromCartesian(position);
	                carto.height += entity.rectangle.extrudedHeight._value;

	                var loc = Cesium.Cartesian3.fromRadians(carto.longitude, carto.latitude, carto.height);

	                var dragger = _DrawUtils2.default.createDragger(this.dataSource, {
	                    dragIcon: options.dragIcon,
	                    position: loc,
	                    onDrag: function onDrag(dragger, position) {
	                        var cartoLoc = Cesium.Cartographic.fromCartesian(position);
	                        entity.rectangle.extrudedHeight = new Cesium.ConstantProperty(cartoLoc.height);
	                        var extrudedHeight = Number(cartoLoc.height) - Number(entity.rectangle.height);
	                        entity.attribute.style.extrudedHeight = Number(extrudedHeight).toFixed(2);
	                        that.updateDraggers();
	                        entity.changeEditing();
	                    },
	                    vertical: true,
	                    horizontal: false
	                });
	                dragger.index = i;
	                this.heightDraggers.push(dragger);
	            }
	        }
	    }

	    _createClass(RectangleExtrudedEditor, [{
	        key: "getDraggersPositions",
	        value: function getDraggersPositions() {
	            var rectangle = this.entity.rectangle.coordinates._value;

	            var nw = Cesium.Rectangle.northwest(rectangle);
	            var se = Cesium.Rectangle.southeast(rectangle);

	            return Cesium.Cartesian3.fromRadiansArray([nw.longitude, nw.latitude, se.longitude, se.latitude]);
	        }
	    }, {
	        key: "updateDraggers",
	        value: function updateDraggers() {
	            var positions = this.getDraggersPositions();
	            var extrudedHeight = this.entity.rectangle.extrudedHeight._value;
	            var height = 0;
	            if (this.entity.rectangle.height != undefined) {
	                height = this.entity.rectangle.height._value;
	            }
	            for (var i = 0; i < this.heightDraggers.length; i++) {
	                var position = positions[i];
	                var heightDragger = this.heightDraggers[i];
	                var extrudedCarto = Cesium.Cartographic.fromCartesian(position);
	                extrudedCarto.height += extrudedHeight;
	                var loc = Cesium.Cartesian3.fromRadians(extrudedCarto.longitude, extrudedCarto.latitude, extrudedCarto.height);
	                heightDragger.position = loc;

	                var dragger = this.draggers[i];
	                var carto = Cesium.Cartographic.fromCartesian(position);
	                carto.height += height;
	                loc = Cesium.Cartesian3.fromRadians(carto.longitude, carto.latitude, carto.height);
	                dragger.position = loc;
	            }
	        }
	    }, {
	        key: "destroy",
	        value: function destroy() {
	            var i = 0;

	            for (i = 0; i < this.draggers.length; i++) {
	                this.dataSource.entities.remove(this.draggers[i]);
	            }
	            this.draggers = [];

	            for (i = 0; i < this.heightDraggers.length; i++) {
	                this.dataSource.entities.remove(this.heightDraggers[i]);
	            }
	            this.heightDraggers = [];
	        }
	    }]);

	    return RectangleExtrudedEditor;
	}();

	exports.default = RectangleExtrudedEditor;

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _DrawUtils = __webpack_require__(39);

	var _DrawUtils2 = _interopRequireDefault(_DrawUtils);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var RectangleEditor = function () {
	    function RectangleEditor(dataSource, entity, options) {
	        _classCallCheck(this, RectangleEditor);

	        this.dataSource = dataSource;
	        this.entity = entity;
	        this.draggers = [];

	        var positions = this.getDraggersPositions();
	        //entity.rectangle.coordinates.isConstant = false;
	        for (var i = 0; i < positions.length; i++) {
	            var loc = positions[i];
	            var dragger = _DrawUtils2.default.createDragger(this.dataSource, {
	                dragIcon: options.dragIcon,
	                position: loc,
	                heightReference: !entity.attribute.style.perPositionHeight,
	                onDrag: function onDrag(dragger, position) {
	                    dragger.positions[dragger.index] = position;
	                    var coord;
	                    if (dragger.index == 0) {
	                        coord = Cesium.Rectangle.fromCartesianArray([position, dragger.positions[1]]);
	                    } else {
	                        coord = Cesium.Rectangle.fromCartesianArray([position, dragger.positions[0]]);
	                    }
	                    entity.rectangle.coordinates.setValue(coord);
	                    entity.changeEditing();
	                }
	            });
	            dragger.index = i;
	            dragger.positions = positions;
	            this.draggers.push(dragger);
	        }
	    }

	    _createClass(RectangleEditor, [{
	        key: "getDraggersPositions",
	        value: function getDraggersPositions() {
	            var rectangle = this.entity.rectangle.coordinates._value;

	            var nw = Cesium.Rectangle.northwest(rectangle);
	            var se = Cesium.Rectangle.southeast(rectangle);

	            return Cesium.Cartesian3.fromRadiansArray([nw.longitude, nw.latitude, se.longitude, se.latitude]);
	        }
	    }, {
	        key: "updateDraggers",
	        value: function updateDraggers() {
	            var positions = this.getDraggersPositions();
	            for (var i = 0; i < this.draggers.length; i++) {
	                var position = positions[i];
	                this.draggers[i].position = position;
	            }
	        }
	    }, {
	        key: "destroy",
	        value: function destroy() {
	            for (var i = 0; i < this.draggers.length; i++) {
	                this.dataSource.entities.remove(this.draggers[i]);
	            }
	            this.draggers = [];
	        }
	    }]);

	    return RectangleEditor;
	}();

	exports.default = RectangleEditor;

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _DynamicProperty = __webpack_require__(41);

	var _DynamicProperty2 = _interopRequireDefault(_DynamicProperty);

	var _DrawUtils = __webpack_require__(39);

	var _DrawUtils2 = _interopRequireDefault(_DrawUtils);

	var _PolylineVolumeEditor = __webpack_require__(58);

	var _PolylineVolumeEditor2 = _interopRequireDefault(_PolylineVolumeEditor);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var PolylineVolumeControl = function () {
	    function PolylineVolumeControl() {
	        _classCallCheck(this, PolylineVolumeControl);
	    }

	    _createClass(PolylineVolumeControl, null, [{
	        key: "typename",
	        value: function typename() {
	            return "polylineVolume";
	        }
	    }, {
	        key: "startDraw",
	        value: function startDraw(dataSource, attribute) {
	            var entityattr = this.attribute2Entity(attribute);

	            var entity = dataSource.entities.add({
	                polylineVolume: entityattr,
	                attribute: attribute
	            });

	            return entity;
	        }
	    }, {
	        key: "attribute2Entity",
	        value: function attribute2Entity(attribute, entityattr) {
	            attribute = attribute || {};
	            attribute.style = attribute.style || {};
	            if (entityattr == null) {
	                entityattr = {
	                    positions: new _DynamicProperty2.default([])
	                    //positions: new Cesium.ConstantProperty([])
	                };
	            }

	            //Style赋值值Entity
	            for (var key in attribute.style) {
	                var value = attribute.style[key];
	                switch (key) {
	                    default:
	                        //直接赋值
	                        entityattr[key] = value;
	                        break;
	                    case "opacity": //跳过扩展其他属性的参数
	                    case "outlineOpacity":
	                    case "radius":
	                    case "shape":
	                        break;
	                    case "outlineColor":
	                        //边框颜色
	                        entityattr.outlineColor = new Cesium.Color.fromCssColorString(value || "#FFFF00").withAlpha(attribute.style.outlineOpacity || attribute.style.opacity || 1.0);
	                        break;
	                    case "color":
	                        //填充颜色
	                        entityattr.material = new Cesium.Color.fromCssColorString(value || "#FFFF00").withAlpha(Number(attribute.style.opacity || 1.0));
	                        break;
	                }
	            }

	            //管道样式 
	            attribute.style.radius = attribute.style.radius || 10;
	            switch (attribute.style.shape) {
	                default:
	                case "pipeline":
	                    entityattr.shape = this._getCorridorShape1(attribute.style.radius); //（厚度固定为半径的1/3）
	                    break;
	                case "circle":
	                    entityattr.shape = this._getCorridorShape2(attribute.style.radius);
	                    break;
	                case "star":
	                    entityattr.shape = this._getCorridorShape3(attribute.style.radius);
	                    break;
	            }

	            return entityattr;
	        }

	        //管道形状1【内空管道】 radius整个管道的外半径 

	    }, {
	        key: "_getCorridorShape1",
	        value: function _getCorridorShape1(radius) {
	            var hd = radius / 3;
	            var startAngle = 0;
	            var endAngle = 360;

	            var pss = [];
	            for (var i = startAngle; i <= endAngle; i++) {
	                var radians = Cesium.Math.toRadians(i);
	                pss.push(new Cesium.Cartesian2(radius * Math.cos(radians), radius * Math.sin(radians)));
	            }
	            for (var i = endAngle; i >= startAngle; i--) {
	                var radians = Cesium.Math.toRadians(i);
	                pss.push(new Cesium.Cartesian2((radius - hd) * Math.cos(radians), (radius - hd) * Math.sin(radians)));
	            }
	            return pss;
	        }
	    }, {
	        key: "_getCorridorShape2",
	        value: function _getCorridorShape2(radius) {
	            var startAngle = 0;
	            var endAngle = 360;

	            var pss = [];
	            for (var i = startAngle; i <= endAngle; i++) {
	                var radians = Cesium.Math.toRadians(i);
	                pss.push(new Cesium.Cartesian2(radius * Math.cos(radians), radius * Math.sin(radians)));
	            }
	            return pss;
	        }
	    }, {
	        key: "_getCorridorShape3",
	        value: function _getCorridorShape3(radius, arms) {
	            var arms = arms || 6;
	            var angle = Math.PI / arms;
	            var length = 2 * arms;
	            var pss = new Array(length);
	            for (var i = 0; i < length; i++) {
	                var r = i % 2 === 0 ? radius : radius / 3;
	                pss[i] = new Cesium.Cartesian2(Math.cos(i * angle) * r, Math.sin(i * angle) * r);
	            }
	            return pss;
	        }
	    }, {
	        key: "getEditor",
	        value: function getEditor(dataSource, entity, options) {
	            return new _PolylineVolumeEditor2.default(dataSource, entity, options);
	        }
	    }, {
	        key: "setPositions",
	        value: function setPositions(entity, positions) {
	            //entity.polylineVolume.positions = new DynamicProperty(positions);
	            entity.polylineVolume.positions = positions;
	        }
	    }, {
	        key: "getPositions",
	        value: function getPositions(entity) {
	            return entity.polylineVolume.positions._value;
	        }
	    }, {
	        key: "getCoordinates",
	        value: function getCoordinates(entity) {
	            var positions = this.getPositions(entity);
	            var coordinates = _DrawUtils2.default.getCoordinates(positions);
	            return coordinates;
	        }
	    }, {
	        key: "toGeoJSON",
	        value: function toGeoJSON(entity) {
	            var coordinates = this.getCoordinates(entity);
	            return {
	                type: "Feature",
	                properties: entity.attribute,
	                geometry: {
	                    type: "LineString",
	                    coordinates: coordinates
	                }
	            };
	        }
	    }]);

	    return PolylineVolumeControl;
	}();

	exports.default = PolylineVolumeControl;

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _DrawUtils = __webpack_require__(39);

	var _DrawUtils2 = _interopRequireDefault(_DrawUtils);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var PolylineVolumeEditor = function () {
	    function PolylineVolumeEditor(dataSource, entity, options) {
	        _classCallCheck(this, PolylineVolumeEditor);

	        this.dataSource = dataSource;
	        this.entity = entity;
	        this.draggers = [];

	        var positions = entity.polylineVolume.positions.getValue();
	        //entity.polylineVolume.positions.isConstant = false;
	        for (var i = 0; i < positions.length; i++) {
	            var loc = positions[i];
	            var dragger = _DrawUtils2.default.createDragger(this.dataSource, {
	                dragIcon: options.dragIcon,
	                position: loc,
	                onDrag: function onDrag(dragger, position) {
	                    positions[dragger.index] = position;
	                    entity.polylineVolume.positions = positions;
	                    entity.changeEditing();
	                }
	            });
	            dragger.index = i;
	            //dragger.positions = positions;
	            this.draggers.push(dragger);
	        }
	    }

	    _createClass(PolylineVolumeEditor, [{
	        key: "updateDraggers",
	        value: function updateDraggers() {

	            var positions = this.entity.polylineVolume.positions.getValue();
	            for (var i = 0; i < this.draggers.length; i++) {
	                var position = positions[i];
	                this.draggers[i].position = position;
	            }
	        }
	    }, {
	        key: "destroy",
	        value: function destroy() {
	            for (var i = 0; i < this.draggers.length; i++) {
	                this.dataSource.entities.remove(this.draggers[i]);
	            }
	            this.draggers = [];
	        }
	    }]);

	    return PolylineVolumeEditor;
	}();

	exports.default = PolylineVolumeEditor;

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _DynamicProperty = __webpack_require__(41);

	var _DynamicProperty2 = _interopRequireDefault(_DynamicProperty);

	var _DrawUtils = __webpack_require__(39);

	var _DrawUtils2 = _interopRequireDefault(_DrawUtils);

	var _EllipseEditor = __webpack_require__(60);

	var _EllipseEditor2 = _interopRequireDefault(_EllipseEditor);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var EllipseControl = function () {
	    function EllipseControl(options) {
	        _classCallCheck(this, EllipseControl);

	        this.typename = "ellipse";
	    }

	    _createClass(EllipseControl, null, [{
	        key: "startDraw",
	        value: function startDraw(dataSource, attribute) {
	            var entityattr = this.attribute2Entity(attribute);

	            var entity = dataSource.entities.add({
	                //name: 'Entity ' + arrEntity.length,
	                ellipse: entityattr,
	                attribute: attribute
	            });

	            return entity;
	        }
	    }, {
	        key: "attribute2Entity",
	        value: function attribute2Entity(attribute, entityattr) {
	            attribute = attribute || {};
	            attribute.style = attribute.style || {};
	            if (entityattr == null) {
	                //默认值
	                entityattr = {
	                    fill: true
	                };
	            }

	            //Style赋值值Entity
	            for (var key in attribute.style) {
	                var value = attribute.style[key];
	                switch (key) {
	                    default:
	                        //直接赋值
	                        entityattr[key] = value;
	                        break;
	                    case "opacity": //跳过扩展其他属性的参数
	                    case "outlineOpacity":
	                        break;
	                    case "outlineColor":
	                        //边框颜色
	                        entityattr.outlineColor = new Cesium.Color.fromCssColorString(value || "#FFFF00").withAlpha(attribute.style.outlineOpacity || attribute.style.opacity || 1.0);
	                        break;
	                    case "color":
	                        //填充颜色
	                        entityattr.material = new Cesium.Color.fromCssColorString(value || "#FFFF00").withAlpha(Number(attribute.style.opacity || 1.0));
	                        break;
	                    case "rotation":
	                        //旋转角度
	                        entityattr.rotation = Cesium.Math.toRadians(value);
	                        break;
	                    case "radius":
	                        //半径
	                        entityattr.semiMinorAxis = value;
	                        entityattr.semiMajorAxis = value;
	                        break;

	                }
	            }

	            return entityattr;
	        }
	    }, {
	        key: "getEditor",
	        value: function getEditor(dataSource, entity, options) {
	            return new _EllipseEditor2.default(dataSource, entity, options);
	        }
	    }, {
	        key: "setPositions",
	        value: function setPositions(entity, position) {
	            entity.position = new _DynamicProperty2.default(position);
	        }
	    }, {
	        key: "getPositions",
	        value: function getPositions(entity) {
	            return [entity.position._value];
	        }
	    }, {
	        key: "getCoordinates",
	        value: function getCoordinates(entity) {
	            var positions = this.getPositions(entity);
	            var coordinates = _DrawUtils2.default.getCoordinates(positions);
	            return coordinates;
	        }
	    }, {
	        key: "toGeoJSON",
	        value: function toGeoJSON(entity) {
	            var coordinates = this.getCoordinates(entity);

	            return {
	                type: "Feature",
	                properties: entity.attribute,
	                geometry: { type: "Point", coordinates: coordinates }
	            };
	        }
	    }]);

	    return EllipseControl;
	}();

	exports.default = EllipseControl;

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _DrawUtils = __webpack_require__(39);

	var _DrawUtils2 = _interopRequireDefault(_DrawUtils);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var EllipseEditor = function () {
	    function EllipseEditor(dataSource, entity, options) {
	        _classCallCheck(this, EllipseEditor);

	        this.dataSource = dataSource;
	        this.entity = entity;
	        this.options = options;
	        this.draggers = [];
	        this.heightDraggers = [];
	        this.initDraggers();
	    }

	    _createClass(EllipseEditor, [{
	        key: "initDraggers",
	        value: function initDraggers() {
	            var that = this;
	            // Create a dragger that just modifies the entities position.
	            var dragger = _DrawUtils2.default.createDragger(this.dataSource, {
	                dragIcon: this.options.dragIcon,
	                //      position: DrawUtils.getPositionsWithHeight(this.entity.position._value,Number(this.entity.attribute.style.height || 0)),
	                position: this.entity.position._value,
	                onDrag: function onDrag(dragger, newPosition) {
	                    var diff = new Cesium.Cartesian3();
	                    Cesium.Cartesian3.subtract(newPosition, that.entity.position._value, diff);
	                    var cartoLoc = Cesium.Cartographic.fromCartesian(newPosition);
	                    var modelHeight = Number(cartoLoc.height).toFixed(2);
	                    that.entity.ellipse.height = new Cesium.ConstantProperty(cartoLoc.height);
	                    that.entity.attribute.style.height = modelHeight;
	                    that.entity.position._value = newPosition;

	                    var newPos = new Cesium.Cartesian3();
	                    Cesium.Cartesian3.add(dragger.majorDragger.position._value, diff, newPos);
	                    dragger.majorDragger.position = new Cesium.ConstantProperty(newPos);

	                    Cesium.Cartesian3.add(dragger.minorDragger.position._value, diff, newPos);
	                    dragger.minorDragger.position = new Cesium.ConstantProperty(newPos);

	                    if (that.entity.attribute.style.extrudedHeight != undefined) that.updateHeightDraggers();
	                    that.entity.changeEditing();
	                }
	            });
	            this.draggers.push(dragger);

	            //获取椭圆上的坐标点数组
	            var cep = Cesium.EllipseGeometryLibrary.computeEllipsePositions({
	                center: this.entity.position._value,
	                semiMinorAxis: this.entity.ellipse.semiMinorAxis._value,
	                semiMajorAxis: this.entity.ellipse.semiMajorAxis._value,
	                rotation: Cesium.Math.toRadians(Number(this.entity.attribute.style.rotation || 0)),
	                granularity: 2.0
	            }, true, false);

	            //长半轴上的坐标点
	            var majorPos = new Cesium.Cartesian3(cep.positions[0], cep.positions[1], cep.positions[2]);

	            var majorDragger = _DrawUtils2.default.createDragger(this.dataSource, {
	                dragIcon: this.options.dragIcon,
	                position: majorPos,
	                onDrag: function onDrag(dragger, newPosition) {
	                    var majorRadius = Cesium.Cartesian3.distance(that.entity.position._value, newPosition);
	                    var thisradius = Number(majorRadius.toFixed(2));

	                    that.entity.ellipse.semiMajorAxis = new Cesium.ConstantProperty(thisradius);
	                    if (that.entity.attribute.style.radius) {
	                        that.entity.attribute.style.radius = thisradius;
	                        that.entity.ellipse.semiMinorAxis = new Cesium.ConstantProperty(thisradius);
	                    } else {
	                        that.entity.attribute.style.semiMajorAxis = thisradius;
	                    }
	                    if (that.entity.attribute.style.extrudedHeight != undefined) that.updateHeightDraggers();
	                    that.entity.changeEditing();
	                }
	            });
	            dragger.majorDragger = majorDragger;
	            this.draggers.push(majorDragger);

	            //短半轴上的坐标点
	            var minorPos = new Cesium.Cartesian3(cep.positions[3], cep.positions[4], cep.positions[5]);
	            var minorDragger = _DrawUtils2.default.createDragger(this.dataSource, {
	                dragIcon: this.options.dragIcon,
	                position: minorPos,
	                onDrag: function onDrag(dragger, newPosition) {
	                    var minorRadius = Cesium.Cartesian3.distance(that.entity.position._value, newPosition);
	                    var thisradius = Number(minorRadius.toFixed(2));
	                    that.entity.ellipse.semiMinorAxis = new Cesium.ConstantProperty(thisradius);
	                    if (that.entity.attribute.style.radius) {
	                        that.entity.attribute.style.radius = thisradius;
	                        that.entity.ellipse.semiMajorAxis = new Cesium.ConstantProperty(thisradius);
	                    } else {
	                        that.entity.attribute.style.semiMinorAxis = thisradius;
	                    }
	                    if (that.entity.attribute.style.extrudedHeight != undefined) that.updateHeightDraggers();
	                    that.entity.changeEditing();
	                }
	            });
	            dragger.minorDragger = minorDragger;
	            this.draggers.push(minorDragger);

	            if (this.entity.attribute.style.extrudedHeight != undefined) this.initHeightDraggers();
	        }

	        //创建高程拖拽点

	    }, {
	        key: "initHeightDraggers",
	        value: function initHeightDraggers() {
	            var that = this;
	            // Create a dragger that just modifies the entities position.
	            var extrudedHeight = Number(this.entity.attribute.style.extrudedHeight) - Number(this.entity.attribute.style.height);
	            var hDragger = _DrawUtils2.default.createDragger(this.dataSource, {
	                dragIcon: this.options.dragIcon,
	                position: _DrawUtils2.default.getPositionsWithHeight(this.entity.position._value, extrudedHeight),
	                onDrag: function onDrag(dragger, newPosition) {
	                    var diff = new Cesium.Cartesian3();
	                    Cesium.Cartesian3.subtract(newPosition, that.entity.position._value, diff);
	                    var cartoLoc = Cesium.Cartographic.fromCartesian(newPosition);
	                    var modelHeight = Number(cartoLoc.height).toFixed(2);
	                    that.entity.position._value = newPosition;
	                    that.entity.ellipse.extrudedHeight = new Cesium.ConstantProperty(Number(modelHeight) + Number(extrudedHeight));
	                    that.entity.ellipse.height = new Cesium.ConstantProperty(cartoLoc.height);
	                    that.entity.attribute.style.extrudedHeight = Number(modelHeight) + Number(extrudedHeight);
	                    that.entity.attribute.style.height = modelHeight;
	                    that.updateDraggers();
	                    that.entity.changeEditing();
	                }
	            });

	            this.heightDraggers.push(hDragger);

	            var cep = Cesium.EllipseGeometryLibrary.computeEllipsePositions({
	                center: this.entity.position._value,
	                semiMinorAxis: this.entity.ellipse.semiMinorAxis._value,
	                semiMajorAxis: this.entity.ellipse.semiMajorAxis._value,
	                rotation: Cesium.Math.toRadians(Number(this.entity.attribute.style.rotation || 0)),
	                granularity: 2.0
	            }, true, false);
	            var majorPos = new Cesium.Cartesian3(cep.positions[0], cep.positions[1], cep.positions[2]);

	            var majorHDragger = _DrawUtils2.default.createDragger(this.dataSource, {
	                dragIcon: this.options.dragIcon,
	                position: _DrawUtils2.default.getPositionsWithHeight(majorPos, extrudedHeight),
	                onDrag: function onDrag(dragger, position) {
	                    var cartoLoc = Cesium.Cartographic.fromCartesian(position);
	                    that.entity.ellipse.extrudedHeight = new Cesium.ConstantProperty(cartoLoc.height);
	                    that.entity.attribute.style.extrudedHeight = Number(cartoLoc.height).toFixed(2);
	                    that.updateHeightDraggers();
	                    that.entity.changeEditing();
	                },
	                vertical: true,
	                horizontal: false
	            });
	            this.heightDraggers.push(majorHDragger);

	            var minorPos = new Cesium.Cartesian3(cep.positions[3], cep.positions[4], cep.positions[5]);
	            var minorHDragger = _DrawUtils2.default.createDragger(this.dataSource, {
	                dragIcon: this.options.dragIcon,
	                position: _DrawUtils2.default.getPositionsWithHeight(minorPos, extrudedHeight),
	                onDrag: function onDrag(dragger, position) {
	                    var cartoLoc = Cesium.Cartographic.fromCartesian(position);
	                    that.entity.ellipse.extrudedHeight = new Cesium.ConstantProperty(cartoLoc.height);
	                    that.entity.attribute.style.extrudedHeight = Number(cartoLoc.height).toFixed(2);
	                    that.updateHeightDraggers();
	                    that.entity.changeEditing();
	                },
	                vertical: true,
	                horizontal: false
	            });
	            this.heightDraggers.push(minorHDragger);
	        }

	        //更新拖拽点

	    }, {
	        key: "updateDraggers",
	        value: function updateDraggers() {
	            this.destroy();
	            this.initDraggers();
	        }

	        //更新高程拖拽点

	    }, {
	        key: "updateHeightDraggers",
	        value: function updateHeightDraggers() {
	            for (var i = 0; i < this.heightDraggers.length; i++) {
	                this.dataSource.entities.remove(this.heightDraggers[i]);
	            }
	            this.heightDraggers = [];
	            this.initHeightDraggers();
	        }
	    }, {
	        key: "destroy",
	        value: function destroy() {
	            var i = 0;
	            for (i = 0; i < this.draggers.length; i++) {
	                this.dataSource.entities.remove(this.draggers[i]);
	            }
	            this.draggers = [];
	            if (this.entity.attribute.style.extrudedHeight != undefined) {
	                for (i = 0; i < this.heightDraggers.length; i++) {
	                    this.dataSource.entities.remove(this.heightDraggers[i]);
	                }
	                this.heightDraggers = [];
	            }
	        }
	    }]);

	    return EllipseEditor;
	}();

	exports.default = EllipseEditor;

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _DynamicProperty = __webpack_require__(41);

	var _DynamicProperty2 = _interopRequireDefault(_DynamicProperty);

	var _DrawUtils = __webpack_require__(39);

	var _DrawUtils2 = _interopRequireDefault(_DrawUtils);

	var _EllipsoidEditor = __webpack_require__(62);

	var _EllipsoidEditor2 = _interopRequireDefault(_EllipsoidEditor);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var PolylineVolumeControl = function () {
	    function PolylineVolumeControl() {
	        _classCallCheck(this, PolylineVolumeControl);
	    }

	    _createClass(PolylineVolumeControl, null, [{
	        key: "typename",
	        value: function typename() {
	            return "ellipsoid";
	        }
	    }, {
	        key: "startDraw",
	        value: function startDraw(dataSource, attribute) {
	            var entityattr = this.attribute2Entity(attribute);

	            var entity = dataSource.entities.add({
	                //name: 'Entity ' + arrEntity.length,
	                ellipsoid: entityattr,
	                attribute: attribute
	            });

	            return entity;
	        }
	    }, {
	        key: "attribute2Entity",
	        value: function attribute2Entity(attribute, entityattr) {
	            attribute = attribute || {};
	            attribute.style = attribute.style || {};
	            if (entityattr == null) {
	                //默认值
	                entityattr = {
	                    fill: true
	                };
	            }

	            //Style赋值值Entity
	            for (var key in attribute.style) {
	                var value = attribute.style[key];
	                switch (key) {
	                    default:
	                        //直接赋值
	                        entityattr[key] = value;
	                        break;
	                    case "opacity": //跳过扩展其他属性的参数
	                    case "outlineOpacity":
	                    case "widthRadii":
	                    case "heightRadii":
	                        break;
	                    case "outlineColor":
	                        //边框颜色
	                        entityattr.outlineColor = new Cesium.Color.fromCssColorString(value || "#FFFF00").withAlpha(attribute.style.outlineOpacity || attribute.style.opacity || 1.0);
	                        break;
	                    case "color":
	                        //填充颜色
	                        entityattr.material = new Cesium.Color.fromCssColorString(value || "#FFFF00").withAlpha(Number(attribute.style.opacity || 1.0));
	                        break;
	                    case "extentRadii":
	                        //球体长宽高半径
	                        var extentRadii = attribute.style.extentRadii || 100;
	                        var widthRadii = attribute.style.widthRadii || 100;
	                        var heightRadii = attribute.style.heightRadii || 100;
	                        entityattr.radii = new Cesium.Cartesian3(extentRadii, widthRadii, heightRadii);
	                        break;
	                }
	            }

	            return entityattr;
	        }
	    }, {
	        key: "getEditor",
	        value: function getEditor(dataSource, entity, options) {
	            return new _EllipsoidEditor2.default(dataSource, entity, options);
	        }
	    }, {
	        key: "setPositions",
	        value: function setPositions(entity, position) {
	            entity.position = new _DynamicProperty2.default(position);
	        }
	    }, {
	        key: "getPositions",
	        value: function getPositions(entity) {
	            return [entity.position._value];
	        }
	    }, {
	        key: "getCoordinates",
	        value: function getCoordinates(entity) {
	            var positions = this.getPositions(entity);
	            var coordinates = _DrawUtils2.default.getCoordinates(positions);
	            return coordinates;
	        }
	    }, {
	        key: "toGeoJSON",
	        value: function toGeoJSON(entity) {
	            var coordinates = this.getCoordinates(entity);

	            return {
	                type: "Feature",
	                properties: entity.attribute,
	                geometry: { type: "Point", coordinates: coordinates }
	            };
	        }
	    }]);

	    return PolylineVolumeControl;
	}();

	exports.default = PolylineVolumeControl;

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _DrawUtils = __webpack_require__(39);

	var _DrawUtils2 = _interopRequireDefault(_DrawUtils);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var EllipsoidEditor = function () {
	    function EllipsoidEditor(dataSource, entity, options) {
	        _classCallCheck(this, EllipsoidEditor);

	        this.dataSource = dataSource;
	        this.entity = entity;
	        this.options = options;
	        this.draggers = [];
	        this.initDraggers();
	    }

	    //创建拖拽点


	    _createClass(EllipsoidEditor, [{
	        key: "initDraggers",
	        value: function initDraggers() {
	            var that = this;
	            var ellipsoidPs = this.entity.position._value;
	            var radii = Number(this.entity.attribute.style.heightRadii) || 0;
	            var carto = Cesium.Cartographic.fromCartesian(ellipsoidPs);
	            carto.height += radii;
	            var draggerPs = Cesium.Cartesian3.fromRadians(carto.longitude, carto.latitude, carto.height);

	            var dragger = _DrawUtils2.default.createDragger(this.dataSource, {
	                dragIcon: this.options.dragIcon,
	                position: draggerPs,
	                onDrag: function onDrag(dragger, newPosition) {
	                    var diff = new Cesium.Cartesian3();
	                    Cesium.Cartesian3.subtract(newPosition, that.entity.position._value, diff);

	                    var carto = Cesium.Cartographic.fromCartesian(newPosition);
	                    var radii = Number(that.entity.attribute.style.heightRadii) || 0;
	                    carto.height -= radii;
	                    var draggerPs = Cesium.Cartesian3.fromRadians(carto.longitude, carto.latitude, carto.height);

	                    that.entity.position._value = draggerPs; //newPosition;

	                    that.entity.changeEditing();
	                }
	            });
	            this.draggers.push(dragger);
	        }
	    }, {
	        key: "updateDraggers",
	        value: function updateDraggers() {
	            this.destroy();
	            this.initDraggers();
	        }
	    }, {
	        key: "destroy",
	        value: function destroy() {
	            for (var i = 0; i < this.draggers.length; i++) {
	                this.dataSource.entities.remove(this.draggers[i]);
	            }
	            this.draggers = [];
	        }
	    }]);

	    return EllipsoidEditor;
	}();

	exports.default = EllipsoidEditor;

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _DrawUtils = __webpack_require__(39);

	var _DrawUtils2 = _interopRequireDefault(_DrawUtils);

	var _Latlng = __webpack_require__(64);

	var _Latlng2 = _interopRequireDefault(_Latlng);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var EventControl = function () {
	    function EventControl(viewer) {
	        _classCallCheck(this, EventControl);

	        this.viewer = viewer;
	        // 禁用默认的实体双击动作。
	        viewer.screenSpaceEventHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK);
	        viewer.screenSpaceEventHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_CLICK);
	    }

	    _createClass(EventControl, [{
	        key: "setCursor",
	        value: function setCursor(style) {
	            document.getElementById(this.viewer._container.id).style.cursor = style || '';
	        }
	        /**
	          * 【绘制】单个坐标点的对象（点、字）绘制处理程序，绑定单击事件 
	          */

	    }, {
	        key: "createDrawPointHandler",
	        value: function createDrawPointHandler(entity) {
	            this.setCursor('crosshair');

	            var that = this;
	            entity.inProgress = true;
	            var handler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas);
	            handler.setInputAction(function (event) {
	                var cartesian = _Latlng2.default.getCurrentMousePosition(that.viewer.scene, event.position);
	                if (cartesian) {
	                    that.setCursor();

	                    entity.updatePositions(cartesian);
	                    entity.inProgress = false;
	                    entity.stopDrawing();
	                    entity.startEditing();
	                    handler.destroy();
	                    that.drawHandler = null;
	                }
	            }, Cesium.ScreenSpaceEventType.LEFT_CLICK);

	            //记录最近一次值 
	            this.drawHandler = handler;
	            return handler;
	        }
	    }, {
	        key: "createDrawPolylineHandler",


	        /**
	         *多个坐标点的对象（线）绘制处理程序，绑定单击、鼠标移动、双击事件
	         * Creates a handler that lets you modify a list of positions.
	         */
	        value: function createDrawPolylineHandler(entity, positions) {
	            this.setCursor('crosshair');
	            var that = this;

	            entity.inProgress = true;
	            var handler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas);

	            // Adds a point to the positions list.
	            handler.lastPointTemporary = false;
	            handler.setInputAction(function (event) {
	                var cartesian = _Latlng2.default.getCurrentMousePosition(that.viewer.scene, event.position);
	                if (cartesian) {
	                    if (handler.lastPointTemporary) {
	                        positions.pop();
	                    }
	                    if (entity.attribute && entity.attribute.addHeight) ////在绘制点基础自动增加高度
	                        cartesian = _DrawUtils2.default.getPositionsWithHeight(cartesian, entity.attribute.addHeight);

	                    positions.push(cartesian);

	                    handler.lastPointTemporary = false;
	                    if (entity.attribute && entity.attribute.minMaxPoints) {
	                        if (positions.length == entity.attribute.minMaxPoints.min && positions.length == entity.attribute.minMaxPoints.max || entity.attribute.minMaxPoints.isSuper && positions.length == 4) {
	                            entity.inProgress = false;
	                            handler.destroy();
	                            that.drawHandler = null;
	                            entity.stopDrawing();
	                            entity.startEditing();
	                            that.setCursor();
	                        }
	                    }
	                    entity.changeDrawing();
	                }
	            }, Cesium.ScreenSpaceEventType.LEFT_CLICK);

	            // Replaces the last point in the list with the point under the mouse.
	            handler.setInputAction(function (event) {
	                if (event.endPosition) {
	                    var cartesian = _Latlng2.default.getCurrentMousePosition(that.viewer.scene, event.endPosition);
	                    if (cartesian) {
	                        if (handler.lastPointTemporary) {
	                            positions.pop();
	                        }
	                        positions.push(cartesian);
	                        handler.lastPointTemporary = true;
	                        entity.moveDrawing();
	                    }
	                }
	            }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);

	            handler.setInputAction(function (event) {
	                entity.inProgress = false;
	                handler.destroy();
	                that.drawHandler = null;

	                positions.pop(); //必要代码 消除双击带来的多余经纬度 

	                entity.stopDrawing();
	                entity.startEditing();
	                that.setCursor();
	            }, Cesium.ScreenSpaceEventType.RIGHT_CLICK);

	            //记录最近一次值 
	            this.drawHandler = handler;

	            return handler;
	        }
	    }, {
	        key: "createDrawPolygonHandler",


	        /**
	         * 面绘制处理程序，绑定单击、鼠标移动、双击事件
	         * Creates a handler that lets you modify a list of positions.
	         */
	        value: function createDrawPolygonHandler(entity, positions) {
	            this.setCursor('crosshair');
	            var that = this;

	            entity.inProgress = true;
	            var handler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas);

	            // Adds a point to the positions list.
	            handler.lastPointTemporary = false;
	            handler.setInputAction(function (event) {
	                var cartesian = _Latlng2.default.getCurrentMousePosition(that.viewer.scene, event.position);
	                if (cartesian) {
	                    if (handler.lastPointTemporary) {
	                        positions.pop();
	                    }
	                    positions.push(cartesian);
	                    entity.polygon.hierarchy = positions;

	                    if (entity.attribute.style.extrudedHeight) {
	                        //存在extrudedHeight高度设置时
	                        var maxHight = _DrawUtils2.default.getMaxHeightForPositions(positions);
	                        entity.polygon.extrudedHeight = maxHight + Number(entity.attribute.style.extrudedHeight);
	                    }

	                    handler.lastPointTemporary = false;
	                    entity.changeDrawing();
	                }
	            }, Cesium.ScreenSpaceEventType.LEFT_CLICK);

	            // Replaces the last point in the list with the point under the mouse.
	            handler.setInputAction(function (event) {
	                if (event.endPosition) {
	                    var cartesian = _Latlng2.default.getCurrentMousePosition(that.viewer.scene, event.endPosition);
	                    if (cartesian) {
	                        if (handler.lastPointTemporary) {
	                            positions.pop();
	                        }
	                        positions.push(cartesian);
	                        entity.polygon.hierarchy = positions;

	                        if (entity.attribute.style.extrudedHeight) {
	                            //存在extrudedHeight高度设置时
	                            var maxHight = _DrawUtils2.default.getMaxHeightForPositions(positions);
	                            entity.polygon.extrudedHeight = maxHight + Number(entity.attribute.style.extrudedHeight);
	                        }

	                        handler.lastPointTemporary = true;
	                        entity.moveDrawing();
	                    }
	                }
	            }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);

	            handler.setInputAction(function (event) {
	                entity.inProgress = false;
	                handler.destroy();
	                that.drawHandler = null;

	                positions.pop(); //必要代码 消除双击带来的多余经纬度 
	                entity.polygon.hierarchy = positions;

	                entity.stopDrawing();
	                entity.startEditing();
	                that.setCursor();
	            }, Cesium.ScreenSpaceEventType.RIGHT_CLICK);

	            //记录最近一次值 
	            this.drawHandler = handler;

	            return handler;
	        }
	    }, {
	        key: "createTwoPointsModelHandler",


	        /**
	         * Cesium矩形，绑定单击、鼠标移动、双击事件;
	         * Creates a handler that lets you modify a list of positions.
	         */
	        value: function createTwoPointsModelHandler(entity, coordinates) {
	            this.setCursor('crosshair');
	            var that = this;
	            entity.inProgress = true;
	            var positions = [];
	            var handler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas);
	            handler.lastPointTemporary = false;
	            handler.setInputAction(function (event) {
	                var cartesian = _Latlng2.default.getCurrentMousePosition(that.viewer.scene, event.position);
	                if (cartesian) {
	                    if (handler.lastPointTemporary) {
	                        positions.pop();
	                    }
	                    positions.push(cartesian);
	                    if (positions.length == 1 && entity.attribute.style.extrudedHeight) {
	                        var modelHeight = Number(Cesium.Cartographic.fromCartesian(cartesian).height).toFixed(2);
	                        entity.rectangle.height = Number(modelHeight);
	                        entity.rectangle.extrudedHeight = Number(modelHeight) + Number(entity.attribute.style.extrudedHeight);
	                        entity.attribute.style.height = Number(modelHeight);
	                    }

	                    if (positions.length == 2) {
	                        var coord = Cesium.Rectangle.fromCartesianArray(positions);
	                        coordinates.setValue(coord);
	                    }
	                    handler.lastPointTemporary = false;
	                    entity.changeDrawing();

	                    if (positions.length == 2) {
	                        entity.inProgress = false;
	                        handler.destroy();
	                        that.drawHandler = null;
	                        //				positions.pop();//必要代码 消除双击带来的多余经纬度 
	                        entity.stopDrawing();
	                        entity.startEditing();
	                        that.setCursor();
	                    }
	                }
	            }, Cesium.ScreenSpaceEventType.LEFT_CLICK);

	            // Replaces the last point in the list with the point under the mouse.
	            handler.setInputAction(function (event) {
	                if (event.endPosition) {
	                    var cartesian = _Latlng2.default.getCurrentMousePosition(that.viewer.scene, event.endPosition);
	                    if (cartesian) {
	                        if (handler.lastPointTemporary) {
	                            positions.pop();
	                        }
	                        positions.push(cartesian);
	                        if (positions.length == 2) {
	                            var coord = Cesium.Rectangle.fromCartesianArray(positions);
	                            coordinates.setValue(coord);
	                        }
	                        handler.lastPointTemporary = true;
	                        entity.moveDrawing();
	                    }
	                }
	            }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);

	            //记录最近一次值 
	            this.drawHandler = handler;
	            return handler;
	        }

	        /**
	         * Cesium墙体，绑定单击、鼠标移动、双击事件;
	         * 除记录墙体的鼠标拾取的坐标外,还需记录顶部和底部的高程,并赋值给墙体Entity
	         * Creates a handler that lets you modify a list of positions.
	         */

	    }, {
	        key: "createDrawWallHandler",
	        value: function createDrawWallHandler(entity, positions, minimumHeights, maximumHeights) {
	            this.setCursor('crosshair');
	            var that = this;

	            entity.inProgress = true;
	            var handler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas);

	            // Adds a point to the positions list.
	            handler.lastPointTemporary = false;
	            handler.setInputAction(function (event) {
	                var cartesian = _Latlng2.default.getCurrentMousePosition(that.viewer.scene, event.position);
	                if (cartesian) {
	                    if (handler.lastPointTemporary) {
	                        positions.pop();
	                        minimumHeights.pop();
	                        maximumHeights.pop();
	                    }
	                    positions.push(cartesian);
	                    var cartoPs = Cesium.Cartographic.fromCartesian(cartesian);
	                    var minHeight = Number(cartoPs.height).toFixed(2);
	                    var maxHeight = Number(minHeight) + Number(entity.attribute.style.extrudedHeight);
	                    minimumHeights.push(minHeight);
	                    maximumHeights.push(maxHeight);
	                    handler.lastPointTemporary = false;

	                    entity.changeDrawing();
	                }
	            }, Cesium.ScreenSpaceEventType.LEFT_CLICK);

	            // Replaces the last point in the list with the point under the mouse.
	            handler.setInputAction(function (event) {
	                if (event.endPosition) {
	                    //var cartesian = this.viewer.camera.pickEllipsoid(event.endPosition, this.viewer.scene.globe.ellipsoid);
	                    var cartesian = _Latlng2.default.getCurrentMousePosition(that.viewer.scene, event.endPosition);
	                    if (cartesian) {
	                        if (handler.lastPointTemporary) {
	                            positions.pop();
	                            minimumHeights.pop();
	                            maximumHeights.pop();
	                        }
	                        positions.push(cartesian);
	                        var cartoPs = Cesium.Cartographic.fromCartesian(cartesian);
	                        var minHeight = Number(cartoPs.height).toFixed(2);
	                        var maxHeight = Number(minHeight) + Number(entity.attribute.style.extrudedHeight);
	                        minimumHeights.push(minHeight);
	                        maximumHeights.push(maxHeight);

	                        handler.lastPointTemporary = true;
	                        entity.moveDrawing();
	                    }
	                }
	            }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);

	            handler.setInputAction(function (event) {
	                entity.inProgress = false;
	                handler.destroy();
	                that.drawHandler = null;

	                positions.pop(); //必要代码 消除双击带来的多余经纬度 
	                minimumHeights.pop();
	                maximumHeights.pop();

	                entity.stopDrawing();
	                entity.startEditing();
	                that.setCursor();
	            }, Cesium.ScreenSpaceEventType.RIGHT_CLICK);

	            //记录最近一次值 
	            this.drawHandler = handler;

	            return handler;
	        }
	    }, {
	        key: "destroyDrawHandler",


	        /**
	         * 释放未完成的创建绘制
	         */
	        value: function destroyDrawHandler() {
	            this.setCursor();
	            if (this.drawHandler) {
	                this.setCursor();
	                this.drawHandler.destroy();
	                this.drawHandler = null;
	            }
	        }
	    }, {
	        key: "createEditSelectHandler",


	        /**
	         * 绑定左键单击事件[选中激活编辑+单击空白处取消编辑]
	         */
	        value: function createEditSelectHandler(calback) {

	            var that = this;
	            var handler = new Cesium.ScreenSpaceEventHandler(this.viewer.canvas);
	            handler.setInputAction(function (e) {
	                var picked = that.viewer.scene.pick(e.position);
	                var pickedEntity = null;
	                if (Cesium.defined(picked)) {
	                    var id = Cesium.defaultValue(picked.id, picked.primitive.id);
	                    if (id instanceof Cesium.Entity) {
	                        var inProgress = Cesium.defaultValue(id.inProgress, false);
	                        if (!inProgress) {
	                            pickedEntity = id;
	                        }
	                    }
	                }

	                calback(pickedEntity); //回调
	            }, Cesium.ScreenSpaceEventType.LEFT_CLICK);

	            this.selectHandler = handler;
	        }
	    }, {
	        key: "createEditDraggerHandler",


	        /**
	         * 【编辑】将协助选择和拖动编辑绑定的拖动到，实体对象 
	         * Initialize the utility handler that will assist in selecting and manipulating Dragger billboards.
	         */
	        value: function createEditDraggerHandler() {
	            var draggerHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.canvas);
	            draggerHandler.dragger = null;

	            var that = this;
	            // Left down selects a dragger
	            draggerHandler.setInputAction(function (click) {
	                var pickedObject = that.viewer.scene.pick(click.position);
	                if (Cesium.defined(pickedObject)) {
	                    var entity = pickedObject.id;
	                    if (entity && Cesium.defaultValue(entity._isDragger, false)) {
	                        // Resize the dragger.
	                        if (entity.point) {

	                            // entity.billboard.scale_src = entity.billboard.scale._value;
	                            // entity.billboard.scale._value = entity.billboard.scale_src * 1.2;

	                            entity.point.color = Cesium.Color.RED;
	                            entity.point.pixelSize = 10;
	                        }

	                        draggerHandler.dragger = entity;
	                        that.viewer.scene.screenSpaceCameraController.enableRotate = false;
	                        that.viewer.scene.screenSpaceCameraController.enableTilt = false;
	                        that.viewer.scene.screenSpaceCameraController.enableTranslate = false;
	                    }
	                }
	            }, Cesium.ScreenSpaceEventType.LEFT_DOWN);

	            // Left down selects a dragger
	            draggerHandler.setInputAction(function (click) {
	                var pickedObject = that.viewer.scene.pick(click.position);
	                if (Cesium.defined(pickedObject)) {
	                    var entity = pickedObject.id;
	                    if (entity && Cesium.defaultValue(entity._isDragger, false)) {
	                        // Resize the dragger.    
	                        if (entity.billboard) {

	                            entity.billboard.scale_src = entity.billboard.scale._value;
	                            entity.billboard.scale._value = entity.billboard.scale_src * 1.2;

	                            // entity.point.color=Cesium.Color.RED;
	                            // entity.point.outlineColor=Cesium.Color.WHITE;
	                            // entity.point.pixelSize=10;
	                        }

	                        draggerHandler.dragger = entity;
	                        that.viewer.scene.screenSpaceCameraController.enableRotate = false;
	                        that.viewer.scene.screenSpaceCameraController.enableTilt = false;
	                        that.viewer.scene.screenSpaceCameraController.enableTranslate = false;
	                    }
	                }
	            }, Cesium.ScreenSpaceEventType.LEFT_DOWN, Cesium.KeyboardEventModifier.CTRL);

	            // Mouse move drags the draggers and calls their onDrag callback.
	            draggerHandler.setInputAction(function (event) {
	                if (draggerHandler.dragger) {
	                    if (draggerHandler.dragger.horizontal) {

	                        var hit;
	                        if (draggerHandler.dragger.model) {
	                            //点

	                            //在模型上提取坐标
	                            var scene = that.viewer.scene;
	                            var pickobject = scene.pick(event.endPosition);
	                            if (Cesium.defined(pickobject) && pickobject.id == draggerHandler.dragger) {
	                                var pickRay = scene.camera.getPickRay(event.endPosition); //提取鼠标点的地理坐标
	                                hit = scene.globe.pick(pickRay, scene);
	                            }
	                        }

	                        //var hit = this.viewer.camera.pickEllipsoid(event.endPosition);
	                        if (hit == null) hit = _Latlng2.default.getCurrentMousePosition(that.viewer.scene, event.endPosition);

	                        if (hit) {
	                            draggerHandler.dragger.position = hit;
	                            if (draggerHandler.dragger.onDrag) {
	                                draggerHandler.dragger.onDrag(draggerHandler.dragger, hit);
	                            }
	                        }
	                    }

	                    if (draggerHandler.dragger.vertical) {
	                        var dy = event.endPosition.y - event.startPosition.y;
	                        var position = draggerHandler.dragger.position._value;
	                        var tangentPlane = new Cesium.EllipsoidTangentPlane(position);

	                        scratchBoundingSphere.center = position;
	                        scratchBoundingSphere.radius = 1;

	                        var metersPerPixel = that.viewer.scene.frameState.camera.getPixelSize(scratchBoundingSphere, that.viewer.scene.frameState.context.drawingBufferWidth, that.viewer.scene.frameState.context.drawingBufferHeight);

	                        var zOffset = new Cesium.Cartesian3();

	                        Cesium.Cartesian3.multiplyByScalar(tangentPlane.zAxis, -dy * metersPerPixel, zOffset);
	                        var newPosition = Cesium.Cartesian3.clone(position);
	                        Cesium.Cartesian3.add(position, zOffset, newPosition);

	                        draggerHandler.dragger.position = newPosition;
	                        if (draggerHandler.dragger.onDrag) {
	                            draggerHandler.dragger.onDrag(draggerHandler.dragger, newPosition);
	                        }
	                    }
	                }
	            }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);

	            var scratchBoundingSphere = new Cesium.BoundingSphere();

	            // Mouse move drags the draggers and calls their onDrag callback.
	            draggerHandler.setInputAction(function (event) {
	                if (draggerHandler.dragger && draggerHandler.dragger.verticalCtrl) {
	                    var dy = event.endPosition.y - event.startPosition.y;
	                    var position = draggerHandler.dragger.position._value;
	                    var tangentPlane = new Cesium.EllipsoidTangentPlane(position);

	                    scratchBoundingSphere.center = position;
	                    scratchBoundingSphere.radius = 1;

	                    var metersPerPixel = that.viewer.scene.frameState.camera.getPixelSize(scratchBoundingSphere, that.viewer.scene.frameState.context.drawingBufferWidth, that.viewer.scene.frameState.context.drawingBufferHeight);

	                    var zOffset = new Cesium.Cartesian3();

	                    Cesium.Cartesian3.multiplyByScalar(tangentPlane.zAxis, -dy * metersPerPixel, zOffset);
	                    var newPosition = Cesium.Cartesian3.clone(position);
	                    Cesium.Cartesian3.add(position, zOffset, newPosition);

	                    draggerHandler.dragger.position = newPosition;
	                    if (draggerHandler.dragger.onDrag) {
	                        draggerHandler.dragger.onDrag(draggerHandler.dragger, newPosition);
	                    }
	                }
	            }, Cesium.ScreenSpaceEventType.MOUSE_MOVE, Cesium.KeyboardEventModifier.CTRL);

	            // Left up stops dragging.
	            draggerHandler.setInputAction(function () {
	                if (draggerHandler.dragger) {
	                    if (draggerHandler.dragger.billboard || draggerHandler.dragger.model || draggerHandler.dragger.label) {
	                        if (draggerHandler.dragger.billboard) {
	                            //恢复大小
	                            draggerHandler.dragger.billboard.scale._value = draggerHandler.dragger.billboard.scale_src;
	                        } else if (draggerHandler.dragger.model) {
	                            //恢复大小
	                            //draggerHandler.dragger.model;
	                        } else if (draggerHandler.dragger.label) {
	                            //恢复大小
	                            //draggerHandler.dragger.model;
	                        }
	                        draggerHandler.dragger._isDragger = false;
	                    }

	                    draggerHandler.dragger = null;
	                    that.viewer.scene.screenSpaceCameraController.enableRotate = true;
	                    that.viewer.scene.screenSpaceCameraController.enableTilt = true;
	                    that.viewer.scene.screenSpaceCameraController.enableTranslate = true;
	                }
	            }, Cesium.ScreenSpaceEventType.LEFT_UP);

	            // Left up stops dragging.
	            draggerHandler.setInputAction(function () {
	                if (draggerHandler.dragger) {
	                    if (draggerHandler.dragger.billboard || draggerHandler.dragger.model || draggerHandler.dragger.label) {
	                        if (draggerHandler.dragger.billboard) {
	                            //恢复大小
	                            draggerHandler.dragger.billboard.scale._value = draggerHandler.dragger.billboard.scale_src;
	                        } else if (draggerHandler.dragger.model) {
	                            //恢复大小
	                            //draggerHandler.dragger.model;
	                        } else if (draggerHandler.dragger.label) {
	                            //恢复大小
	                            //draggerHandler.dragger.model;
	                        }
	                        draggerHandler.dragger._isDragger = false;
	                    }

	                    draggerHandler.dragger = null;
	                    that.viewer.scene.screenSpaceCameraController.enableRotate = true;
	                    that.viewer.scene.screenSpaceCameraController.enableTilt = true;
	                    that.viewer.scene.screenSpaceCameraController.enableTranslate = true;
	                }
	            }, Cesium.ScreenSpaceEventType.LEFT_UP, Cesium.KeyboardEventModifier.CTRL);

	            this.draggerHandler = draggerHandler;
	        }
	    }, {
	        key: "destroyEditHandler",
	        value: function destroyEditHandler() {

	            if (this.selectHandler) {
	                this.selectHandler.destroy();
	                this.selectHandler = null;
	            }

	            if (this.draggerHandler) {
	                this.draggerHandler.destroy();
	                this.draggerHandler = null;
	            }
	        }
	    }]);

	    return EventControl;
	}();

	exports.default = EventControl;

/***/ }),
/* 64 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Latlng = function () {
	    function Latlng(options) {
	        _classCallCheck(this, Latlng);
	    }

	    //格式化坐标点为可显示的可理解格式


	    _createClass(Latlng, null, [{
	        key: "formatPositon",
	        value: function formatPositon(position) {
	            var carto = Cesium.Cartographic.fromCartesian(position);
	            var result = {};
	            result.y = Number(Cesium.Math.toDegrees(carto.latitude).toFixed(6));
	            result.x = Number(Cesium.Math.toDegrees(carto.longitude).toFixed(6));
	            result.z = Number(carto.height.toFixed(1));
	            return result;
	        }

	        /**
	         * 获取鼠标当前的屏幕坐标位置的三维Cesium坐标
	         * @param {Cesium.Scene} scene 
	         * @param {Cesium.Cartesian2} position 二维屏幕坐标位置
	         */

	    }, {
	        key: "getCurrentMousePosition",
	        value: function getCurrentMousePosition(scene, position) {
	            var cartesian;

	            //在模型上提取坐标
	            var pickobject = scene.pick(position); //取模型
	            if (scene.pickPositionSupported && Cesium.defined(pickobject)) {
	                //!scene.pickPositionSupported : 不支持深度拾取,无法进行鼠标交互绘制
	                cartesian = scene.pickPosition(position);
	                // if (cartesian) {
	                if (Cesium.defined(cartesian)) {
	                    // var pgeo = scene.globe.ellipsoid.cartesianToCartographic(cartesian);
	                    var cartographic = Cesium.Cartographic.fromCartesian(cartesian);
	                    var height = cartographic.height; //模型高度
	                    if (height >= 0) return cartesian;

	                    //不是entity时，支持3dtiles地下
	                    if (!Cesium.defined(pickobject.id) && height >= -2000) return cartesian;
	                }
	            }

	            //提取鼠标点的地理坐标
	            if (scene.mode === Cesium.SceneMode.SCENE3D) {
	                var pickRay = scene.camera.getPickRay(position);
	                cartesian = scene.globe.pick(pickRay, scene);
	            } else {
	                cartesian = scene.camera.pickEllipsoid(position, scene.globe.ellipsoid);
	            }
	            return cartesian;
	        }

	        //提取地球中心点坐标

	    }, {
	        key: "getCenter",
	        value: function getCenter(viewer, isToWgs) {
	            var scene = viewer.scene;
	            var target = pickCenterPoint(scene);
	            var bestTarget = target;
	            if (!bestTarget) {
	                var globe = scene.globe;
	                var carto = scene.camera.positionCartographic.clone();
	                var height = globe.getHeight(carto);
	                carto.height = height || 0;
	                bestTarget = Cesium.Ellipsoid.WGS84.cartographicToCartesian(carto);
	            }
	            var result = formatPositon(bestTarget);
	            if (isToWgs) result = viewer.mars.point2wgs(result); //坐标转换为wgs

	            return result;
	        }
	    }, {
	        key: "pickCenterPoint",
	        value: function pickCenterPoint(scene) {
	            var canvas = scene.canvas;
	            var center = new Cesium.Cartesian2(canvas.clientWidth / 2, canvas.clientHeight / 2);

	            var ray = scene.camera.getPickRay(center);
	            var target = scene.globe.pick(ray, scene);
	            return target || scene.camera.pickEllipsoid(center);
	        }

	        //提取地球视域边界

	    }, {
	        key: "getExtent",
	        value: function getExtent(viewer, isToWgs) {
	            // 范围对象
	            var extent = { xmin: 70, xmax: 140, ymin: 0, ymax: 55 }; //默认值：中国区域

	            // 得到当前三维场景
	            var scene = viewer.scene;

	            // 得到当前三维场景的椭球体
	            var ellipsoid = scene.globe.ellipsoid;
	            var canvas = scene.canvas;

	            // canvas左上角
	            var car3_lt = viewer.camera.pickEllipsoid(new Cesium.Cartesian2(0, 0), ellipsoid);
	            if (car3_lt) {
	                // 在椭球体上
	                var carto_lt = ellipsoid.cartesianToCartographic(car3_lt);
	                extent.xmin = Cesium.Math.toDegrees(carto_lt.longitude);
	                extent.ymax = Cesium.Math.toDegrees(carto_lt.latitude);
	            } else {
	                // 不在椭球体上 
	                var xMax = canvas.width / 2;
	                var yMax = canvas.height / 2;

	                var car3_lt2;
	                // 这里每次10像素递加，一是10像素相差不大，二是为了提高程序运行效率
	                for (var yIdx = 0; yIdx <= yMax; yIdx += 10) {
	                    var xIdx = yIdx <= xMax ? yIdx : xMax;
	                    car3_lt2 = viewer.camera.pickEllipsoid(new Cesium.Cartesian2(xIdx, yIdx), ellipsoid);
	                    if (car3_lt2) break;
	                }
	                if (car3_lt2) {
	                    var carto_lt = ellipsoid.cartesianToCartographic(car3_lt2);
	                    extent.xmin = Cesium.Math.toDegrees(carto_lt.longitude);
	                    extent.ymax = Cesium.Math.toDegrees(carto_lt.latitude);
	                }
	            }

	            // canvas右下角
	            var car3_rb = viewer.camera.pickEllipsoid(new Cesium.Cartesian2(canvas.width, canvas.height), ellipsoid);
	            if (car3_rb) {
	                // 在椭球体上
	                var carto_rb = ellipsoid.cartesianToCartographic(car3_rb);
	                extent.xmax = Cesium.Math.toDegrees(carto_rb.longitude);
	                extent.ymin = Cesium.Math.toDegrees(carto_rb.latitude);
	            } else {
	                // 不在椭球体上
	                var xMax = canvas.width / 2;
	                var yMax = canvas.height / 2;

	                var car3_rb2;
	                // 这里每次10像素递减，一是10像素相差不大，二是为了提高程序运行效率
	                for (var yIdx = canvas.height; yIdx >= yMax; yIdx -= 10) {
	                    var xIdx = yIdx >= xMax ? yIdx : xMax;
	                    car3_rb2 = viewer.camera.pickEllipsoid(new Cesium.Cartesian2(xIdx, yIdx), ellipsoid);
	                    if (car3_rb2) break;
	                }
	                if (car3_rb2) {
	                    var carto_rb = ellipsoid.cartesianToCartographic(car3_rb2);
	                    extent.xmax = Cesium.Math.toDegrees(carto_rb.longitude);
	                    extent.ymin = Cesium.Math.toDegrees(carto_rb.latitude);
	                }
	            }

	            if (isToWgs) {
	                //坐标转换为wgs
	                var pt1 = viewer.mars.point2wgs({ x: extent.xmin, y: extent.ymin });
	                extent.xmin = pt1.x;
	                extent.ymin = pt1.y;

	                var pt2 = viewer.mars.point2wgs({ x: extent.xmax, y: extent.ymax });
	                extent.xmax = pt2.x;
	                extent.ymax = pt2.y;
	            }

	            return extent;
	        }

	        //提取相机视角范围参数 

	    }, {
	        key: "getCameraView",
	        value: function getCameraView(viewer, isToWgs) {
	            var camera = viewer.camera;
	            var position = camera.positionCartographic;

	            var bookmark = {};
	            bookmark.y = Number(Cesium.Math.toDegrees(position.latitude).toFixed(6));
	            bookmark.x = Number(Cesium.Math.toDegrees(position.longitude).toFixed(6));
	            bookmark.z = Number(position.height.toFixed(1));
	            bookmark.heading = Number(Cesium.Math.toDegrees(camera.heading).toFixed(1));
	            bookmark.pitch = Number(Cesium.Math.toDegrees(camera.pitch).toFixed(1));
	            bookmark.roll = Number(Cesium.Math.toDegrees(camera.roll).toFixed(1));

	            if (isToWgs) bookmark = viewer.mars.point2wgs(bookmark); //坐标转换为wgs

	            return bookmark;
	        }
	    }]);

	    return Latlng;
	}();

	exports.default = Latlng;

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _turf = __webpack_require__(66);

	var turf = _interopRequireWildcard(_turf);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Util = function () {
	    function Util() {
	        _classCallCheck(this, Util);
	    }

	    _createClass(Util, null, [{
	        key: 'isNumber',
	        value: function isNumber(obj) {
	            return typeof obj == 'number' && obj.constructor == Number;
	        }
	    }, {
	        key: 'isString',
	        value: function isString(str) {
	            return typeof str == 'string' && str.constructor == String;
	        }

	        //url参数获取

	    }, {
	        key: 'getRequest',
	        value: function getRequest() {
	            var url = location.search; //获取url中"?"符后的字串   
	            var theRequest = new Object();
	            if (url.indexOf("?") != -1) {
	                var str = url.substr(1);
	                var strs = str.split("&");
	                for (var i = 0; i < strs.length; i++) {
	                    theRequest[strs[i].split("=")[0]] = decodeURI(strs[i].split("=")[1]);
	                }
	            }
	            return theRequest;
	        }
	    }, {
	        key: 'getRequestByName',
	        value: function getRequestByName(name) {
	            var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
	            var r = window.location.search.substr(1).match(reg);
	            if (r != null) return decodeURI(r[2]);
	            return null;
	        }
	    }, {
	        key: 'clone',
	        value: function (_clone) {
	            function clone(_x) {
	                return _clone.apply(this, arguments);
	            }

	            clone.toString = function () {
	                return _clone.toString();
	            };

	            return clone;
	        }(function (obj) {
	            if (null == obj || "object" != (typeof obj === 'undefined' ? 'undefined' : _typeof(obj))) return obj;

	            // Handle Date
	            if (obj instanceof Date) {
	                var copy = new Date();
	                copy.setTime(obj.getTime());
	                return copy;
	            }

	            // Handle Array
	            if (obj instanceof Array) {
	                var copy = [];
	                for (var i = 0, len = obj.length; i < len; ++i) {
	                    copy[i] = clone(obj[i]);
	                }
	                return copy;
	            }

	            // Handle Object
	            if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {
	                var copy = {};
	                for (var attr in obj) {
	                    if (attr == "_layer" || attr == "_layers" || attr == "_parent") continue;

	                    if (obj.hasOwnProperty(attr)) copy[attr] = clone(obj[attr]);
	                }
	                return copy;
	            }
	            return obj;
	        })
	    }, {
	        key: 'isPCBroswer',
	        value: function isPCBroswer() {
	            var sUserAgent = navigator.userAgent.toLowerCase();

	            var bIsIpad = sUserAgent.match(/ipad/i) == "ipad";
	            var bIsIphoneOs = sUserAgent.match(/iphone/i) == "iphone";
	            var bIsMidp = sUserAgent.match(/midp/i) == "midp";
	            var bIsUc7 = sUserAgent.match(/rv:1.2.3.4/i) == "rv:1.2.3.4";
	            var bIsUc = sUserAgent.match(/ucweb/i) == "ucweb";
	            var bIsAndroid = sUserAgent.match(/android/i) == "android";
	            var bIsCE = sUserAgent.match(/windows ce/i) == "windows ce";
	            var bIsWM = sUserAgent.match(/windows mobile/i) == "windows mobile";
	            if (bIsIpad || bIsIphoneOs || bIsMidp || bIsUc7 || bIsUc || bIsAndroid || bIsCE || bIsWM) {
	                return false;
	            } else {
	                return true;
	            }
	        }

	        //检测浏览器webgl支持

	    }, {
	        key: 'webglreport',
	        value: function webglreport() {
	            var exinfo = haoutil.system.getExplorerInfo();
	            if (exinfo.type == "IE" && exinfo.version < 11) {
	                return false;
	            }

	            try {
	                var glContext;
	                var canvas = document.createElement('canvas');
	                var requestWebgl2 = typeof WebGL2RenderingContext !== 'undefined';
	                if (requestWebgl2) {
	                    glContext = canvas.getContext('webgl2') || canvas.getContext('experimental-webgl2') || undefined;
	                }
	                if (glContext == null) {
	                    glContext = canvas.getContext('webgl') || canvas.getContext('experimental-webgl') || undefined;
	                }
	                if (glContext == null) {
	                    return false;
	                }
	            } catch (e) {
	                return false;
	            }
	            return true;
	        }

	        //计算贴地路线

	    }, {
	        key: 'terrainPolyline',
	        value: function terrainPolyline(params) {
	            var viewer = params.viewer;
	            var positions = params.positions;
	            if (positions == null || positions.length == 0) {
	                if (params.calback) params.calback(positions);
	                return;
	            }

	            var flatPositions = Cesium.PolylinePipeline.generateArc({
	                positions: positions,
	                granularity: params.granularity || 0.00001
	            });

	            var cartographicArray = [];
	            var ellipsoid = viewer.scene.globe.ellipsoid;
	            for (var i = 0; i < flatPositions.length; i += 3) {
	                var cartesian = Cesium.Cartesian3.unpack(flatPositions, i);
	                cartographicArray.push(ellipsoid.cartesianToCartographic(cartesian));
	            }

	            //用于缺少地形数据时，赋值的高度
	            var tempHeight = Cesium.Cartographic.fromCartesian(positions[0]).height;

	            Cesium.when(Cesium.sampleTerrainMostDetailed(viewer.terrainProvider, cartographicArray), function (samples) {
	                var noHeight = false;
	                var offset = params.offset || 2; //增高高度，便于可视

	                for (var i = 0; i < samples.length; ++i) {
	                    if (samples[i].height == null) {
	                        noHeight = true;
	                        samples[i].height = tempHeight;
	                    } else {
	                        samples[i].height = offset + samples[i].height * viewer.scene._terrainExaggeration;
	                    }
	                }

	                var raisedPositions = ellipsoid.cartographicArrayToCartesianArray(samples);
	                if (params.calback) params.calback(raisedPositions, noHeight);else if (positions.setValue) positions.setValue(raisedPositions);
	            });
	        }
	        //创建模型

	    }, {
	        key: 'createModel',
	        value: function createModel(cfg, viewer) {
	            cfg = viewer.mars.point2map(cfg); //转换坐标系

	            var position = Cesium.Cartesian3.fromDegrees(cfg.x, cfg.y, cfg.z || 0);
	            var heading = Cesium.Math.toRadians(cfg.heading || 0);
	            var pitch = Cesium.Math.toRadians(cfg.pitch || 0);
	            var roll = Cesium.Math.toRadians(cfg.roll || 0);
	            var hpr = new Cesium.HeadingPitchRoll(heading, pitch, roll);
	            var orientation = Cesium.Transforms.headingPitchRollQuaternion(position, hpr);

	            var model = viewer.entities.add({
	                name: cfg.name || "",
	                position: position,
	                orientation: orientation,
	                model: cfg,
	                tooltip: cfg.tooltip,
	                popup: cfg.popup
	            });
	            return model;
	        }
	    }, {
	        key: 'toLatLon',
	        value: function toLatLon(point) {
	            var t = Cesium.Cartographic.fromCartesian(point);
	            return [Cesium.Math.toDegrees(t.longitude), Cesium.Math.toDegrees(t.latitude), t.height];
	        }
	    }, {
	        key: 'cartesians2lonlats',
	        value: function cartesians2lonlats(pointList) {
	            for (var t = [], i = 0, r = pointList.length; i < r; i++) {
	                var n = Util.toLatLon(pointList[i]);
	                t.push(n);
	            }
	            return t;
	        }

	        //计算面积

	    }, {
	        key: 'getArea',
	        value: function getArea(posList) {
	            var ptList = Util.cartesians2lonlats(posList);
	            ptList.push(ptList[0]);
	            return turf.area({
	                type: "Feature",
	                geometry: {
	                    type: "Polygon",
	                    coordinates: [ptList]
	                }
	            });

	            var indices = Cesium.PolygonPipeline.triangulate(posList, null);
	            var area = 0; // 平方公里

	            for (var i = 0; i < indices.length; i += 3) {
	                var vector1 = posList[indices[i]];
	                var vector2 = posList[indices[i + 1]];
	                var vector3 = posList[indices[i + 2]];

	                var vectorC = Cesium.Cartesian3.subtract(vector2, vector1, new Cesium.Cartesian3());
	                var vectorD = Cesium.Cartesian3.subtract(vector3, vector1, new Cesium.Cartesian3());
	                var areaVector = Cesium.Cartesian3.cross(vectorC, vectorD, new Cesium.Cartesian3());
	                area += Cesium.Cartesian3.magnitude(areaVector) / 2.0;
	            }
	            area = area.toFixed(3);
	            return area;
	        }
	    }]);

	    return Util;
	}();

	exports.default = Util;

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

	!function(t,e){ true?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(t.turf={})}(this,function(t){"use strict";function e(t,e,n){if(n=n||{},!I(n))throw new Error("options is invalid");var r=n.bbox,i=n.id;if(void 0===t)throw new Error("geometry is required");if(e&&e.constructor!==Object)throw new Error("properties must be an Object");r&&N(r),i&&C(i);var o={type:"Feature"};return i&&(o.id=i),r&&(o.bbox=r),o.properties=e||{},o.geometry=t,o}function n(t,e,n){if(n=n||{},!I(n))throw new Error("options is invalid");var i=n.bbox;if(!t)throw new Error("type is required");if(!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");i&&N(i);var s;switch(t){case"Point":s=r(e).geometry;break;case"LineString":s=a(e).geometry;break;case"Polygon":s=o(e).geometry;break;case"MultiPoint":s=l(e).geometry;break;case"MultiLineString":s=h(e).geometry;break;case"MultiPolygon":s=p(e).geometry;break;default:throw new Error(t+" is invalid")}return i&&(s.bbox=i),s}function r(t,n,r){if(!t)throw new Error("coordinates is required");if(!Array.isArray(t))throw new Error("coordinates must be an Array");if(t.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!b(t[0])||!b(t[1]))throw new Error("coordinates must contain numbers");return e({type:"Point",coordinates:t},n,r)}function i(t,e,n){if(!t)throw new Error("coordinates is required");if(!Array.isArray(t))throw new Error("coordinates must be an Array");return c(t.map(function(t){return r(t,e)}),n)}function o(t,n,r){if(!t)throw new Error("coordinates is required");for(var i=0;i<t.length;i++){var o=t[i];if(o.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var s=0;s<o[o.length-1].length;s++){if(0===i&&0===s&&!b(o[0][0])||!b(o[0][1]))throw new Error("coordinates must contain numbers");if(o[o.length-1][s]!==o[0][s])throw new Error("First and last Position are not equivalent.")}}return e({type:"Polygon",coordinates:t},n,r)}function s(t,e,n){if(!t)throw new Error("coordinates is required");if(!Array.isArray(t))throw new Error("coordinates must be an Array");return c(t.map(function(t){return o(t,e)}),n)}function a(t,n,r){if(!t)throw new Error("coordinates is required");if(t.length<2)throw new Error("coordinates must be an array of two or more positions");if(!b(t[0][1])||!b(t[0][1]))throw new Error("coordinates must contain numbers");return e({type:"LineString",coordinates:t},n,r)}function u(t,e,n){if(!t)throw new Error("coordinates is required");if(!Array.isArray(t))throw new Error("coordinates must be an Array");return c(t.map(function(t){return a(t,e)}),n)}function c(t,e){if(e=e||{},!I(e))throw new Error("options is invalid");var n=e.bbox,r=e.id;if(!t)throw new Error("No features passed");if(!Array.isArray(t))throw new Error("features must be an Array");n&&N(n),r&&C(r);var i={type:"FeatureCollection"};return r&&(i.id=r),n&&(i.bbox=n),i.features=t,i}function h(t,n,r){if(!t)throw new Error("coordinates is required");return e({type:"MultiLineString",coordinates:t},n,r)}function l(t,n,r){if(!t)throw new Error("coordinates is required");return e({type:"MultiPoint",coordinates:t},n,r)}function p(t,n,r){if(!t)throw new Error("coordinates is required");return e({type:"MultiPolygon",coordinates:t},n,r)}function f(t,n,r){if(!t)throw new Error("geometries is required");if(!Array.isArray(t))throw new Error("geometries must be an Array");return e({type:"GeometryCollection",geometries:t},n,r)}function g(t,e){if(void 0===t||null===t||isNaN(t))throw new Error("num is required");if(e&&!(e>=0))throw new Error("precision must be a positive number");var n=Math.pow(10,e||0);return Math.round(t*n)/n}function d(t,e){if(void 0===t||null===t)throw new Error("radians is required");if(e&&"string"!=typeof e)throw new Error("units must be a string");var n=qo[e||"kilometers"];if(!n)throw new Error(e+" units is invalid");return t*n}function y(t,e){if(void 0===t||null===t)throw new Error("distance is required");if(e&&"string"!=typeof e)throw new Error("units must be a string");var n=qo[e||"kilometers"];if(!n)throw new Error(e+" units is invalid");return t/n}function _(t,e){return v(y(t,e))}function m(t){if(null===t||void 0===t)throw new Error("bearing is required");var e=t%360;return e<0&&(e+=360),e}function v(t){if(null===t||void 0===t)throw new Error("radians is required");return 180*(t%(2*Math.PI))/Math.PI}function x(t){if(null===t||void 0===t)throw new Error("degrees is required");return t%360*Math.PI/180}function E(t,e,n){if(null===t||void 0===t)throw new Error("length is required");if(!(t>=0))throw new Error("length must be a positive number");return d(y(t,e),n||"kilometers")}function w(t,e,n){if(null===t||void 0===t)throw new Error("area is required");if(!(t>=0))throw new Error("area must be a positive number");var r=Bo[e||"meters"];if(!r)throw new Error("invalid original units");var i=Bo[n||"kilometers"];if(!i)throw new Error("invalid final units");return t/r*i}function b(t){return!isNaN(t)&&null!==t&&!Array.isArray(t)}function I(t){return!!t&&t.constructor===Object}function N(t){if(!t)throw new Error("bbox is required");if(!Array.isArray(t))throw new Error("bbox must be an Array");if(4!==t.length&&6!==t.length)throw new Error("bbox must be an Array of 4 or 6 numbers");t.forEach(function(t){if(!b(t))throw new Error("bbox must only contain numbers")})}function C(t){if(!t)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof t))throw new Error("id must be a number or a string")}function S(t,e,n){if(null!==t)for(var r,i,o,s,a,u,c,h,l=0,p=0,f=t.type,g="FeatureCollection"===f,d="Feature"===f,y=g?t.features.length:1,_=0;_<y;_++){a=(h=!!(c=g?t.features[_].geometry:d?t.geometry:t)&&"GeometryCollection"===c.type)?c.geometries.length:1;for(var m=0;m<a;m++){var v=0,x=0;if(null!==(s=h?c.geometries[m]:c)){u=s.coordinates;var E=s.type;switch(l=!n||"Polygon"!==E&&"MultiPolygon"!==E?0:1,E){case null:break;case"Point":e(u,p,_,v,x),p++,v++;break;case"LineString":case"MultiPoint":for(r=0;r<u.length;r++)e(u[r],p,_,v,x),p++,"MultiPoint"===E&&v++;"LineString"===E&&v++;break;case"Polygon":case"MultiLineString":for(r=0;r<u.length;r++){for(i=0;i<u[r].length-l;i++)e(u[r][i],p,_,v,x),p++;"MultiLineString"===E&&v++,"Polygon"===E&&x++}"Polygon"===E&&v++;break;case"MultiPolygon":for(r=0;r<u.length;r++){for("MultiPolygon"===E&&(x=0),i=0;i<u[r].length;i++){for(o=0;o<u[r][i].length-l;o++)e(u[r][i][o],p,_,v,x),p++;x++}v++}break;case"GeometryCollection":for(r=0;r<s.geometries.length;r++)S(s.geometries[r],e,n);break;default:throw new Error("Unknown Geometry Type")}}}}}function M(t,e,n,r){var i=n;return S(t,function(t,r,o,s,a){i=0===r&&void 0===n?t:e(i,t,r,o,s,a)},r),i}function L(t,e){var n;switch(t.type){case"FeatureCollection":for(n=0;n<t.features.length;n++)e(t.features[n].properties,n);break;case"Feature":e(t.properties,0)}}function P(t,e,n){var r=n;return L(t,function(t,i){r=0===i&&void 0===n?t:e(r,t,i)}),r}function O(t,e){if("Feature"===t.type)e(t,0);else if("FeatureCollection"===t.type)for(var n=0;n<t.features.length;n++)e(t.features[n],n)}function R(t,e,n){var r=n;return O(t,function(t,i){r=0===i&&void 0===n?t:e(r,t,i)}),r}function T(t){var e=[];return S(t,function(t){e.push(t)}),e}function A(t,e){var n,r,i,o,s,a,u,c,h,l,p=0,f="FeatureCollection"===t.type,g="Feature"===t.type,d=f?t.features.length:1;for(n=0;n<d;n++){for(a=f?t.features[n].geometry:g?t.geometry:t,c=f?t.features[n].properties:g?t.properties:{},h=f?t.features[n].bbox:g?t.bbox:void 0,l=f?t.features[n].id:g?t.id:void 0,s=(u=!!a&&"GeometryCollection"===a.type)?a.geometries.length:1,i=0;i<s;i++)if(null!==(o=u?a.geometries[i]:a))switch(o.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":e(o,p,c,h,l);break;case"GeometryCollection":for(r=0;r<o.geometries.length;r++)e(o.geometries[r],p,c,h,l);break;default:throw new Error("Unknown Geometry Type")}else e(null,p,c,h,l);p++}}function D(t,e,n){var r=n;return A(t,function(t,i,o,s,a){r=0===i&&void 0===n?t:e(r,t,i,o,s,a)}),r}function F(t,n){A(t,function(t,r,i,o,s){var a=null===t?null:t.type;switch(a){case null:case"Point":case"LineString":case"Polygon":return void n(e(t,i,{bbox:o,id:s}),r,0)}var u;switch(a){case"MultiPoint":u="Point";break;case"MultiLineString":u="LineString";break;case"MultiPolygon":u="Polygon"}t.coordinates.forEach(function(t,o){n(e({type:u,coordinates:t},i),r,o)})})}function q(t,e,n){var r=n;return F(t,function(t,i,o){r=0===i&&0===o&&void 0===n?t:e(r,t,i,o)}),r}function G(t,e){F(t,function(t,n,r){var i=0;if(t.geometry){var o=t.geometry.type;"Point"!==o&&"MultiPoint"!==o&&M(t,function(o,s,u,c,h,l){var p=a([o,s],t.properties);return e(p,n,r,l,i),i++,s})}})}function B(t,e,n){var r=n,i=!1;return G(t,function(t,o,s,a,u){r=!1===i&&void 0===n?t:e(r,t,o,s,a,u),i=!0}),r}function k(t,e){if(!t)throw new Error("geojson is required");F(t,function(t,n,r){if(null!==t.geometry){var i=t.geometry.type,o=t.geometry.coordinates;switch(i){case"LineString":e(t,n,r,0,0);break;case"Polygon":for(var s=0;s<o.length;s++)e(a(o[s],t.properties),n,r,s)}}})}function z(t,e,n){var r=n;return k(t,function(t,i,o,s){r=0===i&&void 0===n?t:e(r,t,i,o,s)}),r}function j(t){var e=[1/0,1/0,-1/0,-1/0];return S(t,function(t){e[0]>t[0]&&(e[0]=t[0]),e[1]>t[1]&&(e[1]=t[1]),e[2]<t[0]&&(e[2]=t[0]),e[3]<t[1]&&(e[3]=t[1])}),e}function X(t){if(!t)throw new Error("obj is required");var e=U(t);if(e.length>1&&b(e[0])&&b(e[1]))return e;throw new Error("Coordinate is not a valid Point")}function U(t){if(!t)throw new Error("obj is required");var e;if(t.length?e=t:t.coordinates?e=t.coordinates:t.geometry&&t.geometry.coordinates&&(e=t.geometry.coordinates),e)return Y(e),e;throw new Error("No valid coordinates")}function Y(t){if(t.length>1&&b(t[0])&&b(t[1]))return!0;if(Array.isArray(t[0])&&t[0].length)return Y(t[0]);throw new Error("coordinates must only contain numbers")}function V(t,e,n){if(!e||!n)throw new Error("type and name required");if(!t||t.type!==e)throw new Error("Invalid input to "+n+": must be a "+e+", given "+t.type)}function H(t,e,n){if(!t)throw new Error("No feature passed");if(!n)throw new Error(".featureOf() requires a name");if(!t||"Feature"!==t.type||!t.geometry)throw new Error("Invalid input to "+n+", Feature with geometry required");if(!t.geometry||t.geometry.type!==e)throw new Error("Invalid input to "+n+": must be a "+e+", given "+t.geometry.type)}function W(t,e,n){if(!t)throw new Error("No featureCollection passed");if(!n)throw new Error(".collectionOf() requires a name");if(!t||"FeatureCollection"!==t.type)throw new Error("Invalid input to "+n+", FeatureCollection required");for(var r=0;r<t.features.length;r++){var i=t.features[r];if(!i||"Feature"!==i.type||!i.geometry)throw new Error("Invalid input to "+n+", Feature with geometry required");if(!i.geometry||i.geometry.type!==e)throw new Error("Invalid input to "+n+": must be a "+e+", given "+i.geometry.type)}}function J(t){if(!t)throw new Error("geojson is required");if(void 0!==t.geometry)return t.geometry;if(t.coordinates||t.geometries)return t;throw new Error("geojson must be a valid Feature or Geometry Object")}function Z(){throw new Error("invariant.getGeomType has been deprecated in v5.0 in favor of invariant.getType")}function K(t,e){if(!t)throw new Error((e||"geojson")+" is required");if(t.geometry&&t.geometry.type)return t.geometry.type;if(t.type)return t.type;throw new Error((e||"geojson")+" is invalid")}function Q(t,e,n){n=n||{};for(var r=Object.keys(Xo),i=0;i<r.length;i++){var o=r[i],s=n[o];s=void 0!==s&&null!==s?s:Xo[o],Uo[o]=s}Uo.verbose&&console.log("MarchingSquaresJS-isoContours: computing isocontour for "+e);var a=function(t){var e=[],n=0;t.rows,t.cols;return t.cells.forEach(function(r,i){r.forEach(function(r,o){if(void 0!==r&&!function(t){return 5===t.cval||10===t.cval}(r)&&!tt(r)){var s=function(t,e,n){var r,i,o,s=t.length,a=[],u=[0,0,1,1,0,0,0,0,-1,0,1,1,-1,0,-1,0],c=[0,-1,0,0,1,1,1,1,0,-1,0,0,0,-1,0,0],h=["none","bottom","right","right","top","top","top","top","left","bottom","right","right","left","bottom","left","none"],l=(t[e][n],t[e][n]),p=l.cval,f=nt(l,o=["none","left","bottom","left","right","none","bottom","left","top","top","none","top","right","right","bottom","none"][p]);a.push([n+f[0],e+f[1]]),f=nt(l,o=h[p]),a.push([n+f[0],e+f[1]]),et(l);for(var g=n+u[p],d=e+c[p],y=p;g>=0&&d>=0&&d<s&&(g!=n||d!=e)&&void 0!==(l=t[d][g]);){if(0===(p=l.cval)||15===p)return{path:a,info:"mergeable"};o=h[p],r=u[p],i=c[p],5!==p&&10!==p||(5===p?l.flipped?-1===c[y]?(o="left",r=-1,i=0):(o="right",r=1,i=0):-1===u[y]&&(o="bottom",r=0,i=-1):10===p&&(l.flipped?-1===u[y]?(o="top",r=0,i=1):(o="bottom",r=0,i=-1):1===c[y]&&(o="left",r=-1,i=0))),f=nt(l,o),a.push([g+f[0],d+f[1]]),et(l),g+=r,d+=i,y=p}return{path:a,info:"closed"}}(t.cells,i,o),a=!1;if("mergeable"===s.info)for(var u=s.path[s.path.length-1][0],c=s.path[s.path.length-1][1],h=n-1;h>=0;h--)if(Math.abs(e[h][0][0]-u)<=1e-7&&Math.abs(e[h][0][1]-c)<=1e-7){for(var l=s.path.length-2;l>=0;--l)e[h].unshift(s.path[l]);a=!0;break}a||(e[n++]=s.path)}})}),e}(function(t,e){for(var n=t.length-1,r=t[0].length-1,i={rows:n,cols:r,cells:[]},o=0;o<n;++o){i.cells[o]=[];for(var s=0;s<r;++s){var a=0,u=t[o+1][s],c=t[o+1][s+1],h=t[o][s+1],l=t[o][s];if(!(isNaN(u)||isNaN(c)||isNaN(h)||isNaN(l))){a|=u>=e?8:0,a|=c>=e?4:0,a|=h>=e?2:0;var p=!1;if(5===(a|=l>=e?1:0)||10===a){var f=(u+c+h+l)/4;5===a&&f<e?(a=10,p=!0):10===a&&f<e&&(a=5,p=!0)}if(0!==a&&15!==a){var g,d,y,_;g=d=y=_=.5,1===a?(y=1-$(e,u,l),d=1-$(e,h,l)):2===a?(d=$(e,l,h),_=1-$(e,c,h)):3===a?(y=1-$(e,u,l),_=1-$(e,c,h)):4===a?(g=$(e,u,c),_=$(e,h,c)):5===a?(g=$(e,u,c),_=$(e,h,c),d=1-$(e,h,l),y=1-$(e,u,l)):6===a?(d=$(e,l,h),g=$(e,u,c)):7===a?(y=1-$(e,u,l),g=$(e,u,c)):8===a?(y=$(e,l,u),g=1-$(e,c,u)):9===a?(d=1-$(e,h,l),g=1-$(e,c,u)):10===a?(g=1-$(e,c,u),_=1-$(e,c,h),d=$(e,l,h),y=$(e,l,u)):11===a?(g=1-$(e,c,u),_=1-$(e,c,h)):12===a?(y=$(e,l,u),_=$(e,h,c)):13===a?(d=1-$(e,h,l),_=$(e,h,c)):14===a?(y=$(e,l,u),d=$(e,l,h)):console.log("MarchingSquaresJS-isoContours: Illegal cval detected: "+a),i.cells[o][s]={cval:a,flipped:p,top:g,right:_,bottom:d,left:y}}}}}return i}(t,e));return"function"==typeof Uo.successCallback&&Uo.successCallback(a),a}function $(t,e,n){return(t-e)/(n-e)}function tt(t){return 0===t.cval||15===t.cval}function et(t){tt(t)||5===t.cval||10===t.cval||(t.cval=15)}function nt(t,e){return"top"===e?[t.top,1]:"bottom"===e?[t.bottom,0]:"right"===e?[1,t.right]:"left"===e?[0,t.left]:void 0}function rt(t,e){if(e=e||{},!I(e))throw new Error("options is invalid");var n=e.zProperty||"elevation",r=e.flip,i=e.flags;W(t,"Point","input must contain Points");for(var o=function(t,e){var n={};O(t,function(t){var e=U(t)[1];n[e]||(n[e]=[]),n[e].push(t)});return Object.keys(n).map(function(t){var e=n[t],r=e.sort(function(t,e){return U(t)[0]-U(e)[0]});return r}).sort(function(t,n){return e?U(t[0])[1]-U(n[0])[1]:U(n[0])[1]-U(t[0])[1]})}(t,r),s=[],a=0;a<o.length;a++){for(var u=o[a],c=[],h=0;h<u.length;h++){var l=u[h];l.properties[n]?c.push(l.properties[n]):c.push(0),!0===i&&(l.properties.matrixPosition=[a,h])}s.push(c)}return s}function it(t,e,n,r,i){for(n=n||0,r=r||t.length-1,i=i||function(t,e){return t<e?-1:t>e?1:0};r>n;){if(r-n>600){var o=r-n+1,s=e-n+1,a=Math.log(o),u=.5*Math.exp(2*a/3),c=.5*Math.sqrt(a*u*(o-u)/o)*(s-o/2<0?-1:1);it(t,e,Math.max(n,Math.floor(e-s*u/o+c)),Math.min(r,Math.floor(e+(o-s)*u/o+c)),i)}var h=t[e],l=n,p=r;for(ot(t,n,e),i(t[r],h)>0&&ot(t,n,r);l<p;){for(ot(t,l,p),l++,p--;i(t[l],h)<0;)l++;for(;i(t[p],h)>0;)p--}0===i(t[n],h)?ot(t,n,p):ot(t,++p,r),p<=e&&(n=p+1),e<=p&&(r=p-1)}}function ot(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function st(t,e){if(!(this instanceof st))return new st(t,e);this._maxEntries=Math.max(4,t||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),e&&this._initFormat(e),this.clear()}function at(t,e){ut(t,0,t.children.length,e,t)}function ut(t,e,n,r,i){i||(i=yt(null)),i.minX=1/0,i.minY=1/0,i.maxX=-1/0,i.maxY=-1/0;for(var o,s=e;s<n;s++)o=t.children[s],ct(i,t.leaf?r(o):o);return i}function ct(t,e){return t.minX=Math.min(t.minX,e.minX),t.minY=Math.min(t.minY,e.minY),t.maxX=Math.max(t.maxX,e.maxX),t.maxY=Math.max(t.maxY,e.maxY),t}function ht(t,e){return t.minX-e.minX}function lt(t,e){return t.minY-e.minY}function pt(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function ft(t){return t.maxX-t.minX+(t.maxY-t.minY)}function gt(t,e){return t.minX<=e.minX&&t.minY<=e.minY&&e.maxX<=t.maxX&&e.maxY<=t.maxY}function dt(t,e){return e.minX<=t.maxX&&e.minY<=t.maxY&&e.maxX>=t.minX&&e.maxY>=t.minY}function yt(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function _t(t,e,n,r,i){for(var o,s=[e,n];s.length;)(n=s.pop())-(e=s.pop())<=r||(o=e+Math.ceil((n-e)/r/2)*r,Yo(t,o,e,n,i),s.push(e,o,o,n))}function mt(t,e){return e={exports:{}},t(e,e.exports),e.exports}function vt(t,e){if(!(this instanceof vt))return new vt(t,e);if(this.data=t||[],this.length=this.data.length,this.compare=e||function(t,e){return t<e?-1:t>e?1:0},this.length>0)for(var n=(this.length>>1)-1;n>=0;n--)this._down(n)}function xt(t,e,n){e=Math.max(0,void 0===e?2:e),n=n||0;for(var r,i=function(t){for(var e=t[0],n=t[0],r=t[0],i=t[0],o=0;o<t.length;o++){var s=t[o];s[0]<e[0]&&(e=s),s[0]>r[0]&&(r=s),s[1]<n[1]&&(n=s),s[1]>i[1]&&(i=s)}var a=[e,n,r,i],u=a.slice();for(o=0;o<t.length;o++)is(t[o],a)||u.push(t[o]);var c=ts(u),h=[];for(o=0;o<c.length;o++)h.push(u[c[o]]);return h}(t),o=Vo(16,["[0]","[1]","[0]","[1]"]).load(t),s=[],a=0;a<i.length;a++){var u=i[a];o.remove(u),r=Nt(u,r),s.push(r)}var c=Vo(16);for(a=0;a<s.length;a++)c.insert(It(s[a]));for(var h=e*e,l=n*n;s.length;){var p=s.shift(),f=p.p,g=p.next.p,d=Ct(f,g);if(!(d<l)){var y=d/h;(u=function(t,e,n,r,i,o,s){var a=new ns(null,Et),u=t.data;for(;u;){for(var c=0;c<u.children.length;c++){var h=u.children[c],l=u.leaf?St(h,n,r):function(t,e,n){if(wt(t,n)||wt(e,n))return 0;var r=Mt(t[0],t[1],e[0],e[1],n.minX,n.minY,n.maxX,n.minY);if(0===r)return 0;var i=Mt(t[0],t[1],e[0],e[1],n.minX,n.minY,n.minX,n.maxY);if(0===i)return 0;var o=Mt(t[0],t[1],e[0],e[1],n.maxX,n.minY,n.maxX,n.maxY);if(0===o)return 0;var s=Mt(t[0],t[1],e[0],e[1],n.minX,n.maxY,n.maxX,n.maxY);return 0===s?0:Math.min(r,i,o,s)}(n,r,h);l>o||a.push({node:h,dist:l})}for(;a.length&&!a.peek().node.children;){var p=a.pop(),f=p.node,g=St(f,e,n),d=St(f,r,i);if(p.dist<g&&p.dist<d&&bt(n,f,s)&&bt(r,f,s))return f}(u=a.pop())&&(u=u.node)}return null}(o,p.prev.p,f,g,p.next.next.p,y,c))&&Math.min(Ct(u,f),Ct(u,g))<=y&&(s.push(p),s.push(Nt(u,p)),o.remove(u),c.remove(p),c.insert(It(p)),c.insert(It(p.next)))}}p=r;var _=[];do{_.push(p.p),p=p.next}while(p!==r);return _.push(p.p),_}function Et(t,e){return t.dist-e.dist}function wt(t,e){return t[0]>=e.minX&&t[0]<=e.maxX&&t[1]>=e.minY&&t[1]<=e.maxY}function bt(t,e,n){for(var r=Math.min(t[0],e[0]),i=Math.min(t[1],e[1]),o=Math.max(t[0],e[0]),s=Math.max(t[1],e[1]),a=n.search({minX:r,minY:i,maxX:o,maxY:s}),u=0;u<a.length;u++)if(function(t,e,n,r){return t!==r&&e!==n&&os(t,e,n)>0!=os(t,e,r)>0&&os(n,r,t)>0!=os(n,r,e)>0}(a[u].p,a[u].next.p,t,e))return!1;return!0}function It(t){var e=t.p,n=t.next.p;return t.minX=Math.min(e[0],n[0]),t.minY=Math.min(e[1],n[1]),t.maxX=Math.max(e[0],n[0]),t.maxY=Math.max(e[1],n[1]),t}function Nt(t,e){var n={p:t,prev:null,next:null,minX:0,minY:0,maxX:0,maxY:0};return e?(n.next=e.next,n.prev=e,e.next.prev=n,e.next=n):(n.prev=n,n.next=n),n}function Ct(t,e){var n=t[0]-e[0],r=t[1]-e[1];return n*n+r*r}function St(t,e,n){var r=e[0],i=e[1],o=n[0]-r,s=n[1]-i;if(0!==o||0!==s){var a=((t[0]-r)*o+(t[1]-i)*s)/(o*o+s*s);a>1?(r=n[0],i=n[1]):a>0&&(r+=o*a,i+=s*a)}return o=t[0]-r,s=t[1]-i,o*o+s*s}function Mt(t,e,n,r,i,o,s,a){var u,c,h,l,p=n-t,f=r-e,g=s-i,d=a-o,y=t-i,_=e-o,m=p*p+f*f,v=p*g+f*d,x=g*g+d*d,E=p*y+f*_,w=g*y+d*_,b=m*x-v*v,I=b,N=b;0===b?(c=0,I=1,l=w,N=x):(l=m*w-v*E,(c=v*w-x*E)<0?(c=0,l=w,N=x):c>I&&(c=I,l=w+v,N=x)),l<0?(l=0,-E<0?c=0:-E>m?c=I:(c=-E,I=m)):l>N&&(l=N,-E+v<0?c=0:-E+v>m?c=I:(c=-E+v,I=m)),u=0===c?0:c/I;var C=(1-(h=0===l?0:l/N))*i+h*s-((1-u)*t+u*n),S=(1-h)*o+h*a-((1-u)*e+u*r);return C*C+S*S}function Lt(t,e){if(e=e||{},!I(e))throw new Error("options is invalid");var n=e.concavity||1/0,r=[];if(S(t,function(t){r.push([t[0],t[1]])}),!r.length)return null;var i=ss(r,n);return i.length>3?o([i]):null}function Pt(t,e,n){if("object"!=typeof(n=n||{}))throw new Error("options is invalid");var r=n.ignoreBoundary;if(!t)throw new Error("point is required");if(!e)throw new Error("polygon is required");var i=X(t),o=U(e),s=e.geometry?e.geometry.type:e.type,a=e.bbox;if(a&&!1===function(t,e){return e[0]<=t[0]&&e[1]<=t[1]&&e[2]>=t[0]&&e[3]>=t[1]}(i,a))return!1;"Polygon"===s&&(o=[o]);for(var u=0,c=!1;u<o.length&&!c;u++)if(Ot(i,o[u][0],r)){for(var h=!1,l=1;l<o[u].length&&!h;)Ot(i,o[u][l],!r)&&(h=!0),l++;h||(c=!0)}return c}function Ot(t,e,n){var r=!1;e[0][0]===e[e.length-1][0]&&e[0][1]===e[e.length-1][1]&&(e=e.slice(0,e.length-1));for(var i=0,o=e.length-1;i<e.length;o=i++){var s=e[i][0],a=e[i][1],u=e[o][0],c=e[o][1];if(t[1]*(s-u)+a*(u-t[0])+c*(t[0]-s)==0&&(s-t[0])*(u-t[0])<=0&&(a-t[1])*(c-t[1])<=0)return!n;a>t[1]!=c>t[1]&&t[0]<(u-s)*(t[1]-a)/(c-a)+s&&(r=!r)}return r}function Rt(t,e){var n=[];return A(e,function(e){O(t,function(t){Pt(t,e)&&n.push(t)})}),c(n)}function Tt(t,e){if("FeatureCollection"!==t.type)throw new Error("points must be a FeatureCollection");var n=!1;return c(function(t){if(t.length<3)return[];t.sort(Dt);var e,n,r,i,o,s,a=t.length-1,u=t[a].x,c=t[0].x,h=t[a].y,l=h;for(;a--;)t[a].y<h&&(h=t[a].y),t[a].y>l&&(l=t[a].y);var p,f=c-u,g=l-h,d=f>g?f:g,y=.5*(c+u),_=.5*(l+h),m=[new At({x:y-20*d,y:_-d,__sentinel:!0},{x:y,y:_+20*d,__sentinel:!0},{x:y+20*d,y:_-d,__sentinel:!0})],v=[],x=[];a=t.length;for(;a--;){for(x.length=0,p=m.length;p--;)(f=t[a].x-m[p].x)>0&&f*f>m[p].r?(v.push(m[p]),m.splice(p,1)):(g=t[a].y-m[p].y,f*f+g*g>m[p].r||(x.push(m[p].a,m[p].b,m[p].b,m[p].c,m[p].c,m[p].a),m.splice(p,1)));for(Ft(x),p=x.length;p;)n=x[--p],e=x[--p],r=t[a],i=n.x-e.x,o=n.y-e.y,s=2*(i*(r.y-n.y)-o*(r.x-n.x)),Math.abs(s)>1e-12&&m.push(new At(e,n,r))}Array.prototype.push.apply(v,m),a=v.length;for(;a--;)(v[a].a.__sentinel||v[a].b.__sentinel||v[a].c.__sentinel)&&v.splice(a,1);return v}(t.features.map(function(t){var r={x:t.geometry.coordinates[0],y:t.geometry.coordinates[1]};return e?r.z=t.properties[e]:3===t.geometry.coordinates.length&&(n=!0,r.z=t.geometry.coordinates[2]),r})).map(function(t){var e=[t.a.x,t.a.y],r=[t.b.x,t.b.y],i=[t.c.x,t.c.y],s={};return n?(e.push(t.a.z),r.push(t.b.z),i.push(t.c.z)):s={a:t.a.z,b:t.b.z,c:t.c.z},o([[e,r,i,e]],s)}))}function At(t,e,n){this.a=t,this.b=e,this.c=n;var r,i,o=e.x-t.x,s=e.y-t.y,a=n.x-t.x,u=n.y-t.y,c=o*(t.x+e.x)+s*(t.y+e.y),h=a*(t.x+n.x)+u*(t.y+n.y),l=2*(o*(n.y-e.y)-s*(n.x-e.x));this.x=(u*c-s*h)/l,this.y=(o*h-a*c)/l,r=this.x-t.x,i=this.y-t.y,this.r=r*r+i*i}function Dt(t,e){return e.x-t.x}function Ft(t){var e,n,r,i,o,s=t.length;t:for(;s;)for(n=t[--s],e=t[--s],r=s;r;)if(o=t[--r],i=t[--r],e===i&&n===o||e===o&&n===i){t.splice(s,2),t.splice(r,2),s-=2;continue t}}function qt(t,e,n){if(n=n||{},!I(n))throw new Error("options is invalid");var r=n.units,i=X(t),o=X(e),s=x(o[1]-i[1]),a=x(o[0]-i[0]),u=x(i[1]),c=x(o[1]),h=Math.pow(Math.sin(s/2),2)+Math.pow(Math.sin(a/2),2)*Math.cos(u)*Math.cos(c);return d(2*Math.atan2(Math.sqrt(h),Math.sqrt(1-h)),r)}function Gt(t){if(!t)throw new Error("geojson is required");switch(t.type){case"Feature":return Bt(t);case"FeatureCollection":return function(t){var e={type:"FeatureCollection"};return Object.keys(t).forEach(function(n){switch(n){case"type":case"features":return;default:e[n]=t[n]}}),e.features=t.features.map(function(t){return Bt(t)}),e}(t);case"Point":case"LineString":case"Polygon":case"MultiPoint":case"MultiLineString":case"MultiPolygon":case"GeometryCollection":return zt(t);default:throw new Error("unknown GeoJSON type")}}function Bt(t){var e={type:"Feature"};return Object.keys(t).forEach(function(n){switch(n){case"type":case"properties":case"geometry":return;default:e[n]=t[n]}}),e.properties=kt(t.properties),e.geometry=zt(t.geometry),e}function kt(t){var e={};return t?(Object.keys(t).forEach(function(n){var r=t[n];"object"==typeof r?null===r?e[n]=null:r.length?e[n]=r.map(function(t){return t}):e[n]=kt(r):e[n]=r}),e):e}function zt(t){var e={type:t.type};return t.bbox&&(e.bbox=t.bbox),"GeometryCollection"===t.type?(e.geometries=t.geometries.map(function(t){return zt(t)}),e):(e.coordinates=jt(t.coordinates),e)}function jt(t){return"object"!=typeof t[0]?t.slice():t.map(function(t){return jt(t)})}function Xt(t,e){function n(t,e){e.length&&e.pop();for(var n=c[t<0?~t:t],r=0,i=n.length;r<i;++r)e.push(u(n[r],r));t<0&&hs(e,i)}function r(t){return u(t)}function i(t){for(var e=[],r=0,i=t.length;r<i;++r)n(t[r],e);return e.length<2&&e.push(e[0]),e}function o(t){for(var e=i(t);e.length<4;)e.push(e[0]);return e}function s(t){return t.map(o)}function a(t){var e,n=t.type;switch(n){case"GeometryCollection":return{type:n,geometries:t.geometries.map(a)};case"Point":e=r(t.coordinates);break;case"MultiPoint":e=t.coordinates.map(r);break;case"LineString":e=i(t.arcs);break;case"MultiLineString":e=t.arcs.map(i);break;case"Polygon":e=s(t.arcs);break;case"MultiPolygon":e=t.arcs.map(s);break;default:return null}return{type:n,coordinates:e}}var u=cs(t.transform),c=t.arcs;return a(e)}function Ut(t,e){function n(t){switch(t.type){case"GeometryCollection":t.geometries.forEach(n);break;case"Polygon":r(t.arcs);break;case"MultiPolygon":t.arcs.forEach(r)}}function r(t){t.forEach(function(e){e.forEach(function(e){(o[e=e<0?~e:e]||(o[e]=[])).push(t)})}),s.push(t)}function i(e){return function(t){for(var e,n=-1,r=t.length,i=t[r-1],o=0;++n<r;)e=i,i=t[n],o+=e[0]*i[1]-e[1]*i[0];return Math.abs(o)}(Xt(t,{type:"Polygon",arcs:[e]}).coordinates[0])}var o={},s=[],a=[];return e.forEach(n),s.forEach(function(t){if(!t._){var e=[],n=[t];for(t._=1,a.push(e);t=n.pop();)e.push(t),t.forEach(function(t){t.forEach(function(t){o[t<0?~t:t].forEach(function(t){t._||(t._=1,n.push(t))})})})}}),s.forEach(function(t){delete t._}),{type:"MultiPolygon",arcs:a.map(function(e){var n,r=[];if(e.forEach(function(t){t.forEach(function(t){t.forEach(function(t){o[t<0?~t:t].length<2&&r.push(t)})})}),r=ls(t,r),(n=r.length)>1)for(var s,a,u=1,c=i(r[0]);u<n;++u)(s=i(r[u]))>c&&(a=r[0],r[0]=r[u],r[u]=a,c=s);return r})}}function Yt(t,e,n){for(var r,i=e+(n---e>>1);e<i;++e,--n)r=t[e],t[e]=t[n],t[n]=r}function Vt(t){return null==t?{type:null}:("FeatureCollection"===t.type?function(t){var e={type:"GeometryCollection",geometries:t.features.map(Ht)};null!=t.bbox&&(e.bbox=t.bbox);return e}:"Feature"===t.type?Ht:Wt)(t)}function Ht(t){var e,n=Wt(t.geometry);null!=t.id&&(n.id=t.id),null!=t.bbox&&(n.bbox=t.bbox);for(e in t.properties){n.properties=t.properties;break}return n}function Wt(t){if(null==t)return{type:null};var e="GeometryCollection"===t.type?{type:"GeometryCollection",geometries:t.geometries.map(Wt)}:"Point"===t.type||"MultiPoint"===t.type?{type:t.type,coordinates:t.coordinates}:{type:t.type,arcs:t.coordinates};return null!=t.bbox&&(e.bbox=t.bbox),e}function Jt(t){var e,n=t[0],r=t[1];return r<n&&(e=n,n=r,r=e),n+31*r}function Zt(t,e){var n,r=t[0],i=t[1],o=e[0],s=e[1];return i<r&&(n=r,r=i,i=n),s<o&&(n=o,o=s,s=n),r===o&&i===s}function Kt(t,e){if(e=e||{},!I(e))throw new Error("options is invalid");var n=e.mutate;if("FeatureCollection"!==K(t))throw new Error("geojson must be a FeatureCollection");if(!t.features.length)throw new Error("geojson is empty");!1!==n&&void 0!==n||(t=Gt(t));var r=[],i=z(t,function(t,e){var n=function(t,e){var n,r=t.geometry.coordinates,i=e.geometry.coordinates,o=Qt(r[0]),s=Qt(r[r.length-1]),u=Qt(i[0]),c=Qt(i[i.length-1]);if(o===c)n=i.concat(r.slice(1));else if(u===s)n=r.concat(i.slice(1));else if(o===u)n=r.slice(1).reverse().concat(i);else{if(s!==c)return null;n=r.concat(i.reverse().slice(1))}return a(n)}(t,e);return n||(r.push(t),e)});return i&&r.push(i),r.length?1===r.length?r[0]:h(r.map(function(t){return t.coordinates})):null}function Qt(t){return t[0].toString()+","+t[1].toString()}function $t(t,e){if(e=e||{},!I(e))throw new Error("options is invalid");var n=e.mutate;if("FeatureCollection"!==K(t))throw new Error("geojson must be a FeatureCollection");if(!t.features.length)throw new Error("geojson is empty");!1!==n&&void 0!==n||(t=Gt(t));var r=function(t){var e={};F(t,function(t){e[t.geometry.type]=!0});var n=Object.keys(e);return 1===n.length?n[0]:null}(t);if(!r)throw new Error("geojson must be homogenous");switch(r){case"LineString":return Kt(t,e);case"Polygon":return function(t,e){if(e=e||{},!I(e))throw new Error("options is invalid");var n=e.mutate;if("FeatureCollection"!==K(t))throw new Error("geojson must be a FeatureCollection");if(!t.features.length)throw new Error("geojson is empty");!1!==n&&void 0!==n||(t=Gt(t));var r=[];F(t,function(t){r.push(t.geometry)});var i=ws({geoms:f(r).geometry});return ps(i,i.objects.geoms.geometries)}(t,e);default:throw new Error(r+" is not supported")}}function te(t,n){var r="object"==typeof n?n.mutate:n;if(!t)throw new Error("geojson is required");var i=K(t),o=[];switch(i){case"LineString":o=ee(t);break;case"MultiLineString":case"Polygon":U(t).forEach(function(t){o.push(ee(t))});break;case"MultiPolygon":U(t).forEach(function(t){var e=[];t.forEach(function(t){e.push(ee(t))}),o.push(e)});break;case"Point":return t;case"MultiPoint":var s={};U(t).forEach(function(t){var e=t.join("-");s.hasOwnProperty(e)||(o.push(t),s[e]=!0)});break;default:throw new Error(i+" geometry not supported")}return t.coordinates?!0===r?(t.coordinates=o,t):{type:i,coordinates:o}:!0===r?(t.geometry.coordinates=o,t):e({type:i,coordinates:o},t.properties,t.bbox,t.id)}function ee(t){var e=U(t);if(2===e.length&&!function(t,e){return t[0]===e[0]&&t[1]===e[1]}(e[0],e[1]))return e;var n,r,i,o=[],s=e.length-1;o.push(e[0]);for(var a=1;a<s;a++)n=e[a-1],r=e[a],function(t,e,n){var r=n[0],i=n[1],o=t[0],s=t[1],a=e[0],u=e[1],c=a-o,h=u-s;return(r-o)*h-(i-s)*c==0&&(Math.abs(c)>=Math.abs(h)?c>0?o<=r&&r<=a:a<=r&&r<=o:h>0?s<=i&&i<=u:u<=i&&i<=s)}(n,i=e[a+1],r)||o.push(r);return o.push(i),o}function ne(t,e){var n=t.x-e.x,r=t.y-e.y;return n*n+r*r}function re(t,e,n){var r=e.x,i=e.y,o=n.x-r,s=n.y-i;if(0!==o||0!==s){var a=((t.x-r)*o+(t.y-i)*s)/(o*o+s*s);a>1?(r=n.x,i=n.y):a>0&&(r+=o*a,i+=s*a)}return o=t.x-r,s=t.y-i,o*o+s*s}function ie(t,e,n,r,i){for(var o,s=r,a=e+1;a<n;a++){var u=re(t[a],t[e],t[n]);u>s&&(o=a,s=u)}s>r&&(o-e>1&&ie(t,e,o,r,i),i.push(t[o]),n-o>1&&ie(t,o,n,r,i))}function oe(t,e,n){if(t.length<=2)return t;var r=void 0!==e?e*e:1;return t=n?t:function(t,e){for(var n,r=t[0],i=[r],o=1,s=t.length;o<s;o++)ne(n=t[o],r)>e&&(i.push(n),r=n);return r!==n&&i.push(n),i}(t,r),t=function(t,e){var n=t.length-1,r=[t[0]];return ie(t,0,n,e,r),r.push(t[n]),r}(t,r)}function se(t,e,n){return oe(t.map(function(t){return{x:t[0],y:t[1],z:t[2]}}),e,n).map(function(t){return t.z?[t.x,t.y,t.z]:[t.x,t.y]})}function ae(t,e,n){return t.map(function(t){var r=t.map(function(t){return{x:t[0],y:t[1]}});if(r.length<4)throw new Error("invalid polygon");for(var i=oe(r,e,n).map(function(t){return[t.x,t.y]});!function(t){return!(t.length<3||3===t.length&&t[2][0]===t[0][0]&&t[2][1]===t[0][1])}(i);)i=oe(r,e-=.01*e,n).map(function(t){return[t.x,t.y]});return i[i.length-1][0]===i[0][0]&&i[i.length-1][1]===i[0][1]||i.push(i[0]),i})}function ue(t,e){if(e=e||{},!I(e))throw new Error("options is invalid");var n=e.resolution||1e4,r=e.sharpness||.85;if(!t)throw new Error("line is required");if(!b(n))throw new Error("resolution must be an number");if(!b(r))throw new Error("sharpness must be an number");for(var i=[],o=new bs({points:J(t).coordinates.map(function(t){return{x:t[0],y:t[1]}}),duration:n,sharpness:r}),s=0;s<o.duration;s+=10){var u=o.pos(s);Math.floor(s/100)%2==0&&i.push([u.x,u.y])}return a(i,t.properties)}function ce(t){N(t);var e=Number(t[0]),n=Number(t[1]),r=Number(t[2]),i=Number(t[3]);if(6===t.length)throw new Error("@turf/bbox-polygon does not support BBox with 6 positions");var s=[e,n];return o([[s,[r,n],[r,i],[e,i],s]])}function he(t){return ce(j(t))}function le(t){var e=t[0],n=t[1],r=t[2],i=t[3];if(qt(t.slice(0,2),[r,n])>=qt(t.slice(0,2),[e,i])){var o=(n+i)/2;return[e,o-(r-e)/2,r,o+(r-e)/2]}var s=(e+r)/2;return[s-(i-n)/2,n,s+(i-n)/2,i]}function pe(t,e,n,i){if(i=i||{},!I(i))throw new Error("options is invalid");var o=i.units,s=i.properties,a=X(t),u=x(a[0]),c=x(a[1]),h=x(n),l=y(e,o),p=Math.asin(Math.sin(c)*Math.cos(l)+Math.cos(c)*Math.sin(l)*Math.cos(h));return r([v(u+Math.atan2(Math.sin(h)*Math.sin(l)*Math.cos(c),Math.cos(l)-Math.sin(c)*Math.sin(p))),v(p)],s)}function fe(t,e,n){var r=(n=n||{}).steps||64,i=n.properties;if(!t)throw new Error("center is required");if(!e)throw new Error("radius is required");if("object"!=typeof n)throw new Error("options must be an object");if("number"!=typeof r)throw new Error("steps must be a number");r=r||64,i=i||t.properties||{};for(var s=[],a=0;a<r;a++)s.push(pe(t,e,-360*a/r,n).geometry.coordinates);return s.push(s[0]),o([s],i)}function ge(t,e,n){if(n=n||{},!I(n))throw new Error("options is invalid");if(!0===n.final)return function(t,e){var n=ge(e,t);return n=(n+180)%360}(t,e);var r=X(t),i=X(e),o=x(r[0]),s=x(i[0]),a=x(r[1]),u=x(i[1]),c=Math.sin(s-o)*Math.cos(u),h=Math.cos(a)*Math.sin(u)-Math.sin(a)*Math.cos(u)*Math.cos(s-o);return v(Math.atan2(c,h))}function de(t,e){if(e=e||{},!I(e))throw new Error("options is invalid");var n=e.properties;if(!t)throw new Error("geojson is required");var i=j(t);return r([(i[0]+i[2])/2,(i[1]+i[3])/2],n)}function ye(t,e){var n=0,i=0,o=0;return S(t,function(t){n+=t[0],i+=t[1],o++},!0),r([n/o,i/o],e)}function _e(t,e){switch(K(t)){case"Point":return t;case"Polygon":var n=[];S(t,function(t){n.push(t)});var i,o,s,a,u,c,h,l,p=ye(t,e),f=p.geometry.coordinates,g=0,d=0,y=0,_=n.map(function(t){return[t[0]-f[0],t[1]-f[1]]});for(i=0;i<n.length-1;i++)a=(o=_[i])[0],c=o[1],u=(s=_[i+1])[0],y+=l=a*(h=s[1])-u*c,g+=(a+u)*l,d+=(c+h)*l;if(0===y)return p;var m=1/(6*(.5*y));return r([f[0]+m*g,f[1]+m*d],e);default:var v=Lt(t);return v?_e(v,e):ye(t,e)}}function me(t){var e=[];return"FeatureCollection"===t.type?O(t,function(t){S(t,function(n){e.push(r(n,t.properties))})}):S(t,function(n){e.push(r(n,t.properties))}),c(e)}function ve(t,e,n){n=n||2;var r=e&&e.length,i=r?e[0]*n:t.length,o=xe(t,0,i,n,!0),s=[];if(!o)return s;var a,u,c,h,l,p,f;if(r&&(o=function(t,e,n,r){var i,o,s,a,u,c=[];for(i=0,o=e.length;i<o;i++)s=e[i]*r,a=i<o-1?e[i+1]*r:t.length,(u=xe(t,s,a,r,!1))===u.next&&(u.steiner=!0),c.push(function(t){var e=t,n=t;do{e.x<n.x&&(n=e),e=e.next}while(e!==t);return n}(u));for(c.sort(be),i=0;i<c.length;i++)!function(t,e){if(e=function(t,e){var n,r=e,i=t.x,o=t.y,s=-1/0;do{if(o<=r.y&&o>=r.next.y&&r.next.y!==r.y){var a=r.x+(o-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(a<=i&&a>s){if(s=a,a===i){if(o===r.y)return r;if(o===r.next.y)return r.next}n=r.x<r.next.x?r:r.next}}r=r.next}while(r!==e);if(!n)return null;if(i===s)return n.prev;var u,c=n,h=n.x,l=n.y,p=1/0;for(r=n.next;r!==c;)i>=r.x&&r.x>=h&&i!==r.x&&Ne(o<l?i:s,o,h,l,o<l?s:i,o,r.x,r.y)&&((u=Math.abs(o-r.y)/(i-r.x))<p||u===p&&r.x>n.x)&&Le(r,t)&&(n=r,p=u),r=r.next;return n}(t,e)){var n=Pe(e,t);Ee(n,n.next)}}(c[i],n),n=Ee(n,n.next);return n}(t,e,o,n)),t.length>80*n){a=c=t[0],u=h=t[1];for(var g=n;g<i;g+=n)l=t[g],p=t[g+1],l<a&&(a=l),p<u&&(u=p),l>c&&(c=l),p>h&&(h=p);f=0!==(f=Math.max(c-a,h-u))?1/f:0}return we(o,s,n,a,u,f),s}function xe(t,e,n,r,i){var o,s;if(i===Ae(t,e,n,r)>0)for(o=e;o<n;o+=r)s=Oe(o,t[o],t[o+1],s);else for(o=n-r;o>=e;o-=r)s=Oe(o,t[o],t[o+1],s);return s&&Se(s,s.next)&&(Re(s),s=s.next),s}function Ee(t,e){if(!t)return t;e||(e=t);var n,r=t;do{if(n=!1,r.steiner||!Se(r,r.next)&&0!==Ce(r.prev,r,r.next))r=r.next;else{if(Re(r),(r=e=r.prev)===r.next)break;n=!0}}while(n||r!==e);return e}function we(t,e,n,r,i,o,s){if(t){!s&&o&&function(t,e,n,r){var i=t;do{null===i.z&&(i.z=Ie(i.x,i.y,e,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==t);i.prevZ.nextZ=null,i.prevZ=null,function(t){var e,n,r,i,o,s,a,u,c=1;do{for(n=t,t=null,o=null,s=0;n;){for(s++,r=n,a=0,e=0;e<c&&(a++,r=r.nextZ);e++);for(u=c;a>0||u>0&&r;)0!==a&&(0===u||!r||n.z<=r.z)?(i=n,n=n.nextZ,a--):(i=r,r=r.nextZ,u--),o?o.nextZ=i:t=i,i.prevZ=o,o=i;n=r}o.nextZ=null,c*=2}while(s>1)}(i)}(t,r,i,o);for(var a,u,c=t;t.prev!==t.next;)if(a=t.prev,u=t.next,o?function(t,e,n,r){var i=t.prev,o=t,s=t.next;if(Ce(i,o,s)>=0)return!1;var a=i.x<o.x?i.x<s.x?i.x:s.x:o.x<s.x?o.x:s.x,u=i.y<o.y?i.y<s.y?i.y:s.y:o.y<s.y?o.y:s.y,c=i.x>o.x?i.x>s.x?i.x:s.x:o.x>s.x?o.x:s.x,h=i.y>o.y?i.y>s.y?i.y:s.y:o.y>s.y?o.y:s.y,l=Ie(a,u,e,n,r),p=Ie(c,h,e,n,r),f=t.nextZ;for(;f&&f.z<=p;){if(f!==t.prev&&f!==t.next&&Ne(i.x,i.y,o.x,o.y,s.x,s.y,f.x,f.y)&&Ce(f.prev,f,f.next)>=0)return!1;f=f.nextZ}f=t.prevZ;for(;f&&f.z>=l;){if(f!==t.prev&&f!==t.next&&Ne(i.x,i.y,o.x,o.y,s.x,s.y,f.x,f.y)&&Ce(f.prev,f,f.next)>=0)return!1;f=f.prevZ}return!0}(t,r,i,o):function(t){var e=t.prev,n=t,r=t.next;if(Ce(e,n,r)>=0)return!1;var i=t.next.next;for(;i!==t.prev;){if(Ne(e.x,e.y,n.x,n.y,r.x,r.y,i.x,i.y)&&Ce(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}(t))e.push(a.i/n),e.push(t.i/n),e.push(u.i/n),Re(t),t=u.next,c=u.next;else if((t=u)===c){s?1===s?we(t=function(t,e,n){var r=t;do{var i=r.prev,o=r.next.next;!Se(i,o)&&Me(i,r,r.next,o)&&Le(i,o)&&Le(o,i)&&(e.push(i.i/n),e.push(r.i/n),e.push(o.i/n),Re(r),Re(r.next),r=t=o),r=r.next}while(r!==t);return r}(t,e,n),e,n,r,i,o,2):2===s&&function(t,e,n,r,i,o){var s=t;do{for(var a=s.next.next;a!==s.prev;){if(s.i!==a.i&&function(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){var n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&Me(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&Le(t,e)&&Le(e,t)&&function(t,e){var n=t,r=!1,i=(t.x+e.x)/2,o=(t.y+e.y)/2;do{n.y>o!=n.next.y>o&&n.next.y!==n.y&&i<(n.next.x-n.x)*(o-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==t);return r}(t,e)}(s,a)){var u=Pe(s,a);return s=Ee(s,s.next),u=Ee(u,u.next),we(s,e,n,r,i,o),void we(u,e,n,r,i,o)}a=a.next}s=s.next}while(s!==t)}(t,e,n,r,i,o):we(Ee(t),e,n,r,i,o,1);break}}}function be(t,e){return t.x-e.x}function Ie(t,e,n,r,i){return t=32767*(t-n)*i,e=32767*(e-r)*i,t=16711935&(t|t<<8),t=252645135&(t|t<<4),t=858993459&(t|t<<2),t=1431655765&(t|t<<1),e=16711935&(e|e<<8),e=252645135&(e|e<<4),e=858993459&(e|e<<2),e=1431655765&(e|e<<1),t|e<<1}function Ne(t,e,n,r,i,o,s,a){return(i-s)*(e-a)-(t-s)*(o-a)>=0&&(t-s)*(r-a)-(n-s)*(e-a)>=0&&(n-s)*(o-a)-(i-s)*(r-a)>=0}function Ce(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function Se(t,e){return t.x===e.x&&t.y===e.y}function Me(t,e,n,r){return!!(Se(t,e)&&Se(n,r)||Se(t,r)&&Se(n,e))||Ce(t,e,n)>0!=Ce(t,e,r)>0&&Ce(n,r,t)>0!=Ce(n,r,e)>0}function Le(t,e){return Ce(t.prev,t,t.next)<0?Ce(t,e,t.next)>=0&&Ce(t,t.prev,e)>=0:Ce(t,e,t.prev)<0||Ce(t,t.next,e)<0}function Pe(t,e){var n=new Te(t.i,t.x,t.y),r=new Te(e.i,e.x,e.y),i=t.next,o=e.prev;return t.next=e,e.prev=t,n.next=i,i.prev=n,r.next=n,n.prev=r,o.next=r,r.prev=o,r}function Oe(t,e,n,r){var i=new Te(t,e,n);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function Re(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Te(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Ae(t,e,n,r){for(var i=0,o=e,s=n-r;o<n;o+=r)i+=(t[s]-t[o])*(t[o+1]+t[s+1]),s=o;return i}function De(t){var e=function(t){for(var e=t[0][0].length,n={vertices:[],holes:[],dimensions:e},r=0,i=0;i<t.length;i++){for(var o=0;o<t[i].length;o++)for(var s=0;s<e;s++)n.vertices.push(t[i][o][s]);i>0&&(r+=t[i-1].length,n.holes.push(r))}return n}(t),n=Is(e.vertices,e.holes,2),r=[],i=[];n.forEach(function(t,r){var o=n[r];i.push([e.vertices[2*o],e.vertices[2*o+1]])});for(var s=0;s<i.length;s+=3){var a=i.slice(s,s+3);a.push(i[s]),r.push(o([a]))}return r}function Fe(t,e){if(!t)throw new Error("targetPoint is required");if(!e)throw new Error("points is required");var n,r=1/0;return O(e,function(e,i){var o=qt(t,e);o<r&&((n=Gt(e)).properties.featureIndex=i,n.properties.distanceToPoint=o,r=o)}),n}function qe(t,e,n,r,i){Ge(t,e,n||0,r||t.length-1,i||function(t,e){return t<e?-1:t>e?1:0})}function Ge(t,e,n,r,i){for(;r>n;){if(r-n>600){var o=r-n+1,s=e-n+1,a=Math.log(o),u=.5*Math.exp(2*a/3),c=.5*Math.sqrt(a*u*(o-u)/o)*(s-o/2<0?-1:1);Ge(t,e,Math.max(n,Math.floor(e-s*u/o+c)),Math.min(r,Math.floor(e+(o-s)*u/o+c)),i)}var h=t[e],l=n,p=r;for(Be(t,n,e),i(t[r],h)>0&&Be(t,n,r);l<p;){for(Be(t,l,p),l++,p--;i(t[l],h)<0;)l++;for(;i(t[p],h)>0;)p--}0===i(t[n],h)?Be(t,n,p):Be(t,++p,r),p<=e&&(n=p+1),e<=p&&(r=p-1)}}function Be(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function ke(t,e){if(!(this instanceof ke))return new ke(t,e);this._maxEntries=Math.max(4,t||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),e&&this._initFormat(e),this.clear()}function ze(t,e){je(t,0,t.children.length,e,t)}function je(t,e,n,r,i){i||(i=Ze(null)),i.minX=1/0,i.minY=1/0,i.maxX=-1/0,i.maxY=-1/0;for(var o,s=e;s<n;s++)o=t.children[s],Xe(i,t.leaf?r(o):o);return i}function Xe(t,e){return t.minX=Math.min(t.minX,e.minX),t.minY=Math.min(t.minY,e.minY),t.maxX=Math.max(t.maxX,e.maxX),t.maxY=Math.max(t.maxY,e.maxY),t}function Ue(t,e){return t.minX-e.minX}function Ye(t,e){return t.minY-e.minY}function Ve(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function He(t){return t.maxX-t.minX+(t.maxY-t.minY)}function We(t,e){return t.minX<=e.minX&&t.minY<=e.minY&&e.maxX<=t.maxX&&e.maxY<=t.maxY}function Je(t,e){return e.minX<=t.maxX&&e.minY<=t.maxY&&e.maxX>=t.minX&&e.maxY>=t.minY}function Ze(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function Ke(t,e,n,r,i){for(var o,s=[e,n];s.length;)(n=s.pop())-(e=s.pop())<=r||(qe(t,o=e+Math.ceil((n-e)/r/2)*r,e,n,i),s.push(e,o,o,n))}function Qe(t){var e=ke(t);return e.insert=function(t){if(Array.isArray(t)){var e=t;(t=$e(e)).bbox=e}else t.bbox=t.bbox?t.bbox:tn(t);return ke.prototype.insert.call(this,t)},e.load=function(t){var e=[];return Array.isArray(t)?t.forEach(function(t){var n=$e(t);n.bbox=t,e.push(n)}):O(t,function(t){t.bbox=t.bbox?t.bbox:tn(t),e.push(t)}),ke.prototype.load.call(this,e)},e.remove=function(t){if(Array.isArray(t)){var e=t;(t=$e(e)).bbox=e}return ke.prototype.remove.call(this,t)},e.clear=function(){return ke.prototype.clear.call(this)},e.search=function(t){return{type:"FeatureCollection",features:ke.prototype.search.call(this,this.toBBox(t))}},e.collides=function(t){return ke.prototype.collides.call(this,this.toBBox(t))},e.all=function(){return{type:"FeatureCollection",features:ke.prototype.all.call(this)}},e.toJSON=function(){return ke.prototype.toJSON.call(this)},e.fromJSON=function(t){return ke.prototype.fromJSON.call(this,t)},e.toBBox=function(t){var e;return e=t.bbox?t.bbox:Array.isArray(t)&&4===t.length?t:tn(t),{minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]}},e}function $e(t){var e=[t[0],t[1]],n=[t[0],t[3]],r=[t[2],t[3]];return{type:"Feature",bbox:t,properties:{},geometry:{type:"Polygon",coordinates:[[e,[t[2],t[1]],r,n,e]]}}}function tn(t){var e=[1/0,1/0,-1/0,-1/0];return S(t,function(t){e[0]>t[0]&&(e[0]=t[0]),e[1]>t[1]&&(e[1]=t[1]),e[2]<t[0]&&(e[2]=t[0]),e[3]<t[1]&&(e[3]=t[1])}),e}function en(t){if(!t)throw new Error("geojson is required");var e=[];return F(t,function(t){!function(t,e){var n=[],r=t.geometry;switch(r.type){case"Polygon":n=U(r);break;case"LineString":n=[U(r)]}n.forEach(function(n){var r=function(t,e){var n=[];return t.reduce(function(t,r){var i=a([t,r],e);return i.bbox=function(t,e){var n=t[0],r=t[1],i=e[0],o=e[1];return[n<i?n:i,r<o?r:o,n>i?n:i,r>o?r:o]}(t,r),n.push(i),r}),n}(n,t.properties);r.forEach(function(t){t.id=e.length,e.push(t)})})}(t,e)}),c(e)}function nn(t,n){var r={},i=[];if("LineString"===t.type&&(t=e(t)),"LineString"===n.type&&(n=e(n)),"Feature"===t.type&&"Feature"===n.type&&"LineString"===t.geometry.type&&"LineString"===n.geometry.type&&2===t.geometry.coordinates.length&&2===n.geometry.coordinates.length){var o=rn(t,n);return o&&i.push(o),c(i)}var s=Qe();return s.load(en(n)),O(en(t),function(t){O(s.search(t),function(e){var n=rn(t,e);if(n){var o=U(n).join(",");r[o]||(r[o]=!0,i.push(n))}})}),c(i)}function rn(t,e){var n=U(t),i=U(e);if(2!==n.length)throw new Error("<intersects> line1 must only contain 2 coordinates");if(2!==i.length)throw new Error("<intersects> line2 must only contain 2 coordinates");var o=n[0][0],s=n[0][1],a=n[1][0],u=n[1][1],c=i[0][0],h=i[0][1],l=i[1][0],p=i[1][1],f=(p-h)*(a-o)-(l-c)*(u-s),g=(l-c)*(s-h)-(p-h)*(o-c),d=(a-o)*(s-h)-(u-s)*(o-c);if(0===f)return null;var y=g/f,_=d/f;if(y>=0&&y<=1&&_>=0&&_<=1){return r([o+y*(a-o),s+y*(u-s)])}return null}function on(t,e,n){if(n=n||{},!I(n))throw new Error("options is invalid");var i=t.geometry?t.geometry.type:t.type;if("LineString"!==i&&"MultiLineString"!==i)throw new Error("lines must be LineString or MultiLineString");var o=r([1/0,1/0],{dist:1/0}),s=0;return F(t,function(t){for(var i=U(t),u=0;u<i.length-1;u++){var c=r(i[u]);c.properties.dist=qt(e,c,n);var h=r(i[u+1]);h.properties.dist=qt(e,h,n);var l=qt(c,h,n),p=Math.max(c.properties.dist,h.properties.dist),f=ge(c,h),g=pe(e,p,f+90,n),d=pe(e,p,f-90,n),y=nn(a([g.geometry.coordinates,d.geometry.coordinates]),a([c.geometry.coordinates,h.geometry.coordinates])),_=null;y.features.length>0&&((_=y.features[0]).properties.dist=qt(e,_,n),_.properties.location=s+qt(c,_,n)),c.properties.dist<o.properties.dist&&((o=c).properties.index=u,o.properties.location=s),h.properties.dist<o.properties.dist&&((o=h).properties.index=u+1,o.properties.location=s+l),_&&_.properties.dist<o.properties.dist&&((o=_).properties.index=u),s+=l}}),o}function sn(t,e,n){if(n=n||{},!I(n))throw new Error("options is invalid");var r=n.final;if(!t)throw new Error("start point is required");if(!e)throw new Error("end point is required");var i;return(i=r?an(X(e),X(t)):an(X(t),X(e)))>180?-(360-i):i}function an(t,e){var n=x(t[1]),r=x(e[1]),i=x(e[0]-t[0]);i>Math.PI&&(i-=2*Math.PI),i<-Math.PI&&(i+=2*Math.PI);var o=Math.log(Math.tan(r/2+Math.PI/4)/Math.tan(n/2+Math.PI/4));return(v(Math.atan2(i,o))+360)%360}function un(t,e,n){if(n=n||{},!I(n))throw new Error("options is invalid");var r=n.units;if(!t)throw new Error("from point is required");if(!e)throw new Error("to point is required");var i=X(t),o=X(e);o[0]+=o[0]-i[0]>180?-360:i[0]-o[0]>180?360:0;return E(function(t,e,n){var r=n=void 0===n?Fo:Number(n),i=t[1]*Math.PI/180,o=e[1]*Math.PI/180,s=o-i,a=Math.abs(e[0]-t[0])*Math.PI/180;a>Math.PI&&(a-=2*Math.PI);var u=Math.log(Math.tan(o/2+Math.PI/4)/Math.tan(i/2+Math.PI/4)),c=Math.abs(u)>1e-11?s/u:Math.cos(i);return Math.sqrt(s*s+c*c*a*a)*r}(i,o),"meters",r)}function cn(t,e){return ln(t,"mercator",e)}function hn(t,e){return ln(t,"wgs84",e)}function ln(t,e,n){if(n=n||{},!I(n))throw new Error("options is invalid");var r=n.mutate;if(!t)throw new Error("geojson is required");return Array.isArray(t)&&b(t[0])?t="mercator"===e?pn(t):fn(t):(!0!==r&&(t=Gt(t)),S(t,function(t){var n="mercator"===e?pn(t):fn(t);t[0]=n[0],t[1]=n[1]})),t}function pn(t){var e=Math.PI/180,n=20037508.342789244,r=[6378137*(Math.abs(t[0])<=180?t[0]:t[0]-360*function(t){return t<0?-1:t>0?1:0}(t[0]))*e,6378137*Math.log(Math.tan(.25*Math.PI+.5*t[1]*e))];return r[0]>n&&(r[0]=n),r[0]<-n&&(r[0]=-n),r[1]>n&&(r[1]=n),r[1]<-n&&(r[1]=-n),r}function fn(t){var e=180/Math.PI;return[t[0]*e/6378137,(.5*Math.PI-2*Math.atan(Math.exp(-t[1]/6378137)))*e]}function gn(t,n,i){if(i=i||{},!I(i))throw new Error("options is invalid");if(!t)throw new Error("pt is required");if(Array.isArray(t)?t=r(t):"Point"===t.type?t=e(t):H(t,"Point","point"),!n)throw new Error("line is required");Array.isArray(n)?n=a(n):"LineString"===n.type?n=e(n):H(n,"LineString","line");var o=1/0,s=t.geometry.coordinates;return G(n,function(t){var e=t.geometry.coordinates[0],n=t.geometry.coordinates[1],a=function(t,e,n,i){var o=i.mercator,s=!0!==o?qt(e,t,i):dn(e,t,i),a=m(!0!==o?ge(e,t):sn(e,t)),u=m(!0!==o?ge(e,n):sn(e,n)),c=Math.abs(a-u);if(c>90)return s;var h=(u+180)%360,l=m(!0!==o?ge(n,t):sn(n,t)),p=Math.abs(l-h);p>180&&(p=Math.abs(p-360));return p>90?!0!==o?qt(t,n,i):dn(t,n,i):!0!==o?s*Math.sin(x(c)):function(t,e,n,i){var o=0;(Math.abs(t[0])>=180||Math.abs(e[0])>=180||Math.abs(n[0])>=180)&&(o=t[0]>0||e[0]>0||n[0]>0?-180:180);var s=r(n),a=cn([t[0]+o,t[1]]),u=cn([e[0]+o,e[1]]),c=cn([n[0]+o,n[1]]),h=hn(function(t,e,n){var r=t[0],i=t[1],o=e[0],s=e[1],a=n[0],u=n[1],c=o-r,h=s-i,l=((a-r)*c+(u-i)*h)/(c*c+h*h);return[r+l*c,i+l*h]}(a,u,c));return 0!==o&&(h[0]-=o),un(s,h,i)}(e,n,t,i)}(s,e,n,i);o>a&&(o=a)}),o}function dn(t,e,n){var r=n.units,i=0;Math.abs(t[0])>=180&&(i=t[0]>0?-180:180),Math.abs(e[0])>=180&&(i=e[0]>0?-180:180);var o=cn([t[0]+i,t[1]]),s=cn([e[0]+i,e[1]]),a=function(t){return t*t},u=a(o[0]-s[0])+a(o[1]-s[1]);return E(Math.sqrt(u),"meters",r)}function yn(t){for(var n=function(t){if("FeatureCollection"!==t.type)return"Feature"!==t.type?c([e(t)]):c([t]);return t}(t),i=de(n),o=!1,s=0;!o&&s<n.features.length;){var a,u=n.features[s].geometry,h=!1;if("Point"===u.type)i.geometry.coordinates[0]===u.coordinates[0]&&i.geometry.coordinates[1]===u.coordinates[1]&&(o=!0);else if("MultiPoint"===u.type){var l=!1;for(a=0;!l&&a<u.coordinates.length;)i.geometry.coordinates[0]===u.coordinates[a][0]&&i.geometry.coordinates[1]===u.coordinates[a][1]&&(o=!0,l=!0),a++}else if("LineString"===u.type)for(a=0;!h&&a<u.coordinates.length-1;)_n(i.geometry.coordinates[0],i.geometry.coordinates[1],u.coordinates[a][0],u.coordinates[a][1],u.coordinates[a+1][0],u.coordinates[a+1][1])&&(h=!0,o=!0),a++;else if("MultiLineString"===u.type)for(var p=0;p<u.coordinates.length;){h=!1,a=0;for(var f=u.coordinates[p];!h&&a<f.length-1;)_n(i.geometry.coordinates[0],i.geometry.coordinates[1],f[a][0],f[a][1],f[a+1][0],f[a+1][1])&&(h=!0,o=!0),a++;p++}else"Polygon"!==u.type&&"MultiPolygon"!==u.type||Pt(i,u)&&(o=!0);s++}if(o)return i;var g=c([]);for(s=0;s<n.features.length;s++)g.features=g.features.concat(me(n.features[s]).features);return r(Fe(i,g).geometry.coordinates)}function _n(t,e,n,r,i,o){return Math.sqrt((i-n)*(i-n)+(o-r)*(o-r))===Math.sqrt((t-n)*(t-n)+(e-r)*(e-r))+Math.sqrt((i-t)*(i-t)+(o-e)*(o-e))}function mn(t){return D(t,function(t,e){return t+vn(e)},0)}function vn(t){var e,n=0;switch(t.type){case"Polygon":return xn(t.coordinates);case"MultiPolygon":for(e=0;e<t.coordinates.length;e++)n+=xn(t.coordinates[e]);return n;case"Point":case"MultiPoint":case"LineString":case"MultiLineString":return 0;case"GeometryCollection":for(e=0;e<t.geometries.length;e++)n+=vn(t.geometries[e]);return n}}function xn(t){var e=0;if(t&&t.length>0){e+=Math.abs(En(t[0]));for(var n=1;n<t.length;n++)e-=Math.abs(En(t[n]))}return e}function En(t){var e,n,r,i,o,s,a=0,u=t.length;if(u>2){for(s=0;s<u;s++)s===u-2?(r=u-2,i=u-1,o=0):s===u-1?(r=u-1,i=0,o=1):(r=s,i=s+1,o=s+2),e=t[r],n=t[i],a+=(wn(t[o][0])-wn(e[0]))*Math.sin(wn(n[1]));a=a*Ss*Ss/2}return a}function wn(t){return t*Math.PI/180}function bn(t,e){if(e=e||{},!I(e))throw new Error("options is invalid");if(!t)throw new Error("geojson is required");return B(t,function(t,n){var r=n.geometry.coordinates;return t+qt(r[0],r[1],e)},0)}function In(t,e,n,r){if(r=r||{},!I(r))throw new Error("options is invalid");var i,o=[];if("Feature"===t.type)i=t.geometry.coordinates;else{if("LineString"!==t.type)throw new Error("input must be a LineString Feature or Geometry");i=t.coordinates}for(var s,u,c,h=0,l=0;l<i.length&&!(e>=h&&l===i.length-1);l++){if(h>e&&0===o.length){if(!(s=e-h))return o.push(i[l]),a(o);u=ge(i[l],i[l-1])-180,c=pe(i[l],s,u,r),o.push(c.geometry.coordinates)}if(h>=n)return(s=n-h)?(u=ge(i[l],i[l-1])-180,c=pe(i[l],s,u,r),o.push(c.geometry.coordinates),a(o)):(o.push(i[l]),a(o));if(h>=e&&o.push(i[l]),l===i.length-1)return a(o);h+=qt(i[l],i[l+1],r)}return a(i[i.length-1])}function Nn(t,e,n){var r=(n=n||{}).ignoreEndVertices;if(!I(n))throw new Error("invalid options");if(!t)throw new Error("pt is required");if(!e)throw new Error("line is required");for(var i=X(t),o=U(e),s=0;s<o.length-1;s++){var a=!1;if(r&&(0===s&&(a="start"),s===o.length-2&&(a="end"),0===s&&s+1===o.length-1&&(a="both")),function(t,e,n,r){var i=n[0],o=n[1],s=t[0],a=t[1],u=e[0],c=e[1],h=n[0]-s,l=n[1]-a,p=u-s,f=c-a;if(h*f-l*p!=0)return!1;{if(!r)return Math.abs(p)>=Math.abs(f)?p>0?s<=i&&i<=u:u<=i&&i<=s:f>0?a<=o&&o<=c:c<=o&&o<=a;if("start"===r)return Math.abs(p)>=Math.abs(f)?p>0?s<i&&i<=u:u<=i&&i<s:f>0?a<o&&o<=c:c<=o&&o<a;if("end"===r)return Math.abs(p)>=Math.abs(f)?p>0?s<=i&&i<u:u<i&&i<=s:f>0?a<=o&&o<c:c<o&&o<=a;if("both"===r)return Math.abs(p)>=Math.abs(f)?p>0?s<i&&i<u:u<i&&i<s:f>0?a<o&&o<c:c<o&&o<a}}(o[s],o[s+1],i,a))return!0}return!1}function Cn(t,e){var n=K(t),r=K(e),i=J(t),o=J(e);switch(n){case"Point":switch(r){case"MultiPoint":return function(t,e){var n,r=!1;for(n=0;n<e.coordinates.length;n++)if(Mn(e.coordinates[n],t.coordinates)){r=!0;break}return r}(i,o);case"LineString":return Nn(i,o,{ignoreEndVertices:!0});case"Polygon":return Pt(i,o,{ignoreBoundary:!0});default:throw new Error("feature2 "+r+" geometry not supported")}case"MultiPoint":switch(r){case"MultiPoint":return function(t,e){for(var n=0;n<t.coordinates.length;n++){for(var r=!1,i=0;i<e.coordinates.length;i++)Mn(t.coordinates[n],e.coordinates[i])&&(r=!0);if(!r)return!1}return!0}(i,o);case"LineString":return function(t,e){for(var n=!1,r=0;r<t.coordinates.length;r++){if(!Nn(t.coordinates[r],e))return!1;n||(n=Nn(t.coordinates[r],e,{ignoreEndVertices:!0}))}return n}(i,o);case"Polygon":return function(t,e){for(var n=!0,r=0;r<t.coordinates.length;r++){var i=Pt(t.coordinates[1],e);if(!i){n=!1;break}i=Pt(t.coordinates[1],e,{ignoreBoundary:!0})}return n&&i}(i,o);default:throw new Error("feature2 "+r+" geometry not supported")}case"LineString":switch(r){case"LineString":return function(t,e){for(var n=0;n<t.coordinates.length;n++)if(!Nn(t.coordinates[n],e))return!1;return!0}(i,o);case"Polygon":return function(t,e){var n=j(e),r=j(t);if(!Sn(n,r))return!1;for(var i=!1,o=0;o<t.coordinates.length-1;o++){if(!Pt(t.coordinates[o],e))return!1;if(i||(i=Pt(t.coordinates[o],e,{ignoreBoundary:!0})),!i){var s=function(t,e){return[(t[0]+e[0])/2,(t[1]+e[1])/2]}(t.coordinates[o],t.coordinates[o+1]);i=Pt(s,e,{ignoreBoundary:!0})}}return i}(i,o);default:throw new Error("feature2 "+r+" geometry not supported")}case"Polygon":switch(r){case"Polygon":return function(t,e){var n=j(t);if(!Sn(j(e),n))return!1;for(var r=0;r<t.coordinates[0].length;r++)if(!Pt(t.coordinates[0][r],e))return!1;return!0}(i,o);default:throw new Error("feature2 "+r+" geometry not supported")}default:throw new Error("feature1 "+n+" geometry not supported")}}function Sn(t,e){return!(t[0]>e[0])&&(!(t[2]<e[2])&&(!(t[1]>e[1])&&!(t[3]<e[3])))}function Mn(t,e){return t[0]===e[0]&&t[1]===e[1]}function Ln(t,e,n){if(n=n||{},!I(n))throw new Error("options is invalid");var i=n.mask,o=n.properties,s=[];if(null===e||void 0===e)throw new Error("cellSide is required");if(!b(e))throw new Error("cellSide is invalid");if(!t)throw new Error("bbox is required");if(!Array.isArray(t))throw new Error("bbox must be array");if(4!==t.length)throw new Error("bbox must contain 4 numbers");if(i&&-1===["Polygon","MultiPolygon"].indexOf(K(i)))throw new Error("options.mask must be a (Multi)Polygon");for(var a=t[0],u=t[1],h=t[2],l=t[3],p=e/qt([a,u],[h,u],n)*(h-a),f=e/qt([a,u],[a,l],n)*(l-u),g=h-a,d=l-u,y=Math.floor(g/p),_=(d-Math.floor(d/f)*f)/2,m=a+(g-y*p)/2;m<=h;){for(var v=u+_;v<=l;){var x=r([m,v],o);i?Cn(x,i)&&s.push(x):s.push(x),v+=f}m+=p}return c(s)}function Pn(t,e){if(e=e||{},!I(e))throw new Error("options is invalid");var n=e.precision,r=e.coordinates,i=e.mutate;if(n=void 0===n||null===n||isNaN(n)?6:n,r=void 0===r||null===r||isNaN(r)?3:r,!t)throw new Error("<geojson> is required");if("number"!=typeof n)throw new Error("<precision> must be a number");if("number"!=typeof r)throw new Error("<coordinates> must be a number");!1!==i&&void 0!==i||(t=JSON.parse(JSON.stringify(t)));var o=Math.pow(10,n);return S(t,function(t){!function(t,e,n){t.length>n&&t.splice(n,t.length);for(var r=0;r<t.length;r++)t[r]=Math.round(t[r]*e)/e}(t,o,r)}),t}function On(t,e){if(!t||!e)return!1;if(t.length!==e.length)return!1;for(var n=0,r=t.length;n<r;n++)if(t[n]instanceof Array&&e[n]instanceof Array){if(!On(t[n],e[n]))return!1}else if(t[n]!==e[n])return!1;return!0}function Rn(t,e){if(void 0===e&&(e=!0),3!=t.length)throw new Error("This function requires an array of three points [x,y]");return(t[1][0]-t[0][0])*(t[2][1]-t[0][1])-(t[1][1]-t[0][1])*(t[2][0]-t[0][0])>=0==e}function Tn(t,e){if(!t||!e)return!1;if(t.length!=e.length)return!1;for(var n=0,r=t.length;n<r;n++)if(t[n]instanceof Array&&e[n]instanceof Array){if(!Tn(t[n],e[n]))return!1}else if(t[n]!=e[n])return!1;return!0}function An(t,e){var n=[],r=Qe();return F(e,function(e){if(n.forEach(function(t,e){t.id=e}),n.length){var i=r.search(e);if(i.features.length){var o=Fn(e,i);n=n.filter(function(t){return t.id!==o.id}),r.remove(o),O(Dn(o,e),function(t){n.push(t),r.insert(t)})}}else(n=Dn(t,e).features).forEach(function(t){t.bbox||(t.bbox=le(j(t)))}),r.load(c(n))}),c(n)}function Dn(t,e){var n=[],r=U(t)[0],i=U(t)[t.geometry.coordinates.length-1];if(qn(r,X(e))||qn(i,X(e)))return c([t]);var o=Qe(),s=en(t);o.load(s);var u=o.search(e);if(!u.features.length)return c([t]);var h=Fn(e,u),l=R(s,function(t,r,i){var o=U(r)[1],s=X(e);return i===h.id?(t.push(s),n.push(a(t)),qn(s,o)?[s]:[s,o]):(t.push(o),t)},[r]);return l.length>1&&n.push(a(l)),c(n)}function Fn(t,e){if(!e.features.length)throw new Error("lines must contain features");if(1===e.features.length)return e.features[0];var n,r=1/0;return O(e,function(e){var i=on(e,t).properties.dist;i<r&&(n=e,r=i)}),n}function qn(t,e){return t[0]===e[0]&&t[1]===e[1]}function Gn(t,e,n,r,i){if(i=i||{},!I(i))throw new Error("options is invalid");var o=i.steps,s=i.units;if(!t)throw new Error("center is required");if(!e)throw new Error("radius is required");if(void 0===n||null===n)throw new Error("bearing1 is required");if(void 0===r||null===r)throw new Error("bearing2 is required");if("object"!=typeof i)throw new Error("options must be an object");o=o||64;var u=Bn(n),c=Bn(r),h=t.properties;if(u===c)return a(fe(t,e,i).geometry.coordinates[0],h);for(var l=u,p=u<c?c:c+360,f=l,g=[],d=0;f<p;)g.push(pe(t,e,f,s).geometry.coordinates),f=l+360*++d/o;return f>p&&g.push(pe(t,e,p,s).geometry.coordinates),a(g,h)}function Bn(t){var e=t%360;return e<0&&(e+=360),e}function kn(t,e){if(e=e||{},!I(e))throw new Error("options is invalid");var n=e.properties,r=K(t),i=U(t);if(n=n||t.properties||{},!i.length)throw new Error("polygon must contain coordinates");switch(r){case"Polygon":return zn(i,n);case"MultiPolygon":var o=[];return i.forEach(function(t){o.push(zn(t,n))}),c(o);default:throw new Error("geom "+r+" not supported")}}function zn(t,e){return t.length>1?h(t,e):a(t[0],e)}function jn(t,e){if(e=e||{},!I(e))throw new Error("options is invalid");var n=e.properties,r=e.autoComplete,i=e.orderCoords;if(!t)throw new Error("lines is required");r=void 0===r||r,i=void 0===i||i;switch(K(t)){case"FeatureCollection":case"GeometryCollection":var o=[];return(t.features?t.features:t.geometries).forEach(function(t){o.push(U(Xn(t,{},r,i)))}),p(o,n)}return Xn(t,n,r,i)}function Xn(t,e,n,r){e=e||t.properties||{};var i=U(t),s=K(t);if(!i.length)throw new Error("line must contain coordinates");switch(s){case"LineString":return n&&(i=Un(i)),o([i],e);case"MultiLineString":var u=[],c=0;return i.forEach(function(t){if(n&&(t=Un(t)),r){var e=function(t){var e=t[0],n=t[1],r=t[2],i=t[3];return Math.abs(e-r)*Math.abs(n-i)}(j(a(t)));e>c?(u.unshift(t),c=e):u.push(t)}else u.push(t)}),o(u,e);default:throw new Error("geometry type "+s+" is not supported")}}function Un(t){var e=t[0],n=e[0],r=e[1],i=t[t.length-1],o=i[0],s=i[1];return n===o&&r===s||t.push(e),t}function Yn(t,e,n){var r,i,o,s,a,u=t.length,c=Hn(t[0],e),h=[];for(n||(n=[]),r=1;r<u;r++){for(i=t[r-1],s=a=Hn(o=t[r],e);;){if(!(c|s)){h.push(i),s!==a?(h.push(o),r<u-1&&(n.push(h),h=[])):r===u-1&&h.push(o);break}if(c&s)break;c?c=Hn(i=Vn(i,o,c,e),e):s=Hn(o=Vn(i,o,s,e),e)}c=a}return h.length&&n.push(h),n}function Vn(t,e,n,r){return 8&n?[t[0]+(e[0]-t[0])*(r[3]-t[1])/(e[1]-t[1]),r[3]]:4&n?[t[0]+(e[0]-t[0])*(r[1]-t[1])/(e[1]-t[1]),r[1]]:2&n?[r[2],t[1]+(e[1]-t[1])*(r[2]-t[0])/(e[0]-t[0])]:1&n?[r[0],t[1]+(e[1]-t[1])*(r[0]-t[0])/(e[0]-t[0])]:null}function Hn(t,e){var n=0;return t[0]<e[0]?n|=1:t[0]>e[2]&&(n|=2),t[1]<e[1]?n|=4:t[1]>e[3]&&(n|=8),n}function Wn(t,e){for(var n=[],r=0;r<t.length;r++){var i=Gs.polygon(t[r],e);i.length>0&&(i[0][0]===i[i.length-1][0]&&i[0][1]===i[i.length-1][1]||i.push(i[0]),i.length>=4&&n.push(i))}return n}function Jn(t){return"[object Arguments]"===Object.prototype.toString.call(t)}function Zn(t,e,n){return n||(n={}),t===e||(t instanceof Date&&e instanceof Date?t.getTime()===e.getTime():!t||!e||"object"!=typeof t&&"object"!=typeof e?(n.strict,t===e):function(t,e,n){var r,i;if(Kn(t)||Kn(e))return!1;if(t.prototype!==e.prototype)return!1;if(Jn(t))return!!Jn(e)&&(t=Bs.call(t),e=Bs.call(e),Zn(t,e,n));if(Qn(t)){if(!Qn(e))return!1;if(t.length!==e.length)return!1;for(r=0;r<t.length;r++)if(t[r]!==e[r])return!1;return!0}try{var o=Object.keys(t),s=Object.keys(e)}catch(t){return!1}if(o.length!==s.length)return!1;for(o.sort(),s.sort(),r=o.length-1;r>=0;r--)if(o[r]!==s[r])return!1;for(r=o.length-1;r>=0;r--)if(i=o[r],!Zn(t[i],e[i],n))return!1;return typeof t==typeof e}(t,e,n))}function Kn(t){return null===t||void 0===t}function Qn(t){return!(!t||"object"!=typeof t||"number"!=typeof t.length)&&("function"==typeof t.copy&&"function"==typeof t.slice&&!(t.length>0&&"number"!=typeof t[0]))}function $n(t,e,n){if(n=n||{},!I(n))throw new Error("options is invalid");var r=n.tolerance||0,i=[],o=Qe();o.load(en(t));var s;return G(e,function(t){var e=!1;O(o.search(t),function(n){if(!1===e){var i=U(t).sort(),o=U(n).sort();Zn(i,o)?(e=!0,s=s?tr(s,t):t):(0===r?Nn(i[0],n)&&Nn(i[1],n):on(n,i[0]).properties.dist<=r&&on(n,i[1]).properties.dist<=r)?(e=!0,s=s?tr(s,t):t):(0===r?Nn(o[0],t)&&Nn(o[1],t):on(t,o[0]).properties.dist<=r&&on(t,o[1]).properties.dist<=r)&&(s=s?tr(s,n):n)}}),!1===e&&s&&(i.push(s),s=void 0)}),s&&i.push(s),c(i)}function tr(t,e){var n=U(e),r=U(t),i=r[0],o=r[r.length-1],s=t.geometry.coordinates;return Zn(n[0],i)?s.unshift(n[1]):Zn(n[0],o)?s.push(n[1]):Zn(n[1],i)?s.unshift(n[0]):Zn(n[1],o)&&s.push(n[0]),t}function er(t){var e=t%360;return e<0&&(e+=360),e}function nr(t,e,n,i){if(i=i||{},!I(i))throw new Error("options is invalid");var o=i.units,s=i.properties;if(!t)throw new Error("origin is required");if(void 0===e||null===e)throw new Error("distance is required");if(void 0===n||null===n)throw new Error("bearing is required");if(!(e>=0))throw new Error("distance must be greater than 0");var a=E(e,o,"meters"),u=X(t),c=function(t,e,n,r){r=void 0===r?Fo:Number(r);var i=e/r,o=t[0]*Math.PI/180,s=x(t[1]),a=x(n),u=i*Math.cos(a),c=s+u;Math.abs(c)>Math.PI/2&&(c=c>0?Math.PI-c:-Math.PI-c);var h=Math.log(Math.tan(c/2+Math.PI/4)/Math.tan(s/2+Math.PI/4)),l=Math.abs(h)>1e-11?u/h:Math.cos(s),p=i*Math.sin(a)/l;return[(180*(o+p)/Math.PI+540)%360-180,180*c/Math.PI]}(u,a,n);return c[0]+=c[0]-u[0]>180?-360:u[0]-c[0]>180?360:0,r(c,s)}function rr(t,e,n,r,i,o){for(var s=0;s<t.length;s++){var a=t[s],u=t[s+1];s===t.length-1&&(u=t[0]),r=ir(a,u,e),n<=0&&r>0?function(t,e,n){return ir(t,e,n)<0}(e,a,i)||(i=a):n>0&&r<=0&&(function(t,e,n){return ir(t,e,n)>0}(e,a,o)||(o=a)),n=r}return[i,o]}function ir(t,e,n){return(e[0]-t[0])*(n[1]-t[1])-(n[0]-t[0])*(e[1]-t[1])}function or(t){if(!t)throw new Error("line is required");var e=t.geometry?t.geometry.type:t.type;if(!Array.isArray(t)&&"LineString"!==e)throw new Error("geometry must be a LineString");for(var n,r,i=U(t),o=0,s=1;s<i.length;)n=r||i[0],o+=((r=i[s])[0]-n[0])*(r[1]+n[1]),s++;return o>0}function sr(t,e){switch("Feature"===t.type?t.geometry.type:t.type){case"GeometryCollection":return A(t,function(t){sr(t,e)}),t;case"LineString":return ar(U(t),e),t;case"Polygon":return ur(U(t),e),t;case"MultiLineString":return U(t).forEach(function(t){ar(t,e)}),t;case"MultiPolygon":return U(t).forEach(function(t){ur(t,e)}),t;case"Point":case"MultiPoint":return t}}function ar(t,e){or(t)===e&&t.reverse()}function ur(t,e){or(t[0])!==e&&t[0].reverse();for(var n=1;n<t.length;n++)or(t[n])===e&&t[n].reverse()}function cr(t,e){if(e=e||{},!I(e))throw new Error("options is invalid");var n=e.zProperty||"elevation",r=e.flip,i=e.flags;W(t,"Point","input must contain Points");for(var o=function(t,e){var n={};O(t,function(t){var e=U(t)[1];n[e]||(n[e]=[]),n[e].push(t)});return Object.keys(n).map(function(t){var e=n[t],r=e.sort(function(t,e){return U(t)[0]-U(e)[0]});return r}).sort(function(t,n){return e?U(t[0])[1]-U(n[0])[1]:U(n[0])[1]-U(t[0])[1]})}(t,r),s=[],a=0;a<o.length;a++){for(var u=o[a],c=[],h=0;h<u.length;h++){var l=u[h];l.properties[n]?c.push(l.properties[n]):c.push(0),!0===i&&(l.properties.matrixPosition=[a,h])}s.push(c)}return s}function hr(t,e,n,r){r=r||{};for(var i=Object.keys(ks),o=0;o<i.length;o++){var s=i[o],a=r[s];a=void 0!==a&&null!==a?a:ks[s],zs[s]=a}zs.verbose&&console.log("MarchingSquaresJS-isoBands: computing isobands for ["+e+":"+(e+n)+"]");var u,c=function(t,e,n){for(var r=t.length-1,i=t[0].length-1,o={rows:r,cols:i,cells:[]},s=e+Math.abs(n),a=0;a<r;++a){o.cells[a]=[];for(var u=0;u<i;++u){var c=0,h=t[a+1][u],l=t[a+1][u+1],p=t[a][u+1],f=t[a][u];if(!(isNaN(h)||isNaN(l)||isNaN(p)||isNaN(f))){c|=h<e?0:h>s?128:64,c|=l<e?0:l>s?32:16,c|=p<e?0:p>s?8:4;var g=+(c|=f<e?0:f>s?2:1),d=0;if(17===c||18===c||33===c||34===c||38===c||68===c||72===c||98===c||102===c||132===c||136===c||137===c||152===c||153===c){var y=(h+l+p+f)/4;d=y>s?2:y<e?0:1,34===c?1===d?c=35:0===d&&(c=136):136===c?1===d?(c=35,d=4):0===d&&(c=34):17===c?1===d?(c=155,d=4):0===d&&(c=153):68===c?1===d?(c=103,d=4):0===d&&(c=102):153===c?1===d&&(c=155):102===c?1===d&&(c=103):152===c?d<2&&(c=156,d=1):137===c?d<2&&(c=139,d=1):98===c?d<2&&(c=99,d=1):38===c?d<2&&(c=39,d=1):18===c?d>0?(c=156,d=4):c=152:33===c?d>0?(c=139,d=4):c=137:72===c?d>0?(c=99,d=4):c=98:132===c&&(d>0?(c=39,d=4):c=38)}if(0!=c&&170!=c){var _,m,v,x,E,w,b,I;_=m=v=x=E=w=b=I=.5;var N=[];1===c?(v=1-lr(e,p,f),I=1-lr(e,h,f),N.push(Sa[c])):169===c?(v=lr(s,f,p),I=lr(s,f,h),N.push(Sa[c])):4===c?(w=1-lr(e,l,p),x=lr(e,f,p),N.push(Na[c])):166===c?(w=lr(s,p,l),x=1-lr(s,p,f),N.push(Na[c])):16===c?(E=lr(e,p,l),m=lr(e,h,l),N.push(Ia[c])):154===c?(E=1-lr(s,l,p),m=1-lr(s,l,h),N.push(Ia[c])):64===c?(b=lr(e,f,h),_=1-lr(e,l,h),N.push(La[c])):106===c?(b=1-lr(s,h,f),_=lr(s,h,l),N.push(La[c])):168===c?(x=lr(s,f,p),v=lr(e,f,p),I=lr(e,f,h),b=lr(s,f,h),N.push(Ca[c]),N.push(Sa[c])):2===c?(x=1-lr(e,p,f),v=1-lr(s,p,f),I=1-lr(s,h,f),b=1-lr(e,h,f),N.push(Ca[c]),N.push(Sa[c])):162===c?(E=lr(s,p,l),w=lr(e,p,l),x=1-lr(e,p,f),v=1-lr(s,p,f),N.push(Ca[c]),N.push(Sa[c])):8===c?(E=1-lr(e,l,p),w=1-lr(s,l,p),x=lr(s,f,p),v=lr(e,f,p),N.push(Ia[c]),N.push(Na[c])):138===c?(E=1-lr(e,l,p),w=1-lr(s,l,p),_=1-lr(s,l,h),m=1-lr(e,l,h),N.push(Ia[c]),N.push(Na[c])):32===c?(E=lr(s,p,l),w=lr(e,p,l),_=lr(e,h,l),m=lr(s,h,l),N.push(Ia[c]),N.push(Na[c])):42===c?(I=1-lr(s,h,f),b=1-lr(e,h,f),_=lr(e,h,l),m=lr(s,h,l),N.push(Ma[c]),N.push(La[c])):128===c&&(I=lr(e,f,h),b=lr(s,f,h),_=1-lr(s,l,h),m=1-lr(e,l,h),N.push(Ma[c]),N.push(La[c])),5===c?(w=1-lr(e,l,p),I=1-lr(e,h,f),N.push(Na[c])):165===c?(w=lr(s,p,l),I=lr(s,f,h),N.push(Na[c])):20===c?(x=lr(e,f,p),m=lr(e,h,l),N.push(Ca[c])):150===c?(x=1-lr(s,p,f),m=1-lr(s,l,h),N.push(Ca[c])):80===c?(E=lr(e,p,l),b=lr(e,f,h),N.push(Ia[c])):90===c?(E=1-lr(s,l,p),b=1-lr(s,h,f),N.push(Ia[c])):65===c?(v=1-lr(e,p,f),_=1-lr(e,l,h),N.push(Sa[c])):105===c?(v=lr(s,f,p),_=lr(s,h,l),N.push(Sa[c])):160===c?(E=lr(s,p,l),w=lr(e,p,l),I=lr(e,f,h),b=lr(s,f,h),N.push(Ia[c]),N.push(Na[c])):10===c?(E=1-lr(e,l,p),w=1-lr(s,l,p),I=1-lr(s,h,f),b=1-lr(e,h,f),N.push(Ia[c]),N.push(Na[c])):130===c?(x=1-lr(e,p,f),v=1-lr(s,p,f),_=1-lr(s,l,h),m=1-lr(e,l,h),N.push(Ca[c]),N.push(Sa[c])):40===c?(x=lr(s,f,p),v=lr(e,f,p),_=lr(e,h,l),m=lr(s,h,l),N.push(Ca[c]),N.push(Sa[c])):101===c?(w=lr(s,p,l),_=lr(s,h,l),N.push(Na[c])):69===c?(w=1-lr(e,l,p),_=1-lr(e,l,h),N.push(Na[c])):149===c?(I=lr(s,f,h),m=1-lr(s,l,h),N.push(Ma[c])):21===c?(I=1-lr(e,h,f),m=lr(e,h,l),N.push(Ma[c])):86===c?(x=1-lr(s,p,f),b=1-lr(s,h,f),N.push(Ca[c])):84===c?(x=lr(e,f,p),b=lr(e,f,h),N.push(Ca[c])):89===c?(E=1-lr(s,l,p),v=lr(s,f,p),N.push(Sa[c])):81===c?(E=lr(e,p,l),v=1-lr(e,p,f),N.push(Sa[c])):96===c?(E=lr(s,p,l),w=lr(e,p,l),b=lr(e,f,h),_=lr(s,h,l),N.push(Ia[c]),N.push(Na[c])):74===c?(E=1-lr(e,l,p),w=1-lr(s,l,p),b=1-lr(s,h,f),_=1-lr(e,l,h),N.push(Ia[c]),N.push(Na[c])):24===c?(E=1-lr(s,l,p),x=lr(s,f,p),v=lr(e,f,p),m=lr(e,h,l),N.push(Ia[c]),N.push(Sa[c])):146===c?(E=lr(e,p,l),x=1-lr(e,p,f),v=1-lr(s,p,f),m=1-lr(s,l,h),N.push(Ia[c]),N.push(Sa[c])):6===c?(w=1-lr(e,l,p),x=1-lr(s,p,f),I=1-lr(s,h,f),b=1-lr(e,h,f),N.push(Na[c]),N.push(Ca[c])):164===c?(w=lr(s,p,l),x=lr(e,f,p),I=lr(e,f,h),b=lr(s,f,h),N.push(Na[c]),N.push(Ca[c])):129===c?(v=1-lr(e,p,f),I=lr(s,f,h),_=1-lr(s,l,h),m=1-lr(e,l,h),N.push(Sa[c]),N.push(Ma[c])):41===c?(v=lr(s,f,p),I=1-lr(e,h,f),_=lr(e,h,l),m=lr(s,h,l),N.push(Sa[c]),N.push(Ma[c])):66===c?(x=1-lr(e,p,f),v=1-lr(s,p,f),b=1-lr(s,h,f),_=1-lr(e,l,h),N.push(Ca[c]),N.push(Sa[c])):104===c?(x=lr(s,f,p),v=lr(e,f,p),b=lr(e,f,h),_=lr(s,h,l),N.push(Sa[c]),N.push(Pa[c])):144===c?(E=lr(e,p,l),I=lr(e,f,h),b=lr(s,f,h),m=1-lr(s,l,h),N.push(Ia[c]),N.push(La[c])):26===c?(E=1-lr(s,l,p),I=1-lr(s,h,f),b=1-lr(e,h,f),m=lr(e,h,l),N.push(Ia[c]),N.push(La[c])):36===c?(w=lr(s,p,l),x=lr(e,f,p),_=lr(e,h,l),m=lr(s,h,l),N.push(Na[c]),N.push(Ca[c])):134===c?(w=1-lr(e,l,p),x=1-lr(s,p,f),_=1-lr(s,l,h),m=1-lr(e,l,h),N.push(Na[c]),N.push(Ca[c])):9===c?(E=1-lr(e,l,p),w=1-lr(s,l,p),v=lr(s,f,p),I=1-lr(e,h,f),N.push(Ia[c]),N.push(Na[c])):161===c?(E=lr(s,p,l),w=lr(e,p,l),v=1-lr(e,p,f),I=lr(s,f,h),N.push(Ia[c]),N.push(Na[c])):37===c?(w=lr(s,p,l),I=1-lr(e,h,f),_=lr(e,h,l),m=lr(s,h,l),N.push(Na[c]),N.push(Ma[c])):133===c?(w=1-lr(e,l,p),I=lr(s,f,h),_=1-lr(s,l,h),m=1-lr(e,l,h),N.push(Na[c]),N.push(Ma[c])):148===c?(x=lr(e,f,p),I=lr(e,f,h),b=lr(s,f,h),m=1-lr(s,l,h),N.push(Ca[c]),N.push(La[c])):22===c?(x=1-lr(s,p,f),I=1-lr(s,h,f),b=1-lr(e,h,f),m=lr(e,h,l),N.push(Ca[c]),N.push(La[c])):82===c?(E=lr(e,p,l),x=1-lr(e,p,f),v=1-lr(s,p,f),b=1-lr(s,h,f),N.push(Ia[c]),N.push(Sa[c])):88===c?(E=1-lr(s,l,p),x=lr(s,f,p),v=lr(e,f,p),b=lr(e,f,h),N.push(Ia[c]),N.push(Sa[c])):73===c?(E=1-lr(e,l,p),w=1-lr(s,l,p),v=lr(s,f,p),_=1-lr(e,l,h),N.push(Ia[c]),N.push(Na[c])):97===c?(E=lr(s,p,l),w=lr(e,p,l),v=1-lr(e,p,f),_=lr(s,h,l),N.push(Ia[c]),N.push(Na[c])):145===c?(E=lr(e,p,l),v=1-lr(e,p,f),I=lr(s,f,h),m=1-lr(s,l,h),N.push(Ia[c]),N.push(Ma[c])):25===c?(E=1-lr(s,l,p),v=lr(s,f,p),I=1-lr(e,h,f),m=lr(e,h,l),N.push(Ia[c]),N.push(Ma[c])):70===c?(w=1-lr(e,l,p),x=1-lr(s,p,f),b=1-lr(s,h,f),_=1-lr(e,l,h),N.push(Na[c]),N.push(Ca[c])):100===c?(w=lr(s,p,l),x=lr(e,f,p),b=lr(e,f,h),_=lr(s,h,l),N.push(Na[c]),N.push(Ca[c])):34===c?(0===d?(E=1-lr(e,l,p),w=1-lr(s,l,p),x=lr(s,f,p),v=lr(e,f,p),I=lr(e,f,h),b=lr(s,f,h),_=1-lr(s,l,h),m=1-lr(e,l,h)):(E=lr(s,p,l),w=lr(e,p,l),x=1-lr(e,p,f),v=1-lr(s,p,f),I=1-lr(s,h,f),b=1-lr(e,h,f),_=lr(e,h,l),m=lr(s,h,l)),N.push(Ia[c]),N.push(Na[c]),N.push(Ma[c]),N.push(La[c])):35===c?(4===d?(E=1-lr(e,l,p),w=1-lr(s,l,p),x=lr(s,f,p),v=lr(e,f,p),I=lr(e,f,h),b=lr(s,f,h),_=1-lr(s,l,h),m=1-lr(e,l,h)):(E=lr(s,p,l),w=lr(e,p,l),x=1-lr(e,p,f),v=1-lr(s,p,f),I=1-lr(s,h,f),b=1-lr(e,h,f),_=lr(e,h,l),m=lr(s,h,l)),N.push(Ia[c]),N.push(Na[c]),N.push(Sa[c]),N.push(La[c])):136===c?(0===d?(E=lr(s,p,l),w=lr(e,p,l),x=1-lr(e,p,f),v=1-lr(s,p,f),I=1-lr(s,h,f),b=1-lr(e,h,f),_=lr(e,h,l),m=lr(s,h,l)):(E=1-lr(e,l,p),w=1-lr(s,l,p),x=lr(s,f,p),v=lr(e,f,p),I=lr(e,f,h),b=lr(s,f,h),_=1-lr(s,l,h),m=1-lr(e,l,h)),N.push(Ia[c]),N.push(Na[c]),N.push(Ma[c]),N.push(La[c])):153===c?(0===d?(E=lr(e,p,l),v=1-lr(e,p,f),I=1-lr(e,h,f),m=lr(e,h,l)):(E=1-lr(s,l,p),v=lr(s,f,p),I=lr(s,f,h),m=1-lr(s,l,h)),N.push(Ia[c]),N.push(Sa[c])):102===c?(0===d?(w=1-lr(e,l,p),x=lr(e,f,p),b=lr(e,f,h),_=1-lr(e,l,h)):(w=lr(s,p,l),x=1-lr(s,p,f),b=1-lr(s,h,f),_=lr(s,h,l)),N.push(Na[c]),N.push(La[c])):155===c?(4===d?(E=lr(e,p,l),v=1-lr(e,p,f),I=1-lr(e,h,f),m=lr(e,h,l)):(E=1-lr(s,l,p),v=lr(s,f,p),I=lr(s,f,h),m=1-lr(s,l,h)),N.push(Ia[c]),N.push(Ma[c])):103===c?(4===d?(w=1-lr(e,l,p),x=lr(e,f,p),b=lr(e,f,h),_=1-lr(e,l,h)):(w=lr(s,p,l),x=1-lr(s,p,f),b=1-lr(s,h,f),_=lr(s,h,l)),N.push(Na[c]),N.push(Ca[c])):152===c?(0===d?(E=lr(e,p,l),x=1-lr(e,p,f),v=1-lr(s,p,f),I=1-lr(s,h,f),b=1-lr(e,h,f),m=lr(e,h,l)):(E=1-lr(s,l,p),x=lr(s,f,p),v=lr(e,f,p),I=lr(e,f,h),b=lr(s,f,h),m=1-lr(s,l,h)),N.push(Ia[c]),N.push(Ca[c]),N.push(Sa[c])):156===c?(4===d?(E=lr(e,p,l),x=1-lr(e,p,f),v=1-lr(s,p,f),I=1-lr(s,h,f),b=1-lr(e,h,f),m=lr(e,h,l)):(E=1-lr(s,l,p),x=lr(s,f,p),v=lr(e,f,p),I=lr(e,f,h),b=lr(s,f,h),m=1-lr(s,l,h)),N.push(Ia[c]),N.push(Sa[c]),N.push(La[c])):137===c?(0===d?(E=lr(s,p,l),w=lr(e,p,l),v=1-lr(e,p,f),I=1-lr(e,h,f),_=lr(e,h,l),m=lr(s,h,l)):(E=1-lr(e,l,p),w=1-lr(s,l,p),v=lr(s,f,p),I=lr(s,f,h),_=1-lr(s,l,h),m=1-lr(e,l,h)),N.push(Ia[c]),N.push(Na[c]),N.push(Sa[c])):139===c?(4===d?(E=lr(s,p,l),w=lr(e,p,l),v=1-lr(e,p,f),I=1-lr(e,h,f),_=lr(e,h,l),m=lr(s,h,l)):(E=1-lr(e,l,p),w=1-lr(s,l,p),v=lr(s,f,p),I=lr(s,f,h),_=1-lr(s,l,h),m=1-lr(e,l,h)),N.push(Ia[c]),N.push(Na[c]),N.push(Ma[c])):98===c?(0===d?(E=1-lr(e,l,p),w=1-lr(s,l,p),x=lr(s,f,p),v=lr(e,f,p),b=lr(e,f,h),_=1-lr(e,l,h)):(E=lr(s,p,l),w=lr(e,p,l),x=1-lr(e,p,f),v=1-lr(s,p,f),b=1-lr(s,h,f),_=lr(s,h,l)),N.push(Ia[c]),N.push(Na[c]),N.push(La[c])):99===c?(4===d?(E=1-lr(e,l,p),w=1-lr(s,l,p),x=lr(s,f,p),v=lr(e,f,p),b=lr(e,f,h),_=1-lr(e,l,h)):(E=lr(s,p,l),w=lr(e,p,l),x=1-lr(e,p,f),v=1-lr(s,p,f),b=1-lr(s,h,f),_=lr(s,h,l)),N.push(Ia[c]),N.push(Na[c]),N.push(Sa[c])):38===c?(0===d?(w=1-lr(e,l,p),x=lr(e,f,p),I=lr(e,f,h),b=lr(s,f,h),_=1-lr(s,l,h),m=1-lr(e,l,h)):(w=lr(s,p,l),x=1-lr(s,p,f),I=1-lr(s,h,f),b=1-lr(e,h,f),_=lr(e,h,l),m=lr(s,h,l)),N.push(Na[c]),N.push(Ma[c]),N.push(La[c])):39===c?(4===d?(w=1-lr(e,l,p),x=lr(e,f,p),I=lr(e,f,h),b=lr(s,f,h),_=1-lr(s,l,h),m=1-lr(e,l,h)):(w=lr(s,p,l),x=1-lr(s,p,f),I=1-lr(s,h,f),b=1-lr(e,h,f),_=lr(e,h,l),m=lr(s,h,l)),N.push(Na[c]),N.push(Ca[c]),N.push(La[c])):85===c&&(E=1,w=0,x=1,v=0,I=0,b=1,_=0,m=1),(_<0||_>1||m<0||m>1||E<0||E>1||x<0||x>1||I<0||I>1||b<0||b>1)&&console.log("MarchingSquaresJS-isoBands: "+c+" "+g+" "+h+","+l+","+p+","+f+" "+d+" "+_+" "+m+" "+E+" "+w+" "+x+" "+v+" "+I+" "+b),o.cells[a][u]={cval:c,cval_real:g,flipped:d,topleft:_,topright:m,righttop:E,rightbottom:w,bottomright:x,bottomleft:v,leftbottom:I,lefttop:b,edges:N}}}}}return o}(t,e,n);return zs.polygons?(zs.verbose&&console.log("MarchingSquaresJS-isoBands: returning single polygons for each grid cell"),u=function(t){var e=[],n=0;return t.cells.forEach(function(t,r){t.forEach(function(t,i){if(void 0!==t){var o=Ra[t.cval](t);"object"==typeof o&&pr(o)?"object"==typeof o[0]&&pr(o[0])?"object"==typeof o[0][0]&&pr(o[0][0])?o.forEach(function(t){t.forEach(function(t){t[0]+=i,t[1]+=r}),e[n++]=t}):(o.forEach(function(t){t[0]+=i,t[1]+=r}),e[n++]=o):console.log("MarchingSquaresJS-isoBands: bandcell polygon with malformed coordinates"):console.log("MarchingSquaresJS-isoBands: bandcell polygon with null coordinates")}})}),e}(c)):(zs.verbose&&console.log("MarchingSquaresJS-isoBands: returning polygon paths for entire data grid"),u=function(t){for(var e=[],n=t.rows,r=t.cols,i=[],o=0;o<n;o++)for(var s=0;s<r;s++)if(void 0!==t.cells[o][s]&&t.cells[o][s].edges.length>0){var a=t.cells[o][s],u=function(t){if(t.edges.length>0){var e=t.edges[t.edges.length-1],n=t.cval_real;switch(e){case 0:return n&Xs?{p:[1,t.righttop],x:-1,y:0,o:1}:{p:[t.topleft,1],x:0,y:-1,o:0};case 1:return n&Us?{p:[t.topleft,1],x:0,y:-1,o:0}:{p:[1,t.rightbottom],x:-1,y:0,o:0};case 2:return n&Us?{p:[t.bottomright,0],x:0,y:1,o:1}:{p:[t.topleft,1],x:0,y:-1,o:0};case 3:return n&Ys?{p:[t.topleft,1],x:0,y:-1,o:0}:{p:[t.bottomleft,0],x:0,y:1,o:0};case 4:return n&Xs?{p:[1,t.righttop],x:-1,y:0,o:1}:{p:[t.topright,1],x:0,y:-1,o:1};case 5:return n&Us?{p:[t.topright,1],x:0,y:-1,o:1}:{p:[1,t.rightbottom],x:-1,y:0,o:0};case 6:return n&Us?{p:[t.bottomright,0],x:0,y:1,o:1}:{p:[t.topright,1],x:0,y:-1,o:1};case 7:return n&Ys?{p:[t.topright,1],x:0,y:-1,o:1}:{p:[t.bottomleft,0],x:0,y:1,o:0};case 8:return n&Us?{p:[t.bottomright,0],x:0,y:1,o:1}:{p:[1,t.righttop],x:-1,y:0,o:1};case 9:return n&Ys?{p:[1,t.righttop],x:-1,y:0,o:1}:{p:[t.bottomleft,0],x:0,y:1,o:0};case 10:return n&Ys?{p:[0,t.leftbottom],x:1,y:0,o:0}:{p:[1,t.righttop],x:-1,y:0,o:1};case 11:return n&js?{p:[1,t.righttop],x:-1,y:0,o:1}:{p:[0,t.lefttop],x:1,y:0,o:1};case 12:return n&Us?{p:[t.bottomright,0],x:0,y:1,o:1}:{p:[1,t.rightbottom],x:-1,y:0,o:0};case 13:return n&Ys?{p:[1,t.rightbottom],x:-1,y:0,o:0}:{p:[t.bottomleft,0],x:0,y:1,o:0};case 14:return n&Ys?{p:[0,t.leftbottom],x:1,y:0,o:0}:{p:[1,t.rightbottom],x:-1,y:0,o:0};case 15:return n&js?{p:[1,t.rightbottom],x:-1,y:0,o:0}:{p:[0,t.lefttop],x:1,y:0,o:1};case 16:return n&Us?{p:[t.bottomright,0],x:0,y:1,o:1}:{p:[0,t.leftbottom],x:1,y:0,o:0};case 17:return n&js?{p:[t.bottomright,0],x:0,y:1,o:1}:{p:[0,t.lefttop],x:1,y:0,o:1};case 18:return n&Ys?{p:[0,t.leftbottom],x:1,y:0,o:0}:{p:[t.bottomleft,0],x:0,y:1,o:0};case 19:return n&js?{p:[t.bottomleft,0],x:0,y:1,o:0}:{p:[0,t.lefttop],x:1,y:0,o:1};case 20:return n&js?{p:[t.topleft,1],x:0,y:-1,o:0}:{p:[0,t.leftbottom],x:1,y:0,o:0};case 21:return n&Xs?{p:[0,t.leftbottom],x:1,y:0,o:0}:{p:[t.topright,1],x:0,y:-1,o:1};case 22:return n&js?{p:[t.topleft,1],x:0,y:-1,o:0}:{p:[0,t.lefttop],x:1,y:0,o:1};case 23:return n&Xs?{p:[0,t.lefttop],x:1,y:0,o:1}:{p:[t.topright,1],x:0,y:-1,o:1};default:console.log("MarchingSquaresJS-isoBands: edge index out of range!"),console.log(t)}}return null}(a),c=null,h=s,l=o;null!==u&&i.push([u.p[0]+h,u.p[1]+l]);do{if(null===(c=function(t,e,n,r){var i,o,s,a,u,c=t.cval;switch(e){case-1:switch(r){case 0:i=Na[c],s=ea[c],a=na[c],u=ra[c];break;default:i=Ia[c],s=Qs[c],a=$s[c],u=ta[c]}break;case 1:switch(r){case 0:i=Ma[c],s=fa[c],a=ga[c],u=da[c];break;default:i=La[c],s=ha[c],a=la[c],u=pa[c]}break;default:switch(n){case-1:switch(r){case 0:i=Pa[c],s=Vs[c],a=Hs[c],u=Ws[c];break;default:i=Oa[c],s=Js[c],a=Zs[c],u=Ks[c]}break;case 1:switch(r){case 0:i=Sa[c],s=ia[c],a=oa[c],u=sa[c];break;default:i=Ca[c],s=aa[c],a=ua[c],u=ca[c]}}}{if(o=t.edges.indexOf(i),void 0===t.edges[o])return null;!function(t,e){delete t.edges[e];for(var n=e+1;n<t.edges.length;n++)t.edges[n-1]=t.edges[n];t.edges.pop()}(t,o)}switch(c=t.cval_real,i){case 0:c&Xs?(e=t.topleft,n=1):(e=1,n=t.righttop);break;case 1:c&Us?(e=1,n=t.rightbottom):(e=t.topleft,n=1);break;case 2:c&Us?(e=t.topleft,n=1):(e=t.bottomright,n=0);break;case 3:c&Ys?(e=t.bottomleft,n=0):(e=t.topleft,n=1);break;case 4:c&Xs?(e=t.topright,n=1):(e=1,n=t.righttop);break;case 5:c&Us?(e=1,n=t.rightbottom):(e=t.topright,n=1);break;case 6:c&Us?(e=t.topright,n=1):(e=t.bottomright,n=0);break;case 7:c&Ys?(e=t.bottomleft,n=0):(e=t.topright,n=1);break;case 8:c&Us?(e=1,n=t.righttop):(e=t.bottomright,n=0);break;case 9:c&Ys?(e=t.bottomleft,n=0):(e=1,n=t.righttop);break;case 10:c&Ys?(e=1,n=t.righttop):(e=0,n=t.leftbottom);break;case 11:c&js?(e=0,n=t.lefttop):(e=1,n=t.righttop);break;case 12:c&Us?(e=1,n=t.rightbottom):(e=t.bottomright,n=0);break;case 13:c&Ys?(e=t.bottomleft,n=0):(e=1,n=t.rightbottom);break;case 14:c&Ys?(e=1,n=t.rightbottom):(e=0,n=t.leftbottom);break;case 15:c&js?(e=0,n=t.lefttop):(e=1,n=t.rightbottom);break;case 16:c&Us?(e=0,n=t.leftbottom):(e=t.bottomright,n=0);break;case 17:c&js?(e=0,n=t.lefttop):(e=t.bottomright,n=0);break;case 18:c&Ys?(e=t.bottomleft,n=0):(e=0,n=t.leftbottom);break;case 19:c&js?(e=0,n=t.lefttop):(e=t.bottomleft,n=0);break;case 20:c&js?(e=0,n=t.leftbottom):(e=t.topleft,n=1);break;case 21:c&Xs?(e=t.topright,n=1):(e=0,n=t.leftbottom);break;case 22:c&js?(e=0,n=t.lefttop):(e=t.topleft,n=1);break;case 23:c&Xs?(e=t.topright,n=1):(e=0,n=t.lefttop);break;default:return console.log("MarchingSquaresJS-isoBands: edge index out of range!"),console.log(t),null}void 0!==e&&void 0!==n&&void 0!==s&&void 0!==a&&void 0!==u||(console.log("MarchingSquaresJS-isoBands: undefined value!"),console.log(t),console.log(e+" "+n+" "+s+" "+a+" "+u));return{p:[e,n],x:s,y:a,o:u}}(t.cells[l][h],u.x,u.y,u.o)))break;if(i.push([c.p[0]+h,c.p[1]+l]),h+=c.x,l+=c.y,u=c,l<0||l>=n||h<0||h>=r||void 0===t.cells[l][h]){h-=c.x,l-=c.y;var p=function(t,e,n,r,i,o){var s=t.cells[n][e],a=s.cval_real,u=e+r,c=n+i,h=[],l=!1;for(;!l;){if(void 0===t.cells[c]||void 0===t.cells[c][u])if(c-=i,u-=r,s=t.cells[c][u],a=s.cval_real,-1===i)if(0===o)if(a&Ys)h.push([u,c]),r=-1,i=0,o=0;else{if(!(a&Us)){h.push([u+s.bottomright,c]),r=0,i=1,o=1,l=!0;break}h.push([u+1,c]),r=1,i=0,o=0}else{if(!(a&Ys)){if(a&Us){h.push([u+s.bottomright,c]),r=0,i=1,o=1,l=!0;break}h.push([u+s.bottomleft,c]),r=0,i=1,o=0,l=!0;break}h.push([u,c]),r=-1,i=0,o=0}else if(1===i)if(0===o){if(!(a&Xs)){if(a&js){h.push([u+s.topleft,c+1]),r=0,i=-1,o=0,l=!0;break}h.push([u+s.topright,c+1]),r=0,i=-1,o=1,l=!0;break}h.push([u+1,c+1]),r=1,i=0,o=1}else h.push([u+1,c+1]),r=1,i=0,o=1;else if(-1===r)if(0===o){if(!(a&js)){if(a&Ys){h.push([u,c+s.leftbottom]),r=1,i=0,o=0,l=!0;break}h.push([u,c+s.lefttop]),r=1,i=0,o=1,l=!0;break}h.push([u,c+1]),r=0,i=1,o=0}else{if(!(a&js)){console.log("MarchingSquaresJS-isoBands: wtf");break}h.push([u,c+1]),r=0,i=1,o=0}else{if(1!==r){console.log("MarchingSquaresJS-isoBands: we came from nowhere!");break}if(0===o){if(!(a&Us)){h.push([u+1,c+s.rightbottom]),r=-1,i=0,o=0,l=!0;break}h.push([u+1,c]),r=0,i=-1,o=1}else{if(!(a&Us)){if(a&Xs){h.push([u+1,c+s.righttop]),r=-1,i=0,o=1;break}h.push([u+1,c+s.rightbottom]),r=-1,i=0,o=0,l=!0;break}h.push([u+1,c]),r=0,i=-1,o=1}}else if(s=t.cells[c][u],a=s.cval_real,-1===r)if(0===o)if(void 0!==t.cells[c-1]&&void 0!==t.cells[c-1][u])r=0,i=-1,o=1;else{if(!(a&Ys)){h.push([u+s.bottomright,c]),r=0,i=1,o=1,l=!0;break}h.push([u,c])}else{if(!(a&js)){console.log("MarchingSquaresJS-isoBands: found entry from top at "+u+","+c);break}console.log("MarchingSquaresJS-isoBands: proceeding in x-direction!")}else if(1===r){if(0===o){console.log("MarchingSquaresJS-isoBands: wtf");break}if(void 0!==t.cells[c+1]&&void 0!==t.cells[c+1][u])r=0,i=1,o=0;else{if(!(a&Xs)){h.push([u+s.topleft,c+1]),r=0,i=-1,o=0,l=!0;break}h.push([u+1,c+1]),r=1,i=0,o=1}}else if(-1===i){if(1!==o){console.log("MarchingSquaresJS-isoBands: wtf");break}if(void 0!==t.cells[c][u+1])r=1,i=0,o=1;else{if(!(a&Us)){h.push([u+1,c+s.righttop]),r=-1,i=0,o=1,l=!0;break}h.push([u+1,c]),r=0,i=-1,o=1}}else{if(1!==i){console.log("MarchingSquaresJS-isoBands: where did we came from???");break}if(0!==o){console.log("MarchingSquaresJS-isoBands: wtf");break}if(void 0!==t.cells[c][u-1])r=-1,i=0,o=0;else{if(!(a&js)){h.push([u,c+s.leftbottom]),r=1,i=0,o=0,l=!0;break}h.push([u,c+1]),r=0,i=1,o=0}}if(u+=r,c+=i,u===e&&c===n)break}return{path:h,i:u,j:c,x:r,y:i,o:o}}(t,h,l,c.x,c.y,c.o);if(null===p)break;p.path.forEach(function(t){i.push(t)}),h=p.i,l=p.j,u=p}}while(void 0!==t.cells[l][h]&&t.cells[l][h].edges.length>0);e.push(i),i=[],t.cells[o][s].edges.length>0&&s--}return e}(c)),"function"==typeof zs.successCallback&&zs.successCallback(u),u}function lr(t,e,n){return(t-e)/(n-e)}function pr(t){return t.constructor.toString().indexOf("Array")>-1}function fr(t,e,n){if(n=n||{},!I(n))throw new Error("options is invalid");var r=n.pivot,i=n.mutate;if(!t)throw new Error("geojson is required");if(void 0===e||null===e||isNaN(e))throw new Error("angle is required");return 0===e?t:(r||(r=ye(t)),!1!==i&&void 0!==i||(t=Gt(t)),S(t,function(t){var n=sn(r,t)+e,i=un(r,t),o=U(nr(r,i,n));t[0]=o[0],t[1]=o[1]}),t)}function gr(t,e,n){if(n=n||{},!I(n))throw new Error("options is invalid");var r=n.origin,i=n.mutate;if(!t)throw new Error("geojson required");if("number"!=typeof e||0===e)throw new Error("invalid factor");var o=Array.isArray(r)||"object"==typeof r;return!0!==i&&(t=Gt(t)),"FeatureCollection"!==t.type||o?dr(t,e,r):(O(t,function(n,i){t.features[i]=dr(n,e,r)}),t)}function dr(t,e,n){var i="Point"===K(t);return n=function(t,e){void 0!==e&&null!==e||(e="centroid");if(Array.isArray(e)||"object"==typeof e)return X(e);var n=t.bbox?t.bbox:j(t),i=n[0],o=n[1],s=n[2],a=n[3];switch(e){case"sw":case"southwest":case"westsouth":case"bottomleft":return r([i,o]);case"se":case"southeast":case"eastsouth":case"bottomright":return r([s,o]);case"nw":case"northwest":case"westnorth":case"topleft":return r([i,a]);case"ne":case"northeast":case"eastnorth":case"topright":return r([s,a]);case"center":return de(t);case void 0:case null:case"centroid":return ye(t);default:throw new Error("invalid origin")}}(t,n),1===e||i?t:(S(t,function(t){var r=un(n,t),i=sn(n,t),o=U(nr(n,r*e,i));t[0]=o[0],t[1]=o[1],3===t.length&&(t[2]*=e)}),t)}function yr(t){var e=t[0],n=t[1];return[n[0]-e[0],n[1]-e[1]]}function _r(t,e){return t[0]*e[1]-e[0]*t[1]}function mr(t,e){return!function(t,e){return 0===_r(yr(t),yr(e))}(t,e)&&function(t,e){var n=t[0],r=yr(t),i=e[0],o=yr(e),s=_r(r,o);return function(t,e){return[t[0]+e[0],t[1]+e[1]]}(n,function(t,e){return[t*e[0],t*e[1]]}(_r(function(t,e){return[t[0]-e[0],t[1]-e[1]]}(i,n),o)/s,r))}(t,e)}function vr(t,e,n){var r=[],i=_(e,n),o=U(t),s=[];return o.forEach(function(t,e){if(e!==o.length-1){var n=function(t,e,n){var r=Math.sqrt((t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1])),i=t[0]+n*(e[1]-t[1])/r,o=e[0]+n*(e[1]-t[1])/r,s=t[1]+n*(t[0]-e[0])/r,a=e[1]+n*(t[0]-e[0])/r;return[[i,s],[o,a]]}(t,o[e+1],i);if(r.push(n),e>0){var a=r[e-1],u=mr(n,a);!1!==u&&(a[1]=u,n[0]=u),s.push(a[0]),e===o.length-2&&(s.push(n[0]),s.push(n[1]))}2===o.length&&(s.push(n[0]),s.push(n[1]))}}),a(s,t.properties)}function xr(t,e,n){var r=e[0]-t[0],i=e[1]-t[1],o=n[0]-e[0],s=n[1]-e[1];return Math.sign(r*s-o*i)}function Er(t,e){return e.geometry.coordinates[0].every(function(e){return Pt(r(e),t)})}function wr(t,e){for(var n=0;n<t.coordinates.length-1;n++)if(function(t,e,n){var r=n[0]-t[0],i=n[1]-t[1],o=e[0]-t[0],s=e[1]-t[1];if(r*s-i*o!=0)return!1;return Math.abs(o)>=Math.abs(s)?o>0?t[0]<=n[0]&&n[0]<=e[0]:e[0]<=n[0]&&n[0]<=t[0]:s>0?t[1]<=n[1]&&n[1]<=e[1]:e[1]<=n[1]&&n[1]<=t[1]}(t.coordinates[n],t.coordinates[n+1],e.coordinates))return!0;return!1}function br(t,e){return nn(e,kn(t)).features.length>0}function Ir(t,e){return!(t[0]>e[0])&&(!(t[2]<e[2])&&(!(t[1]>e[1])&&!(t[3]<e[3])))}function Nr(t,e){return t[0]===e[0]&&t[1]===e[1]}function Cr(t,e){for(var n=!1,r=!1,i=t.coordinates.length,o=0;o<i&&!n&&!r;){for(var s=0;s<e.coordinates.length-1;s++){var a=!0;0!==s&&s!==e.coordinates.length-2||(a=!1),Lr(e.coordinates[s],e.coordinates[s+1],t.coordinates[o],a)?n=!0:r=!0}o++}return n&&r}function Sr(t,e){return nn(t,kn(e)).features.length>0}function Mr(t,e){for(var n=!1,i=!1,o=t.coordinates[0].length,s=0;s<o&&n&&i;)Pt(r(t.coordinates[0][s]),e)?n=!0:i=!0,s++;return i&&i}function Lr(t,e,n,r){var i=n[0]-t[0],o=n[1]-t[1],s=e[0]-t[0],a=e[1]-t[1];return 0==i*a-o*s&&(r?Math.abs(s)>=Math.abs(a)?s>0?t[0]<=n[0]&&n[0]<=e[0]:e[0]<=n[0]&&n[0]<=t[0]:a>0?t[1]<=n[1]&&n[1]<=e[1]:e[1]<=n[1]&&n[1]<=t[1]:Math.abs(s)>=Math.abs(a)?s>0?t[0]<n[0]&&n[0]<e[0]:e[0]<n[0]&&n[0]<t[0]:a>0?t[1]<n[1]&&n[1]<e[1]:e[1]<n[1]&&n[1]<t[1])}function Pr(t){return t.coordinates.map(function(e){return{type:t.type.replace("Multi",""),coordinates:e}})}function Or(t,e){return t.hasOwnProperty("coordinates")?t.coordinates.length===e.coordinates.length:t.length===e.length}function Rr(t,e){return ka(t,e,{strict:!0})}function Tr(t,e){if(!t)throw new Error("feature1 is required");if(!e)throw new Error("feature2 is required");var n=K(t);if(n!==K(e))throw new Error("features must be of the same type");if("Point"===n)throw new Error("Point geometry not supported");if(new ja({precision:6}).compare(t,e))return!1;var r=0;switch(n){case"MultiPoint":var i=T(t),o=T(e);i.forEach(function(t){o.forEach(function(e){t[0]===e[0]&&t[1]===e[1]&&r++})});break;case"LineString":case"MultiLineString":G(t,function(t){G(e,function(e){$n(t,e).features.length&&r++})});break;case"Polygon":case"MultiPolygon":G(t,function(t){G(e,function(e){nn(t,e).features.length&&r++})})}return r>0}function Ar(t,e,n){n=n||[];for(var r=0;r<t;r++)n[r]=e;return n}function Dr(t,e){if(t.geometry&&t.geometry.type)return t.geometry.type;if(t.type)return t.type;throw new Error("Invalid GeoJSON object for "+e)}function Fr(t){for(var e=t,n=[];e.parent;)n.unshift(e),e=e.parent;return n}function qr(t,e){e=e||{},this.nodes=[],this.diagonal=!!e.diagonal,this.grid=[];for(var n=0;n<t.length;n++){this.grid[n]=[];for(var r=0,i=t[n];r<i.length;r++){var o=new Gr(n,r,i[r]);this.grid[n][r]=o,this.nodes.push(o)}}this.init()}function Gr(t,e,n){this.x=t,this.y=e,this.weight=n}function Br(t){this.content=[],this.scoreFunction=t}function kr(t){return t[0]}function zr(t){return t[1]}function jr(){this._=null}function Xr(t){t.U=t.C=t.L=t.R=t.P=t.N=null}function Ur(t,e){var n=e,r=e.R,i=n.U;i?i.L===n?i.L=r:i.R=r:t._=r,r.U=i,n.U=r,n.R=r.L,n.R&&(n.R.U=n),r.L=n}function Yr(t,e){var n=e,r=e.L,i=n.U;i?i.L===n?i.L=r:i.R=r:t._=r,r.U=i,n.U=r,n.L=r.R,n.L&&(n.L.U=n),r.R=n}function Vr(t){for(;t.L;)t=t.L;return t}function Hr(t,e,n,r){var i=[null,null],o=uu.push(i)-1;return i.left=t,i.right=e,n&&Jr(i,t,e,n),r&&Jr(i,e,t,r),su[t.index].halfedges.push(o),su[e.index].halfedges.push(o),i}function Wr(t,e,n){var r=[e,n];return r.left=t,r}function Jr(t,e,n,r){t[0]||t[1]?t.left===n?t[1]=r:t[0]=r:(t[0]=r,t.left=e,t.right=n)}function Zr(t,e,n,r,i){var o,s=t[0],a=t[1],u=s[0],c=s[1],h=0,l=1,p=a[0]-u,f=a[1]-c;if(o=e-u,p||!(o>0)){if(o/=p,p<0){if(o<h)return;o<l&&(l=o)}else if(p>0){if(o>l)return;o>h&&(h=o)}if(o=r-u,p||!(o<0)){if(o/=p,p<0){if(o>l)return;o>h&&(h=o)}else if(p>0){if(o<h)return;o<l&&(l=o)}if(o=n-c,f||!(o>0)){if(o/=f,f<0){if(o<h)return;o<l&&(l=o)}else if(f>0){if(o>l)return;o>h&&(h=o)}if(o=i-c,f||!(o<0)){if(o/=f,f<0){if(o>l)return;o>h&&(h=o)}else if(f>0){if(o<h)return;o<l&&(l=o)}return!(h>0||l<1)||(h>0&&(t[0]=[u+h*p,c+h*f]),l<1&&(t[1]=[u+l*p,c+l*f]),!0)}}}}}function Kr(t,e,n,r,i){var o=t[1];if(o)return!0;var s,a,u=t[0],c=t.left,h=t.right,l=c[0],p=c[1],f=h[0],g=h[1],d=(l+f)/2,y=(p+g)/2;if(g===p){if(d<e||d>=r)return;if(l>f){if(u){if(u[1]>=i)return}else u=[d,n];o=[d,i]}else{if(u){if(u[1]<n)return}else u=[d,i];o=[d,n]}}else if(s=(l-f)/(g-p),a=y-s*d,s<-1||s>1)if(l>f){if(u){if(u[1]>=i)return}else u=[(n-a)/s,n];o=[(i-a)/s,i]}else{if(u){if(u[1]<n)return}else u=[(i-a)/s,i];o=[(n-a)/s,n]}else if(p<g){if(u){if(u[0]>=r)return}else u=[e,s*e+a];o=[r,s*r+a]}else{if(u){if(u[0]<e)return}else u=[r,s*r+a];o=[e,s*e+a]}return t[0]=u,t[1]=o,!0}function Qr(t,e){var n=t.site,r=e.left,i=e.right;return n===i&&(i=r,r=n),i?Math.atan2(i[1]-r[1],i[0]-r[0]):(n===r?(r=e[1],i=e[0]):(r=e[0],i=e[1]),Math.atan2(r[0]-i[0],i[1]-r[1]))}function $r(t,e){return e[+(e.left!==t.site)]}function ti(t,e){return e[+(e.left===t.site)]}function ei(t){var e=t.P,n=t.N;if(e&&n){var r=e.site,i=t.site,o=n.site;if(r!==o){var s=i[0],a=i[1],u=r[0]-s,c=r[1]-a,h=o[0]-s,l=o[1]-a,p=2*(u*l-c*h);if(!(p>=-pu)){var f=u*u+c*c,g=h*h+l*l,d=(l*f-c*g)/p,y=(u*g-h*f)/p,_=cu.pop()||new function(){Xr(this),this.x=this.y=this.arc=this.site=this.cy=null};_.arc=t,_.site=i,_.x=d+s,_.y=(_.cy=y+a)+Math.sqrt(d*d+y*y),t.circle=_;for(var m=null,v=au._;v;)if(_.y<v.y||_.y===v.y&&_.x<=v.x){if(!v.L){m=v.P;break}v=v.L}else{if(!v.R){m=v;break}v=v.R}au.insert(m,_),m||(iu=_)}}}}function ni(t){var e=t.circle;e&&(e.P||(iu=e.N),au.remove(e),cu.push(e),Xr(e),t.circle=null)}function ri(t){var e=hu.pop()||new function(){Xr(this),this.edge=this.site=this.circle=null};return e.site=t,e}function ii(t){ni(t),ou.remove(t),hu.push(t),Xr(t)}function oi(t){var e=t.circle,n=e.x,r=e.cy,i=[n,r],o=t.P,s=t.N,a=[t];ii(t);for(var u=o;u.circle&&Math.abs(n-u.circle.x)<lu&&Math.abs(r-u.circle.cy)<lu;)o=u.P,a.unshift(u),ii(u),u=o;a.unshift(u),ni(u);for(var c=s;c.circle&&Math.abs(n-c.circle.x)<lu&&Math.abs(r-c.circle.cy)<lu;)s=c.N,a.push(c),ii(c),c=s;a.push(c),ni(c);var h,l=a.length;for(h=1;h<l;++h)c=a[h],u=a[h-1],Jr(c.edge,u.site,c.site,i);u=a[0],(c=a[l-1]).edge=Hr(u.site,c.site,null,i),ei(u),ei(c)}function si(t){for(var e,n,r,i,o=t[0],s=t[1],a=ou._;a;)if((r=ai(a,s)-o)>lu)a=a.L;else{if(!((i=o-function(t,e){var n=t.N;if(n)return ai(n,e);var r=t.site;return r[1]===e?r[0]:1/0}(a,s))>lu)){r>-lu?(e=a.P,n=a):i>-lu?(e=a,n=a.N):e=n=a;break}if(!a.R){e=a;break}a=a.R}!function(t){su[t.index]={site:t,halfedges:[]}}(t);var u=ri(t);if(ou.insert(e,u),e||n){if(e===n)return ni(e),n=ri(e.site),ou.insert(u,n),u.edge=n.edge=Hr(e.site,u.site),ei(e),void ei(n);if(n){ni(e),ni(n);var c=e.site,h=c[0],l=c[1],p=t[0]-h,f=t[1]-l,g=n.site,d=g[0]-h,y=g[1]-l,_=2*(p*y-f*d),m=p*p+f*f,v=d*d+y*y,x=[(y*m-f*v)/_+h,(p*v-d*m)/_+l];Jr(n.edge,c,g,x),u.edge=Hr(c,t,null,x),n.edge=Hr(t,g,null,x),ei(e),ei(n)}else u.edge=Hr(e.site,u.site)}}function ai(t,e){var n=t.site,r=n[0],i=n[1],o=i-e;if(!o)return r;var s=t.P;if(!s)return-1/0;var a=(n=s.site)[0],u=n[1],c=u-e;if(!c)return a;var h=a-r,l=1/o-1/c,p=h/c;return l?(-p+Math.sqrt(p*p-2*l*(h*h/(-2*c)-u+c/2+i-o/2)))/l+r:(r+a)/2}function ui(t,e,n){return(t[0]-n[0])*(e[1]-t[1])-(t[0]-e[0])*(n[1]-t[1])}function ci(t,e){return e[1]-t[1]||e[0]-t[0]}function hi(t,e){var n,r,i,o=t.sort(ci).pop();for(uu=[],su=new Array(t.length),ou=new jr,au=new jr;;)if(i=iu,o&&(!i||o[1]<i.y||o[1]===i.y&&o[0]<i.x))o[0]===n&&o[1]===r||(si(o),n=o[0],r=o[1]),o=t.pop();else{if(!i)break;oi(i.arc)}if(function(){for(var t,e,n,r,i=0,o=su.length;i<o;++i)if((t=su[i])&&(r=(e=t.halfedges).length)){var s=new Array(r),a=new Array(r);for(n=0;n<r;++n)s[n]=n,a[n]=Qr(t,uu[e[n]]);for(s.sort(function(t,e){return a[e]-a[t]}),n=0;n<r;++n)a[n]=e[s[n]];for(n=0;n<r;++n)e[n]=a[n]}}(),e){var s=+e[0][0],a=+e[0][1],u=+e[1][0],c=+e[1][1];!function(t,e,n,r){for(var i,o=uu.length;o--;)Kr(i=uu[o],t,e,n,r)&&Zr(i,t,e,n,r)&&(Math.abs(i[0][0]-i[1][0])>lu||Math.abs(i[0][1]-i[1][1])>lu)||delete uu[o]}(s,a,u,c),function(t,e,n,r){var i,o,s,a,u,c,h,l,p,f,g,d,y=su.length,_=!0;for(i=0;i<y;++i)if(o=su[i]){for(s=o.site,a=(u=o.halfedges).length;a--;)uu[u[a]]||u.splice(a,1);for(a=0,c=u.length;a<c;)g=(f=ti(o,uu[u[a]]))[0],d=f[1],l=(h=$r(o,uu[u[++a%c]]))[0],p=h[1],(Math.abs(g-l)>lu||Math.abs(d-p)>lu)&&(u.splice(a,0,uu.push(Wr(s,f,Math.abs(g-t)<lu&&r-d>lu?[t,Math.abs(l-t)<lu?p:r]:Math.abs(d-r)<lu&&n-g>lu?[Math.abs(p-r)<lu?l:n,r]:Math.abs(g-n)<lu&&d-e>lu?[n,Math.abs(l-n)<lu?p:e]:Math.abs(d-e)<lu&&g-t>lu?[Math.abs(p-e)<lu?l:t,e]:null))-1),++c);c&&(_=!1)}if(_){var m,v,x,E=1/0;for(i=0,_=null;i<y;++i)(o=su[i])&&(x=(m=(s=o.site)[0]-t)*m+(v=s[1]-e)*v)<E&&(E=x,_=o);if(_){var w=[t,e],b=[t,r],I=[n,r],N=[n,e];_.halfedges.push(uu.push(Wr(s=_.site,w,b))-1,uu.push(Wr(s,b,I))-1,uu.push(Wr(s,I,N))-1,uu.push(Wr(s,N,w))-1)}}for(i=0;i<y;++i)(o=su[i])&&(o.halfedges.length||delete su[i])}(s,a,u,c)}this.edges=uu,this.cells=su,ou=au=uu=su=null}function li(t){return(t=t.slice()).push(t[0]),o([t])}function pi(t,e,n,r){var i=(r=r||{}).steps||64,s=r.units||"kilometers",a=r.angle||0,u=r.pivot||t,c=r.properties||t.properties||{};if(!t)throw new Error("center is required");if(!e)throw new Error("xSemiAxis is required");if(!n)throw new Error("ySemiAxis is required");if(!I(r))throw new Error("options must be an object");if(!b(i))throw new Error("steps must be a number");if(!b(a))throw new Error("angle must be a number");var h=X(t);if("degrees"===s)var l=x(a);else e=nr(t,e,90,{units:s}),n=nr(t,n,0,{units:s}),e=X(e)[0]-h[0],n=X(n)[1]-h[1];for(var p=[],f=0;f<i;f+=1){var g=-360*f/i,d=e*n/Math.sqrt(Math.pow(n,2)+Math.pow(e,2)*Math.pow(fi(g),2)),y=e*n/Math.sqrt(Math.pow(e,2)+Math.pow(n,2)/Math.pow(fi(g),2));if(g<-90&&g>=-270&&(d=-d),g<-180&&g>=-360&&(y=-y),"degrees"===s){var _=d*Math.cos(l)+y*Math.sin(l),m=y*Math.cos(l)-d*Math.sin(l);d=_,y=m}p.push([d+h[0],y+h[1]])}return p.push(p[0]),"degrees"===s?o([p],c):fr(o([p],c),a,{pivot:u})}function fi(t){var e=t*Math.PI/180;return Math.tan(e)}function gi(t,e){if(e=e||{},!I(e))throw new Error("options is invalid");var n=e.properties,i=e.weight;if(!t)throw new Error("geojson is required");var o=0,s=0,a=0;return A(t,function(t,e,n){var r=n[i];if(r=void 0===r||null===r?1:r,!b(r))throw new Error("weight value must be a number for feature index "+e);(r=Number(r))>0&&S(t,function(t){o+=t[0]*r,s+=t[1]*r,a+=r})}),r([o/a,s/a],n)}function di(t,e,n,i){var o=n.properties.tolerance||.001,s=0,a=0,u=0,c=0;if(O(n,function(e){var n=e.properties.weight,r=void 0===n||null===n?1:n;if(r=Number(r),!b(r))throw new Error("weight value must be a number");if(r>0){c+=1;var i=r*qt(e,t);0===i&&(i=1);var o=r/i;s+=e.geometry.coordinates[0]*o,a+=e.geometry.coordinates[1]*o,u+=o}}),c<1)throw new Error("no features to measure");var h=s/u,l=a/u;return 1===c||0===i||Math.abs(h-e[0])<o&&Math.abs(l-e[1])<o?r([h,l],{medianCandidates:n.properties.medianCandidates}):(n.properties.medianCandidates.push([h,l]),di([h,l],t,n,i-1))}function yi(t,e){return{x:t[0]-e[0],y:t[1]-e[1]}}function _i(t){if(I(t)&&(t=t.bbox),t&&!Array.isArray(t))throw new Error("bbox is invalid");return t?function(t){return[Math.random()*(t[2]-t[0])+t[0],Math.random()*(t[3]-t[1])+t[1]]}(t):[360*Ei(),180*Ei()]}function mi(t,e){if(e=e||{},!I(e))throw new Error("options is invalid");var n=e.bbox;void 0!==t&&null!==t||(t=1);for(var i=[],o=0;o<t;o++)i.push(r(_i(n)));return c(i)}function vi(t,e){if(e=e||{},!I(e))throw new Error("options is invalid");var n=e.bbox,r=e.num_vertices,i=e.max_radial_length;void 0!==t&&null!==t||(t=1),b(r)||(r=10),b(i)||(i=10);for(var s=[],a=0;a<t;a++){var u=[],h=Array.apply(null,new Array(r+1)).map(Math.random);h.forEach(function(t,e,n){n[e]=e>0?t+n[e-1]:t}),h.forEach(function(t){t=2*t*Math.PI/h[h.length-1];var e=Math.random();u.push([e*i*Math.sin(t),e*i*Math.cos(t)])}),u[u.length-1]=u[0],u=u.map(function(t){return function(e){return[e[0]+t[0],e[1]+t[1]]}}(_i(n))),s.push(o([u]))}return c(s)}function xi(t,e){if(e=e||{},!I(e))throw new Error("options is invalid");var n=e.bbox,r=e.num_vertices,i=e.max_length,o=e.max_rotation;void 0!==t&&null!==t||(t=1),(!b(r)||r<2)&&(r=10),b(i)||(i=1e-4),b(o)||(o=Math.PI/8);for(var s=[],u=0;u<t;u++){for(var h=[_i(n)],l=0;l<r-1;l++){var p=(0===l?2*Math.random()*Math.PI:Math.tan((h[l][1]-h[l-1][1])/(h[l][0]-h[l-1][0])))+(Math.random()-.5)*o*2,f=Math.random()*i;h.push([h[l][0]+f*Math.cos(p),h[l][1]+f*Math.sin(p)])}s.push(a(h))}return c(s)}function Ei(){return Math.random()-.5}function wi(t,e){if(!t)throw new Error("geojson is required");if("FeatureCollection"!==t.type)throw new Error("geojson must be a FeatureCollection");if(void 0===e||null===e)throw new Error("filter is required");var n=[];return O(t,function(t){Ci(t.properties,e)&&n.push(t)}),c(n)}function bi(t,e,n){if(!t)throw new Error("geojson is required");if("FeatureCollection"!==t.type)throw new Error("geojson must be a FeatureCollection");if(void 0===e||null===e)throw new Error("property is required");for(var r=Ni(t,e),i=Object.keys(r),o=0;o<i.length;o++){for(var s=i[o],a=r[s],u=[],h=0;h<a.length;h++)u.push(t.features[a[h]]);n(c(u),s,o)}}function Ii(t,e,n,r){var i=r;return bi(t,e,function(t,e,o){i=0===o&&void 0===r?t:n(i,t,e,o)}),i}function Ni(t,e){var n={};return O(t,function(t,r){var i=t.properties||{};if(i.hasOwnProperty(e)){var o=i[e];n.hasOwnProperty(o)?n[o].push(r):n[o]=[r]}}),n}function Ci(t,e){if(void 0===t)return!1;var n=typeof e;if("number"===n||"string"===n)return t.hasOwnProperty(e);if(Array.isArray(e)){for(var r=0;r<e.length;r++)if(!Ci(t,e[r]))return!1;return!0}return Si(t,e)}function Si(t,e){for(var n=Object.keys(e),r=0;r<n.length;r++){var i=n[r];if(t[i]!==e[i])return!1}return!0}function Mi(t,e){if(!e)return{};if(!e.length)return{};for(var n={},r=0;r<e.length;r++){var i=e[r];t.hasOwnProperty(i)&&(n[i]=t[i])}return n}function Li(){}function Pi(t){this.message=t||""}function Oi(t){this.message=t||""}function Ri(){}function Ti(t){return null===t?Ac:t.color}function Ai(t){return null===t?null:t.parent}function Di(t,e){null!==t&&(t.color=e)}function Fi(t){return null===t?null:t.left}function qi(t){return null===t?null:t.right}function Gi(){this.root_=null,this.size_=0}function Bi(){}function ki(){this.array_=[],arguments[0]instanceof vc&&this.addAll(arguments[0])}function zi(){}function ji(t){this.message=t||""}function Xi(){this.array_=[]}function Ui(t){switch(t.type){case"Polygon":return mn(t)>1?t:null;case"MultiPolygon":var e=[];if(F(t,function(t){mn(t)>1&&e.push(t.geometry.coordinates)}),e.length)return{type:"MultiPolygon",coordinates:e}}}function Yi(){this.reset()}function Vi(t,e,n){var r=t.s=e+n,i=r-e,o=r-i;t.t=e-o+(n-i)}function Hi(t){return t>1?kf:t<-1?-kf:Math.asin(t)}function Wi(){}function Ji(t,e){t&&eg.hasOwnProperty(t.type)&&eg[t.type](t,e)}function Zi(t,e,n){var r,i=-1,o=t.length-n;for(e.lineStart();++i<o;)r=t[i],e.point(r[0],r[1],r[2]);e.lineEnd()}function Ki(t,e){var n=-1,r=t.length;for(e.polygonStart();++n<r;)Zi(t[n],e,1);e.polygonEnd()}function Qi(t){return[Hf(t[1],t[0]),Hi(t[2])]}function $i(t){var e=t[0],n=t[1],r=Wf(n);return[r*Wf(e),r*Kf(e),Kf(n)]}function to(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]}function eo(t,e){return[t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]]}function no(t,e){t[0]+=e[0],t[1]+=e[1],t[2]+=e[2]}function ro(t,e){return[t[0]*e,t[1]*e,t[2]*e]}function io(t){var e=Qf(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=e,t[1]/=e,t[2]/=e}function oo(t,e){return[t>Bf?t-jf:t<-Bf?t+jf:t,e]}function so(t,e,n){return(t%=jf)?e||n?rg(uo(t),co(e,n)):uo(t):e||n?co(e,n):oo}function ao(t){return function(e,n){return e+=t,[e>Bf?e-jf:e<-Bf?e+jf:e,n]}}function uo(t){var e=ao(t);return e.invert=ao(-t),e}function co(t,e){function n(t,e){var n=Wf(e),a=Wf(t)*n,u=Kf(t)*n,c=Kf(e),h=c*r+a*i;return[Hf(u*o-h*s,a*r-c*i),Hi(h*o+u*s)]}var r=Wf(t),i=Kf(t),o=Wf(e),s=Kf(e);return n.invert=function(t,e){var n=Wf(e),a=Wf(t)*n,u=Kf(t)*n,c=Kf(e),h=c*o-u*s;return[Hf(u*o+c*s,a*r+h*i),Hi(h*r-a*i)]},n}function ho(t,e){(e=$i(e))[0]-=t,io(e);var n=function(t){return t>1?0:t<-1?Bf:Math.acos(t)}(-e[1]);return((-e[2]<0?-n:n)+jf-Gf)%jf}function lo(t,e,n,r){this.x=t,this.z=e,this.o=n,this.e=r,this.v=!1,this.n=this.p=null}function po(t){if(e=t.length){for(var e,n,r=0,i=t[0];++r<e;)i.n=n=t[r],n.p=i,i=n;i.n=n=t[0],n.p=i}}function fo(t,e,n,r){function i(i,o){return t<=i&&i<=n&&e<=o&&o<=r}function o(i,o,a,c){var h=0,l=0;if(null==i||(h=s(i,a))!==(l=s(o,a))||u(i,o)<0^a>0)do{c.point(0===h||3===h?t:n,h>1?r:e)}while((h=(h+a+4)%4)!==l);else c.point(o[0],o[1])}function s(r,i){return Yf(r[0]-t)<Gf?i>0?0:3:Yf(r[0]-n)<Gf?i>0?2:1:Yf(r[1]-e)<Gf?i>0?1:0:i>0?3:2}function a(t,e){return u(t.x,e.x)}function u(t,e){var n=s(t,1),r=s(e,1);return n!==r?n-r:0===n?e[1]-t[1]:1===n?t[0]-e[0]:2===n?t[1]-e[1]:e[0]-t[0]}return function(s){function u(t,e){i(t,e)&&E.point(t,e)}function c(o,s){var a=i(o,s);if(l&&p.push([o,s]),v)f=o,g=s,d=a,v=!1,a&&(E.lineStart(),E.point(o,s));else if(a&&m)E.point(o,s);else{var u=[y=Math.max(pg,Math.min(lg,y)),_=Math.max(pg,Math.min(lg,_))],c=[o=Math.max(pg,Math.min(lg,o)),s=Math.max(pg,Math.min(lg,s))];sg(u,c,t,e,n,r)?(m||(E.lineStart(),E.point(u[0],u[1])),E.point(c[0],c[1]),a||E.lineEnd(),x=!1):a&&(E.lineStart(),E.point(o,s),x=!1)}y=o,_=s,m=a}var h,l,p,f,g,d,y,_,m,v,x,E=s,w=og(),b={point:u,lineStart:function(){b.point=c,l&&l.push(p=[]),v=!0,m=!1,y=_=NaN},lineEnd:function(){h&&(c(f,g),d&&m&&w.rejoin(),h.push(w.result())),b.point=u,m&&E.lineEnd()},polygonStart:function(){E=w,h=[],l=[],x=!0},polygonEnd:function(){var e=function(){for(var e=0,n=0,i=l.length;n<i;++n)for(var o,s,a=l[n],u=1,c=a.length,h=a[0],p=h[0],f=h[1];u<c;++u)o=p,s=f,p=(h=a[u])[0],f=h[1],s<=r?f>r&&(p-o)*(r-s)>(f-s)*(t-o)&&++e:f<=r&&(p-o)*(r-s)<(f-s)*(t-o)&&--e;return e}(),n=x&&e,i=(h=hg(h)).length;(n||i)&&(s.polygonStart(),n&&(s.lineStart(),o(null,null,1,s),s.lineEnd()),i&&ug(h,a,e,o,s),s.polygonEnd()),E=s,h=l=p=null}};return b}}function go(t){return t.length>1}function yo(t,e){return((t=t.x)[0]<0?t[1]-kf-Gf:kf-t[1])-((e=e.x)[0]<0?e[1]-kf-Gf:kf-e[1])}function _o(t){return function(e){var n=new mo;for(var r in t)n[r]=t[r];return n.stream=e,n}}function mo(){}function vo(t,e,n){var r=e[1][0]-e[0][0],i=e[1][1]-e[0][1],o=t.clipExtent&&t.clipExtent();t.scale(150).translate([0,0]),null!=o&&t.clipExtent(null),ng(n,t.stream(vg));var s=vg.result(),a=Math.min(r/(s[1][0]-s[0][0]),i/(s[1][1]-s[0][1])),u=+e[0][0]+(r-a*(s[1][0]+s[0][0]))/2,c=+e[0][1]+(i-a*(s[1][1]+s[0][1]))/2;return null!=o&&t.clipExtent(o),t.scale(150*a).translate([u,c])}function xo(t){return function(t){function e(t){return t=c(t[0]*Uf,t[1]*Uf),[t[0]*d+s,a-t[1]*d]}function n(t,e){return t=o(t,e),[t[0]*d+s,a-t[1]*d]}function r(){c=rg(u=so(x,E,w),o);var t=o(m,v);return s=y-t[0]*d,a=_+t[1]*d,i()}function i(){return f=g=null,e}var o,s,a,u,c,h,l,p,f,g,d=150,y=480,_=250,m=0,v=0,x=0,E=0,w=0,b=null,I=Eg,N=null,C=gg,S=.5,M=Ng(n,S);e.stream=function(t){return f&&g===t?f:f=Cg(I(u,M(C(g=t))))},e.clipAngle=function(t){return arguments.length?(I=+t?wg(b=t*Uf,6*Uf):(b=null,Eg),i()):b*Xf},e.clipExtent=function(t){return arguments.length?(C=null==t?(N=h=l=p=null,gg):fo(N=+t[0][0],h=+t[0][1],l=+t[1][0],p=+t[1][1]),i()):null==N?null:[[N,h],[l,p]]},e.scale=function(t){return arguments.length?(d=+t,r()):d},e.translate=function(t){return arguments.length?(y=+t[0],_=+t[1],r()):[y,_]},e.center=function(t){return arguments.length?(m=t[0]%360*Uf,v=t[1]%360*Uf,r()):[m*Xf,v*Xf]},e.rotate=function(t){return arguments.length?(x=t[0]%360*Uf,E=t[1]%360*Uf,w=t.length>2?t[2]%360*Uf:0,r()):[x*Xf,E*Xf,w*Xf]},e.precision=function(t){return arguments.length?(M=Ng(n,S=t*t),i()):Qf(S)},e.fitExtent=function(t,n){return vo(e,t,n)},e.fitSize=function(t,n){return function(t,e,n){return vo(t,[[0,0],e],n)}(e,t,n)};return function(){return o=t.apply(this,arguments),e.invert=o.invert&&function(t){return(t=c.invert((t[0]-s)/d,(a-t[1])/d))&&[t[0]*Xf,t[1]*Xf]},r()}}(function(){return t})()}function Eo(t,e){return[t,Zf($f((kf+e)/2))]}function wo(t,e){return[Zf($f((kf+e)/2)),-t]}function bo(t,n,r,i){var o=t.properties||{},s="Feature"===t.type?t.geometry:t;if("GeometryCollection"===s.type){var a=[];return A(t,function(t){var e=bo(t,n,r,i);e&&a.push(e)}),c(a)}var u,h=j(t),l=h[1]>50&&h[3]>50;u=l?{type:s.type,coordinates:No(s.coordinates,So(s))}:cn(s);var p=(new bh).read(u),f=d(y(n,r),"meters"),g=gp.bufferOp(p,f);if(g=(new Ih).write(g),!Io(g.coordinates)){var _;return(_=l?{type:g.type,coordinates:Co(g.coordinates,So(s))}:hn(g)).geometry?_:e(_,o)}}function Io(t){return Array.isArray(t[0])?Io(t[0]):isNaN(t[0])}function No(t,e){return"object"!=typeof t[0]?e(t):t.map(function(t){return No(t,e)})}function Co(t,e){return"object"!=typeof t[0]?e.invert(t):t.map(function(t){return Co(t,e)})}function So(t){var e=de(t).geometry.coordinates.reverse(),n=e.map(function(t){return-t});return Sg().center(e).rotate(n).scale(Fo)}function Mo(){for(var t=new bh,e=t.read(JSON.stringify(arguments[0].geometry)),n=1;n<arguments.length;n++)e=Df.union(e,t.read(JSON.stringify(arguments[n].geometry)));return e=(new Ih).write(e),{type:"Feature",geometry:e,properties:arguments[0].properties}}function Lo(t,n){var r=J(t),i=J(n);if(te(Pn(i,{precision:4})).coordinates[0].length<4)return null;if(te(Pn(r,{precision:4})).coordinates[0].length<4)return null;var o=new bh,s=o.read(Pn(r)),a=o.read(Pn(i)),u=Cf.intersection(s,a);if(u.isEmpty())return null;return e((new Ih).write(u))}function Po(t,e){return function(t,e,n){var r,i;if(!Array.isArray(e))throw new Error("Get closest expects an array as second argument");return e.forEach(function(e,o){var s=n(e,t);s>=0&&(void 0===i||s<i)&&(i=s,r=o)}),r}(t,e,function(t,e){return t-e})}function Oo(t,e,n){if(n=n||{},!I(n))throw new Error("options is invalid");var r=n.properties||{},i=n.triangles,s=n.mask;if(null===e||void 0===e)throw new Error("cellSide is required");if(!b(e))throw new Error("cellSide is invalid");if(!t)throw new Error("bbox is required");if(!Array.isArray(t))throw new Error("bbox must be array");if(4!==t.length)throw new Error("bbox must contain 4 numbers");if(s&&-1===["Polygon","MultiPolygon"].indexOf(K(s)))throw new Error("options.mask must be a (Multi)Polygon");var a=t[0],u=t[1],h=t[2],l=t[3],p=(u+l)/2,f=(a+h)/2,g=2*e/qt([a,p],[h,p],n)*(h-a),d=2*e/qt([f,u],[f,l],n)*(l-u),y=g/2,_=2*y,m=Math.sqrt(3)/2*d,v=h-a,x=l-u,E=.75*_,w=m,N=(v-_)/(_-y/2),C=Math.floor(N),S=(C*E-y/2-v)/2-y/2+E/2,M=Math.floor((x-m)/m),L=(x-M*m)/2,P=M*m-x>m/2;P&&(L-=m/4);for(var O=[],R=[],T=0;T<6;T++){var A=2*Math.PI/6*T;O.push(Math.cos(A)),R.push(Math.sin(A))}for(var D=[],F=0;F<=C;F++)for(var q=0;q<=M;q++){var G=F%2==1;if((0!==q||!G)&&(0!==q||!P)){var B=F*E+a-S,k=q*w+u+L;if(G&&(k-=m/2),!0===i)(function(t,e,n,r,i,s){for(var a=[],u=0;u<6;u++){var c=[];c.push(t),c.push([t[0]+e*i[u],t[1]+n*s[u]]),c.push([t[0]+e*i[(u+1)%6],t[1]+n*s[(u+1)%6]]),c.push(t),a.push(o([c],r))}return a})([B,k],g/2,d/2,r,O,R).forEach(function(t){s?Lo(s,t)&&D.push(t):D.push(t)});else{var z=function(t,e,n,r,i,s){for(var a=[],u=0;u<6;u++){var c=t[0]+e*i[u],h=t[1]+n*s[u];a.push([c,h])}return a.push(a[0].slice()),o([a],r)}([B,k],g/2,d/2,r,O,R);s?Lo(s,z)&&D.push(z):D.push(z)}}}return c(D)}function Ro(t){if(t.features.length<=1)return t;var e=function(t){var e=Vo(),n=[];return F(t,function(t,e){var r=j(t);n.push({minX:r[0],minY:r[1],maxX:r[2],maxY:r[3],geojson:t,index:e})}),e.load(n),e}(t),n=[],r={};return F(t,function(t,i){if(r[i])return!0;for(e.remove({index:i},To),r[i]=!0;;){var o=j(t),s=e.search({minX:o[0],minY:o[1],maxX:o[2],maxY:o[3]});if(s.length>0){var a=s.map(function(t){return r[t.index]=!0,e.remove({index:t.index},To),t.geojson});a.push(t),t=Mo.apply(this,a)}if(0===s.length)break}n.push(t)}),c(n)}function To(t,e){return t.index===e.index}function Ao(t,e,n){if(n=n||{},!I(n))throw new Error("options is invalid");var r=n.properties,i=n.mask,s=[];if(null===e||void 0===e)throw new Error("cellSide is required");if(!b(e))throw new Error("cellSide is invalid");if(!t)throw new Error("bbox is required");if(!Array.isArray(t))throw new Error("bbox must be array");if(4!==t.length)throw new Error("bbox must contain 4 numbers");if(i&&-1===["Polygon","MultiPolygon"].indexOf(K(i)))throw new Error("options.mask must be a (Multi)Polygon");for(var a=t[0],u=t[1],h=t[2],l=t[3],p=e/qt([a,u],[h,u],n)*(h-a),f=e/qt([a,u],[a,l],n)*(l-u),g=h-a,d=l-u,y=Math.floor(g/p),_=Math.floor(d/f),m=(d-_*f)/2,v=a+(g-y*p)/2,x=0;x<y;x++){for(var E=u+m,w=0;w<_;w++){var N=o([[[v,E],[v,E+f],[v+p,E+f],[v+p,E],[v,E]]],r);i?Lo(i,N)&&s.push(N):s.push(N),E+=f}v+=p}return c(s)}function Do(t,e,n){if(n=n||{},!I(n))throw new Error("options is invalid");var r=n.properties,i=n.mask,s=[];if(null===e||void 0===e)throw new Error("cellSide is required");if(!b(e))throw new Error("cellSide is invalid");if(!t)throw new Error("bbox is required");if(!Array.isArray(t))throw new Error("bbox must be array");if(4!==t.length)throw new Error("bbox must contain 4 numbers");if(i&&-1===["Polygon","MultiPolygon"].indexOf(K(i)))throw new Error("options.mask must be a (Multi)Polygon");for(var a=e/qt([t[0],t[1]],[t[2],t[1]],n)*(t[2]-t[0]),u=e/qt([t[0],t[1]],[t[0],t[3]],n)*(t[3]-t[1]),h=0,l=t[0];l<=t[2];){for(var p=0,f=t[1];f<=t[3];){var g=null,d=null;h%2==0&&p%2==0?(g=o([[[l,f],[l,f+u],[l+a,f],[l,f]]],r),d=o([[[l,f+u],[l+a,f+u],[l+a,f],[l,f+u]]],r)):h%2==0&&p%2==1?(g=o([[[l,f],[l+a,f+u],[l+a,f],[l,f]]],r),d=o([[[l,f],[l,f+u],[l+a,f+u],[l,f]]],r)):p%2==0&&h%2==1?(g=o([[[l,f],[l,f+u],[l+a,f+u],[l,f]]],r),d=o([[[l,f],[l+a,f+u],[l+a,f],[l,f]]],r)):p%2==1&&h%2==1&&(g=o([[[l,f],[l,f+u],[l+a,f],[l,f]]],r),d=o([[[l,f+u],[l+a,f+u],[l+a,f],[l,f+u]]],r)),i?(Lo(i,g)&&s.push(g),Lo(i,d)&&s.push(d)):(s.push(g),s.push(d)),f+=u,p++}h++,l+=a}return c(s)}var Fo=6371008.8,qo={meters:Fo,metres:Fo,millimeters:1e3*Fo,millimetres:1e3*Fo,centimeters:100*Fo,centimetres:100*Fo,kilometers:Fo/1e3,kilometres:Fo/1e3,miles:Fo/1609.344,nauticalmiles:Fo/1852,inches:39.37*Fo,yards:Fo/1.0936,feet:3.28084*Fo,radians:1,degrees:Fo/111325},Go={meters:1,metres:1,millimeters:1e3,millimetres:1e3,centimeters:100,centimetres:100,kilometers:.001,kilometres:.001,miles:1/1609.344,nauticalmiles:1/1852,inches:39.37,yards:1/1.0936,feet:3.28084,radians:1/Fo,degrees:1/111325},Bo={meters:1,metres:1,millimeters:1e6,millimetres:1e6,centimeters:1e4,centimetres:1e4,kilometers:1e-6,kilometres:1e-6,acres:247105e-9,miles:3.86e-7,yards:1.195990046,feet:10.763910417,inches:1550.003100006},ko=Object.freeze({earthRadius:Fo,factors:qo,unitsFactors:Go,areaFactors:Bo,feature:e,geometry:n,point:r,points:i,polygon:o,polygons:s,lineString:a,lineStrings:u,featureCollection:c,multiLineString:h,multiPoint:l,multiPolygon:p,geometryCollection:f,round:g,radiansToLength:d,lengthToRadians:y,lengthToDegrees:_,bearingToAzimuth:m,radiansToDegrees:v,degreesToRadians:x,convertLength:E,convertArea:w,isNumber:b,isObject:I,validateBBox:N,validateId:C,radians2degrees:function(){throw new Error("method has been renamed to `radiansToDegrees`")},degrees2radians:function(){throw new Error("method has been renamed to `degreesToRadians`")},distanceToDegrees:function(){throw new Error("method has been renamed to `lengthToDegrees`")},distanceToRadians:function(){throw new Error("method has been renamed to `lengthToRadians`")},radiansToDistance:function(){throw new Error("method has been renamed to `radiansToLength`")},bearingToAngle:function(){throw new Error("method has been renamed to `bearingToAzimuth`")},convertDistance:function(){throw new Error("method has been renamed to `convertLength`")}}),zo=Object.freeze({coordEach:S,coordReduce:M,propEach:L,propReduce:P,featureEach:O,featureReduce:R,coordAll:T,geomEach:A,geomReduce:D,flattenEach:F,flattenReduce:q,segmentEach:G,segmentReduce:B,lineEach:k,lineReduce:z}),jo=Object.freeze({getCoord:X,getCoords:U,containsNumber:Y,geojsonType:V,featureOf:H,collectionOf:W,getGeom:J,getGeomType:Z,getType:K}),Xo={successCallback:null,verbose:!1},Uo={},Yo=it,Vo=st;st.prototype={all:function(){return this._all(this.data,[])},search:function(t){var e=this.data,n=[],r=this.toBBox;if(!dt(t,e))return n;for(var i,o,s,a,u=[];e;){for(i=0,o=e.children.length;i<o;i++)s=e.children[i],dt(t,a=e.leaf?r(s):s)&&(e.leaf?n.push(s):gt(t,a)?this._all(s,n):u.push(s));e=u.pop()}return n},collides:function(t){var e=this.data,n=this.toBBox;if(!dt(t,e))return!1;for(var r,i,o,s,a=[];e;){for(r=0,i=e.children.length;r<i;r++)if(o=e.children[r],s=e.leaf?n(o):o,dt(t,s)){if(e.leaf||gt(t,s))return!0;a.push(o)}e=a.pop()}return!1},load:function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var e=0,n=t.length;e<n;e++)this.insert(t[e]);return this}var r=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===r.height)this._splitRoot(this.data,r);else{if(this.data.height<r.height){var i=this.data;this.data=r,r=i}this._insert(r,this.data.height-r.height-1,!0)}else this.data=r;return this},insert:function(t){return t&&this._insert(t,this.data.height-1),this},clear:function(){return this.data=yt([]),this},remove:function(t,e){if(!t)return this;for(var n,r,i,o,s=this.data,a=this.toBBox(t),u=[],c=[];s||u.length;){if(s||(s=u.pop(),r=u[u.length-1],n=c.pop(),o=!0),s.leaf&&-1!==(i=function(t,e,n){if(!n)return e.indexOf(t);for(var r=0;r<e.length;r++)if(n(t,e[r]))return r;return-1}(t,s.children,e)))return s.children.splice(i,1),u.push(s),this._condense(u),this;o||s.leaf||!gt(s,a)?r?(n++,s=r.children[n],o=!1):s=null:(u.push(s),c.push(n),n=0,r=s,s=s.children[0])}return this},toBBox:function(t){return t},compareMinX:ht,compareMinY:lt,toJSON:function(){return this.data},fromJSON:function(t){return this.data=t,this},_all:function(t,e){for(var n=[];t;)t.leaf?e.push.apply(e,t.children):n.push.apply(n,t.children),t=n.pop();return e},_build:function(t,e,n,r){var i,o=n-e+1,s=this._maxEntries;if(o<=s)return i=yt(t.slice(e,n+1)),at(i,this.toBBox),i;r||(r=Math.ceil(Math.log(o)/Math.log(s)),s=Math.ceil(o/Math.pow(s,r-1))),(i=yt([])).leaf=!1,i.height=r;var a,u,c,h,l=Math.ceil(o/s),p=l*Math.ceil(Math.sqrt(s));for(_t(t,e,n,p,this.compareMinX),a=e;a<=n;a+=p)for(_t(t,a,c=Math.min(a+p-1,n),l,this.compareMinY),u=a;u<=c;u+=l)h=Math.min(u+l-1,c),i.children.push(this._build(t,u,h,r-1));return at(i,this.toBBox),i},_chooseSubtree:function(t,e,n,r){for(var i,o,s,a,u,c,h,l;r.push(e),!e.leaf&&r.length-1!==n;){for(h=l=1/0,i=0,o=e.children.length;i<o;i++)u=pt(s=e.children[i]),(c=function(t,e){return(Math.max(e.maxX,t.maxX)-Math.min(e.minX,t.minX))*(Math.max(e.maxY,t.maxY)-Math.min(e.minY,t.minY))}(t,s)-u)<l?(l=c,h=u<h?u:h,a=s):c===l&&u<h&&(h=u,a=s);e=a||e.children[0]}return e},_insert:function(t,e,n){var r=this.toBBox,i=n?t:r(t),o=[],s=this._chooseSubtree(i,this.data,e,o);for(s.children.push(t),ct(s,i);e>=0&&o[e].children.length>this._maxEntries;)this._split(o,e),e--;this._adjustParentBBoxes(i,o,e)},_split:function(t,e){var n=t[e],r=n.children.length,i=this._minEntries;this._chooseSplitAxis(n,i,r);var o=this._chooseSplitIndex(n,i,r),s=yt(n.children.splice(o,n.children.length-o));s.height=n.height,s.leaf=n.leaf,at(n,this.toBBox),at(s,this.toBBox),e?t[e-1].children.push(s):this._splitRoot(n,s)},_splitRoot:function(t,e){this.data=yt([t,e]),this.data.height=t.height+1,this.data.leaf=!1,at(this.data,this.toBBox)},_chooseSplitIndex:function(t,e,n){var r,i,o,s,a,u,c,h;for(u=c=1/0,r=e;r<=n-e;r++)s=function(t,e){var n=Math.max(t.minX,e.minX),r=Math.max(t.minY,e.minY),i=Math.min(t.maxX,e.maxX),o=Math.min(t.maxY,e.maxY);return Math.max(0,i-n)*Math.max(0,o-r)}(i=ut(t,0,r,this.toBBox),o=ut(t,r,n,this.toBBox)),a=pt(i)+pt(o),s<u?(u=s,h=r,c=a<c?a:c):s===u&&a<c&&(c=a,h=r);return h},_chooseSplitAxis:function(t,e,n){var r=t.leaf?this.compareMinX:ht,i=t.leaf?this.compareMinY:lt;this._allDistMargin(t,e,n,r)<this._allDistMargin(t,e,n,i)&&t.children.sort(r)},_allDistMargin:function(t,e,n,r){t.children.sort(r);var i,o,s=this.toBBox,a=ut(t,0,e,s),u=ut(t,n-e,n,s),c=ft(a)+ft(u);for(i=e;i<n-e;i++)o=t.children[i],ct(a,t.leaf?s(o):o),c+=ft(a);for(i=n-e-1;i>=e;i--)o=t.children[i],ct(u,t.leaf?s(o):o),c+=ft(u);return c},_adjustParentBBoxes:function(t,e,n){for(var r=n;r>=0;r--)ct(e[r],t)},_condense:function(t){for(var e,n=t.length-1;n>=0;n--)0===t[n].children.length?n>0?(e=t[n-1].children).splice(e.indexOf(t[n]),1):this.clear():at(t[n],this.toBBox)},_initFormat:function(t){var e=["return a"," - b",";"];this.compareMinX=new Function("a","b",e.join(t[0])),this.compareMinY=new Function("a","b",e.join(t[1])),this.toBBox=new Function("a","return {minX: a"+t[0]+", minY: a"+t[1]+", maxX: a"+t[2]+", maxY: a"+t[3]+"};")}};var Ho=function(t,e,n){var r=t*e,i=Wo*t,o=i-(i-t),s=t-o,a=Wo*e,u=a-(a-e),c=e-u,h=s*c-(r-o*u-s*u-o*c);return n?(n[0]=h,n[1]=r,n):[h,r]},Wo=+(Math.pow(2,27)+1),Jo=function(t,e){var n=0|t.length,r=0|e.length;if(1===n&&1===r)return function(t,e){var n=t+e,r=n-t,i=t-(n-r)+(e-r);return i?[i,n]:[n]}(t[0],e[0]);var i,o,s=n+r,a=new Array(s),u=0,c=0,h=0,l=Math.abs,p=t[c],f=l(p),g=e[h],d=l(g);f<d?(o=p,(c+=1)<n&&(f=l(p=t[c]))):(o=g,(h+=1)<r&&(d=l(g=e[h]))),c<n&&f<d||h>=r?(i=p,(c+=1)<n&&(f=l(p=t[c]))):(i=g,(h+=1)<r&&(d=l(g=e[h])));for(var y,_,m=i+o,v=m-i,x=o-v,E=x,w=m;c<n&&h<r;)f<d?(i=p,(c+=1)<n&&(f=l(p=t[c]))):(i=g,(h+=1)<r&&(d=l(g=e[h]))),(x=(o=E)-(v=(m=i+o)-i))&&(a[u++]=x),E=w-((y=w+m)-(_=y-w))+(m-_),w=y;for(;c<n;)(x=(o=E)-(v=(m=(i=p)+o)-i))&&(a[u++]=x),E=w-((y=w+m)-(_=y-w))+(m-_),w=y,(c+=1)<n&&(p=t[c]);for(;h<r;)(x=(o=E)-(v=(m=(i=g)+o)-i))&&(a[u++]=x),E=w-((y=w+m)-(_=y-w))+(m-_),w=y,(h+=1)<r&&(g=e[h]);return E&&(a[u++]=E),w&&(a[u++]=w),u||(a[u++]=0),a.length=u,a},Zo=function(t,e,n){var r=t+e,i=r-t,o=e-i,s=t-(r-i);return n?(n[0]=s+o,n[1]=r,n):[s+o,r]},Ko=function(t,e){var n=t.length;if(1===n){var r=Ho(t[0],e);return r[0]?r:[r[1]]}var i=new Array(2*n),o=[.1,.1],s=[.1,.1],a=0;Ho(t[0],e,o),o[0]&&(i[a++]=o[0]);for(var u=1;u<n;++u){Ho(t[u],e,s);var c=o[1];Zo(c,s[0],o),o[0]&&(i[a++]=o[0]);var h=s[1],l=o[1],p=h+l,f=l-(p-h);o[1]=p,f&&(i[a++]=f)}return o[1]&&(i[a++]=o[1]),0===a&&(i[a++]=0),i.length=a,i},Qo=function(t,e){var n=0|t.length,r=0|e.length;if(1===n&&1===r)return function(t,e){var n=t+e,r=n-t,i=t-(n-r)+(e-r);return i?[i,n]:[n]}(t[0],-e[0]);var i,o,s=n+r,a=new Array(s),u=0,c=0,h=0,l=Math.abs,p=t[c],f=l(p),g=-e[h],d=l(g);f<d?(o=p,(c+=1)<n&&(f=l(p=t[c]))):(o=g,(h+=1)<r&&(d=l(g=-e[h]))),c<n&&f<d||h>=r?(i=p,(c+=1)<n&&(f=l(p=t[c]))):(i=g,(h+=1)<r&&(d=l(g=-e[h])));for(var y,_,m=i+o,v=m-i,x=o-v,E=x,w=m;c<n&&h<r;)f<d?(i=p,(c+=1)<n&&(f=l(p=t[c]))):(i=g,(h+=1)<r&&(d=l(g=-e[h]))),(x=(o=E)-(v=(m=i+o)-i))&&(a[u++]=x),E=w-((y=w+m)-(_=y-w))+(m-_),w=y;for(;c<n;)(x=(o=E)-(v=(m=(i=p)+o)-i))&&(a[u++]=x),E=w-((y=w+m)-(_=y-w))+(m-_),w=y,(c+=1)<n&&(p=t[c]);for(;h<r;)(x=(o=E)-(v=(m=(i=g)+o)-i))&&(a[u++]=x),E=w-((y=w+m)-(_=y-w))+(m-_),w=y,(h+=1)<r&&(g=-e[h]);return E&&(a[u++]=E),w&&(a[u++]=w),u||(a[u++]=0),a.length=u,a},$o=mt(function(t){function e(t,e){for(var n=new Array(t.length-1),r=1;r<t.length;++r)for(var i=n[r-1]=new Array(t.length-1),o=0,s=0;o<t.length;++o)o!==e&&(i[s++]=t[r][o]);return n}function n(t){return 1&t?"-":""}function r(t){if(1===t.length)return t[0];if(2===t.length)return["sum(",t[0],",",t[1],")"].join("");var e=t.length>>1;return["sum(",r(t.slice(0,e)),",",r(t.slice(e)),")"].join("")}function i(t){if(2===t.length)return[["sum(prod(",t[0][0],",",t[1][1],"),prod(-",t[0][1],",",t[1][0],"))"].join("")];for(var o=[],s=0;s<t.length;++s)o.push(["scale(",r(i(e(t,s))),",",n(s),t[0][s],")"].join(""));return o}function o(t){for(var n=[],o=[],s=function(t){for(var e=new Array(t),n=0;n<t;++n){e[n]=new Array(t);for(var r=0;r<t;++r)e[n][r]=["m",r,"[",t-n-1,"]"].join("")}return e}(t),a=[],u=0;u<t;++u)0==(1&u)?n.push.apply(n,i(e(s,u))):o.push.apply(o,i(e(s,u))),a.push("m"+u);var c=r(n),h=r(o),l="orientation"+t+"Exact",p=["function ",l,"(",a.join(),"){var p=",c,",n=",h,",d=sub(p,n);return d[d.length-1];};return ",l].join("");return new Function("sum","prod","scale","sub",p)(Jo,Ho,Ko,Qo)}var s=5,a=o(3),u=o(4),c=[function(){return 0},function(){return 0},function(t,e){return e[0]-t[0]},function(t,e,n){var r,i=(t[1]-n[1])*(e[0]-n[0]),o=(t[0]-n[0])*(e[1]-n[1]),s=i-o;if(i>0){if(o<=0)return s;r=i+o}else{if(!(i<0))return s;if(o>=0)return s;r=-(i+o)}var u=3.3306690738754716e-16*r;return s>=u||s<=-u?s:a(t,e,n)},function(t,e,n,r){var i=t[0]-r[0],o=e[0]-r[0],s=n[0]-r[0],a=t[1]-r[1],c=e[1]-r[1],h=n[1]-r[1],l=t[2]-r[2],p=e[2]-r[2],f=n[2]-r[2],g=o*h,d=s*c,y=s*a,_=i*h,m=i*c,v=o*a,x=l*(g-d)+p*(y-_)+f*(m-v),E=7.771561172376103e-16*((Math.abs(g)+Math.abs(d))*Math.abs(l)+(Math.abs(y)+Math.abs(_))*Math.abs(p)+(Math.abs(m)+Math.abs(v))*Math.abs(f));return x>E||-x>E?x:u(t,e,n,r)}];!function(){for(;c.length<=s;)c.push(o(c.length));for(var e=[],n=["slow"],r=0;r<=s;++r)e.push("a"+r),n.push("o"+r);var i=["function getOrientation(",e.join(),"){switch(arguments.length){case 0:case 1:return 0;"];for(r=2;r<=s;++r)i.push("case ",r,":return o",r,"(",e.slice(0,r).join(),");");i.push("}var s=new Array(arguments.length);for(var i=0;i<arguments.length;++i){s[i]=arguments[i]};return slow(s);}return getOrientation"),n.push(i.join(""));var a=Function.apply(void 0,n);for(t.exports=a.apply(void 0,[function(t){var e=c[t.length];return e||(e=c[t.length]=o(t.length)),e.apply(void 0,t)}].concat(c)),r=0;r<=s;++r)t.exports[r]=c[r]}()}),ts=function(t){var e=t.length;if(e<3){for(var n=new Array(e),r=0;r<e;++r)n[r]=r;return 2===e&&t[0][0]===t[1][0]&&t[0][1]===t[1][1]?[0]:n}var i=new Array(e);for(r=0;r<e;++r)i[r]=r;i.sort(function(e,n){var r=t[e][0]-t[n][0];return r||t[e][1]-t[n][1]});var o=[i[0],i[1]],s=[i[0],i[1]];for(r=2;r<e;++r){for(var a=i[r],u=t[a],c=o.length;c>1&&es(t[o[c-2]],t[o[c-1]],u)<=0;)c-=1,o.pop();for(o.push(a),c=s.length;c>1&&es(t[s[c-2]],t[s[c-1]],u)>=0;)c-=1,s.pop();s.push(a)}n=new Array(s.length+o.length-2);for(var h=0,l=(r=0,o.length);r<l;++r)n[h++]=o[r];for(var p=s.length-2;p>0;--p)n[h++]=s[p];return n},es=$o[3],ns=vt,rs=vt;vt.prototype={push:function(t){this.data.push(t),this.length++,this._up(this.length-1)},pop:function(){if(0!==this.length){var t=this.data[0];return this.length--,this.length>0&&(this.data[0]=this.data[this.length],this._down(0)),this.data.pop(),t}},peek:function(){return this.data[0]},_up:function(t){for(var e=this.data,n=this.compare,r=e[t];t>0;){var i=t-1>>1,o=e[i];if(n(r,o)>=0)break;e[t]=o,t=i}e[t]=r},_down:function(t){for(var e=this.data,n=this.compare,r=this.length>>1,i=e[t];t<r;){var o=1+(t<<1),s=o+1,a=e[o];if(s<this.length&&n(e[s],a)<0&&(o=s,a=e[s]),n(a,i)>=0)break;e[t]=a,t=o}e[t]=i}},ns.default=rs;var is=function(t,e){for(var n=t[0],r=t[1],i=!1,o=0,s=e.length-1;o<e.length;s=o++){var a=e[o][0],u=e[o][1],c=e[s][0],h=e[s][1];u>r!=h>r&&n<(c-a)*(r-u)/(h-u)+a&&(i=!i)}return i},os=$o[3],ss=xt,as=xt;ss.default=as;var us=function(t){return t},cs=function(t){if(null==t)return us;var e,n,r=t.scale[0],i=t.scale[1],o=t.translate[0],s=t.translate[1];return function(t,a){a||(e=n=0);var u=2,c=t.length,h=new Array(c);for(h[0]=(e+=t[0])*r+o,h[1]=(n+=t[1])*i+s;u<c;)h[u]=t[u],++u;return h}},hs=function(t,e){for(var n,r=t.length,i=r-e;i<--r;)n=t[i],t[i++]=t[r],t[r]=n},ls=function(t,e){function n(t,e){for(var n in t){var i=t[n];delete e[i.start],delete i.start,delete i.end,i.forEach(function(t){r[t<0?~t:t]=1}),s.push(i)}}var r={},i={},o={},s=[],a=-1;return e.forEach(function(n,r){var i,o=t.arcs[n<0?~n:n];o.length<3&&!o[1][0]&&!o[1][1]&&(i=e[++a],e[a]=n,e[r]=i)}),e.forEach(function(e){var n,r,s=function(e){var n,r=t.arcs[e<0?~e:e],i=r[0];return t.transform?(n=[0,0],r.forEach(function(t){n[0]+=t[0],n[1]+=t[1]})):n=r[r.length-1],e<0?[n,i]:[i,n]}(e),a=s[0],u=s[1];if(n=o[a])if(delete o[n.end],n.push(e),n.end=u,r=i[u]){delete i[r.start];var c=r===n?n:n.concat(r);i[c.start=n.start]=o[c.end=r.end]=c}else i[n.start]=o[n.end]=n;else if(n=i[u])if(delete i[n.start],n.unshift(e),n.start=a,r=o[a]){delete o[r.end];var h=r===n?n:r.concat(n);i[h.start=r.start]=o[h.end=n.end]=h}else i[n.start]=o[n.end]=n;else i[(n=[e]).start=a]=o[n.end=u]=n}),n(o,i),n(i,o),e.forEach(function(t){r[t<0?~t:t]||s.push([t])}),s},ps=function(t){return Xt(t,Ut.apply(this,arguments))},fs=function(t,e,n,r,i,o){3===arguments.length&&(r=o=Array,i=null);for(var s=new r(t=1<<Math.max(4,Math.ceil(Math.log(t)/Math.LN2))),a=new o(t),u=t-1,c=0;c<t;++c)s[c]=i;return{set:function(r,o){for(var c=e(r)&u,h=s[c],l=0;h!=i;){if(n(h,r))return a[c]=o;if(++l>=t)throw new Error("full hashmap");h=s[c=c+1&u]}return s[c]=r,a[c]=o,o},maybeSet:function(r,o){for(var c=e(r)&u,h=s[c],l=0;h!=i;){if(n(h,r))return a[c];if(++l>=t)throw new Error("full hashmap");h=s[c=c+1&u]}return s[c]=r,a[c]=o,o},get:function(r,o){for(var c=e(r)&u,h=s[c],l=0;h!=i;){if(n(h,r))return a[c];if(++l>=t)break;h=s[c=c+1&u]}return o},keys:function(){for(var t=[],e=0,n=s.length;e<n;++e){var r=s[e];r!=i&&t.push(r)}return t}}},gs=function(t,e){return t[0]===e[0]&&t[1]===e[1]},ds=new ArrayBuffer(16),ys=new Float64Array(ds),_s=new Uint32Array(ds),ms=function(t){ys[0]=t[0],ys[1]=t[1];var e=_s[0]^_s[1];return 2147483647&(e=e<<5^e>>7^_s[2]^_s[3])},vs=function(t){function e(t,e,n,r){if(p[n]!==t){p[n]=t;var i=f[n];if(i>=0){var o=g[n];i===e&&o===r||i===r&&o===e||(++y,d[n]=1)}else f[n]=e,g[n]=r}}function n(t){return ms(u[t])}function r(t,e){return gs(u[t],u[e])}var i,o,s,a,u=t.coordinates,c=t.lines,h=t.rings,l=function(){for(var t=fs(1.4*u.length,n,r,Int32Array,-1,Int32Array),e=new Int32Array(u.length),i=0,o=u.length;i<o;++i)e[i]=t.maybeSet(i,i);return e}(),p=new Int32Array(u.length),f=new Int32Array(u.length),g=new Int32Array(u.length),d=new Int8Array(u.length),y=0;for(i=0,o=u.length;i<o;++i)p[i]=f[i]=g[i]=-1;for(i=0,o=c.length;i<o;++i){var _=c[i],m=_[0],v=_[1];for(s=l[m],a=l[++m],++y,d[s]=1;++m<=v;)e(i,s,s=a,a=l[m]);++y,d[a]=1}for(i=0,o=u.length;i<o;++i)p[i]=-1;for(i=0,o=h.length;i<o;++i){var x=h[i],E=x[0]+1,w=x[1];for(e(i,l[w-1],s=l[E-1],a=l[E]);++E<=w;)e(i,s,s=a,a=l[E])}p=f=g=null;var b,I=function(t,e,n,r,i){3===arguments.length&&(r=Array,i=null);for(var o=new r(t=1<<Math.max(4,Math.ceil(Math.log(t)/Math.LN2))),s=t-1,a=0;a<t;++a)o[a]=i;return{add:function(r){for(var a=e(r)&s,u=o[a],c=0;u!=i;){if(n(u,r))return!0;if(++c>=t)throw new Error("full hashset");u=o[a=a+1&s]}return o[a]=r,!0},has:function(r){for(var a=e(r)&s,u=o[a],c=0;u!=i;){if(n(u,r))return!0;if(++c>=t)break;u=o[a=a+1&s]}return!1},values:function(){for(var t=[],e=0,n=o.length;e<n;++e){var r=o[e];r!=i&&t.push(r)}return t}}}(1.4*y,ms,gs);for(i=0,o=u.length;i<o;++i)d[b=l[i]]&&I.add(u[b]);return I},xs=function(t){var e,n,r,i=vs(t),o=t.coordinates,s=t.lines,a=t.rings;for(n=0,r=s.length;n<r;++n)for(var u=s[n],c=u[0],h=u[1];++c<h;)i.has(o[c])&&(e={0:c,1:u[1]},u[1]=c,u=u.next=e);for(n=0,r=a.length;n<r;++n)for(var l=a[n],p=l[0],f=p,g=l[1],d=i.has(o[p]);++f<g;)i.has(o[f])&&(d?(e={0:f,1:l[1]},l[1]=f,l=l.next=e):(!function(t,e,n,r){Yt(t,e,n),Yt(t,e,e+r),Yt(t,e+r,n)}(o,p,g,g-f),o[g]=o[p],d=!0,f=p));return t},Es=function(t){function e(t){var e,n,r,i,o,s,a,u;if(r=f.get(e=c[t[0]]))for(a=0,u=r.length;a<u;++a)if(i=r[a],function(t,e){var n=t[0],r=e[0],i=t[1],o=e[1];if(n-i!=r-o)return!1;for(;n<=i;++n,++r)if(!gs(c[n],c[r]))return!1;return!0}(i,t))return t[0]=i[0],void(t[1]=i[1]);if(o=f.get(n=c[t[1]]))for(a=0,u=o.length;a<u;++a)if(s=o[a],function(t,e){var n=t[0],r=e[0],i=t[1],o=e[1];if(n-i!=r-o)return!1;for(;n<=i;++n,--o)if(!gs(c[n],c[o]))return!1;return!0}(s,t))return t[1]=s[0],void(t[0]=s[1]);r?r.push(t):f.set(e,[t]),o?o.push(t):f.set(n,[t]),g.push(t)}function n(t,e){var n=t[0],r=e[0],o=t[1]-n;if(o!==e[1]-r)return!1;for(var s=i(t),a=i(e),u=0;u<o;++u)if(!gs(c[n+(u+s)%o],c[r+(u+a)%o]))return!1;return!0}function r(t,e){var n=t[0],r=e[0],o=t[1],s=e[1],a=o-n;if(a!==s-r)return!1;for(var u=i(t),h=a-i(e),l=0;l<a;++l)if(!gs(c[n+(l+u)%a],c[s-(l+h)%a]))return!1;return!0}function i(t){for(var e=t[0],n=t[1],r=e,i=r,o=c[r];++r<n;){var s=c[r];(s[0]<o[0]||s[0]===o[0]&&s[1]<o[1])&&(i=r,o=s)}return i-e}var o,s,a,u,c=t.coordinates,h=t.lines,l=t.rings,p=h.length+l.length;for(delete t.lines,delete t.rings,a=0,u=h.length;a<u;++a)for(o=h[a];o=o.next;)++p;for(a=0,u=l.length;a<u;++a)for(s=l[a];s=s.next;)++p;var f=fs(2*p*1.4,ms,gs),g=t.arcs=[];for(a=0,u=h.length;a<u;++a){o=h[a];do{e(o)}while(o=o.next)}for(a=0,u=l.length;a<u;++a)if((s=l[a]).next)do{e(s)}while(s=s.next);else!function(t){var e,o,s,a,u;if(o=f.get(e=c[t[0]]))for(a=0,u=o.length;a<u;++a){if(s=o[a],n(s,t))return t[0]=s[0],void(t[1]=s[1]);if(r(s,t))return t[0]=s[1],void(t[1]=s[0])}if(o=f.get(e=c[t[0]+i(t)]))for(a=0,u=o.length;a<u;++a){if(s=o[a],n(s,t))return t[0]=s[0],void(t[1]=s[1]);if(r(s,t))return t[0]=s[1],void(t[1]=s[0])}o?o.push(t):f.set(e,[t]),g.push(t)}(s);return t},ws=function(t,e){function n(t){t&&h.hasOwnProperty(t.type)&&h[t.type](t)}function r(t){var e=[];do{var n=c.get(t);e.push(t[0]<t[1]?n:~n)}while(t=t.next);return e}function i(t){return t.map(r)}var o=function(t){function e(t){null!=t&&c.hasOwnProperty(t.type)&&c[t.type](t)}function n(t){var e=t[0],n=t[1];e<o&&(o=e),e>a&&(a=e),n<s&&(s=n),n>u&&(u=n)}function r(t){t.forEach(n)}function i(t){t.forEach(r)}var o=1/0,s=1/0,a=-1/0,u=-1/0,c={GeometryCollection:function(t){t.geometries.forEach(e)},Point:function(t){n(t.coordinates)},MultiPoint:function(t){t.coordinates.forEach(n)},LineString:function(t){r(t.arcs)},MultiLineString:function(t){t.arcs.forEach(r)},Polygon:function(t){t.arcs.forEach(r)},MultiPolygon:function(t){t.arcs.forEach(i)}};for(var h in t)e(t[h]);return a>=o&&u>=s?[o,s,a,u]:void 0}(t=function(t){var e,n={};for(e in t)n[e]=Vt(t[e]);return n}(t)),s=e>0&&o&&function(t,e,n){function r(t){return[Math.round((t[0]-c)*f),Math.round((t[1]-h)*g)]}function i(t,e){for(var n,r,i,o,s,a=-1,u=0,l=t.length,p=new Array(l);++a<l;)n=t[a],o=Math.round((n[0]-c)*f),s=Math.round((n[1]-h)*g),o===r&&s===i||(p[u++]=[r=o,i=s]);for(p.length=u;u<e;)u=p.push([p[0][0],p[0][1]]);return p}function o(t){return i(t,2)}function s(t){return i(t,4)}function a(t){return t.map(s)}function u(t){null!=t&&d.hasOwnProperty(t.type)&&d[t.type](t)}var c=e[0],h=e[1],l=e[2],p=e[3],f=l-c?(n-1)/(l-c):1,g=p-h?(n-1)/(p-h):1,d={GeometryCollection:function(t){t.geometries.forEach(u)},Point:function(t){t.coordinates=r(t.coordinates)},MultiPoint:function(t){t.coordinates=t.coordinates.map(r)},LineString:function(t){t.arcs=o(t.arcs)},MultiLineString:function(t){t.arcs=t.arcs.map(o)},Polygon:function(t){t.arcs=a(t.arcs)},MultiPolygon:function(t){t.arcs=t.arcs.map(a)}};for(var y in t)u(t[y]);return{scale:[1/f,1/g],translate:[c,h]}}(t,o,e),a=Es(xs(function(t){function e(t){t&&c.hasOwnProperty(t.type)&&c[t.type](t)}function n(t){for(var e=0,n=t.length;e<n;++e)u[++o]=t[e];var r={0:o-n+1,1:o};return s.push(r),r}function r(t){for(var e=0,n=t.length;e<n;++e)u[++o]=t[e];var r={0:o-n+1,1:o};return a.push(r),r}function i(t){return t.map(r)}var o=-1,s=[],a=[],u=[],c={GeometryCollection:function(t){t.geometries.forEach(e)},LineString:function(t){t.arcs=n(t.arcs)},MultiLineString:function(t){t.arcs=t.arcs.map(n)},Polygon:function(t){t.arcs=t.arcs.map(r)},MultiPolygon:function(t){t.arcs=t.arcs.map(i)}};for(var h in t)e(t[h]);return{type:"Topology",coordinates:u,lines:s,rings:a,objects:t}}(t))),u=a.coordinates,c=fs(1.4*a.arcs.length,Jt,Zt);t=a.objects,a.bbox=o,a.arcs=a.arcs.map(function(t,e){return c.set(t,e),u.slice(t[0],t[1]+1)}),delete a.coordinates,u=null;var h={GeometryCollection:function(t){t.geometries.forEach(n)},LineString:function(t){t.arcs=r(t.arcs)},MultiLineString:function(t){t.arcs=t.arcs.map(r)},Polygon:function(t){t.arcs=t.arcs.map(r)},MultiPolygon:function(t){t.arcs=t.arcs.map(i)}};for(var l in t)n(t[l]);return s&&(a.transform=s,a.arcs=function(t){for(var e=-1,n=t.length;++e<n;){for(var r,i,o=t[e],s=0,a=1,u=o.length,c=o[0],h=c[0],l=c[1];++s<u;)r=(c=o[s])[0],i=c[1],r===h&&i===l||(o[a++]=[r-h,i-l],h=r,l=i);1===a&&(o[a++]=[0,0]),o.length=a}return t}(a.arcs)),a},bs=function(t){this.points=t.points||[],this.duration=t.duration||1e4,this.sharpness=t.sharpness||.85,this.centers=[],this.controls=[],this.stepLength=t.stepLength||60,this.length=this.points.length,this.delay=0;for(var e=0;e<this.length;e++)this.points[e].z=this.points[e].z||0;for(e=0;e<this.length-1;e++){var n=this.points[e],r=this.points[e+1];this.centers.push({x:(n.x+r.x)/2,y:(n.y+r.y)/2,z:(n.z+r.z)/2})}this.controls.push([this.points[0],this.points[0]]);for(e=0;e<this.centers.length-1;e++){n=this.centers[e],r=this.centers[e+1];var i=this.points[e+1].x-(this.centers[e].x+this.centers[e+1].x)/2,o=this.points[e+1].y-(this.centers[e].y+this.centers[e+1].y)/2,s=this.points[e+1].z-(this.centers[e].y+this.centers[e+1].z)/2;this.controls.push([{x:(1-this.sharpness)*this.points[e+1].x+this.sharpness*(this.centers[e].x+i),y:(1-this.sharpness)*this.points[e+1].y+this.sharpness*(this.centers[e].y+o),z:(1-this.sharpness)*this.points[e+1].z+this.sharpness*(this.centers[e].z+s)},{x:(1-this.sharpness)*this.points[e+1].x+this.sharpness*(this.centers[e+1].x+i),y:(1-this.sharpness)*this.points[e+1].y+this.sharpness*(this.centers[e+1].y+o),z:(1-this.sharpness)*this.points[e+1].z+this.sharpness*(this.centers[e+1].z+s)}])}return this.controls.push([this.points[this.length-1],this.points[this.length-1]]),this.steps=this.cacheSteps(this.stepLength),this};bs.prototype.cacheSteps=function(t){var e=[],n=this.pos(0);e.push(0);for(var r=0;r<this.duration;r+=10){var i=this.pos(r);Math.sqrt((i.x-n.x)*(i.x-n.x)+(i.y-n.y)*(i.y-n.y)+(i.z-n.z)*(i.z-n.z))>t&&(e.push(r),n=i)}return e},bs.prototype.vector=function(t){var e=this.pos(t+10),n=this.pos(t-10);return{angle:180*Math.atan2(e.y-n.y,e.x-n.x)/3.14,speed:Math.sqrt((n.x-e.x)*(n.x-e.x)+(n.y-e.y)*(n.y-e.y)+(n.z-e.z)*(n.z-e.z))}},bs.prototype.pos=function(t){var e=t-this.delay;e<0&&(e=0),e>this.duration&&(e=this.duration-1);var n=e/this.duration;if(n>=1)return this.points[this.length-1];var r=Math.floor((this.points.length-1)*n);return function(t,e,n,r,i){var o=function(t){var e=t*t;return[e*t,3*e*(1-t),3*t*(1-t)*(1-t),(1-t)*(1-t)*(1-t)]}(t);return{x:i.x*o[0]+r.x*o[1]+n.x*o[2]+e.x*o[3],y:i.y*o[0]+r.y*o[1]+n.y*o[2]+e.y*o[3],z:i.z*o[0]+r.z*o[1]+n.z*o[2]+e.z*o[3]}}((this.length-1)*n-r,this.points[r],this.controls[r][1],this.controls[r+1][0],this.points[r+1])};var Is=ve,Ns=ve;ve.deviation=function(t,e,n,r){var i=e&&e.length,o=i?e[0]*n:t.length,s=Math.abs(Ae(t,0,o,n));if(i)for(var a=0,u=e.length;a<u;a++){var c=e[a]*n,h=a<u-1?e[a+1]*n:t.length;s-=Math.abs(Ae(t,c,h,n))}var l=0;for(a=0;a<r.length;a+=3){var p=r[a]*n,f=r[a+1]*n,g=r[a+2]*n;l+=Math.abs((t[p]-t[g])*(t[f+1]-t[p+1])-(t[p]-t[f])*(t[g+1]-t[p+1]))}return 0===s&&0===l?0:Math.abs((l-s)/s)},ve.flatten=function(t){for(var e=t[0][0].length,n={vertices:[],holes:[],dimensions:e},r=0,i=0;i<t.length;i++){for(var o=0;o<t[i].length;o++)for(var s=0;s<e;s++)n.vertices.push(t[i][o][s]);i>0&&(r+=t[i-1].length,n.holes.push(r))}return n},Is.default=Ns,ke.prototype={all:function(){return this._all(this.data,[])},search:function(t){var e=this.data,n=[],r=this.toBBox;if(!Je(t,e))return n;for(var i,o,s,a,u=[];e;){for(i=0,o=e.children.length;i<o;i++)s=e.children[i],Je(t,a=e.leaf?r(s):s)&&(e.leaf?n.push(s):We(t,a)?this._all(s,n):u.push(s));e=u.pop()}return n},collides:function(t){var e=this.data,n=this.toBBox;if(!Je(t,e))return!1;for(var r,i,o,s,a=[];e;){for(r=0,i=e.children.length;r<i;r++)if(o=e.children[r],s=e.leaf?n(o):o,Je(t,s)){if(e.leaf||We(t,s))return!0;a.push(o)}e=a.pop()}return!1},load:function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var e=0,n=t.length;e<n;e++)this.insert(t[e]);return this}var r=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===r.height)this._splitRoot(this.data,r);else{if(this.data.height<r.height){var i=this.data;this.data=r,r=i}this._insert(r,this.data.height-r.height-1,!0)}else this.data=r;return this},insert:function(t){return t&&this._insert(t,this.data.height-1),this},clear:function(){return this.data=Ze([]),this},remove:function(t,e){if(!t)return this;for(var n,r,i,o,s=this.data,a=this.toBBox(t),u=[],c=[];s||u.length;){if(s||(s=u.pop(),r=u[u.length-1],n=c.pop(),o=!0),s.leaf&&-1!==(i=function(t,e,n){if(!n)return e.indexOf(t);for(var r=0;r<e.length;r++)if(n(t,e[r]))return r;return-1}(t,s.children,e)))return s.children.splice(i,1),u.push(s),this._condense(u),this;o||s.leaf||!We(s,a)?r?(n++,s=r.children[n],o=!1):s=null:(u.push(s),c.push(n),n=0,r=s,s=s.children[0])}return this},toBBox:function(t){return t},compareMinX:Ue,compareMinY:Ye,toJSON:function(){return this.data},fromJSON:function(t){return this.data=t,this},_all:function(t,e){for(var n=[];t;)t.leaf?e.push.apply(e,t.children):n.push.apply(n,t.children),t=n.pop();return e},_build:function(t,e,n,r){var i,o=n-e+1,s=this._maxEntries;if(o<=s)return i=Ze(t.slice(e,n+1)),ze(i,this.toBBox),i;r||(r=Math.ceil(Math.log(o)/Math.log(s)),s=Math.ceil(o/Math.pow(s,r-1))),(i=Ze([])).leaf=!1,i.height=r;var a,u,c,h,l=Math.ceil(o/s),p=l*Math.ceil(Math.sqrt(s));for(Ke(t,e,n,p,this.compareMinX),a=e;a<=n;a+=p)for(Ke(t,a,c=Math.min(a+p-1,n),l,this.compareMinY),u=a;u<=c;u+=l)h=Math.min(u+l-1,c),i.children.push(this._build(t,u,h,r-1));return ze(i,this.toBBox),i},_chooseSubtree:function(t,e,n,r){for(var i,o,s,a,u,c,h,l;r.push(e),!e.leaf&&r.length-1!==n;){for(h=l=1/0,i=0,o=e.children.length;i<o;i++)u=Ve(s=e.children[i]),(c=function(t,e){return(Math.max(e.maxX,t.maxX)-Math.min(e.minX,t.minX))*(Math.max(e.maxY,t.maxY)-Math.min(e.minY,t.minY))}(t,s)-u)<l?(l=c,h=u<h?u:h,a=s):c===l&&u<h&&(h=u,a=s);e=a||e.children[0]}return e},_insert:function(t,e,n){var r=this.toBBox,i=n?t:r(t),o=[],s=this._chooseSubtree(i,this.data,e,o);for(s.children.push(t),Xe(s,i);e>=0&&o[e].children.length>this._maxEntries;)this._split(o,e),e--;this._adjustParentBBoxes(i,o,e)},_split:function(t,e){var n=t[e],r=n.children.length,i=this._minEntries;this._chooseSplitAxis(n,i,r);var o=this._chooseSplitIndex(n,i,r),s=Ze(n.children.splice(o,n.children.length-o));s.height=n.height,s.leaf=n.leaf,ze(n,this.toBBox),ze(s,this.toBBox),e?t[e-1].children.push(s):this._splitRoot(n,s)},_splitRoot:function(t,e){this.data=Ze([t,e]),this.data.height=t.height+1,this.data.leaf=!1,ze(this.data,this.toBBox)},_chooseSplitIndex:function(t,e,n){var r,i,o,s,a,u,c,h;for(u=c=1/0,r=e;r<=n-e;r++)s=function(t,e){var n=Math.max(t.minX,e.minX),r=Math.max(t.minY,e.minY),i=Math.min(t.maxX,e.maxX),o=Math.min(t.maxY,e.maxY);return Math.max(0,i-n)*Math.max(0,o-r)}(i=je(t,0,r,this.toBBox),o=je(t,r,n,this.toBBox)),a=Ve(i)+Ve(o),s<u?(u=s,h=r,c=a<c?a:c):s===u&&a<c&&(c=a,h=r);return h},_chooseSplitAxis:function(t,e,n){var r=t.leaf?this.compareMinX:Ue,i=t.leaf?this.compareMinY:Ye;this._allDistMargin(t,e,n,r)<this._allDistMargin(t,e,n,i)&&t.children.sort(r)},_allDistMargin:function(t,e,n,r){t.children.sort(r);var i,o,s=this.toBBox,a=je(t,0,e,s),u=je(t,n-e,n,s),c=He(a)+He(u);for(i=e;i<n-e;i++)o=t.children[i],Xe(a,t.leaf?s(o):o),c+=He(a);for(i=n-e-1;i>=e;i--)o=t.children[i],Xe(u,t.leaf?s(o):o),c+=He(u);return c},_adjustParentBBoxes:function(t,e,n){for(var r=n;r>=0;r--)Xe(e[r],t)},_condense:function(t){for(var e,n=t.length-1;n>=0;n--)0===t[n].children.length?n>0?(e=t[n-1].children).splice(e.indexOf(t[n]),1):this.clear():ze(t[n],this.toBBox)},_initFormat:function(t){var e=["return a"," - b",";"];this.compareMinX=new Function("a","b",e.join(t[0])),this.compareMinY=new Function("a","b",e.join(t[1])),this.toBBox=new Function("a","return {minX: a"+t[0]+", minY: a"+t[1]+", maxX: a"+t[2]+", maxY: a"+t[3]+"};")}};var Cs=Object.freeze({toMercator:cn,toWgs84:hn}),Ss=6378137,Ms=function(t,e,n){function r(t,n,r,i){var u=o[t][n],c=o[t][n+1],h=o[r][i],l=o[r][i+1],p=function(t,e,n,r){if(On(t,n)||On(t,r)||On(e,n)||On(r,n))return null;var i=t[0],o=t[1],s=e[0],a=e[1],u=n[0],c=n[1],h=r[0],l=r[1],p=(i-s)*(c-l)-(o-a)*(u-h);return 0===p?null:[((i*a-o*s)*(u-h)-(i-s)*(u*l-c*h))/p,((i*a-o*s)*(c-l)-(o-a)*(u*l-c*h))/p]}(u,c,h,l);if(null!==p){var f,g;if(f=c[0]!==u[0]?(p[0]-u[0])/(c[0]-u[0]):(p[1]-u[1])/(c[1]-u[1]),g=l[0]!==h[0]?(p[0]-h[0])/(l[0]-h[0]):(p[1]-h[1])/(l[1]-h[1]),!(f>=1||f<=0||g>=1||g<=0)){var d=p,y=!a[d];y&&(a[d]=!0),e?s.push(e(p,t,n,u,c,f,r,i,h,l,g,y)):s.push(p)}}}function i(t,e){var n,r,i,s,a=o[t][e],u=o[t][e+1];return a[0]<u[0]?(n=a[0],r=u[0]):(n=u[0],r=a[0]),a[1]<u[1]?(i=a[1],s=u[1]):(i=u[1],s=a[1]),{minX:n,minY:i,maxX:r,maxY:s,ring:t,edge:e}}if("Polygon"!==t.geometry.type)throw new Error("The input feature must be a Polygon");void 0===n&&(n=1);var o=t.geometry.coordinates,s=[],a={};if(n){for(var u=[],c=0;c<o.length;c++)for(var h=0;h<o[c].length-1;h++)u.push(i(c,h));var l=Vo();l.load(u)}for(var p=0;p<o.length;p++)for(var f=0;f<o[p].length-1;f++)if(n){l.search(i(p,f)).forEach(function(t){var e=t.ring,n=t.edge;r(p,f,e,n)})}else for(var g=0;g<o.length;g++)for(var d=0;d<o[g].length-1;d++)r(p,f,g,d);return e||(s={type:"Feature",geometry:{type:"MultiPoint",coordinates:s}}),s},Ls=function(t){function e(){for(var t=[],e=0;e<g.features.length;e++)-1==g.features[e].properties.parent&&t.push(e);if(t.length>1)for(e=0;e<t.length;e++){for(var n=-1,r=0;r<g.features.length;r++)t[e]!=r&&Pt(g.features[t[e]].geometry.coordinates[0][0],g.features[r],{ignoreBoundary:!0})&&mn(g.features[r])<1/0&&(n=r);g.features[t[e]].properties.parent=n}}function n(){for(var t=0;t<g.features.length;t++)if(-1==g.features[t].properties.parent){var e=g.features[t].properties.winding;g.features[t].properties.netWinding=e,r(t,e)}}function r(t,e){for(var n=0;n<g.features.length;n++)if(g.features[n].properties.parent==t){var i=e+g.features[n].properties.winding;g.features[n].properties.netWinding=i,r(n,i)}}if("Feature"!=t.type)throw new Error("The input must a geojson object of type Feature");if(void 0===t.geometry||null==t.geometry)throw new Error("The input must a geojson object with a non-empty geometry");if("Polygon"!=t.geometry.type)throw new Error("The input must be a geojson Polygon");for(var i=t.geometry.coordinates.length,s=[],a=0;a<i;a++){var u=t.geometry.coordinates[a];Tn(u[0],u[u.length-1])||u.push(u[0]),s.push.apply(s,u.slice(0,u.length-1))}if(!function(t){for(var e={},n=1,r=0,i=t.length;r<i;++r){if(e.hasOwnProperty(t[r])){n=0;break}e[t[r]]=1}return n}(s))throw new Error("The input polygon may not have duplicate vertices (except for the first and last vertex of each ring)");var h=s.length,l=Ms(t,function(t,e,n,r,i,o,s,a,u,c,h,l){return[t,e,n,r,i,o,s,a,u,c,h,l]}),p=l.length;if(0==p){var f=[];for(a=0;a<i;a++)f.push(o([t.geometry.coordinates[a]],{parent:-1,winding:function(t){for(var e=0,n=0;n<t.length-1;n++)t[n][0]<t[e][0]&&(e=n);if(Rn([t[(e-1).modulo(t.length-1)],t[e],t[(e+1).modulo(t.length-1)]],!0))var r=1;else r=-1;return r}(t.geometry.coordinates[a])}));var g=c(f);return e(),n(),g}var d=[],y=[];for(a=0;a<i;a++){d.push([]);for(var _=0;_<t.geometry.coordinates[a].length-1;_++)d[a].push([new Ps(t.geometry.coordinates[a][(_+1).modulo(t.geometry.coordinates[a].length-1)],1,[a,_],[a,(_+1).modulo(t.geometry.coordinates[a].length-1)],void 0)]),y.push(new Os(t.geometry.coordinates[a][_],[a,(_-1).modulo(t.geometry.coordinates[a].length-1)],[a,_],void 0,void 0,!1,!0))}for(a=0;a<p;a++)d[l[a][1]][l[a][2]].push(new Ps(l[a][0],l[a][5],[l[a][1],l[a][2]],[l[a][6],l[a][7]],void 0)),l[a][11]&&y.push(new Os(l[a][0],[l[a][1],l[a][2]],[l[a][6],l[a][7]],void 0,void 0,!0,!0));var m=y.length;for(a=0;a<d.length;a++)for(_=0;_<d[a].length;_++)d[a][_].sort(function(t,e){return t.param<e.param?-1:1});var v=[];for(a=0;a<m;a++)v.push({minX:y[a].coord[0],minY:y[a].coord[1],maxX:y[a].coord[0],maxY:y[a].coord[1],index:a});var x=Vo();x.load(v);for(a=0;a<d.length;a++)for(_=0;_<d[a].length;_++)for(var E=0;E<d[a][_].length;E++){b=E==d[a][_].length-1?d[a][(_+1).modulo(t.geometry.coordinates[a].length-1)][0].coord:d[a][_][E+1].coord;var w=x.search({minX:b[0],minY:b[1],maxX:b[0],maxY:b[1]})[0];d[a][_][E].nxtIsectAlongEdgeIn=w.index}for(a=0;a<d.length;a++)for(_=0;_<d[a].length;_++)for(E=0;E<d[a][_].length;E++){var b=d[a][_][E].coord,I=(w=x.search({minX:b[0],minY:b[1],maxX:b[0],maxY:b[1]})[0]).index;I<h?y[I].nxtIsectAlongRingAndEdge2=d[a][_][E].nxtIsectAlongEdgeIn:Tn(y[I].ringAndEdge1,d[a][_][E].ringAndEdgeIn)?y[I].nxtIsectAlongRingAndEdge1=d[a][_][E].nxtIsectAlongEdgeIn:y[I].nxtIsectAlongRingAndEdge2=d[a][_][E].nxtIsectAlongEdgeIn}var N=[];for(a=0,_=0;_<i;_++){var C=a;for(E=0;E<t.geometry.coordinates[_].length-1;E++)y[a].coord[0]<y[C].coord[0]&&(C=a),a++;var S=y[C].nxtIsectAlongRingAndEdge2;for(E=0;E<y.length;E++)if(y[E].nxtIsectAlongRingAndEdge1==C||y[E].nxtIsectAlongRingAndEdge2==C){var M=E;break}var L=Rn([y[M].coord,y[C].coord,y[S].coord],!0)?1:-1;N.push({isect:C,parent:-1,winding:L})}N.sort(function(t,e){return y[t.isect].coord>y[e.isect].coord?-1:1});for(f=[];N.length>0;){var P=N.pop(),O=P.isect,R=P.parent,T=P.winding,A=f.length,D=[y[O].coord],F=O;if(y[O].ringAndEdge1Walkable)var q=y[O].ringAndEdge1,G=y[O].nxtIsectAlongRingAndEdge1;else q=y[O].ringAndEdge2,G=y[O].nxtIsectAlongRingAndEdge2;for(;!Tn(y[O].coord,y[G].coord);){D.push(y[G].coord);var B=void 0;for(a=0;a<N.length;a++)if(N[a].isect==G){B=a;break}if(void 0!=B&&N.splice(B,1),Tn(q,y[G].ringAndEdge1)){if(q=y[G].ringAndEdge2,y[G].ringAndEdge2Walkable=!1,y[G].ringAndEdge1Walkable){var k={isect:G};Rn([y[F].coord,y[G].coord,y[y[G].nxtIsectAlongRingAndEdge2].coord],1==T)?(k.parent=R,k.winding=-T):(k.parent=A,k.winding=T),N.push(k)}F=G,G=y[G].nxtIsectAlongRingAndEdge2}else{if(q=y[G].ringAndEdge1,y[G].ringAndEdge1Walkable=!1,y[G].ringAndEdge2Walkable){k={isect:G};Rn([y[F].coord,y[G].coord,y[y[G].nxtIsectAlongRingAndEdge1].coord],1==T)?(k.parent=R,k.winding=-T):(k.parent=A,k.winding=T),N.push(k)}F=G,G=y[G].nxtIsectAlongRingAndEdge1}}D.push(y[G].coord),f.push(o([D],{index:A,parent:R,winding:T,netWinding:void 0}))}g=c(f);return e(),n(),g},Ps=function(t,e,n,r,i){this.coord=t,this.param=e,this.ringAndEdgeIn=n,this.ringAndEdgeOut=r,this.nxtIsectAlongEdgeIn=i},Os=function(t,e,n,r,i,o,s){this.coord=t,this.ringAndEdge1=e,this.ringAndEdge2=n,this.nxtIsectAlongRingAndEdge1=r,this.nxtIsectAlongRingAndEdge2=i,this.ringAndEdge1Walkable=o,this.ringAndEdge2Walkable=s};Number.prototype.modulo=function(t){return(this%t+t)%t};var Rs=Math.PI/180,Ts=180/Math.PI,As=function(t,e){this.lon=t,this.lat=e,this.x=Rs*t,this.y=Rs*e};As.prototype.view=function(){return String(this.lon).slice(0,4)+","+String(this.lat).slice(0,4)},As.prototype.antipode=function(){var t=-1*this.lat,e=this.lon<0?180+this.lon:-1*(180-this.lon);return new As(e,t)};var Ds=function(){this.coords=[],this.length=0};Ds.prototype.move_to=function(t){this.length++,this.coords.push(t)};var Fs=function(t){this.properties=t||{},this.geometries=[]};Fs.prototype.json=function(){if(this.geometries.length<=0)return{geometry:{type:"LineString",coordinates:null},type:"Feature",properties:this.properties};if(1===this.geometries.length)return{geometry:{type:"LineString",coordinates:this.geometries[0].coords},type:"Feature",properties:this.properties};for(var t=[],e=0;e<this.geometries.length;e++)t.push(this.geometries[e].coords);return{geometry:{type:"MultiLineString",coordinates:t},type:"Feature",properties:this.properties}},Fs.prototype.wkt=function(){for(var t="",e="LINESTRING(",n=function(t){e+=t[0]+" "+t[1]+","},r=0;r<this.geometries.length;r++){if(0===this.geometries[r].coords.length)return"LINESTRING(empty)";this.geometries[r].coords.forEach(n),t+=e.substring(0,e.length-1)+")"}return t};var qs=function(t,e,n){if(!t||void 0===t.x||void 0===t.y)throw new Error("GreatCircle constructor expects two args: start and end objects with x and y properties");if(!e||void 0===e.x||void 0===e.y)throw new Error("GreatCircle constructor expects two args: start and end objects with x and y properties");this.start=new As(t.x,t.y),this.end=new As(e.x,e.y),this.properties=n||{};var r=this.start.x-this.end.x,i=this.start.y-this.end.y,o=Math.pow(Math.sin(i/2),2)+Math.cos(this.start.y)*Math.cos(this.end.y)*Math.pow(Math.sin(r/2),2);if(this.g=2*Math.asin(Math.sqrt(o)),this.g===Math.PI)throw new Error("it appears "+t.view()+" and "+e.view()+" are 'antipodal', e.g diametrically opposite, thus there is no single route but rather infinite");if(isNaN(this.g))throw new Error("could not calculate great circle between "+t+" and "+e)};qs.prototype.interpolate=function(t){var e=Math.sin((1-t)*this.g)/Math.sin(this.g),n=Math.sin(t*this.g)/Math.sin(this.g),r=e*Math.cos(this.start.y)*Math.cos(this.start.x)+n*Math.cos(this.end.y)*Math.cos(this.end.x),i=e*Math.cos(this.start.y)*Math.sin(this.start.x)+n*Math.cos(this.end.y)*Math.sin(this.end.x),o=e*Math.sin(this.start.y)+n*Math.sin(this.end.y),s=Ts*Math.atan2(o,Math.sqrt(Math.pow(r,2)+Math.pow(i,2)));return[Ts*Math.atan2(i,r),s]},qs.prototype.Arc=function(t,e){var n=[];if(!t||t<=2)n.push([this.start.lon,this.start.lat]),n.push([this.end.lon,this.end.lat]);else for(var r=1/(t-1),i=0;i<t;++i){var o=r*i,s=this.interpolate(o);n.push(s)}for(var a=!1,u=0,c=e&&e.offset?e.offset:10,h=180-c,l=-180+c,p=360-c,f=1;f<n.length;++f){var g=n[f-1][0],d=n[f][0],y=Math.abs(d-g);y>p&&(d>h&&g<l||g>h&&d<l)?a=!0:y>u&&(u=y)}var _=[];if(a&&u<c){var m=[];_.push(m);for(var v=0;v<n.length;++v){var x=parseFloat(n[v][0]);if(v>0&&Math.abs(x-n[v-1][0])>p){var E=parseFloat(n[v-1][0]),w=parseFloat(n[v-1][1]),b=parseFloat(n[v][0]),I=parseFloat(n[v][1]);if(E>-180&&E<l&&180===b&&v+1<n.length&&n[v-1][0]>-180&&n[v-1][0]<l){m.push([-180,n[v][1]]),v++,m.push([n[v][0],n[v][1]]);continue}if(E>h&&E<180&&-180===b&&v+1<n.length&&n[v-1][0]>h&&n[v-1][0]<180){m.push([180,n[v][1]]),v++,m.push([n[v][0],n[v][1]]);continue}if(E<l&&b>h){var N=E;E=b,b=N;var C=w;w=I,I=C}if(E>h&&b<l&&(b+=360),E<=180&&b>=180&&E<b){var S=(180-E)/(b-E),M=S*I+(1-S)*w;m.push([n[v-1][0]>h?180:-180,M]),(m=[]).push([n[v-1][0]>h?-180:180,M]),_.push(m)}else m=[],_.push(m);m.push([x,n[v][1]])}else m.push([n[v][0],n[v][1]])}}else{var L=[];_.push(L);for(var P=0;P<n.length;++P)L.push([n[P][0],n[P][1]])}for(var O=new Fs(this.properties),R=0;R<_.length;++R){var T=new Ds;O.geometries.push(T);for(var A=_[R],D=0;D<A.length;++D)T.move_to(A[D])}return O};var Gs=Yn;Yn.polyline=Yn,Yn.polygon=function(t,e){var n,r,i,o,s,a,u;for(r=1;r<=8;r*=2){for(n=[],o=!(Hn(i=t[t.length-1],e)&r),s=0;s<t.length;s++)(u=!(Hn(a=t[s],e)&r))!==o&&n.push(Vn(i,a,r,e)),u&&n.push(a),i=a,o=u;if(!(t=n).length)break}return n};var Bs=Array.prototype.slice,ks={successCallback:null,verbose:!1,polygons:!1},zs={},js=64,Xs=16,Us=4,Ys=1,Vs=[],Hs=[],Ws=[],Js=[],Zs=[],Ks=[],Qs=[],$s=[],ta=[],ea=[],na=[],ra=[],ia=[],oa=[],sa=[],aa=[],ua=[],ca=[],ha=[],la=[],pa=[],fa=[],ga=[],da=[];Qs[85]=ea[85]=-1,$s[85]=na[85]=0,ta[85]=ra[85]=1,ha[85]=fa[85]=1,la[85]=ga[85]=0,pa[85]=da[85]=1,Vs[85]=Js[85]=0,Hs[85]=Zs[85]=-1,Ws[85]=sa[85]=0,aa[85]=ia[85]=0,ua[85]=oa[85]=1,Ks[85]=ca[85]=1,fa[1]=fa[169]=0,ga[1]=ga[169]=-1,da[1]=da[169]=0,ia[1]=ia[169]=-1,oa[1]=oa[169]=0,sa[1]=sa[169]=0,ea[4]=ea[166]=0,na[4]=na[166]=-1,ra[4]=ra[166]=1,aa[4]=aa[166]=1,ua[4]=ua[166]=0,ca[4]=ca[166]=0,Qs[16]=Qs[154]=0,$s[16]=$s[154]=1,ta[16]=ta[154]=1,Js[16]=Js[154]=1,Zs[16]=Zs[154]=0,Ks[16]=Ks[154]=1,ha[64]=ha[106]=0,la[64]=la[106]=1,pa[64]=pa[106]=0,Vs[64]=Vs[106]=-1,Hs[64]=Hs[106]=0,Ws[64]=Ws[106]=1,ha[2]=ha[168]=0,la[2]=la[168]=-1,pa[2]=pa[168]=1,fa[2]=fa[168]=0,ga[2]=ga[168]=-1,da[2]=da[168]=0,ia[2]=ia[168]=-1,oa[2]=oa[168]=0,sa[2]=sa[168]=0,aa[2]=aa[168]=-1,ua[2]=ua[168]=0,ca[2]=ca[168]=1,Qs[8]=Qs[162]=0,$s[8]=$s[162]=-1,ta[8]=ta[162]=0,ea[8]=ea[162]=0,na[8]=na[162]=-1,ra[8]=ra[162]=1,ia[8]=ia[162]=1,oa[8]=oa[162]=0,sa[8]=sa[162]=1,aa[8]=aa[162]=1,ua[8]=ua[162]=0,ca[8]=ca[162]=0,Qs[32]=Qs[138]=0,$s[32]=$s[138]=1,ta[32]=ta[138]=1,ea[32]=ea[138]=0,na[32]=na[138]=1,ra[32]=ra[138]=0,Vs[32]=Vs[138]=1,Hs[32]=Hs[138]=0,Ws[32]=Ws[138]=0,Js[32]=Js[138]=1,Zs[32]=Zs[138]=0,Ks[32]=Ks[138]=1,fa[128]=fa[42]=0,ga[128]=ga[42]=1,da[128]=da[42]=1,ha[128]=ha[42]=0,la[128]=la[42]=1,pa[128]=pa[42]=0,Vs[128]=Vs[42]=-1,Hs[128]=Hs[42]=0,Ws[128]=Ws[42]=1,Js[128]=Js[42]=-1,Zs[128]=Zs[42]=0,Ks[128]=Ks[42]=0,ea[5]=ea[165]=-1,na[5]=na[165]=0,ra[5]=ra[165]=0,fa[5]=fa[165]=1,ga[5]=ga[165]=0,da[5]=da[165]=0,aa[20]=aa[150]=0,ua[20]=ua[150]=1,ca[20]=ca[150]=1,Js[20]=Js[150]=0,Zs[20]=Zs[150]=-1,Ks[20]=Ks[150]=1,Qs[80]=Qs[90]=-1,$s[80]=$s[90]=0,ta[80]=ta[90]=1,ha[80]=ha[90]=1,la[80]=la[90]=0,pa[80]=pa[90]=1,ia[65]=ia[105]=0,oa[65]=oa[105]=1,sa[65]=sa[105]=0,Vs[65]=Vs[105]=0,Hs[65]=Hs[105]=-1,Ws[65]=Ws[105]=0,Qs[160]=Qs[10]=-1,$s[160]=$s[10]=0,ta[160]=ta[10]=1,ea[160]=ea[10]=-1,na[160]=na[10]=0,ra[160]=ra[10]=0,fa[160]=fa[10]=1,ga[160]=ga[10]=0,da[160]=da[10]=0,ha[160]=ha[10]=1,la[160]=la[10]=0,pa[160]=pa[10]=1,aa[130]=aa[40]=0,ua[130]=ua[40]=1,ca[130]=ca[40]=1,ia[130]=ia[40]=0,oa[130]=oa[40]=1,sa[130]=sa[40]=0,Vs[130]=Vs[40]=0,Hs[130]=Hs[40]=-1,Ws[130]=Ws[40]=0,Js[130]=Js[40]=0,Zs[130]=Zs[40]=-1,Ks[130]=Ks[40]=1,ea[37]=ea[133]=0,na[37]=na[133]=1,ra[37]=ra[133]=1,fa[37]=fa[133]=0,ga[37]=ga[133]=1,da[37]=da[133]=0,Vs[37]=Vs[133]=-1,Hs[37]=Hs[133]=0,Ws[37]=Ws[133]=0,Js[37]=Js[133]=1,Zs[37]=Zs[133]=0,Ks[37]=Ks[133]=0,aa[148]=aa[22]=-1,ua[148]=ua[22]=0,ca[148]=ca[22]=0,fa[148]=fa[22]=0,ga[148]=ga[22]=-1,da[148]=da[22]=1,ha[148]=ha[22]=0,la[148]=la[22]=1,pa[148]=pa[22]=1,Js[148]=Js[22]=-1,Zs[148]=Zs[22]=0,Ks[148]=Ks[22]=1,Qs[82]=Qs[88]=0,$s[82]=$s[88]=-1,ta[82]=ta[88]=1,aa[82]=aa[88]=1,ua[82]=ua[88]=0,ca[82]=ca[88]=1,ia[82]=ia[88]=-1,oa[82]=oa[88]=0,sa[82]=sa[88]=1,ha[82]=ha[88]=0,la[82]=la[88]=-1,pa[82]=pa[88]=0,Qs[73]=Qs[97]=0,$s[73]=$s[97]=1,ta[73]=ta[97]=0,ea[73]=ea[97]=0,na[73]=na[97]=-1,ra[73]=ra[97]=0,ia[73]=ia[97]=1,oa[73]=oa[97]=0,sa[73]=sa[97]=0,Vs[73]=Vs[97]=1,Hs[73]=Hs[97]=0,Ws[73]=Ws[97]=1,Qs[145]=Qs[25]=0,$s[145]=$s[25]=-1,ta[145]=ta[25]=0,ia[145]=ia[25]=1,oa[145]=oa[25]=0,sa[145]=sa[25]=1,fa[145]=fa[25]=0,ga[145]=ga[25]=1,da[145]=da[25]=1,Js[145]=Js[25]=-1,Zs[145]=Zs[25]=0,Ks[145]=Ks[25]=0,ea[70]=ea[100]=0,na[70]=na[100]=1,ra[70]=ra[100]=0,aa[70]=aa[100]=-1,ua[70]=ua[100]=0,ca[70]=ca[100]=1,ha[70]=ha[100]=0,la[70]=la[100]=-1,pa[70]=pa[100]=1,Vs[70]=Vs[100]=1,Hs[70]=Hs[100]=0,Ws[70]=Ws[100]=0,ea[101]=ea[69]=0,na[101]=na[69]=1,ra[101]=ra[69]=0,Vs[101]=Vs[69]=1,Hs[101]=Hs[69]=0,Ws[101]=Ws[69]=0,fa[149]=fa[21]=0,ga[149]=ga[21]=1,da[149]=da[21]=1,Js[149]=Js[21]=-1,Zs[149]=Zs[21]=0,Ks[149]=Ks[21]=0,aa[86]=aa[84]=-1,ua[86]=ua[84]=0,ca[86]=ca[84]=1,ha[86]=ha[84]=0,la[86]=la[84]=-1,pa[86]=pa[84]=1,Qs[89]=Qs[81]=0,$s[89]=$s[81]=-1,ta[89]=ta[81]=0,ia[89]=ia[81]=1,oa[89]=oa[81]=0,sa[89]=sa[81]=1,Qs[96]=Qs[74]=0,$s[96]=$s[74]=1,ta[96]=ta[74]=0,ea[96]=ea[74]=-1,na[96]=na[74]=0,ra[96]=ra[74]=1,ha[96]=ha[74]=1,la[96]=la[74]=0,pa[96]=pa[74]=0,Vs[96]=Vs[74]=1,Hs[96]=Hs[74]=0,Ws[96]=Ws[74]=1,Qs[24]=Qs[146]=0,$s[24]=$s[146]=-1,ta[24]=ta[146]=1,aa[24]=aa[146]=1,ua[24]=ua[146]=0,ca[24]=ca[146]=1,ia[24]=ia[146]=0,oa[24]=oa[146]=1,sa[24]=sa[146]=1,Js[24]=Js[146]=0,Zs[24]=Zs[146]=-1,Ks[24]=Ks[146]=0,ea[6]=ea[164]=-1,na[6]=na[164]=0,ra[6]=ra[164]=1,aa[6]=aa[164]=-1,ua[6]=ua[164]=0,ca[6]=ca[164]=0,fa[6]=fa[164]=0,ga[6]=ga[164]=-1,da[6]=da[164]=1,ha[6]=ha[164]=1,la[6]=la[164]=0,pa[6]=pa[164]=0,ia[129]=ia[41]=0,oa[129]=oa[41]=1,sa[129]=sa[41]=1,fa[129]=fa[41]=0,ga[129]=ga[41]=1,da[129]=da[41]=0,Vs[129]=Vs[41]=-1,Hs[129]=Hs[41]=0,Ws[129]=Ws[41]=0,Js[129]=Js[41]=0,Zs[129]=Zs[41]=-1,Ks[129]=Ks[41]=0,aa[66]=aa[104]=0,ua[66]=ua[104]=1,ca[66]=ca[104]=0,ia[66]=ia[104]=-1,oa[66]=oa[104]=0,sa[66]=sa[104]=1,ha[66]=ha[104]=0,la[66]=la[104]=-1,pa[66]=pa[104]=0,Vs[66]=Vs[104]=0,Hs[66]=Hs[104]=-1,Ws[66]=Ws[104]=1,Qs[144]=Qs[26]=-1,$s[144]=$s[26]=0,ta[144]=ta[26]=0,fa[144]=fa[26]=1,ga[144]=ga[26]=0,da[144]=da[26]=1,ha[144]=ha[26]=0,la[144]=la[26]=1,pa[144]=pa[26]=1,Js[144]=Js[26]=-1,Zs[144]=Zs[26]=0,Ks[144]=Ks[26]=1,ea[36]=ea[134]=0,na[36]=na[134]=1,ra[36]=ra[134]=1,aa[36]=aa[134]=0,ua[36]=ua[134]=1,ca[36]=ca[134]=0,Vs[36]=Vs[134]=0,Hs[36]=Hs[134]=-1,Ws[36]=Ws[134]=1,Js[36]=Js[134]=1,Zs[36]=Zs[134]=0,Ks[36]=Ks[134]=0,Qs[9]=Qs[161]=-1,$s[9]=$s[161]=0,ta[9]=ta[161]=0,ea[9]=ea[161]=0,na[9]=na[161]=-1,ra[9]=ra[161]=0,ia[9]=ia[161]=1,oa[9]=oa[161]=0,sa[9]=sa[161]=0,fa[9]=fa[161]=1,ga[9]=ga[161]=0,da[9]=da[161]=1,Qs[136]=0,$s[136]=1,ta[136]=1,ea[136]=0,na[136]=1,ra[136]=0,aa[136]=-1,ua[136]=0,ca[136]=1,ia[136]=-1,oa[136]=0,sa[136]=0,fa[136]=0,ga[136]=-1,da[136]=0,ha[136]=0,la[136]=-1,pa[136]=1,Vs[136]=1,Hs[136]=0,Ws[136]=0,Js[136]=1,Zs[136]=0,Ks[136]=1,Qs[34]=0,$s[34]=-1,ta[34]=0,ea[34]=0,na[34]=-1,ra[34]=1,aa[34]=1,ua[34]=0,ca[34]=0,ia[34]=1,oa[34]=0,sa[34]=1,fa[34]=0,ga[34]=1,da[34]=1,ha[34]=0,la[34]=1,pa[34]=0,Vs[34]=-1,Hs[34]=0,Ws[34]=1,Js[34]=-1,Zs[34]=0,Ks[34]=0,Qs[35]=0,$s[35]=1,ta[35]=1,ea[35]=0,na[35]=-1,ra[35]=1,aa[35]=1,ua[35]=0,ca[35]=0,ia[35]=-1,oa[35]=0,sa[35]=0,fa[35]=0,ga[35]=-1,da[35]=0,ha[35]=0,la[35]=1,pa[35]=0,Vs[35]=-1,Hs[35]=0,Ws[35]=1,Js[35]=1,Zs[35]=0,Ks[35]=1,Qs[153]=0,$s[153]=1,ta[153]=1,ia[153]=-1,oa[153]=0,sa[153]=0,fa[153]=0,ga[153]=-1,da[153]=0,Js[153]=1,Zs[153]=0,Ks[153]=1,ea[102]=0,na[102]=-1,ra[102]=1,aa[102]=1,ua[102]=0,ca[102]=0,ha[102]=0,la[102]=1,pa[102]=0,Vs[102]=-1,Hs[102]=0,Ws[102]=1,Qs[155]=0,$s[155]=-1,ta[155]=0,ia[155]=1,oa[155]=0,sa[155]=1,fa[155]=0,ga[155]=1,da[155]=1,Js[155]=-1,Zs[155]=0,Ks[155]=0,ea[103]=0,na[103]=1,ra[103]=0,aa[103]=-1,ua[103]=0,ca[103]=1,ha[103]=0,la[103]=-1,pa[103]=1,Vs[103]=1,Hs[103]=0,Ws[103]=0,Qs[152]=0,$s[152]=1,ta[152]=1,aa[152]=-1,ua[152]=0,ca[152]=1,ia[152]=-1,oa[152]=0,sa[152]=0,fa[152]=0,ga[152]=-1,da[152]=0,ha[152]=0,la[152]=-1,pa[152]=1,Js[152]=1,Zs[152]=0,Ks[152]=1,Qs[156]=0,$s[156]=-1,ta[156]=1,aa[156]=1,ua[156]=0,ca[156]=1,ia[156]=-1,oa[156]=0,sa[156]=0,fa[156]=0,ga[156]=-1,da[156]=0,ha[156]=0,la[156]=1,pa[156]=1,Js[156]=-1,Zs[156]=0,Ks[156]=1,Qs[137]=0,$s[137]=1,ta[137]=1,ea[137]=0,na[137]=1,ra[137]=0,ia[137]=-1,oa[137]=0,sa[137]=0,fa[137]=0,ga[137]=-1,da[137]=0,Vs[137]=1,Hs[137]=0,Ws[137]=0,Js[137]=1,Zs[137]=0,Ks[137]=1,Qs[139]=0,$s[139]=1,ta[139]=1,ea[139]=0,na[139]=-1,ra[139]=0,ia[139]=1,oa[139]=0,sa[139]=0,fa[139]=0,ga[139]=1,da[139]=0,Vs[139]=-1,Hs[139]=0,Ws[139]=0,Js[139]=1,Zs[139]=0,Ks[139]=1,Qs[98]=0,$s[98]=-1,ta[98]=0,ea[98]=0,na[98]=-1,ra[98]=1,aa[98]=1,ua[98]=0,ca[98]=0,ia[98]=1,oa[98]=0,sa[98]=1,ha[98]=0,la[98]=1,pa[98]=0,Vs[98]=-1,Hs[98]=0,Ws[98]=1,Qs[99]=0,$s[99]=1,ta[99]=0,ea[99]=0,na[99]=-1,ra[99]=1,aa[99]=1,ua[99]=0,ca[99]=0,ia[99]=-1,oa[99]=0,sa[99]=1,ha[99]=0,la[99]=-1,pa[99]=0,Vs[99]=1,Hs[99]=0,Ws[99]=1,ea[38]=0,na[38]=-1,ra[38]=1,aa[38]=1,ua[38]=0,ca[38]=0,fa[38]=0,ga[38]=1,da[38]=1,ha[38]=0,la[38]=1,pa[38]=0,Vs[38]=-1,Hs[38]=0,Ws[38]=1,Js[38]=-1,Zs[38]=0,Ks[38]=0,ea[39]=0,na[39]=1,ra[39]=1,aa[39]=-1,ua[39]=0,ca[39]=0,fa[39]=0,ga[39]=-1,da[39]=1,ha[39]=0,la[39]=1,pa[39]=0,Vs[39]=-1,Hs[39]=0,Ws[39]=1,Js[39]=1,Zs[39]=0,Ks[39]=0;var ya=function(t){return[[t.bottomleft,0],[0,0],[0,t.leftbottom]]},_a=function(t){return[[1,t.rightbottom],[1,0],[t.bottomright,0]]},ma=function(t){return[[t.topright,1],[1,1],[1,t.righttop]]},va=function(t){return[[0,t.lefttop],[0,1],[t.topleft,1]]},xa=function(t){return[[t.bottomright,0],[t.bottomleft,0],[0,t.leftbottom],[0,t.lefttop]]},Ea=function(t){return[[t.bottomright,0],[t.bottomleft,0],[1,t.righttop],[1,t.rightbottom]]},wa=function(t){return[[1,t.righttop],[1,t.rightbottom],[t.topleft,1],[t.topright,1]]},ba=function(t){return[[0,t.leftbottom],[0,t.lefttop],[t.topleft,1],[t.topright,1]]},Ia=[],Na=[],Ca=[],Sa=[],Ma=[],La=[],Pa=[],Oa=[];Sa[1]=Ma[1]=18,Sa[169]=Ma[169]=18,Ca[4]=Na[4]=12,Ca[166]=Na[166]=12,Ia[16]=Oa[16]=4,Ia[154]=Oa[154]=4,La[64]=Pa[64]=22,La[106]=Pa[106]=22,Ca[2]=La[2]=17,Sa[2]=Ma[2]=18,Ca[168]=La[168]=17,Sa[168]=Ma[168]=18,Ia[8]=Sa[8]=9,Na[8]=Ca[8]=12,Ia[162]=Sa[162]=9,Na[162]=Ca[162]=12,Ia[32]=Oa[32]=4,Na[32]=Pa[32]=1,Ia[138]=Oa[138]=4,Na[138]=Pa[138]=1,Ma[128]=Oa[128]=21,La[128]=Pa[128]=22,Ma[42]=Oa[42]=21,La[42]=Pa[42]=22,Na[5]=Ma[5]=14,Na[165]=Ma[165]=14,Ca[20]=Oa[20]=6,Ca[150]=Oa[150]=6,Ia[80]=La[80]=11,Ia[90]=La[90]=11,Sa[65]=Pa[65]=3,Sa[105]=Pa[105]=3,Ia[160]=La[160]=11,Na[160]=Ma[160]=14,Ia[10]=La[10]=11,Na[10]=Ma[10]=14,Ca[130]=Oa[130]=6,Sa[130]=Pa[130]=3,Ca[40]=Oa[40]=6,Sa[40]=Pa[40]=3,Na[101]=Pa[101]=1,Na[69]=Pa[69]=1,Ma[149]=Oa[149]=21,Ma[21]=Oa[21]=21,Ca[86]=La[86]=17,Ca[84]=La[84]=17,Ia[89]=Sa[89]=9,Ia[81]=Sa[81]=9,Ia[96]=Pa[96]=0,Na[96]=La[96]=15,Ia[74]=Pa[74]=0,Na[74]=La[74]=15,Ia[24]=Ca[24]=8,Sa[24]=Oa[24]=7,Ia[146]=Ca[146]=8,Sa[146]=Oa[146]=7,Na[6]=La[6]=15,Ca[6]=Ma[6]=16,Na[164]=La[164]=15,Ca[164]=Ma[164]=16,Sa[129]=Oa[129]=7,Ma[129]=Pa[129]=20,Sa[41]=Oa[41]=7,Ma[41]=Pa[41]=20,Ca[66]=Pa[66]=2,Sa[66]=La[66]=19,Ca[104]=Pa[104]=2,Sa[104]=La[104]=19,Ia[144]=Ma[144]=10,La[144]=Oa[144]=23,Ia[26]=Ma[26]=10,La[26]=Oa[26]=23,Na[36]=Oa[36]=5,Ca[36]=Pa[36]=2,Na[134]=Oa[134]=5,Ca[134]=Pa[134]=2,Ia[9]=Ma[9]=10,Na[9]=Sa[9]=13,Ia[161]=Ma[161]=10,Na[161]=Sa[161]=13,Na[37]=Oa[37]=5,Ma[37]=Pa[37]=20,Na[133]=Oa[133]=5,Ma[133]=Pa[133]=20,Ca[148]=Ma[148]=16,La[148]=Oa[148]=23,Ca[22]=Ma[22]=16,La[22]=Oa[22]=23,Ia[82]=Ca[82]=8,Sa[82]=La[82]=19,Ia[88]=Ca[88]=8,Sa[88]=La[88]=19,Ia[73]=Pa[73]=0,Na[73]=Sa[73]=13,Ia[97]=Pa[97]=0,Na[97]=Sa[97]=13,Ia[145]=Sa[145]=9,Ma[145]=Oa[145]=21,Ia[25]=Sa[25]=9,Ma[25]=Oa[25]=21,Na[70]=Pa[70]=1,Ca[70]=La[70]=17,Na[100]=Pa[100]=1,Ca[100]=La[100]=17,Ia[34]=Sa[34]=9,Na[34]=Ca[34]=12,Ma[34]=Oa[34]=21,La[34]=Pa[34]=22,Ia[136]=Oa[136]=4,Na[136]=Pa[136]=1,Ca[136]=La[136]=17,Sa[136]=Ma[136]=18,Ia[35]=Oa[35]=4,Na[35]=Ca[35]=12,Sa[35]=Ma[35]=18,La[35]=Pa[35]=22,Ia[153]=Oa[153]=4,Sa[153]=Ma[153]=18,Na[102]=Ca[102]=12,La[102]=Pa[102]=22,Ia[155]=Sa[155]=9,Ma[155]=Oa[155]=23,Na[103]=Pa[103]=1,Ca[103]=La[103]=17,Ia[152]=Oa[152]=4,Ca[152]=La[152]=17,Sa[152]=Ma[152]=18,Ia[156]=Ca[156]=8,Sa[156]=Ma[156]=18,La[156]=Oa[156]=23,Ia[137]=Oa[137]=4,Na[137]=Pa[137]=1,Sa[137]=Ma[137]=18,Ia[139]=Oa[139]=4,Na[139]=Sa[139]=13,Ma[139]=Pa[139]=20,Ia[98]=Sa[98]=9,Na[98]=Ca[98]=12,La[98]=Pa[98]=22,Ia[99]=Pa[99]=0,Na[99]=Ca[99]=12,Sa[99]=La[99]=19,Na[38]=Ca[38]=12,Ma[38]=Oa[38]=21,La[38]=Pa[38]=22,Na[39]=Oa[39]=5,Ca[39]=Ma[39]=16,La[39]=Pa[39]=22;var Ra=[];Ra[1]=Ra[169]=ya,Ra[4]=Ra[166]=_a,Ra[16]=Ra[154]=ma,Ra[64]=Ra[106]=va,Ra[168]=Ra[2]=xa,Ra[162]=Ra[8]=Ea,Ra[138]=Ra[32]=wa,Ra[42]=Ra[128]=ba,Ra[5]=Ra[165]=function(t){return[[0,0],[0,t.leftbottom],[1,t.rightbottom],[1,0]]},Ra[20]=Ra[150]=function(t){return[[1,0],[t.bottomright,0],[t.topright,1],[1,1]]},Ra[80]=Ra[90]=function(t){return[[1,1],[1,t.righttop],[0,t.lefttop],[0,1]]},Ra[65]=Ra[105]=function(t){return[[t.bottomleft,0],[0,0],[0,1],[t.topleft,1]]},Ra[160]=Ra[10]=function(t){return[[1,t.righttop],[1,t.rightbottom],[0,t.leftbottom],[0,t.lefttop]]},Ra[130]=Ra[40]=function(t){return[[t.topleft,1],[t.topright,1],[t.bottomright,0],[t.bottomleft,0]]},Ra[85]=function(){return[[0,0],[0,1],[1,1],[1,0]]},Ra[101]=Ra[69]=function(t){return[[1,t.rightbottom],[1,0],[0,0],[0,1],[t.topleft,1]]},Ra[149]=Ra[21]=function(t){return[[t.topright,1],[1,1],[1,0],[0,0],[0,t.leftbottom]]},Ra[86]=Ra[84]=function(t){return[[1,0],[t.bottomright,0],[0,t.lefttop],[0,1],[1,1]]},Ra[89]=Ra[81]=function(t){return[[1,1],[1,t.righttop],[t.bottomleft,0],[0,0],[0,1]]},Ra[96]=Ra[74]=function(t){return[[1,t.righttop],[1,t.rightbottom],[0,t.lefttop],[0,1],[t.topleft,1]]},Ra[24]=Ra[146]=function(t){return[[1,1],[1,t.righttop],[t.bottomright,0],[t.bottomleft,0],[t.topright,1]]},Ra[6]=Ra[164]=function(t){return[[1,t.rightbottom],[1,0],[t.bottomright,0],[0,t.leftbottom],[0,t.lefttop]]},Ra[129]=Ra[41]=function(t){return[[t.topright,1],[t.bottomleft,0],[0,0],[0,t.leftbottom],[t.topleft,1]]},Ra[66]=Ra[104]=function(t){return[[t.bottomright,0],[t.bottomleft,0],[0,t.lefttop],[0,1],[t.topleft,1]]},Ra[144]=Ra[26]=function(t){return[[1,1],[1,t.righttop],[0,t.leftbottom],[0,t.lefttop],[t.topright,1]]},Ra[36]=Ra[134]=function(t){return[[1,t.rightbottom],[1,0],[t.bottomright,0],[t.topleft,1],[t.topright,1]]},Ra[9]=Ra[161]=function(t){return[[1,t.righttop],[1,t.rightbottom],[t.bottomleft,0],[0,0],[0,t.leftbottom]]},Ra[37]=Ra[133]=function(t){return[[1,t.rightbottom],[1,0],[0,0],[0,t.leftbottom],[t.topleft,1],[t.topright,1]]},Ra[148]=Ra[22]=function(t){return[[1,1],[1,0],[t.bottomright,0],[0,t.leftbottom],[0,t.lefttop],[t.topright,1]]},Ra[82]=Ra[88]=function(t){return[[1,1],[1,t.righttop],[t.bottomright,0],[t.bottomleft,0],[0,t.lefttop],[0,1]]},Ra[73]=Ra[97]=function(t){return[[1,t.righttop],[1,t.rightbottom],[t.bottomleft,0],[0,0],[0,1],[t.topleft,1]]},Ra[145]=Ra[25]=function(t){return[[1,1],[1,t.righttop],[t.bottomleft,0],[0,0],[0,t.leftbottom],[t.topright,1]]},Ra[70]=Ra[100]=function(t){return[[1,t.rightbottom],[1,0],[t.bottomright,0],[0,t.lefttop],[0,1],[t.topleft,1]]},Ra[34]=function(t){return[ba(t),Ea(t)]},Ra[35]=function(t){return[[1,t.righttop],[1,t.rightbottom],[t.bottomright,0],[t.bottomleft,0],[0,t.leftbottom],[0,t.lefttop],[t.topleft,1],[t.topright,1]]},Ra[136]=function(t){return[wa(t),xa(t)]},Ra[153]=function(t){return[ma(t),ya(t)]},Ra[102]=function(t){return[_a(t),va(t)]},Ra[155]=function(t){return[[1,1],[1,t.righttop],[t.bottomleft,0],[0,0],[0,t.leftbottom],[t.topright,1]]},Ra[103]=function(t){return[[1,t.rightbottom],[1,0],[t.bottomright,0],[0,t.lefttop],[0,1],[t.topleft,1]]},Ra[152]=function(t){return[ma(t),xa(t)]},Ra[156]=function(t){return[[1,1],[1,t.righttop],[t.bottomright,0],[t.bottomleft,0],[0,t.leftbottom],[0,t.lefttop],[t.topright,1]]},Ra[137]=function(t){return[wa(t),ya(t)]},Ra[139]=function(t){return[[1,t.righttop],[1,t.rightbottom],[t.bottomleft,0],[0,0],[0,t.leftbottom],[t.topleft,1],[t.topright,1]]},Ra[98]=function(t){return[Ea(t),va(t)]},Ra[99]=function(t){return[[1,t.righttop],[1,t.rightbottom],[t.bottomright,0],[t.bottomleft,0],[0,t.lefttop],[0,1],[t.topleft,1]]},Ra[38]=function(t){return[_a(t),ba(t)]},Ra[39]=function(t){return[[1,t.rightbottom],[1,0],[t.bottomright,0],[0,t.leftbottom],[0,t.lefttop],[t.topleft,1],[t.topright,1]]};var Ta=function t(e){this.id=t.buildId(e),this.coordinates=e,this.innerEdges=[],this.outerEdges=[],this.outerEdgesSorted=!1};Ta.buildId=function(t){return t.join(",")},Ta.prototype.removeInnerEdge=function(t){this.innerEdges=this.innerEdges.filter(function(e){return e.from.id!==t.from.id})},Ta.prototype.removeOuterEdge=function(t){this.outerEdges=this.outerEdges.filter(function(e){return e.to.id!==t.to.id})},Ta.prototype.addOuterEdge=function(t){this.outerEdges.push(t),this.outerEdgesSorted=!1},Ta.prototype.sortOuterEdges=function(){var t=this;this.outerEdgesSorted||(this.outerEdges.sort(function(e,n){var r=e.to,i=n.to;if(r.coordinates[0]-t.coordinates[0]>=0&&i.coordinates[0]-t.coordinates[0]<0)return 1;if(r.coordinates[0]-t.coordinates[0]<0&&i.coordinates[0]-t.coordinates[0]>=0)return-1;if(r.coordinates[0]-t.coordinates[0]==0&&i.coordinates[0]-t.coordinates[0]==0)return r.coordinates[1]-t.coordinates[1]>=0||i.coordinates[1]-t.coordinates[1]>=0?r.coordinates[1]-i.coordinates[1]:i.coordinates[1]-r.coordinates[1];var o=xr(t.coordinates,r.coordinates,i.coordinates);if(o<0)return 1;if(o>0)return-1;return Math.pow(r.coordinates[0]-t.coordinates[0],2)+Math.pow(r.coordinates[1]-t.coordinates[1],2)-(Math.pow(i.coordinates[0]-t.coordinates[0],2)+Math.pow(i.coordinates[1]-t.coordinates[1],2))}),this.outerEdgesSorted=!0)},Ta.prototype.getOuterEdges=function(){return this.sortOuterEdges(),this.outerEdges},Ta.prototype.getOuterEdge=function(t){return this.sortOuterEdges(),this.outerEdges[t]},Ta.prototype.addInnerEdge=function(t){this.innerEdges.push(t)};var Aa=function(t,e){this.from=t,this.to=e,this.next=void 0,this.label=void 0,this.symetric=void 0,this.ring=void 0,this.from.addOuterEdge(this),this.to.addInnerEdge(this)};Aa.prototype.getSymetric=function(){return this.symetric||(this.symetric=new Aa(this.to,this.from),this.symetric.symetric=this),this.symetric},Aa.prototype.deleteEdge=function(){this.from.removeOuterEdge(this),this.to.removeInnerEdge(this)},Aa.prototype.isEqual=function(t){return this.from.id===t.from.id&&this.to.id===t.to.id},Aa.prototype.toString=function(){return"Edge { "+this.from.id+" -> "+this.to.id+" }"},Aa.prototype.toLineString=function(){return a([this.from.coordinates,this.to.coordinates])},Aa.prototype.compareTo=function(t){return xr(t.from.coordinates,t.to.coordinates,this.to.coordinates)};var Da=function(){this.edges=[],this.polygon=void 0,this.envelope=void 0},Fa={length:{configurable:!0}};Da.prototype.push=function(t){this[this.edges.length]=t,this.edges.push(t),this.polygon=this.envelope=void 0},Da.prototype.get=function(t){return this.edges[t]},Fa.length.get=function(){return this.edges.length},Da.prototype.forEach=function(t){this.edges.forEach(t)},Da.prototype.map=function(t){return this.edges.map(t)},Da.prototype.some=function(t){return this.edges.some(t)},Da.prototype.isValid=function(){return!0},Da.prototype.isHole=function(){var t=this,e=this.edges.reduce(function(e,n,r){return n.from.coordinates[1]>t.edges[e].from.coordinates[1]&&(e=r),e},0),n=(0===e?this.length:e)-1,r=(e+1)%this.length,i=xr(this.edges[n].from.coordinates,this.edges[e].from.coordinates,this.edges[r].from.coordinates);return 0===i?this.edges[n].from.coordinates[0]>this.edges[r].from.coordinates[0]:i>0},Da.prototype.toMultiPoint=function(){return l(this.edges.map(function(t){return t.from.coordinates}))},Da.prototype.toPolygon=function(){if(this.polygon)return this.polygon;var t=this.edges.map(function(t){return t.from.coordinates});return t.push(this.edges[0].from.coordinates),this.polygon=o([t])},Da.prototype.getEnvelope=function(){return this.envelope?this.envelope:this.envelope=he(this.toPolygon())},Da.findEdgeRingContaining=function(t,e){var n,i,o=t.getEnvelope();return e.forEach(function(e){var s=e.getEnvelope();if(i&&(n=i.getEnvelope()),!function(t,e){var n=t.geometry.coordinates.map(function(t){return t[0]}),r=t.geometry.coordinates.map(function(t){return t[1]}),i=e.geometry.coordinates.map(function(t){return t[0]}),o=e.geometry.coordinates.map(function(t){return t[1]});return Math.max(null,n)===Math.max(null,i)&&Math.max(null,r)===Math.max(null,o)&&Math.min(null,n)===Math.min(null,i)&&Math.min(null,r)===Math.min(null,o)}(s,o)&&Er(s,o)){var a=t.map(function(t){return t.from.coordinates}).find(function(t){return!e.some(function(e){return function(t,e){return t[0]===e[0]&&t[1]===e[1]}(t,e.from.coordinates)})});a&&e.inside(r(a))&&(i&&!Er(n,s)||(i=e))}}),i},Da.prototype.inside=function(t){return Pt(t,this.toPolygon())},Object.defineProperties(Da.prototype,Fa);var qa=function(){this.edges=[],this.nodes={}};qa.fromGeoJson=function(t){!function(t){if(!t)throw new Error("No geojson passed");if("FeatureCollection"!==t.type&&"GeometryCollection"!==t.type&&"MultiLineString"!==t.type&&"LineString"!==t.type&&"Feature"!==t.type)throw new Error("Invalid input type '"+t.type+"'. Geojson must be FeatureCollection, GeometryCollection, LineString, MultiLineString or Feature")}(t);var e=new qa;return F(t,function(t){H(t,"LineString","Graph::fromGeoJson"),M(t,function(t,n){if(t){var r=e.getNode(t),i=e.getNode(n);e.addEdge(r,i)}return n})}),e},qa.prototype.getNode=function(t){var e=Ta.buildId(t),n=this.nodes[e];return n||(n=this.nodes[e]=new Ta(t)),n},qa.prototype.addEdge=function(t,e){var n=new Aa(t,e),r=n.getSymetric();this.edges.push(n),this.edges.push(r)},qa.prototype.deleteDangles=function(){var t=this;Object.keys(this.nodes).map(function(e){return t.nodes[e]}).forEach(function(e){return t._removeIfDangle(e)})},qa.prototype._removeIfDangle=function(t){var e=this;if(t.innerEdges.length<=1){var n=t.getOuterEdges().map(function(t){return t.to});this.removeNode(t),n.forEach(function(t){return e._removeIfDangle(t)})}},qa.prototype.deleteCutEdges=function(){var t=this;this._computeNextCWEdges(),this._findLabeledEdgeRings(),this.edges.forEach(function(e){e.label===e.symetric.label&&(t.removeEdge(e.symetric),t.removeEdge(e))})},qa.prototype._computeNextCWEdges=function(t){var e=this;void 0===t?Object.keys(this.nodes).forEach(function(t){return e._computeNextCWEdges(e.nodes[t])}):t.getOuterEdges().forEach(function(e,n){t.getOuterEdge((0===n?t.getOuterEdges().length:n)-1).symetric.next=e})},qa.prototype._computeNextCCWEdges=function(t,e){for(var n,r,i=t.getOuterEdges(),o=i.length-1;o>=0;--o){var s=i[o],a=s.symetric,u=void 0,c=void 0;s.label===e&&(u=s),a.label===e&&(c=a),u&&c&&(c&&(r=c),u&&(r&&(r.next=u,r=void 0),n||(n=u)))}r&&(r.next=n)},qa.prototype._findLabeledEdgeRings=function(){var t=[],e=0;return this.edges.forEach(function(n){if(!(n.label>=0)){t.push(n);var r=n;do{r.label=e,r=r.next}while(!n.isEqual(r));e++}}),t},qa.prototype.getEdgeRings=function(){var t=this;this._computeNextCWEdges(),this.edges.forEach(function(t){t.label=void 0}),this._findLabeledEdgeRings().forEach(function(e){t._findIntersectionNodes(e).forEach(function(n){t._computeNextCCWEdges(n,e.label)})});var e=[];return this.edges.forEach(function(n){n.ring||e.push(t._findEdgeRing(n))}),e},qa.prototype._findIntersectionNodes=function(t){var e=[],n=t,r=function(){var r=0;n.from.getOuterEdges().forEach(function(e){e.label===t.label&&++r}),r>1&&e.push(n.from),n=n.next};do{r()}while(!t.isEqual(n));return e},qa.prototype._findEdgeRing=function(t){var e=t,n=new Da;do{n.push(e),e.ring=n,e=e.next}while(!t.isEqual(e));return n},qa.prototype.removeNode=function(t){var e=this;t.getOuterEdges().forEach(function(t){return e.removeEdge(t)}),t.innerEdges.forEach(function(t){return e.removeEdge(t)}),delete this.nodes[t.id]},qa.prototype.removeEdge=function(t){this.edges=this.edges.filter(function(e){return!e.isEqual(t)}),t.deleteEdge()};var Ga=mt(function(t,e){function n(t){var e=[];for(var n in t)e.push(n);return e}(t.exports="function"==typeof Object.keys?Object.keys:n).shim=n}),Ba=(Ga.shim,mt(function(t,e){function n(t){return"[object Arguments]"==Object.prototype.toString.call(t)}function r(t){return t&&"object"==typeof t&&"number"==typeof t.length&&Object.prototype.hasOwnProperty.call(t,"callee")&&!Object.prototype.propertyIsEnumerable.call(t,"callee")||!1}var i="[object Arguments]"==function(){return Object.prototype.toString.call(arguments)}();(e=t.exports=i?n:r).supported=n,e.unsupported=r})),ka=(Ba.supported,Ba.unsupported,mt(function(t){function e(t){return null===t||void 0===t}function n(t){return!(!t||"object"!=typeof t||"number"!=typeof t.length)&&("function"==typeof t.copy&&"function"==typeof t.slice&&!(t.length>0&&"number"!=typeof t[0]))}var r=Array.prototype.slice,i=t.exports=function(t,o,s){return s||(s={}),t===o||(t instanceof Date&&o instanceof Date?t.getTime()===o.getTime():!t||!o||"object"!=typeof t&&"object"!=typeof o?s.strict?t===o:t==o:function(t,o,s){var a,u;if(e(t)||e(o))return!1;if(t.prototype!==o.prototype)return!1;if(Ba(t))return!!Ba(o)&&(t=r.call(t),o=r.call(o),i(t,o,s));if(n(t)){if(!n(o))return!1;if(t.length!==o.length)return!1;for(a=0;a<t.length;a++)if(t[a]!==o[a])return!1;return!0}try{var c=Ga(t),h=Ga(o)}catch(t){return!1}if(c.length!=h.length)return!1;for(c.sort(),h.sort(),a=c.length-1;a>=0;a--)if(c[a]!=h[a])return!1;for(a=c.length-1;a>=0;a--)if(u=c[a],!i(t[u],o[u],s))return!1;return typeof t==typeof o}(t,o,s))}})),za=function(t){this.precision=t&&t.precision?t.precision:17,this.direction=!(!t||!t.direction)&&t.direction,this.pseudoNode=!(!t||!t.pseudoNode)&&t.pseudoNode,this.objectComparator=t&&t.objectComparator?t.objectComparator:Rr};za.prototype.compare=function(t,e){if(t.type!==e.type||!Or(t,e))return!1;switch(t.type){case"Point":return this.compareCoord(t.coordinates,e.coordinates);case"LineString":return this.compareLine(t.coordinates,e.coordinates,0,!1);case"Polygon":return this.comparePolygon(t,e);case"Feature":return this.compareFeature(t,e);default:if(0===t.type.indexOf("Multi")){var n=this,r=Pr(t),i=Pr(e);return r.every(function(t){return this.some(function(e){return n.compare(t,e)})},i)}}return!1},za.prototype.compareCoord=function(t,e){if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(t[n].toFixed(this.precision)!==e[n].toFixed(this.precision))return!1;return!0},za.prototype.compareLine=function(t,e,n,r){if(!Or(t,e))return!1;var i=this.pseudoNode?t:this.removePseudo(t),o=this.pseudoNode?e:this.removePseudo(e);if(!r||this.compareCoord(i[0],o[0])||(o=this.fixStartIndex(o,i))){var s=this.compareCoord(i[n],o[n]);return this.direction||s?this.comparePath(i,o):!!this.compareCoord(i[n],o[o.length-(1+n)])&&this.comparePath(i.slice().reverse(),o)}},za.prototype.fixStartIndex=function(t,e){for(var n,r=-1,i=0;i<t.length;i++)if(this.compareCoord(t[i],e[0])){r=i;break}return r>=0&&(n=[].concat(t.slice(r,t.length),t.slice(1,r+1))),n},za.prototype.comparePath=function(t,e){var n=this;return t.every(function(t,e){return n.compareCoord(t,this[e])},e)},za.prototype.comparePolygon=function(t,e){if(this.compareLine(t.coordinates[0],e.coordinates[0],1,!0)){var n=t.coordinates.slice(1,t.coordinates.length),r=e.coordinates.slice(1,e.coordinates.length),i=this;return n.every(function(t){return this.some(function(e){return i.compareLine(t,e,1,!0)})},r)}return!1},za.prototype.compareFeature=function(t,e){return!(t.id!==e.id||!this.objectComparator(t.properties,e.properties)||!this.compareBBox(t,e))&&this.compare(t.geometry,e.geometry)},za.prototype.compareBBox=function(t,e){return!!(!t.bbox&&!e.bbox||t.bbox&&e.bbox&&this.compareCoord(t.bbox,e.bbox))},za.prototype.removePseudo=function(t){return t};var ja=za,Xa=mt(function(t){function e(t,e,n,r){this.dataset=[],this.epsilon=1,this.minPts=2,this.distance=this._euclideanDistance,this.clusters=[],this.noise=[],this._visited=[],this._assigned=[],this._datasetLength=0,this._init(t,e,n,r)}e.prototype.run=function(t,e,n,r){this._init(t,e,n,r);for(var i=0;i<this._datasetLength;i++)if(1!==this._visited[i]){this._visited[i]=1;var o=this._regionQuery(i);if(o.length<this.minPts)this.noise.push(i);else{var s=this.clusters.length;this.clusters.push([]),this._addToCluster(i,s),this._expandCluster(s,o)}}return this.clusters},e.prototype._init=function(t,e,n,r){if(t){if(!(t instanceof Array))throw Error("Dataset must be of type array, "+typeof t+" given");this.dataset=t,this.clusters=[],this.noise=[],this._datasetLength=t.length,this._visited=new Array(this._datasetLength),this._assigned=new Array(this._datasetLength)}e&&(this.epsilon=e),n&&(this.minPts=n),r&&(this.distance=r)},e.prototype._expandCluster=function(t,e){for(var n=0;n<e.length;n++){var r=e[n];if(1!==this._visited[r]){this._visited[r]=1;var i=this._regionQuery(r);i.length>=this.minPts&&(e=this._mergeArrays(e,i))}1!==this._assigned[r]&&this._addToCluster(r,t)}},e.prototype._addToCluster=function(t,e){this.clusters[e].push(t),this._assigned[t]=1},e.prototype._regionQuery=function(t){for(var e=[],n=0;n<this._datasetLength;n++){this.distance(this.dataset[t],this.dataset[n])<this.epsilon&&e.push(n)}return e},e.prototype._mergeArrays=function(t,e){for(var n=e.length,r=0;r<n;r++){var i=e[r];t.indexOf(i)<0&&t.push(i)}return t},e.prototype._euclideanDistance=function(t,e){for(var n=0,r=Math.min(t.length,e.length);r--;)n+=(t[r]-e[r])*(t[r]-e[r]);return Math.sqrt(n)},t.exports&&(t.exports=e)}),Ua=mt(function(t){function e(t,e,n){this.k=3,this.dataset=[],this.assignments=[],this.centroids=[],this.init(t,e,n)}e.prototype.init=function(t,e,n){this.assignments=[],this.centroids=[],void 0!==t&&(this.dataset=t),void 0!==e&&(this.k=e),void 0!==n&&(this.distance=n)},e.prototype.run=function(t,e){this.init(t,e);for(var n=this.dataset.length,r=0;r<this.k;r++)this.centroids[r]=this.randomCentroid();for(var i=!0;i;){i=this.assign();for(var o=0;o<this.k;o++){for(var s=new Array(h),a=0,u=0;u<h;u++)s[u]=0;for(var c=0;c<n;c++){var h=this.dataset[c].length;if(o===this.assignments[c]){for(u=0;u<h;u++)s[u]+=this.dataset[c][u];a++}}if(a>0){for(u=0;u<h;u++)s[u]/=a;this.centroids[o]=s}else this.centroids[o]=this.randomCentroid(),i=!0}}return this.getClusters()},e.prototype.randomCentroid=function(){var t,e,n=this.dataset.length-1;do{e=Math.round(Math.random()*n),t=this.dataset[e]}while(this.centroids.indexOf(t)>=0);return t},e.prototype.assign=function(){for(var t,e=!1,n=this.dataset.length,r=0;r<n;r++)(t=this.argmin(this.dataset[r],this.centroids,this.distance))!=this.assignments[r]&&(this.assignments[r]=t,e=!0);return e},e.prototype.getClusters=function(){for(var t,e=new Array(this.k),n=0;n<this.assignments.length;n++)void 0===e[t=this.assignments[n]]&&(e[t]=[]),e[t].push(n);return e},e.prototype.argmin=function(t,e,n){for(var r,i=Number.MAX_VALUE,o=0,s=e.length,a=0;a<s;a++)(r=n(t,e[a]))<i&&(i=r,o=a);return o},e.prototype.distance=function(t,e){for(var n=0,r=Math.min(t.length,e.length);r--;){var i=t[r]-e[r];n+=i*i}return Math.sqrt(n)},t.exports&&(t.exports=e)}),Ya=mt(function(t){function e(t,e,n){this._queue=[],this._priorities=[],this._sorting="desc",this._init(t,e,n)}e.prototype.insert=function(t,e){for(var n=this._queue.length,r=n;r--;){var i=this._priorities[r];"desc"===this._sorting?e>i&&(n=r):e<i&&(n=r)}this._insertAt(t,e,n)},e.prototype.remove=function(t){for(var e=this._queue.length;e--;){if(t===this._queue[e]){this._queue.splice(e,1),this._priorities.splice(e,1);break}}},e.prototype.forEach=function(t){this._queue.forEach(t)},e.prototype.getElements=function(){return this._queue},e.prototype.getElementPriority=function(t){return this._priorities[t]},e.prototype.getPriorities=function(){return this._priorities},e.prototype.getElementsWithPriorities=function(){for(var t=[],e=0,n=this._queue.length;e<n;e++)t.push([this._queue[e],this._priorities[e]]);return t},e.prototype._init=function(t,e,n){if(t&&e){if(this._queue=[],this._priorities=[],t.length!==e.length)throw new Error("Arrays must have the same length");for(var r=0;r<t.length;r++)this.insert(t[r],e[r])}n&&(this._sorting=n)},e.prototype._insertAt=function(t,e,n){this._queue.length===n?(this._queue.push(t),this._priorities.push(e)):(this._queue.splice(n,0,t),this._priorities.splice(n,0,e))},t.exports&&(t.exports=e)}),Va=mt(function(t){function e(t,e,n,r){this.epsilon=1,this.minPts=1,this.distance=this._euclideanDistance,this._reachability=[],this._processed=[],this._coreDistance=0,this._orderedList=[],this._init(t,e,n,r)}if(t.exports)var n=Ya;e.prototype.run=function(t,e,r,i){this._init(t,e,r,i);for(var o=0,s=this.dataset.length;o<s;o++)if(1!==this._processed[o]){this._processed[o]=1,this.clusters.push([o]);var a=this.clusters.length-1;this._orderedList.push(o);var u=new n(null,null,"asc"),c=this._regionQuery(o);void 0!==this._distanceToCore(o)&&(this._updateQueue(o,c,u),this._expandCluster(a,u))}return this.clusters},e.prototype.getReachabilityPlot=function(){for(var t=[],e=0,n=this._orderedList.length;e<n;e++){var r=this._orderedList[e],i=this._reachability[r];t.push([r,i])}return t},e.prototype._init=function(t,e,n,r){if(t){if(!(t instanceof Array))throw Error("Dataset must be of type array, "+typeof t+" given");this.dataset=t,this.clusters=[],this._reachability=new Array(this.dataset.length),this._processed=new Array(this.dataset.length),this._coreDistance=0,this._orderedList=[]}e&&(this.epsilon=e),n&&(this.minPts=n),r&&(this.distance=r)},e.prototype._updateQueue=function(t,e,n){var r=this;this._coreDistance=this._distanceToCore(t),e.forEach(function(e){if(void 0===r._processed[e]){var i=r.distance(r.dataset[t],r.dataset[e]),o=Math.max(r._coreDistance,i);void 0===r._reachability[e]?(r._reachability[e]=o,n.insert(e,o)):o<r._reachability[e]&&(r._reachability[e]=o,n.remove(e),n.insert(e,o))}})},e.prototype._expandCluster=function(t,e){for(var n=e.getElements(),r=0,i=n.length;r<i;r++){var o=n[r];if(void 0===this._processed[o]){var s=this._regionQuery(o);this._processed[o]=1,this.clusters[t].push(o),this._orderedList.push(o),void 0!==this._distanceToCore(o)&&(this._updateQueue(o,s,e),this._expandCluster(t,e))}}},e.prototype._distanceToCore=function(t){for(var e=this.epsilon,n=0;n<e;n++){if(this._regionQuery(t,n).length>=this.minPts)return n}},e.prototype._regionQuery=function(t,e){e=e||this.epsilon;for(var n=[],r=0,i=this.dataset.length;r<i;r++)this.distance(this.dataset[t],this.dataset[r])<e&&n.push(r);return n},e.prototype._euclideanDistance=function(t,e){for(var n=0,r=Math.min(t.length,e.length);r--;)n+=(t[r]-e[r])*(t[r]-e[r]);return Math.sqrt(n)},t.exports&&(t.exports=e)}),Ha=mt(function(t){t.exports&&(t.exports={DBSCAN:Xa,KMEANS:Ua,OPTICS:Va,PriorityQueue:Ya})}),Wa=(Ha.DBSCAN,Ha.KMEANS,Ha.OPTICS,Ha.PriorityQueue,function(t,e,n){for(var r=t.length,i=0,o=0;o<r;o++){var s=(t[o]||0)-(e[o]||0);i+=s*s}return n?Math.sqrt(i):i}),Ja=Wa,Za=function(t,e,n){var r=Math.abs(t-e);return n?r:r*r},Ka=Wa,Qa=function(t,e){for(var n={},r=[],i=e<<2,o=t.length,s=t[0].length>0;r.length<e&&i-- >0;){var a=t[Math.floor(Math.random()*o)],u=s?a.join("_"):""+a;n[u]||(n[u]=!0,r.push(a))}if(r.length<e)throw new Error("Error initializating clusters");return r},$a=function(t,e){var n=t[0].length?Ja:Za,r=[],i=t.length,o=t[0].length>0,s=t[Math.floor(Math.random()*i)];o&&s.join("_");for(r.push(s);r.length<e;){for(var a=[],u=r.length,c=0,h=[],l=0;l<i;l++){for(var p=1/0,f=0;f<u;f++){var g=n(t[l],r[f]);g<=p&&(p=g)}a[l]=p}for(var d=0;d<i;d++)c+=a[d];for(var y=0;y<i;y++)h[y]={i:y,v:t[y],pr:a[y]/c,cs:0};h.sort(function(t,e){return t.pr-e.pr}),h[0].cs=h[0].pr;for(var _=1;_<i;_++)h[_].cs=h[_-1].cs+h[_].pr;for(var m=Math.random(),v=0;v<i-1&&h[v++].cs<m;);r.push(h[v-1].v)}return r},tu=1e4,eu=function(t,e,n,r){var i=[],o=[],s=[],a=[],u=!1,c=r||tu,h=t.length,l=t[0].length,p=l>0,f=[];if(n)i="kmrand"==n?Qa(t,e):"kmpp"==n?$a(t,e):n;else for(var g={};i.length<e;){var d=Math.floor(Math.random()*h);g[d]||(g[d]=!0,i.push(t[d]))}do{Ar(e,0,f);for(var y=0;y<h;y++){for(var _=1/0,m=0,v=0;v<e;v++)(a=p?Ka(t[y],i[v]):Math.abs(t[y]-i[v]))<=_&&(_=a,m=v);s[y]=m,f[m]++}for(var x=[],E=(o=[],0);E<e;E++)x[E]=p?Ar(l,0,x[E]):0,o[E]=i[E];if(p){for(var w=0;w<e;w++)i[w]=[];for(var b=0;b<h;b++)for(var I=x[s[b]],N=t[b],C=0;C<l;C++)I[C]+=N[C];u=!0;for(var S=0;S<e;S++){for(var M=i[S],L=x[S],P=o[S],O=f[S],R=0;R<l;R++)M[R]=L[R]/O||0;if(u)for(var T=0;T<l;T++)if(P[T]!=M[T]){u=!1;break}}}else{for(var A=0;A<h;A++)x[s[A]]+=t[A];for(var D=0;D<e;D++)i[D]=x[D]/f[D]||0;u=!0;for(var F=0;F<e;F++)if(o[F]!=i[F]){u=!1;break}}u=u||--c<=0}while(!u);return{it:tu-c,k:e,idxs:s,centroids:i}},nu={search:function(t,e,n,r){t.cleanDirty();var i=(r=r||{}).heuristic||nu.heuristics.manhattan,o=r.closest||!1,s=new Br(function(t){return t.f}),a=e;for(e.h=i(e,n),s.push(e);s.size()>0;){var u=s.pop();if(u===n)return Fr(u);u.closed=!0;for(var c=t.neighbors(u),h=0,l=c.length;h<l;++h){var p=c[h];if(!p.closed&&!p.isWall()){var f=u.g+p.getCost(u),g=p.visited;(!g||f<p.g)&&(p.visited=!0,p.parent=u,p.h=p.h||i(p,n),p.g=f,p.f=p.g+p.h,t.markDirty(p),o&&(p.h<a.h||p.h===a.h&&p.g<a.g)&&(a=p),g?s.rescoreElement(p):s.push(p))}}}return o?Fr(a):[]},heuristics:{manhattan:function(t,e){return Math.abs(e.x-t.x)+Math.abs(e.y-t.y)},diagonal:function(t,e){var n=Math.sqrt(2),r=Math.abs(e.x-t.x),i=Math.abs(e.y-t.y);return 1*(r+i)+(n-2)*Math.min(r,i)}},cleanNode:function(t){t.f=0,t.g=0,t.h=0,t.visited=!1,t.closed=!1,t.parent=null}};qr.prototype.init=function(){this.dirtyNodes=[];for(var t=0;t<this.nodes.length;t++)nu.cleanNode(this.nodes[t])},qr.prototype.cleanDirty=function(){for(var t=0;t<this.dirtyNodes.length;t++)nu.cleanNode(this.dirtyNodes[t]);this.dirtyNodes=[]},qr.prototype.markDirty=function(t){this.dirtyNodes.push(t)},qr.prototype.neighbors=function(t){var e=[],n=t.x,r=t.y,i=this.grid;return i[n-1]&&i[n-1][r]&&e.push(i[n-1][r]),i[n+1]&&i[n+1][r]&&e.push(i[n+1][r]),i[n]&&i[n][r-1]&&e.push(i[n][r-1]),i[n]&&i[n][r+1]&&e.push(i[n][r+1]),this.diagonal&&(i[n-1]&&i[n-1][r-1]&&e.push(i[n-1][r-1]),i[n+1]&&i[n+1][r-1]&&e.push(i[n+1][r-1]),i[n-1]&&i[n-1][r+1]&&e.push(i[n-1][r+1]),i[n+1]&&i[n+1][r+1]&&e.push(i[n+1][r+1])),e},qr.prototype.toString=function(){for(var t,e,n,r,i=[],o=this.grid,s=0,a=o.length;s<a;s++){for(t=[],n=0,r=(e=o[s]).length;n<r;n++)t.push(e[n].weight);i.push(t.join(" "))}return i.join("\n")},Gr.prototype.toString=function(){return"["+this.x+" "+this.y+"]"},Gr.prototype.getCost=function(t){return t&&t.x!==this.x&&t.y!==this.y?1.41421*this.weight:this.weight},Gr.prototype.isWall=function(){return 0===this.weight},Br.prototype={push:function(t){this.content.push(t),this.sinkDown(this.content.length-1)},pop:function(){var t=this.content[0],e=this.content.pop();return this.content.length>0&&(this.content[0]=e,this.bubbleUp(0)),t},remove:function(t){var e=this.content.indexOf(t),n=this.content.pop();e!==this.content.length-1&&(this.content[e]=n,this.scoreFunction(n)<this.scoreFunction(t)?this.sinkDown(e):this.bubbleUp(e))},size:function(){return this.content.length},rescoreElement:function(t){this.sinkDown(this.content.indexOf(t))},sinkDown:function(t){for(var e=this.content[t];t>0;){var n=(t+1>>1)-1,r=this.content[n];if(!(this.scoreFunction(e)<this.scoreFunction(r)))break;this.content[n]=e,this.content[t]=r,t=n}},bubbleUp:function(t){for(var e=this.content.length,n=this.content[t],r=this.scoreFunction(n);;){var i,o=t+1<<1,s=o-1,a=null;if(s<e){var u=this.content[s];(i=this.scoreFunction(u))<r&&(a=s)}if(o<e){var c=this.content[o];this.scoreFunction(c)<(null===a?r:i)&&(a=o)}if(null===a)break;this.content[t]=this.content[a],this.content[a]=n,t=a}}};var ru=function(t){return function(){return t}};jr.prototype={constructor:jr,insert:function(t,e){var n,r,i;if(t){if(e.P=t,e.N=t.N,t.N&&(t.N.P=e),t.N=e,t.R){for(t=t.R;t.L;)t=t.L;t.L=e}else t.R=e;n=t}else this._?(t=Vr(this._),e.P=null,e.N=t,t.P=t.L=e,n=t):(e.P=e.N=null,this._=e,n=null);for(e.L=e.R=null,e.U=n,e.C=!0,t=e;n&&n.C;)n===(r=n.U).L?(i=r.R)&&i.C?(n.C=i.C=!1,r.C=!0,t=r):(t===n.R&&(Ur(this,n),n=(t=n).U),n.C=!1,r.C=!0,Yr(this,r)):(i=r.L)&&i.C?(n.C=i.C=!1,r.C=!0,t=r):(t===n.L&&(Yr(this,n),n=(t=n).U),n.C=!1,r.C=!0,Ur(this,r)),n=t.U;this._.C=!1},remove:function(t){t.N&&(t.N.P=t.P),t.P&&(t.P.N=t.N),t.N=t.P=null;var e,n,r,i=t.U,o=t.L,s=t.R;if(n=o?s?Vr(s):o:s,i?i.L===t?i.L=n:i.R=n:this._=n,o&&s?(r=n.C,n.C=t.C,n.L=o,o.U=n,n!==s?(i=n.U,n.U=t.U,t=n.R,i.L=t,n.R=s,s.U=n):(n.U=i,i=n,t=n.R)):(r=t.C,t=n),t&&(t.U=i),!r)if(t&&t.C)t.C=!1;else{do{if(t===this._)break;if(t===i.L){if((e=i.R).C&&(e.C=!1,i.C=!0,Ur(this,i),e=i.R),e.L&&e.L.C||e.R&&e.R.C){e.R&&e.R.C||(e.L.C=!1,e.C=!0,Yr(this,e),e=i.R),e.C=i.C,i.C=e.R.C=!1,Ur(this,i),t=this._;break}}else if((e=i.L).C&&(e.C=!1,i.C=!0,Yr(this,i),e=i.L),e.L&&e.L.C||e.R&&e.R.C){e.L&&e.L.C||(e.R.C=!1,e.C=!0,Ur(this,e),e=i.L),e.C=i.C,i.C=e.L.C=!1,Yr(this,i),t=this._;break}e.C=!0,t=i,i=i.U}while(!t.C);t&&(t.C=!1)}}};var iu,ou,su,au,uu,cu=[],hu=[],lu=1e-6,pu=1e-12;hi.prototype={constructor:hi,polygons:function(){var t=this.edges;return this.cells.map(function(e){var n=e.halfedges.map(function(n){return $r(e,t[n])});return n.data=e.site.data,n})},triangles:function(){var t=[],e=this.edges;return this.cells.forEach(function(n,r){if(o=(i=n.halfedges).length)for(var i,o,s,a=n.site,u=-1,c=e[i[o-1]],h=c.left===a?c.right:c.left;++u<o;)s=h,h=(c=e[i[u]]).left===a?c.right:c.left,s&&h&&r<s.index&&r<h.index&&ui(a,s,h)<0&&t.push([a.data,s.data,h.data])}),t},links:function(){return this.edges.filter(function(t){return t.right}).map(function(t){return{source:t.left.data,target:t.right.data}})},find:function(t,e,n){for(var r,i,o=this,s=o._found||0,a=o.cells.length;!(i=o.cells[s]);)if(++s>=a)return null;var u=t-i.site[0],c=e-i.site[1],h=u*u+c*c;do{i=o.cells[r=s],s=null,i.halfedges.forEach(function(n){var r=o.edges[n],a=r.left;if(a!==i.site&&a||(a=r.right)){var u=t-a[0],c=e-a[1],l=u*u+c*c;l<h&&(h=l,s=a.index)}})}while(null!==s);return o._found=r,null==n||h<=n*n?i.site:null}};var fu=function(){function t(t){return new hi(t.map(function(r,i){var o=[Math.round(e(r,i,t)/lu)*lu,Math.round(n(r,i,t)/lu)*lu];return o.index=i,o.data=r,o}),r)}var e=kr,n=zr,r=null;return t.polygons=function(e){return t(e).polygons()},t.links=function(e){return t(e).links()},t.triangles=function(e){return t(e).triangles()},t.x=function(n){return arguments.length?(e="function"==typeof n?n:ru(+n),t):e},t.y=function(e){return arguments.length?(n="function"==typeof e?e:ru(+e),t):n},t.extent=function(e){return arguments.length?(r=null==e?null:[[+e[0][0],+e[0][1]],[+e[1][0],+e[1][1]]],t):r&&[[r[0][0],r[0][1]],[r[1][0],r[1][1]]]},t.size=function(e){return arguments.length?(r=null==e?null:[[0,0],[+e[0],+e[1]]],t):r&&[r[1][0]-r[0][0],r[1][1]-r[0][1]]},t},gu=Object.freeze({randomPosition:_i,randomPoint:mi,randomPolygon:vi,randomLineString:xi}),du=Object.freeze({getCluster:wi,clusterEach:bi,clusterReduce:Ii,createBins:Ni,applyFilter:Ci,propertiesContainsFilter:Si,filterProperties:Mi});"fill"in Array.prototype||Object.defineProperty(Array.prototype,"fill",{configurable:!0,value:function(t){if(void 0===this||null===this)throw new TypeError(this+" is not an object");var e=Object(this),n=Math.max(Math.min(e.length,9007199254740991),0)||0,r=1 in arguments?parseInt(Number(arguments[1]),10)||0:0;r=r<0?Math.max(n+r,0):Math.min(r,n);var i=2 in arguments&&void 0!==arguments[2]?parseInt(Number(arguments[2]),10)||0:n;for(i=i<0?Math.max(n+arguments[2],0):Math.min(i,n);r<i;)e[r]=t,++r;return e},writable:!0}),Number.isFinite=Number.isFinite||function(t){return"number"==typeof t&&isFinite(t)},Number.isInteger=Number.isInteger||function(t){return"number"==typeof t&&isFinite(t)&&Math.floor(t)===t},Number.parseFloat=Number.parseFloat||parseFloat,Number.isNaN=Number.isNaN||function(t){return t!=t},Math.trunc=Math.trunc||function(t){return t<0?Math.ceil(t):Math.floor(t)};var yu=function(){};yu.prototype.interfaces_=function(){return[]},yu.prototype.getClass=function(){return yu},yu.prototype.equalsWithTolerance=function(t,e,n){return Math.abs(t-e)<=n};var _u=function(){},mu=function(){},vu={MAX_VALUE:{configurable:!0}};mu.isNaN=function(t){return Number.isNaN(t)},mu.doubleToLongBits=function(t){return t},mu.longBitsToDouble=function(t){return t},mu.isInfinite=function(t){return!Number.isFinite(t)},vu.MAX_VALUE.get=function(){return Number.MAX_VALUE},Object.defineProperties(mu,vu);var xu=function(){},Eu=function(){},wu=function(){},bu=function t(){if(this.x=null,this.y=null,this.z=null,0===arguments.length)this.x=0,this.y=0,this.z=t.NULL_ORDINATE;else if(1===arguments.length){var e=arguments[0];this.x=e.x,this.y=e.y,this.z=e.z}else 2===arguments.length?(this.x=arguments[0],this.y=arguments[1],this.z=t.NULL_ORDINATE):3===arguments.length&&(this.x=arguments[0],this.y=arguments[1],this.z=arguments[2])},Iu={DimensionalComparator:{configurable:!0},serialVersionUID:{configurable:!0},NULL_ORDINATE:{configurable:!0},X:{configurable:!0},Y:{configurable:!0},Z:{configurable:!0}};bu.prototype.setOrdinate=function(t,e){switch(t){case bu.X:this.x=e;break;case bu.Y:this.y=e;break;case bu.Z:this.z=e;break;default:throw new _u("Invalid ordinate index: "+t)}},bu.prototype.equals2D=function(){if(1===arguments.length){var t=arguments[0];return this.x===t.x&&this.y===t.y}if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!yu.equalsWithTolerance(this.x,e.x,n)&&!!yu.equalsWithTolerance(this.y,e.y,n)}},bu.prototype.getOrdinate=function(t){switch(t){case bu.X:return this.x;case bu.Y:return this.y;case bu.Z:return this.z}throw new _u("Invalid ordinate index: "+t)},bu.prototype.equals3D=function(t){return this.x===t.x&&this.y===t.y&&(this.z===t.z||mu.isNaN(this.z))&&mu.isNaN(t.z)},bu.prototype.equals=function(t){return t instanceof bu&&this.equals2D(t)},bu.prototype.equalInZ=function(t,e){return yu.equalsWithTolerance(this.z,t.z,e)},bu.prototype.compareTo=function(t){var e=t;return this.x<e.x?-1:this.x>e.x?1:this.y<e.y?-1:this.y>e.y?1:0},bu.prototype.clone=function(){},bu.prototype.copy=function(){return new bu(this)},bu.prototype.toString=function(){return"("+this.x+", "+this.y+", "+this.z+")"},bu.prototype.distance3D=function(t){var e=this.x-t.x,n=this.y-t.y,r=this.z-t.z;return Math.sqrt(e*e+n*n+r*r)},bu.prototype.distance=function(t){var e=this.x-t.x,n=this.y-t.y;return Math.sqrt(e*e+n*n)},bu.prototype.hashCode=function(){var t=17;return t=37*t+bu.hashCode(this.x),t=37*t+bu.hashCode(this.y)},bu.prototype.setCoordinate=function(t){this.x=t.x,this.y=t.y,this.z=t.z},bu.prototype.interfaces_=function(){return[xu,Eu,Li]},bu.prototype.getClass=function(){return bu},bu.hashCode=function(){if(1===arguments.length){var t=arguments[0],e=mu.doubleToLongBits(t);return Math.trunc((e^e)>>>32)}},Iu.DimensionalComparator.get=function(){return Nu},Iu.serialVersionUID.get=function(){return 0x5cbf2c235c7e5800},Iu.NULL_ORDINATE.get=function(){return mu.NaN},Iu.X.get=function(){return 0},Iu.Y.get=function(){return 1},Iu.Z.get=function(){return 2},Object.defineProperties(bu,Iu);var Nu=function(t){if(this._dimensionsToTest=2,0===arguments.length);else if(1===arguments.length){var e=arguments[0];if(2!==e&&3!==e)throw new _u("only 2 or 3 dimensions may be specified");this._dimensionsToTest=e}};Nu.prototype.compare=function(t,e){var n=t,r=e,i=Nu.compare(n.x,r.x);if(0!==i)return i;var o=Nu.compare(n.y,r.y);if(0!==o)return o;if(this._dimensionsToTest<=2)return 0;return Nu.compare(n.z,r.z)},Nu.prototype.interfaces_=function(){return[wu]},Nu.prototype.getClass=function(){return Nu},Nu.compare=function(t,e){return t<e?-1:t>e?1:mu.isNaN(t)?mu.isNaN(e)?0:-1:mu.isNaN(e)?1:0};var Cu=function(){};Cu.prototype.create=function(){},Cu.prototype.interfaces_=function(){return[]},Cu.prototype.getClass=function(){return Cu};var Su=function(){},Mu={INTERIOR:{configurable:!0},BOUNDARY:{configurable:!0},EXTERIOR:{configurable:!0},NONE:{configurable:!0}};Su.prototype.interfaces_=function(){return[]},Su.prototype.getClass=function(){return Su},Su.toLocationSymbol=function(t){switch(t){case Su.EXTERIOR:return"e";case Su.BOUNDARY:return"b";case Su.INTERIOR:return"i";case Su.NONE:return"-"}throw new _u("Unknown location value: "+t)},Mu.INTERIOR.get=function(){return 0},Mu.BOUNDARY.get=function(){return 1},Mu.EXTERIOR.get=function(){return 2},Mu.NONE.get=function(){return-1},Object.defineProperties(Su,Mu);var Lu=function(t,e){return t.interfaces_&&t.interfaces_().indexOf(e)>-1},Pu=function(){},Ou={LOG_10:{configurable:!0}};Pu.prototype.interfaces_=function(){return[]},Pu.prototype.getClass=function(){return Pu},Pu.log10=function(t){var e=Math.log(t);return mu.isInfinite(e)?e:mu.isNaN(e)?e:e/Pu.LOG_10},Pu.min=function(t,e,n,r){var i=t;return e<i&&(i=e),n<i&&(i=n),r<i&&(i=r),i},Pu.clamp=function(){if("number"==typeof arguments[2]&&"number"==typeof arguments[0]&&"number"==typeof arguments[1]){var t=arguments[0],e=arguments[1],n=arguments[2];return t<e?e:t>n?n:t}if(Number.isInteger(arguments[2])&&Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var r=arguments[0],i=arguments[1],o=arguments[2];return r<i?i:r>o?o:r}},Pu.wrap=function(t,e){return t<0?e- -t%e:t%e},Pu.max=function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],r=t;return e>r&&(r=e),n>r&&(r=n),r}if(4===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3],u=i;return o>u&&(u=o),s>u&&(u=s),a>u&&(u=a),u}},Pu.average=function(t,e){return(t+e)/2},Ou.LOG_10.get=function(){return Math.log(10)},Object.defineProperties(Pu,Ou);var Ru=function(t){this.str=t};Ru.prototype.append=function(t){this.str+=t},Ru.prototype.setCharAt=function(t,e){this.str=this.str.substr(0,t)+e+this.str.substr(t+1)},Ru.prototype.toString=function(t){return this.str};var Tu=function(t){this.value=t};Tu.prototype.intValue=function(){return this.value},Tu.prototype.compareTo=function(t){return this.value<t?-1:this.value>t?1:0},Tu.isNaN=function(t){return Number.isNaN(t)};var Au=function(){};Au.isWhitespace=function(t){return t<=32&&t>=0||127===t},Au.toUpperCase=function(t){return t.toUpperCase()};var Du=function t(){if(this._hi=0,this._lo=0,0===arguments.length)this.init(0);else if(1===arguments.length){if("number"==typeof arguments[0]){var e=arguments[0];this.init(e)}else if(arguments[0]instanceof t){var n=arguments[0];this.init(n)}else if("string"==typeof arguments[0]){var r=arguments[0];t.call(this,t.parse(r))}}else if(2===arguments.length){var i=arguments[0],o=arguments[1];this.init(i,o)}},Fu={PI:{configurable:!0},TWO_PI:{configurable:!0},PI_2:{configurable:!0},E:{configurable:!0},NaN:{configurable:!0},EPS:{configurable:!0},SPLIT:{configurable:!0},MAX_PRINT_DIGITS:{configurable:!0},TEN:{configurable:!0},ONE:{configurable:!0},SCI_NOT_EXPONENT_CHAR:{configurable:!0},SCI_NOT_ZERO:{configurable:!0}};Du.prototype.le=function(t){return(this._hi<t._hi||this._hi===t._hi)&&this._lo<=t._lo},Du.prototype.extractSignificantDigits=function(t,e){var n=this.abs(),r=Du.magnitude(n._hi),i=Du.TEN.pow(r);(n=n.divide(i)).gt(Du.TEN)?(n=n.divide(Du.TEN),r+=1):n.lt(Du.ONE)&&(n=n.multiply(Du.TEN),r-=1);for(var o=r+1,s=new Ru,a=Du.MAX_PRINT_DIGITS-1,u=0;u<=a;u++){t&&u===o&&s.append(".");var c=Math.trunc(n._hi);if(c<0)break;var h=!1,l=0;c>9?(h=!0,l="9"):l="0"+c,s.append(l),n=n.subtract(Du.valueOf(c)).multiply(Du.TEN),h&&n.selfAdd(Du.TEN);var p=!0,f=Du.magnitude(n._hi);if(f<0&&Math.abs(f)>=a-u&&(p=!1),!p)break}return e[0]=r,s.toString()},Du.prototype.sqr=function(){return this.multiply(this)},Du.prototype.doubleValue=function(){return this._hi+this._lo},Du.prototype.subtract=function(){if(arguments[0]instanceof Du){var t=arguments[0];return this.add(t.negate())}if("number"==typeof arguments[0]){var e=arguments[0];return this.add(-e)}},Du.prototype.equals=function(){if(1===arguments.length){var t=arguments[0];return this._hi===t._hi&&this._lo===t._lo}},Du.prototype.isZero=function(){return 0===this._hi&&0===this._lo},Du.prototype.selfSubtract=function(){if(arguments[0]instanceof Du){var t=arguments[0];return this.isNaN()?this:this.selfAdd(-t._hi,-t._lo)}if("number"==typeof arguments[0]){var e=arguments[0];return this.isNaN()?this:this.selfAdd(-e,0)}},Du.prototype.getSpecialNumberString=function(){return this.isZero()?"0.0":this.isNaN()?"NaN ":null},Du.prototype.min=function(t){return this.le(t)?this:t},Du.prototype.selfDivide=function(){if(1===arguments.length){if(arguments[0]instanceof Du){var t=arguments[0];return this.selfDivide(t._hi,t._lo)}if("number"==typeof arguments[0]){var e=arguments[0];return this.selfDivide(e,0)}}else if(2===arguments.length){var n=arguments[0],r=arguments[1],i=null,o=null,s=null,a=null,u=null,c=null,h=null,l=null;return u=this._hi/n,c=Du.SPLIT*u,i=c-u,l=Du.SPLIT*n,i=c-i,o=u-i,s=l-n,h=u*n,s=l-s,a=n-s,l=i*s-h+i*a+o*s+o*a,c=(this._hi-h-l+this._lo-u*r)/n,l=u+c,this._hi=l,this._lo=u-l+c,this}},Du.prototype.dump=function(){return"DD<"+this._hi+", "+this._lo+">"},Du.prototype.divide=function(){if(arguments[0]instanceof Du){var t=arguments[0],e=null,n=null,r=null,i=null,o=null,s=null,a=null,u=null;n=(o=this._hi/t._hi)-(e=(s=Du.SPLIT*o)-(e=s-o)),u=e*(r=(u=Du.SPLIT*t._hi)-(r=u-t._hi))-(a=o*t._hi)+e*(i=t._hi-r)+n*r+n*i,s=(this._hi-a-u+this._lo-o*t._lo)/t._hi;return new Du(u=o+s,o-u+s)}if("number"==typeof arguments[0]){var c=arguments[0];return mu.isNaN(c)?Du.createNaN():Du.copy(this).selfDivide(c,0)}},Du.prototype.ge=function(t){return(this._hi>t._hi||this._hi===t._hi)&&this._lo>=t._lo},Du.prototype.pow=function(t){if(0===t)return Du.valueOf(1);var e=new Du(this),n=Du.valueOf(1),r=Math.abs(t);if(r>1)for(;r>0;)r%2==1&&n.selfMultiply(e),(r/=2)>0&&(e=e.sqr());else n=e;return t<0?n.reciprocal():n},Du.prototype.ceil=function(){if(this.isNaN())return Du.NaN;var t=Math.ceil(this._hi),e=0;return t===this._hi&&(e=Math.ceil(this._lo)),new Du(t,e)},Du.prototype.compareTo=function(t){var e=t;return this._hi<e._hi?-1:this._hi>e._hi?1:this._lo<e._lo?-1:this._lo>e._lo?1:0},Du.prototype.rint=function(){if(this.isNaN())return this;return this.add(.5).floor()},Du.prototype.setValue=function(){if(arguments[0]instanceof Du){var t=arguments[0];return this.init(t),this}if("number"==typeof arguments[0]){var e=arguments[0];return this.init(e),this}},Du.prototype.max=function(t){return this.ge(t)?this:t},Du.prototype.sqrt=function(){if(this.isZero())return Du.valueOf(0);if(this.isNegative())return Du.NaN;var t=1/Math.sqrt(this._hi),e=this._hi*t,n=Du.valueOf(e),r=this.subtract(n.sqr())._hi*(.5*t);return n.add(r)},Du.prototype.selfAdd=function(){if(1===arguments.length){if(arguments[0]instanceof Du){var t=arguments[0];return this.selfAdd(t._hi,t._lo)}if("number"==typeof arguments[0]){var e=arguments[0],n=null,r=null,i=null,o=null,s=null,a=null;return i=this._hi+e,s=i-this._hi,o=i-s,o=e-s+(this._hi-o),a=o+this._lo,n=i+a,r=a+(i-n),this._hi=n+r,this._lo=r+(n-this._hi),this}}else if(2===arguments.length){var u=arguments[0],c=arguments[1],h=null,l=null,p=null,f=null,g=null,d=null,y=null;f=this._hi+u,l=this._lo+c,g=f-(d=f-this._hi),p=l-(y=l-this._lo);var _=(h=f+(d=(g=u-d+(this._hi-g))+l))+(d=(p=c-y+(this._lo-p))+(d+(f-h))),m=d+(h-_);return this._hi=_,this._lo=m,this}},Du.prototype.selfMultiply=function(){if(1===arguments.length){if(arguments[0]instanceof Du){var t=arguments[0];return this.selfMultiply(t._hi,t._lo)}if("number"==typeof arguments[0]){var e=arguments[0];return this.selfMultiply(e,0)}}else if(2===arguments.length){var n=arguments[0],r=arguments[1],i=null,o=null,s=null,a=null,u=null,c=null;i=(u=Du.SPLIT*this._hi)-this._hi,c=Du.SPLIT*n,i=u-i,o=this._hi-i,s=c-n;var h=(u=this._hi*n)+(c=i*(s=c-s)-u+i*(a=n-s)+o*s+o*a+(this._hi*r+this._lo*n)),l=c+(i=u-h);return this._hi=h,this._lo=l,this}},Du.prototype.selfSqr=function(){return this.selfMultiply(this)},Du.prototype.floor=function(){if(this.isNaN())return Du.NaN;var t=Math.floor(this._hi),e=0;return t===this._hi&&(e=Math.floor(this._lo)),new Du(t,e)},Du.prototype.negate=function(){return this.isNaN()?this:new Du(-this._hi,-this._lo)},Du.prototype.clone=function(){},Du.prototype.multiply=function(){if(arguments[0]instanceof Du){var t=arguments[0];return t.isNaN()?Du.createNaN():Du.copy(this).selfMultiply(t)}if("number"==typeof arguments[0]){var e=arguments[0];return mu.isNaN(e)?Du.createNaN():Du.copy(this).selfMultiply(e,0)}},Du.prototype.isNaN=function(){return mu.isNaN(this._hi)},Du.prototype.intValue=function(){return Math.trunc(this._hi)},Du.prototype.toString=function(){var t=Du.magnitude(this._hi);return t>=-3&&t<=20?this.toStandardNotation():this.toSciNotation()},Du.prototype.toStandardNotation=function(){var t=this.getSpecialNumberString();if(null!==t)return t;var e=new Array(1).fill(null),n=this.extractSignificantDigits(!0,e),r=e[0]+1,i=n;if("."===n.charAt(0))i="0"+n;else if(r<0)i="0."+Du.stringOfChar("0",-r)+n;else if(-1===n.indexOf(".")){var o=r-n.length;i=n+Du.stringOfChar("0",o)+".0"}return this.isNegative()?"-"+i:i},Du.prototype.reciprocal=function(){var t=null,e=null,n=null,r=null,i=null,o=null,s=null,a=null;e=(i=1/this._hi)-(t=(o=Du.SPLIT*i)-(t=o-i)),n=(a=Du.SPLIT*this._hi)-this._hi;var u=i+(o=(1-(s=i*this._hi)-(a=t*(n=a-n)-s+t*(r=this._hi-n)+e*n+e*r)-i*this._lo)/this._hi);return new Du(u,i-u+o)},Du.prototype.toSciNotation=function(){if(this.isZero())return Du.SCI_NOT_ZERO;var t=this.getSpecialNumberString();if(null!==t)return t;var e=new Array(1).fill(null),n=this.extractSignificantDigits(!1,e),r=Du.SCI_NOT_EXPONENT_CHAR+e[0];if("0"===n.charAt(0))throw new Error("Found leading zero: "+n);var i="";n.length>1&&(i=n.substring(1));var o=n.charAt(0)+"."+i;return this.isNegative()?"-"+o+r:o+r},Du.prototype.abs=function(){return this.isNaN()?Du.NaN:this.isNegative()?this.negate():new Du(this)},Du.prototype.isPositive=function(){return(this._hi>0||0===this._hi)&&this._lo>0},Du.prototype.lt=function(t){return(this._hi<t._hi||this._hi===t._hi)&&this._lo<t._lo},Du.prototype.add=function(){if(arguments[0]instanceof Du){var t=arguments[0];return Du.copy(this).selfAdd(t)}if("number"==typeof arguments[0]){var e=arguments[0];return Du.copy(this).selfAdd(e)}},Du.prototype.init=function(){if(1===arguments.length){if("number"==typeof arguments[0]){var t=arguments[0];this._hi=t,this._lo=0}else if(arguments[0]instanceof Du){var e=arguments[0];this._hi=e._hi,this._lo=e._lo}}else if(2===arguments.length){var n=arguments[0],r=arguments[1];this._hi=n,this._lo=r}},Du.prototype.gt=function(t){return(this._hi>t._hi||this._hi===t._hi)&&this._lo>t._lo},Du.prototype.isNegative=function(){return(this._hi<0||0===this._hi)&&this._lo<0},Du.prototype.trunc=function(){return this.isNaN()?Du.NaN:this.isPositive()?this.floor():this.ceil()},Du.prototype.signum=function(){return this._hi>0?1:this._hi<0?-1:this._lo>0?1:this._lo<0?-1:0},Du.prototype.interfaces_=function(){return[Li,xu,Eu]},Du.prototype.getClass=function(){return Du},Du.sqr=function(t){return Du.valueOf(t).selfMultiply(t)},Du.valueOf=function(){if("string"==typeof arguments[0]){var t=arguments[0];return Du.parse(t)}if("number"==typeof arguments[0]){var e=arguments[0];return new Du(e)}},Du.sqrt=function(t){return Du.valueOf(t).sqrt()},Du.parse=function(t){for(var e=0,n=t.length;Au.isWhitespace(t.charAt(e));)e++;var r=!1;if(e<n){var i=t.charAt(e);"-"!==i&&"+"!==i||(e++,"-"===i&&(r=!0))}for(var o=new Du,s=0,a=0,u=0;!(e>=n);){var c=t.charAt(e);if(e++,Au.isDigit(c)){var h=c-"0";o.selfMultiply(Du.TEN),o.selfAdd(h),s++}else{if("."!==c){if("e"===c||"E"===c){var l=t.substring(e);try{u=Tu.parseInt(l)}catch(e){throw e instanceof Error?new Error("Invalid exponent "+l+" in string "+t):e}break}throw new Error("Unexpected character '"+c+"' at position "+e+" in string "+t)}a=s}}var p=o,f=s-a-u;if(0===f)p=o;else if(f>0){var g=Du.TEN.pow(f);p=o.divide(g)}else if(f<0){var d=Du.TEN.pow(-f);p=o.multiply(d)}return r?p.negate():p},Du.createNaN=function(){return new Du(mu.NaN,mu.NaN)},Du.copy=function(t){return new Du(t)},Du.magnitude=function(t){var e=Math.abs(t),n=Math.log(e)/Math.log(10),r=Math.trunc(Math.floor(n));return 10*Math.pow(10,r)<=e&&(r+=1),r},Du.stringOfChar=function(t,e){for(var n=new Ru,r=0;r<e;r++)n.append(t);return n.toString()},Fu.PI.get=function(){return new Du(3.141592653589793,1.2246467991473532e-16)},Fu.TWO_PI.get=function(){return new Du(6.283185307179586,2.4492935982947064e-16)},Fu.PI_2.get=function(){return new Du(1.5707963267948966,6.123233995736766e-17)},Fu.E.get=function(){return new Du(2.718281828459045,1.4456468917292502e-16)},Fu.NaN.get=function(){return new Du(mu.NaN,mu.NaN)},Fu.EPS.get=function(){return 1.23259516440783e-32},Fu.SPLIT.get=function(){return 134217729},Fu.MAX_PRINT_DIGITS.get=function(){return 32},Fu.TEN.get=function(){return Du.valueOf(10)},Fu.ONE.get=function(){return Du.valueOf(1)},Fu.SCI_NOT_EXPONENT_CHAR.get=function(){return"E"},Fu.SCI_NOT_ZERO.get=function(){return"0.0E0"},Object.defineProperties(Du,Fu);var qu=function(){},Gu={DP_SAFE_EPSILON:{configurable:!0}};qu.prototype.interfaces_=function(){return[]},qu.prototype.getClass=function(){return qu},qu.orientationIndex=function(t,e,n){var r=qu.orientationIndexFilter(t,e,n);if(r<=1)return r;var i=Du.valueOf(e.x).selfAdd(-t.x),o=Du.valueOf(e.y).selfAdd(-t.y),s=Du.valueOf(n.x).selfAdd(-e.x),a=Du.valueOf(n.y).selfAdd(-e.y);return i.selfMultiply(a).selfSubtract(o.selfMultiply(s)).signum()},qu.signOfDet2x2=function(t,e,n,r){return t.multiply(r).selfSubtract(e.multiply(n)).signum()},qu.intersection=function(t,e,n,r){var i=Du.valueOf(r.y).selfSubtract(n.y).selfMultiply(Du.valueOf(e.x).selfSubtract(t.x)),o=Du.valueOf(r.x).selfSubtract(n.x).selfMultiply(Du.valueOf(e.y).selfSubtract(t.y)),s=i.subtract(o),a=Du.valueOf(r.x).selfSubtract(n.x).selfMultiply(Du.valueOf(t.y).selfSubtract(n.y)),u=Du.valueOf(r.y).selfSubtract(n.y).selfMultiply(Du.valueOf(t.x).selfSubtract(n.x)),c=a.subtract(u).selfDivide(s).doubleValue(),h=Du.valueOf(t.x).selfAdd(Du.valueOf(e.x).selfSubtract(t.x).selfMultiply(c)).doubleValue(),l=Du.valueOf(e.x).selfSubtract(t.x).selfMultiply(Du.valueOf(t.y).selfSubtract(n.y)),p=Du.valueOf(e.y).selfSubtract(t.y).selfMultiply(Du.valueOf(t.x).selfSubtract(n.x)),f=l.subtract(p).selfDivide(s).doubleValue(),g=Du.valueOf(n.y).selfAdd(Du.valueOf(r.y).selfSubtract(n.y).selfMultiply(f)).doubleValue();return new bu(h,g)},qu.orientationIndexFilter=function(t,e,n){var r=null,i=(t.x-n.x)*(e.y-n.y),o=(t.y-n.y)*(e.x-n.x),s=i-o;if(i>0){if(o<=0)return qu.signum(s);r=i+o}else{if(!(i<0))return qu.signum(s);if(o>=0)return qu.signum(s);r=-i-o}var a=qu.DP_SAFE_EPSILON*r;return s>=a||-s>=a?qu.signum(s):2},qu.signum=function(t){return t>0?1:t<0?-1:0},Gu.DP_SAFE_EPSILON.get=function(){return 1e-15},Object.defineProperties(qu,Gu);var Bu=function(){},ku={X:{configurable:!0},Y:{configurable:!0},Z:{configurable:!0},M:{configurable:!0}};ku.X.get=function(){return 0},ku.Y.get=function(){return 1},ku.Z.get=function(){return 2},ku.M.get=function(){return 3},Bu.prototype.setOrdinate=function(t,e,n){},Bu.prototype.size=function(){},Bu.prototype.getOrdinate=function(t,e){},Bu.prototype.getCoordinate=function(){},Bu.prototype.getCoordinateCopy=function(t){},Bu.prototype.getDimension=function(){},Bu.prototype.getX=function(t){},Bu.prototype.clone=function(){},Bu.prototype.expandEnvelope=function(t){},Bu.prototype.copy=function(){},Bu.prototype.getY=function(t){},Bu.prototype.toCoordinateArray=function(){},Bu.prototype.interfaces_=function(){return[Eu]},Bu.prototype.getClass=function(){return Bu},Object.defineProperties(Bu,ku);var zu=function(){},ju=function(t){function e(){t.call(this,"Projective point not representable on the Cartesian plane.")}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(zu),Xu=function(){};Xu.arraycopy=function(t,e,n,r,i){for(var o=0,s=e;s<e+i;s++)n[r+o]=t[s],o++},Xu.getProperty=function(t){return{"line.separator":"\n"}[t]};var Uu=function t(){if(this.x=null,this.y=null,this.w=null,0===arguments.length)this.x=0,this.y=0,this.w=1;else if(1===arguments.length){var e=arguments[0];this.x=e.x,this.y=e.y,this.w=1}else if(2===arguments.length){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){var n=arguments[0],r=arguments[1];this.x=n,this.y=r,this.w=1}else if(arguments[0]instanceof t&&arguments[1]instanceof t){var i=arguments[0],o=arguments[1];this.x=i.y*o.w-o.y*i.w,this.y=o.x*i.w-i.x*o.w,this.w=i.x*o.y-o.x*i.y}else if(arguments[0]instanceof bu&&arguments[1]instanceof bu){var s=arguments[0],a=arguments[1];this.x=s.y-a.y,this.y=a.x-s.x,this.w=s.x*a.y-a.x*s.y}}else if(3===arguments.length){var u=arguments[0],c=arguments[1],h=arguments[2];this.x=u,this.y=c,this.w=h}else if(4===arguments.length){var l=arguments[0],p=arguments[1],f=arguments[2],g=arguments[3],d=l.y-p.y,y=p.x-l.x,_=l.x*p.y-p.x*l.y,m=f.y-g.y,v=g.x-f.x,x=f.x*g.y-g.x*f.y;this.x=y*x-v*_,this.y=m*_-d*x,this.w=d*v-m*y}};Uu.prototype.getY=function(){var t=this.y/this.w;if(mu.isNaN(t)||mu.isInfinite(t))throw new ju;return t},Uu.prototype.getX=function(){var t=this.x/this.w;if(mu.isNaN(t)||mu.isInfinite(t))throw new ju;return t},Uu.prototype.getCoordinate=function(){var t=new bu;return t.x=this.getX(),t.y=this.getY(),t},Uu.prototype.interfaces_=function(){return[]},Uu.prototype.getClass=function(){return Uu},Uu.intersection=function(t,e,n,r){var i=t.y-e.y,o=e.x-t.x,s=t.x*e.y-e.x*t.y,a=n.y-r.y,u=r.x-n.x,c=n.x*r.y-r.x*n.y,h=i*u-a*o,l=(o*c-u*s)/h,p=(a*s-i*c)/h;if(mu.isNaN(l)||mu.isInfinite(l)||mu.isNaN(p)||mu.isInfinite(p))throw new ju;return new bu(l,p)};var Yu=function t(){if(this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,0===arguments.length)this.init();else if(1===arguments.length){if(arguments[0]instanceof bu){var e=arguments[0];this.init(e.x,e.x,e.y,e.y)}else if(arguments[0]instanceof t){var n=arguments[0];this.init(n)}}else if(2===arguments.length){var r=arguments[0],i=arguments[1];this.init(r.x,i.x,r.y,i.y)}else if(4===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2],u=arguments[3];this.init(o,s,a,u)}},Vu={serialVersionUID:{configurable:!0}};Yu.prototype.getArea=function(){return this.getWidth()*this.getHeight()},Yu.prototype.equals=function(t){if(!(t instanceof Yu))return!1;var e=t;return this.isNull()?e.isNull():this._maxx===e.getMaxX()&&this._maxy===e.getMaxY()&&this._minx===e.getMinX()&&this._miny===e.getMinY()},Yu.prototype.intersection=function(t){if(this.isNull()||t.isNull()||!this.intersects(t))return new Yu;var e=this._minx>t._minx?this._minx:t._minx,n=this._miny>t._miny?this._miny:t._miny,r=this._maxx<t._maxx?this._maxx:t._maxx,i=this._maxy<t._maxy?this._maxy:t._maxy;return new Yu(e,r,n,i)},Yu.prototype.isNull=function(){return this._maxx<this._minx},Yu.prototype.getMaxX=function(){return this._maxx},Yu.prototype.covers=function(){if(1===arguments.length){if(arguments[0]instanceof bu){var t=arguments[0];return this.covers(t.x,t.y)}if(arguments[0]instanceof Yu){var e=arguments[0];return!this.isNull()&&!e.isNull()&&(e.getMinX()>=this._minx&&e.getMaxX()<=this._maxx&&e.getMinY()>=this._miny&&e.getMaxY()<=this._maxy)}}else if(2===arguments.length){var n=arguments[0],r=arguments[1];return!this.isNull()&&(n>=this._minx&&n<=this._maxx&&r>=this._miny&&r<=this._maxy)}},Yu.prototype.intersects=function(){if(1===arguments.length){if(arguments[0]instanceof Yu){var t=arguments[0];return!this.isNull()&&!t.isNull()&&!(t._minx>this._maxx||t._maxx<this._minx||t._miny>this._maxy||t._maxy<this._miny)}if(arguments[0]instanceof bu){var e=arguments[0];return this.intersects(e.x,e.y)}}else if(2===arguments.length){var n=arguments[0],r=arguments[1];return!this.isNull()&&!(n>this._maxx||n<this._minx||r>this._maxy||r<this._miny)}},Yu.prototype.getMinY=function(){return this._miny},Yu.prototype.getMinX=function(){return this._minx},Yu.prototype.expandToInclude=function(){if(1===arguments.length){if(arguments[0]instanceof bu){var t=arguments[0];this.expandToInclude(t.x,t.y)}else if(arguments[0]instanceof Yu){var e=arguments[0];if(e.isNull())return null;this.isNull()?(this._minx=e.getMinX(),this._maxx=e.getMaxX(),this._miny=e.getMinY(),this._maxy=e.getMaxY()):(e._minx<this._minx&&(this._minx=e._minx),e._maxx>this._maxx&&(this._maxx=e._maxx),e._miny<this._miny&&(this._miny=e._miny),e._maxy>this._maxy&&(this._maxy=e._maxy))}}else if(2===arguments.length){var n=arguments[0],r=arguments[1];this.isNull()?(this._minx=n,this._maxx=n,this._miny=r,this._maxy=r):(n<this._minx&&(this._minx=n),n>this._maxx&&(this._maxx=n),r<this._miny&&(this._miny=r),r>this._maxy&&(this._maxy=r))}},Yu.prototype.minExtent=function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return t<e?t:e},Yu.prototype.getWidth=function(){return this.isNull()?0:this._maxx-this._minx},Yu.prototype.compareTo=function(t){var e=t;return this.isNull()?e.isNull()?0:-1:e.isNull()?1:this._minx<e._minx?-1:this._minx>e._minx?1:this._miny<e._miny?-1:this._miny>e._miny?1:this._maxx<e._maxx?-1:this._maxx>e._maxx?1:this._maxy<e._maxy?-1:this._maxy>e._maxy?1:0},Yu.prototype.translate=function(t,e){if(this.isNull())return null;this.init(this.getMinX()+t,this.getMaxX()+t,this.getMinY()+e,this.getMaxY()+e)},Yu.prototype.toString=function(){return"Env["+this._minx+" : "+this._maxx+", "+this._miny+" : "+this._maxy+"]"},Yu.prototype.setToNull=function(){this._minx=0,this._maxx=-1,this._miny=0,this._maxy=-1},Yu.prototype.getHeight=function(){return this.isNull()?0:this._maxy-this._miny},Yu.prototype.maxExtent=function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return t>e?t:e},Yu.prototype.expandBy=function(){if(1===arguments.length){var t=arguments[0];this.expandBy(t,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this.isNull())return null;this._minx-=e,this._maxx+=e,this._miny-=n,this._maxy+=n,(this._minx>this._maxx||this._miny>this._maxy)&&this.setToNull()}},Yu.prototype.contains=function(){if(1===arguments.length){if(arguments[0]instanceof Yu){var t=arguments[0];return this.covers(t)}if(arguments[0]instanceof bu){var e=arguments[0];return this.covers(e)}}else if(2===arguments.length){var n=arguments[0],r=arguments[1];return this.covers(n,r)}},Yu.prototype.centre=function(){return this.isNull()?null:new bu((this.getMinX()+this.getMaxX())/2,(this.getMinY()+this.getMaxY())/2)},Yu.prototype.init=function(){if(0===arguments.length)this.setToNull();else if(1===arguments.length){if(arguments[0]instanceof bu){var t=arguments[0];this.init(t.x,t.x,t.y,t.y)}else if(arguments[0]instanceof Yu){var e=arguments[0];this._minx=e._minx,this._maxx=e._maxx,this._miny=e._miny,this._maxy=e._maxy}}else if(2===arguments.length){var n=arguments[0],r=arguments[1];this.init(n.x,r.x,n.y,r.y)}else if(4===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3];i<o?(this._minx=i,this._maxx=o):(this._minx=o,this._maxx=i),s<a?(this._miny=s,this._maxy=a):(this._miny=a,this._maxy=s)}},Yu.prototype.getMaxY=function(){return this._maxy},Yu.prototype.distance=function(t){if(this.intersects(t))return 0;var e=0;this._maxx<t._minx?e=t._minx-this._maxx:this._minx>t._maxx&&(e=this._minx-t._maxx);var n=0;return this._maxy<t._miny?n=t._miny-this._maxy:this._miny>t._maxy&&(n=this._miny-t._maxy),0===e?n:0===n?e:Math.sqrt(e*e+n*n)},Yu.prototype.hashCode=function(){var t=17;return t=37*t+bu.hashCode(this._minx),t=37*t+bu.hashCode(this._maxx),t=37*t+bu.hashCode(this._miny),t=37*t+bu.hashCode(this._maxy)},Yu.prototype.interfaces_=function(){return[xu,Li]},Yu.prototype.getClass=function(){return Yu},Yu.intersects=function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2];return n.x>=(t.x<e.x?t.x:e.x)&&n.x<=(t.x>e.x?t.x:e.x)&&n.y>=(t.y<e.y?t.y:e.y)&&n.y<=(t.y>e.y?t.y:e.y)}if(4===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2],s=arguments[3],a=Math.min(o.x,s.x),u=Math.max(o.x,s.x),c=Math.min(r.x,i.x),h=Math.max(r.x,i.x);return!(c>u)&&(!(h<a)&&(a=Math.min(o.y,s.y),u=Math.max(o.y,s.y),c=Math.min(r.y,i.y),h=Math.max(r.y,i.y),!(c>u)&&!(h<a)))}},Vu.serialVersionUID.get=function(){return 0x51845cd552189800},Object.defineProperties(Yu,Vu);var Hu={typeStr:/^\s*(\w+)\s*\(\s*(.*)\s*\)\s*$/,emptyTypeStr:/^\s*(\w+)\s*EMPTY\s*$/,spaces:/\s+/,parenComma:/\)\s*,\s*\(/,doubleParenComma:/\)\s*\)\s*,\s*\(\s*\(/,trimParens:/^\s*\(?(.*?)\)?\s*$/},Wu=function(t){this.geometryFactory=t||new _h};Wu.prototype.read=function(t){var e,n,r;t=t.replace(/[\n\r]/g," ");var i=Hu.typeStr.exec(t);if(-1!==t.search("EMPTY")&&((i=Hu.emptyTypeStr.exec(t))[2]=void 0),i&&(n=i[1].toLowerCase(),r=i[2],Zu[n]&&(e=Zu[n].apply(this,[r]))),void 0===e)throw new Error("Could not parse WKT "+t);return e},Wu.prototype.write=function(t){return this.extractGeometry(t)},Wu.prototype.extractGeometry=function(t){var e=t.getGeometryType().toLowerCase();if(!Ju[e])return null;var n=e.toUpperCase();return t.isEmpty()?n+" EMPTY":n+"("+Ju[e].apply(this,[t])+")"};var Ju={coordinate:function(t){return t.x+" "+t.y},point:function(t){return Ju.coordinate.call(this,t._coordinates._coordinates[0])},multipoint:function(t){for(var e=[],n=0,r=t._geometries.length;n<r;++n)e.push("("+Ju.point.apply(this,[t._geometries[n]])+")");return e.join(",")},linestring:function(t){for(var e=[],n=0,r=t._points._coordinates.length;n<r;++n)e.push(Ju.coordinate.apply(this,[t._points._coordinates[n]]));return e.join(",")},linearring:function(t){for(var e=[],n=0,r=t._points._coordinates.length;n<r;++n)e.push(Ju.coordinate.apply(this,[t._points._coordinates[n]]));return e.join(",")},multilinestring:function(t){for(var e=[],n=0,r=t._geometries.length;n<r;++n)e.push("("+Ju.linestring.apply(this,[t._geometries[n]])+")");return e.join(",")},polygon:function(t){var e=[];e.push("("+Ju.linestring.apply(this,[t._shell])+")");for(var n=0,r=t._holes.length;n<r;++n)e.push("("+Ju.linestring.apply(this,[t._holes[n]])+")");return e.join(",")},multipolygon:function(t){for(var e=[],n=0,r=t._geometries.length;n<r;++n)e.push("("+Ju.polygon.apply(this,[t._geometries[n]])+")");return e.join(",")},geometrycollection:function(t){for(var e=[],n=0,r=t._geometries.length;n<r;++n)e.push(this.extractGeometry(t._geometries[n]));return e.join(",")}},Zu={point:function(t){if(void 0===t)return this.geometryFactory.createPoint();var e=t.trim().split(Hu.spaces);return this.geometryFactory.createPoint(new bu(Number.parseFloat(e[0]),Number.parseFloat(e[1])))},multipoint:function(t){if(void 0===t)return this.geometryFactory.createMultiPoint();for(var e,n=t.trim().split(","),r=[],i=0,o=n.length;i<o;++i)e=n[i].replace(Hu.trimParens,"$1"),r.push(Zu.point.apply(this,[e]));return this.geometryFactory.createMultiPoint(r)},linestring:function(t){if(void 0===t)return this.geometryFactory.createLineString();for(var e,n=t.trim().split(","),r=[],i=0,o=n.length;i<o;++i)e=n[i].trim().split(Hu.spaces),r.push(new bu(Number.parseFloat(e[0]),Number.parseFloat(e[1])));return this.geometryFactory.createLineString(r)},linearring:function(t){if(void 0===t)return this.geometryFactory.createLinearRing();for(var e,n=t.trim().split(","),r=[],i=0,o=n.length;i<o;++i)e=n[i].trim().split(Hu.spaces),r.push(new bu(Number.parseFloat(e[0]),Number.parseFloat(e[1])));return this.geometryFactory.createLinearRing(r)},multilinestring:function(t){if(void 0===t)return this.geometryFactory.createMultiLineString();for(var e,n=t.trim().split(Hu.parenComma),r=[],i=0,o=n.length;i<o;++i)e=n[i].replace(Hu.trimParens,"$1"),r.push(Zu.linestring.apply(this,[e]));return this.geometryFactory.createMultiLineString(r)},polygon:function(t){if(void 0===t)return this.geometryFactory.createPolygon();for(var e,n,r,i,o=t.trim().split(Hu.parenComma),s=[],a=0,u=o.length;a<u;++a)e=o[a].replace(Hu.trimParens,"$1"),n=Zu.linestring.apply(this,[e]),r=this.geometryFactory.createLinearRing(n._points),0===a?i=r:s.push(r);return this.geometryFactory.createPolygon(i,s)},multipolygon:function(t){if(void 0===t)return this.geometryFactory.createMultiPolygon();for(var e,n=t.trim().split(Hu.doubleParenComma),r=[],i=0,o=n.length;i<o;++i)e=n[i].replace(Hu.trimParens,"$1"),r.push(Zu.polygon.apply(this,[e]));return this.geometryFactory.createMultiPolygon(r)},geometrycollection:function(t){if(void 0===t)return this.geometryFactory.createGeometryCollection();for(var e=(t=t.replace(/,\s*([A-Za-z])/g,"|$1")).trim().split("|"),n=[],r=0,i=e.length;r<i;++r)n.push(this.read(e[r]));return this.geometryFactory.createGeometryCollection(n)}},Ku=function(t){this.parser=new Wu(t)};Ku.prototype.write=function(t){return this.parser.write(t)},Ku.toLineString=function(t,e){if(2!==arguments.length)throw new Error("Not implemented");return"LINESTRING ( "+t.x+" "+t.y+", "+e.x+" "+e.y+" )"};var Qu=function(t){function e(e){t.call(this,e),this.name="RuntimeException",this.message=e,this.stack=(new t).stack}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(Error),$u=function(t){function e(){if(t.call(this),0===arguments.length)t.call(this);else if(1===arguments.length){var e=arguments[0];t.call(this,e)}}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Qu),tc=function(){};tc.prototype.interfaces_=function(){return[]},tc.prototype.getClass=function(){return tc},tc.shouldNeverReachHere=function(){if(0===arguments.length)tc.shouldNeverReachHere(null);else if(1===arguments.length){var t=arguments[0];throw new $u("Should never reach here"+(null!==t?": "+t:""))}},tc.isTrue=function(){var t,e;if(1===arguments.length)t=arguments[0],tc.isTrue(t,null);else if(2===arguments.length&&(t=arguments[0],e=arguments[1],!t))throw null===e?new $u:new $u(e)},tc.equals=function(){var t,e,n;if(2===arguments.length)t=arguments[0],e=arguments[1],tc.equals(t,e,null);else if(3===arguments.length&&(t=arguments[0],e=arguments[1],n=arguments[2],!e.equals(t)))throw new $u("Expected "+t+" but encountered "+e+(null!==n?": "+n:""))};var ec=function(){this._result=null,this._inputLines=Array(2).fill().map(function(){return Array(2)}),this._intPt=new Array(2).fill(null),this._intLineIndex=null,this._isProper=null,this._pa=null,this._pb=null,this._precisionModel=null,this._intPt[0]=new bu,this._intPt[1]=new bu,this._pa=this._intPt[0],this._pb=this._intPt[1],this._result=0},nc={DONT_INTERSECT:{configurable:!0},DO_INTERSECT:{configurable:!0},COLLINEAR:{configurable:!0},NO_INTERSECTION:{configurable:!0},POINT_INTERSECTION:{configurable:!0},COLLINEAR_INTERSECTION:{configurable:!0}};ec.prototype.getIndexAlongSegment=function(t,e){return this.computeIntLineIndex(),this._intLineIndex[t][e]},ec.prototype.getTopologySummary=function(){var t=new Ru;return this.isEndPoint()&&t.append(" endpoint"),this._isProper&&t.append(" proper"),this.isCollinear()&&t.append(" collinear"),t.toString()},ec.prototype.computeIntersection=function(t,e,n,r){this._inputLines[0][0]=t,this._inputLines[0][1]=e,this._inputLines[1][0]=n,this._inputLines[1][1]=r,this._result=this.computeIntersect(t,e,n,r)},ec.prototype.getIntersectionNum=function(){return this._result},ec.prototype.computeIntLineIndex=function(){if(0===arguments.length)null===this._intLineIndex&&(this._intLineIndex=Array(2).fill().map(function(){return Array(2)}),this.computeIntLineIndex(0),this.computeIntLineIndex(1));else if(1===arguments.length){var t=arguments[0];this.getEdgeDistance(t,0)>this.getEdgeDistance(t,1)?(this._intLineIndex[t][0]=0,this._intLineIndex[t][1]=1):(this._intLineIndex[t][0]=1,this._intLineIndex[t][1]=0)}},ec.prototype.isProper=function(){return this.hasIntersection()&&this._isProper},ec.prototype.setPrecisionModel=function(t){this._precisionModel=t},ec.prototype.isInteriorIntersection=function(){if(0===arguments.length)return!!this.isInteriorIntersection(0)||!!this.isInteriorIntersection(1);if(1===arguments.length){for(var t=arguments[0],e=0;e<this._result;e++)if(!this._intPt[e].equals2D(this._inputLines[t][0])&&!this._intPt[e].equals2D(this._inputLines[t][1]))return!0;return!1}},ec.prototype.getIntersection=function(t){return this._intPt[t]},ec.prototype.isEndPoint=function(){return this.hasIntersection()&&!this._isProper},ec.prototype.hasIntersection=function(){return this._result!==ec.NO_INTERSECTION},ec.prototype.getEdgeDistance=function(t,e){return ec.computeEdgeDistance(this._intPt[e],this._inputLines[t][0],this._inputLines[t][1])},ec.prototype.isCollinear=function(){return this._result===ec.COLLINEAR_INTERSECTION},ec.prototype.toString=function(){return Ku.toLineString(this._inputLines[0][0],this._inputLines[0][1])+" - "+Ku.toLineString(this._inputLines[1][0],this._inputLines[1][1])+this.getTopologySummary()},ec.prototype.getEndpoint=function(t,e){return this._inputLines[t][e]},ec.prototype.isIntersection=function(t){for(var e=0;e<this._result;e++)if(this._intPt[e].equals2D(t))return!0;return!1},ec.prototype.getIntersectionAlongSegment=function(t,e){return this.computeIntLineIndex(),this._intPt[this._intLineIndex[t][e]]},ec.prototype.interfaces_=function(){return[]},ec.prototype.getClass=function(){return ec},ec.computeEdgeDistance=function(t,e,n){var r=Math.abs(n.x-e.x),i=Math.abs(n.y-e.y),o=-1;if(t.equals(e))o=0;else if(t.equals(n))o=r>i?r:i;else{var s=Math.abs(t.x-e.x),a=Math.abs(t.y-e.y);0!==(o=r>i?s:a)||t.equals(e)||(o=Math.max(s,a))}return tc.isTrue(!(0===o&&!t.equals(e)),"Bad distance calculation"),o},ec.nonRobustComputeEdgeDistance=function(t,e,n){var r=t.x-e.x,i=t.y-e.y,o=Math.sqrt(r*r+i*i);return tc.isTrue(!(0===o&&!t.equals(e)),"Invalid distance calculation"),o},nc.DONT_INTERSECT.get=function(){return 0},nc.DO_INTERSECT.get=function(){return 1},nc.COLLINEAR.get=function(){return 2},nc.NO_INTERSECTION.get=function(){return 0},nc.POINT_INTERSECTION.get=function(){return 1},nc.COLLINEAR_INTERSECTION.get=function(){return 2},Object.defineProperties(ec,nc);var rc=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.isInSegmentEnvelopes=function(t){var e=new Yu(this._inputLines[0][0],this._inputLines[0][1]),n=new Yu(this._inputLines[1][0],this._inputLines[1][1]);return e.contains(t)&&n.contains(t)},e.prototype.computeIntersection=function(){if(3!==arguments.length)return t.prototype.computeIntersection.apply(this,arguments);var e=arguments[0],n=arguments[1],r=arguments[2];if(this._isProper=!1,Yu.intersects(n,r,e)&&0===sc.orientationIndex(n,r,e)&&0===sc.orientationIndex(r,n,e))return this._isProper=!0,(e.equals(n)||e.equals(r))&&(this._isProper=!1),this._result=t.POINT_INTERSECTION,null;this._result=t.NO_INTERSECTION},e.prototype.normalizeToMinimum=function(t,e,n,r,i){i.x=this.smallestInAbsValue(t.x,e.x,n.x,r.x),i.y=this.smallestInAbsValue(t.y,e.y,n.y,r.y),t.x-=i.x,t.y-=i.y,e.x-=i.x,e.y-=i.y,n.x-=i.x,n.y-=i.y,r.x-=i.x,r.y-=i.y},e.prototype.safeHCoordinateIntersection=function(t,n,r,i){var o=null;try{o=Uu.intersection(t,n,r,i)}catch(s){if(!(s instanceof ju))throw s;o=e.nearestEndpoint(t,n,r,i)}return o},e.prototype.intersection=function(t,n,r,i){var o=this.intersectionWithNormalization(t,n,r,i);return this.isInSegmentEnvelopes(o)||(o=new bu(e.nearestEndpoint(t,n,r,i))),null!==this._precisionModel&&this._precisionModel.makePrecise(o),o},e.prototype.smallestInAbsValue=function(t,e,n,r){var i=t,o=Math.abs(i);return Math.abs(e)<o&&(i=e,o=Math.abs(e)),Math.abs(n)<o&&(i=n,o=Math.abs(n)),Math.abs(r)<o&&(i=r),i},e.prototype.checkDD=function(t,e,n,r,i){var o=qu.intersection(t,e,n,r),s=this.isInSegmentEnvelopes(o);Xu.out.println("DD in env = "+s+"  --------------------- "+o),i.distance(o)>1e-4&&Xu.out.println("Distance = "+i.distance(o))},e.prototype.intersectionWithNormalization=function(t,e,n,r){var i=new bu(t),o=new bu(e),s=new bu(n),a=new bu(r),u=new bu;this.normalizeToEnvCentre(i,o,s,a,u);var c=this.safeHCoordinateIntersection(i,o,s,a);return c.x+=u.x,c.y+=u.y,c},e.prototype.computeCollinearIntersection=function(e,n,r,i){var o=Yu.intersects(e,n,r),s=Yu.intersects(e,n,i),a=Yu.intersects(r,i,e),u=Yu.intersects(r,i,n);return o&&s?(this._intPt[0]=r,this._intPt[1]=i,t.COLLINEAR_INTERSECTION):a&&u?(this._intPt[0]=e,this._intPt[1]=n,t.COLLINEAR_INTERSECTION):o&&a?(this._intPt[0]=r,this._intPt[1]=e,!r.equals(e)||s||u?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):o&&u?(this._intPt[0]=r,this._intPt[1]=n,!r.equals(n)||s||a?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):s&&a?(this._intPt[0]=i,this._intPt[1]=e,!i.equals(e)||o||u?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):s&&u?(this._intPt[0]=i,this._intPt[1]=n,!i.equals(n)||o||a?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):t.NO_INTERSECTION},e.prototype.normalizeToEnvCentre=function(t,e,n,r,i){var o=t.x<e.x?t.x:e.x,s=t.y<e.y?t.y:e.y,a=t.x>e.x?t.x:e.x,u=t.y>e.y?t.y:e.y,c=n.x<r.x?n.x:r.x,h=n.y<r.y?n.y:r.y,l=n.x>r.x?n.x:r.x,p=n.y>r.y?n.y:r.y,f=((o>c?o:c)+(a<l?a:l))/2,g=((s>h?s:h)+(u<p?u:p))/2;i.x=f,i.y=g,t.x-=i.x,t.y-=i.y,e.x-=i.x,e.y-=i.y,n.x-=i.x,n.y-=i.y,r.x-=i.x,r.y-=i.y},e.prototype.computeIntersect=function(e,n,r,i){if(this._isProper=!1,!Yu.intersects(e,n,r,i))return t.NO_INTERSECTION;var o=sc.orientationIndex(e,n,r),s=sc.orientationIndex(e,n,i);if(o>0&&s>0||o<0&&s<0)return t.NO_INTERSECTION;var a=sc.orientationIndex(r,i,e),u=sc.orientationIndex(r,i,n);if(a>0&&u>0||a<0&&u<0)return t.NO_INTERSECTION;return 0===o&&0===s&&0===a&&0===u?this.computeCollinearIntersection(e,n,r,i):(0===o||0===s||0===a||0===u?(this._isProper=!1,e.equals2D(r)||e.equals2D(i)?this._intPt[0]=e:n.equals2D(r)||n.equals2D(i)?this._intPt[0]=n:0===o?this._intPt[0]=new bu(r):0===s?this._intPt[0]=new bu(i):0===a?this._intPt[0]=new bu(e):0===u&&(this._intPt[0]=new bu(n))):(this._isProper=!0,this._intPt[0]=this.intersection(e,n,r,i)),t.POINT_INTERSECTION)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.nearestEndpoint=function(t,e,n,r){var i=t,o=sc.distancePointLine(t,n,r),s=sc.distancePointLine(e,n,r);return s<o&&(o=s,i=e),(s=sc.distancePointLine(n,t,e))<o&&(o=s,i=n),(s=sc.distancePointLine(r,t,e))<o&&(o=s,i=r),i},e}(ec),ic=function(){};ic.prototype.interfaces_=function(){return[]},ic.prototype.getClass=function(){return ic},ic.orientationIndex=function(t,e,n){var r=e.x-t.x,i=e.y-t.y,o=n.x-e.x,s=n.y-e.y;return ic.signOfDet2x2(r,i,o,s)},ic.signOfDet2x2=function(t,e,n,r){var i=null,o=null,s=null;if(i=1,0===t||0===r)return 0===e||0===n?0:e>0?n>0?-i:i:n>0?i:-i;if(0===e||0===n)return r>0?t>0?i:-i:t>0?-i:i;if(e>0?r>0?e<=r||(i=-i,o=t,t=n,n=o,o=e,e=r,r=o):e<=-r?(i=-i,n=-n,r=-r):(o=t,t=-n,n=o,o=e,e=-r,r=o):r>0?-e<=r?(i=-i,t=-t,e=-e):(o=-t,t=n,n=o,o=-e,e=r,r=o):e>=r?(t=-t,e=-e,n=-n,r=-r):(i=-i,o=-t,t=-n,n=o,o=-e,e=-r,r=o),t>0){if(!(n>0))return i;if(!(t<=n))return i}else{if(n>0)return-i;if(!(t>=n))return-i;i=-i,t=-t,n=-n}for(;;){if(s=Math.floor(n/t),n-=s*t,(r-=s*e)<0)return-i;if(r>e)return i;if(t>n+n){if(e<r+r)return i}else{if(e>r+r)return-i;n=t-n,r=e-r,i=-i}if(0===r)return 0===n?0:-i;if(0===n)return i;if(s=Math.floor(t/n),t-=s*n,(e-=s*r)<0)return i;if(e>r)return-i;if(n>t+t){if(r<e+e)return-i}else{if(r>e+e)return i;t=n-t,e=r-e,i=-i}if(0===e)return 0===t?0:i;if(0===t)return-i}};var oc=function(){this._p=null,this._crossingCount=0,this._isPointOnSegment=!1;var t=arguments[0];this._p=t};oc.prototype.countSegment=function(t,e){if(t.x<this._p.x&&e.x<this._p.x)return null;if(this._p.x===e.x&&this._p.y===e.y)return this._isPointOnSegment=!0,null;if(t.y===this._p.y&&e.y===this._p.y){var n=t.x,r=e.x;return n>r&&(n=e.x,r=t.x),this._p.x>=n&&this._p.x<=r&&(this._isPointOnSegment=!0),null}if(t.y>this._p.y&&e.y<=this._p.y||e.y>this._p.y&&t.y<=this._p.y){var i=t.x-this._p.x,o=t.y-this._p.y,s=e.x-this._p.x,a=e.y-this._p.y,u=ic.signOfDet2x2(i,o,s,a);if(0===u)return this._isPointOnSegment=!0,null;a<o&&(u=-u),u>0&&this._crossingCount++}},oc.prototype.isPointInPolygon=function(){return this.getLocation()!==Su.EXTERIOR},oc.prototype.getLocation=function(){return this._isPointOnSegment?Su.BOUNDARY:this._crossingCount%2==1?Su.INTERIOR:Su.EXTERIOR},oc.prototype.isOnSegment=function(){return this._isPointOnSegment},oc.prototype.interfaces_=function(){return[]},oc.prototype.getClass=function(){return oc},oc.locatePointInRing=function(){if(arguments[0]instanceof bu&&Lu(arguments[1],Bu)){for(var t=arguments[0],e=arguments[1],n=new oc(t),r=new bu,i=new bu,o=1;o<e.size();o++)if(e.getCoordinate(o,r),e.getCoordinate(o-1,i),n.countSegment(r,i),n.isOnSegment())return n.getLocation();return n.getLocation()}if(arguments[0]instanceof bu&&arguments[1]instanceof Array){for(var s=arguments[0],a=arguments[1],u=new oc(s),c=1;c<a.length;c++){var h=a[c],l=a[c-1];if(u.countSegment(h,l),u.isOnSegment())return u.getLocation()}return u.getLocation()}};var sc=function(){},ac={CLOCKWISE:{configurable:!0},RIGHT:{configurable:!0},COUNTERCLOCKWISE:{configurable:!0},LEFT:{configurable:!0},COLLINEAR:{configurable:!0},STRAIGHT:{configurable:!0}};sc.prototype.interfaces_=function(){return[]},sc.prototype.getClass=function(){return sc},sc.orientationIndex=function(t,e,n){return qu.orientationIndex(t,e,n)},sc.signedArea=function(){if(arguments[0]instanceof Array){var t=arguments[0];if(t.length<3)return 0;for(var e=0,n=t[0].x,r=1;r<t.length-1;r++){var i=t[r].x-n,o=t[r+1].y;e+=i*(t[r-1].y-o)}return e/2}if(Lu(arguments[0],Bu)){var s=arguments[0],a=s.size();if(a<3)return 0;var u=new bu,c=new bu,h=new bu;s.getCoordinate(0,c),s.getCoordinate(1,h);var l=c.x;h.x-=l;for(var p=0,f=1;f<a-1;f++)u.y=c.y,c.x=h.x,c.y=h.y,s.getCoordinate(f+1,h),h.x-=l,p+=c.x*(u.y-h.y);return p/2}},sc.distanceLineLine=function(t,e,n,r){if(t.equals(e))return sc.distancePointLine(t,n,r);if(n.equals(r))return sc.distancePointLine(r,t,e);var i=!1;if(Yu.intersects(t,e,n,r)){var o=(e.x-t.x)*(r.y-n.y)-(e.y-t.y)*(r.x-n.x);if(0===o)i=!0;else{var s=(t.y-n.y)*(r.x-n.x)-(t.x-n.x)*(r.y-n.y),a=((t.y-n.y)*(e.x-t.x)-(t.x-n.x)*(e.y-t.y))/o,u=s/o;(u<0||u>1||a<0||a>1)&&(i=!0)}}else i=!0;return i?Pu.min(sc.distancePointLine(t,n,r),sc.distancePointLine(e,n,r),sc.distancePointLine(n,t,e),sc.distancePointLine(r,t,e)):0},sc.isPointInRing=function(t,e){return sc.locatePointInRing(t,e)!==Su.EXTERIOR},sc.computeLength=function(t){var e=t.size();if(e<=1)return 0;var n=0,r=new bu;t.getCoordinate(0,r);for(var i=r.x,o=r.y,s=1;s<e;s++){t.getCoordinate(s,r);var a=r.x,u=r.y,c=a-i,h=u-o;n+=Math.sqrt(c*c+h*h),i=a,o=u}return n},sc.isCCW=function(t){var e=t.length-1;if(e<3)throw new _u("Ring has fewer than 4 points, so orientation cannot be determined");for(var n=t[0],r=0,i=1;i<=e;i++){var o=t[i];o.y>n.y&&(n=o,r=i)}var s=r;do{(s-=1)<0&&(s=e)}while(t[s].equals2D(n)&&s!==r);var a=r;do{a=(a+1)%e}while(t[a].equals2D(n)&&a!==r);var u=t[s],c=t[a];if(u.equals2D(n)||c.equals2D(n)||u.equals2D(c))return!1;var h=sc.computeOrientation(u,n,c),l=!1;return l=0===h?u.x>c.x:h>0,l},sc.locatePointInRing=function(t,e){return oc.locatePointInRing(t,e)},sc.distancePointLinePerpendicular=function(t,e,n){var r=(n.x-e.x)*(n.x-e.x)+(n.y-e.y)*(n.y-e.y),i=((e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y))/r;return Math.abs(i)*Math.sqrt(r)},sc.computeOrientation=function(t,e,n){return sc.orientationIndex(t,e,n)},sc.distancePointLine=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(0===e.length)throw new _u("Line array must contain at least one vertex");for(var n=t.distance(e[0]),r=0;r<e.length-1;r++){var i=sc.distancePointLine(t,e[r],e[r+1]);i<n&&(n=i)}return n}if(3===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2];if(s.x===a.x&&s.y===a.y)return o.distance(s);var u=(a.x-s.x)*(a.x-s.x)+(a.y-s.y)*(a.y-s.y),c=((o.x-s.x)*(a.x-s.x)+(o.y-s.y)*(a.y-s.y))/u;if(c<=0)return o.distance(s);if(c>=1)return o.distance(a);var h=((s.y-o.y)*(a.x-s.x)-(s.x-o.x)*(a.y-s.y))/u;return Math.abs(h)*Math.sqrt(u)}},sc.isOnLine=function(t,e){for(var n=new rc,r=1;r<e.length;r++){var i=e[r-1],o=e[r];if(n.computeIntersection(t,i,o),n.hasIntersection())return!0}return!1},ac.CLOCKWISE.get=function(){return-1},ac.RIGHT.get=function(){return sc.CLOCKWISE},ac.COUNTERCLOCKWISE.get=function(){return 1},ac.LEFT.get=function(){return sc.COUNTERCLOCKWISE},ac.COLLINEAR.get=function(){return 0},ac.STRAIGHT.get=function(){return sc.COLLINEAR},Object.defineProperties(sc,ac);var uc=function(){};uc.prototype.filter=function(t){},uc.prototype.interfaces_=function(){return[]},uc.prototype.getClass=function(){return uc};var cc=function(){var t=arguments[0];this._envelope=null,this._factory=null,this._SRID=null,this._userData=null,this._factory=t,this._SRID=t.getSRID()},hc={serialVersionUID:{configurable:!0},SORTINDEX_POINT:{configurable:!0},SORTINDEX_MULTIPOINT:{configurable:!0},SORTINDEX_LINESTRING:{configurable:!0},SORTINDEX_LINEARRING:{configurable:!0},SORTINDEX_MULTILINESTRING:{configurable:!0},SORTINDEX_POLYGON:{configurable:!0},SORTINDEX_MULTIPOLYGON:{configurable:!0},SORTINDEX_GEOMETRYCOLLECTION:{configurable:!0},geometryChangedFilter:{configurable:!0}};cc.prototype.isGeometryCollection=function(){return this.getSortIndex()===cc.SORTINDEX_GEOMETRYCOLLECTION},cc.prototype.getFactory=function(){return this._factory},cc.prototype.getGeometryN=function(t){return this},cc.prototype.getArea=function(){return 0},cc.prototype.isRectangle=function(){return!1},cc.prototype.equals=function(){if(arguments[0]instanceof cc){var t=arguments[0];return null!==t&&this.equalsTopo(t)}if(arguments[0]instanceof Object){var e=arguments[0];if(!(e instanceof cc))return!1;var n=e;return this.equalsExact(n)}},cc.prototype.equalsExact=function(t){return this===t||this.equalsExact(t,0)},cc.prototype.geometryChanged=function(){this.apply(cc.geometryChangedFilter)},cc.prototype.geometryChangedAction=function(){this._envelope=null},cc.prototype.equalsNorm=function(t){return null!==t&&this.norm().equalsExact(t.norm())},cc.prototype.getLength=function(){return 0},cc.prototype.getNumGeometries=function(){return 1},cc.prototype.compareTo=function(){if(1===arguments.length){var t=arguments[0],e=t;return this.getSortIndex()!==e.getSortIndex()?this.getSortIndex()-e.getSortIndex():this.isEmpty()&&e.isEmpty()?0:this.isEmpty()?-1:e.isEmpty()?1:this.compareToSameClass(t)}if(2===arguments.length){var n=arguments[0],r=arguments[1];return this.getSortIndex()!==n.getSortIndex()?this.getSortIndex()-n.getSortIndex():this.isEmpty()&&n.isEmpty()?0:this.isEmpty()?-1:n.isEmpty()?1:this.compareToSameClass(n,r)}},cc.prototype.getUserData=function(){return this._userData},cc.prototype.getSRID=function(){return this._SRID},cc.prototype.getEnvelope=function(){return this.getFactory().toGeometry(this.getEnvelopeInternal())},cc.prototype.checkNotGeometryCollection=function(t){if(t.getSortIndex()===cc.SORTINDEX_GEOMETRYCOLLECTION)throw new _u("This method does not support GeometryCollection arguments")},cc.prototype.equal=function(t,e,n){return 0===n?t.equals(e):t.distance(e)<=n},cc.prototype.norm=function(){var t=this.copy();return t.normalize(),t},cc.prototype.getPrecisionModel=function(){return this._factory.getPrecisionModel()},cc.prototype.getEnvelopeInternal=function(){return null===this._envelope&&(this._envelope=this.computeEnvelopeInternal()),new Yu(this._envelope)},cc.prototype.setSRID=function(t){this._SRID=t},cc.prototype.setUserData=function(t){this._userData=t},cc.prototype.compare=function(t,e){for(var n=t.iterator(),r=e.iterator();n.hasNext()&&r.hasNext();){var i=n.next(),o=r.next(),s=i.compareTo(o);if(0!==s)return s}return n.hasNext()?1:r.hasNext()?-1:0},cc.prototype.hashCode=function(){return this.getEnvelopeInternal().hashCode()},cc.prototype.isGeometryCollectionOrDerived=function(){return this.getSortIndex()===cc.SORTINDEX_GEOMETRYCOLLECTION||this.getSortIndex()===cc.SORTINDEX_MULTIPOINT||this.getSortIndex()===cc.SORTINDEX_MULTILINESTRING||this.getSortIndex()===cc.SORTINDEX_MULTIPOLYGON},cc.prototype.interfaces_=function(){return[Eu,xu,Li]},cc.prototype.getClass=function(){return cc},cc.hasNonEmptyElements=function(t){for(var e=0;e<t.length;e++)if(!t[e].isEmpty())return!0;return!1},cc.hasNullElements=function(t){for(var e=0;e<t.length;e++)if(null===t[e])return!0;return!1},hc.serialVersionUID.get=function(){return 0x799ea46522854c00},hc.SORTINDEX_POINT.get=function(){return 0},hc.SORTINDEX_MULTIPOINT.get=function(){return 1},hc.SORTINDEX_LINESTRING.get=function(){return 2},hc.SORTINDEX_LINEARRING.get=function(){return 3},hc.SORTINDEX_MULTILINESTRING.get=function(){return 4},hc.SORTINDEX_POLYGON.get=function(){return 5},hc.SORTINDEX_MULTIPOLYGON.get=function(){return 6},hc.SORTINDEX_GEOMETRYCOLLECTION.get=function(){return 7},hc.geometryChangedFilter.get=function(){return lc},Object.defineProperties(cc,hc);var lc=function(){};lc.interfaces_=function(){return[uc]},lc.filter=function(t){t.geometryChangedAction()};var pc=function(){};pc.prototype.filter=function(t){},pc.prototype.interfaces_=function(){return[]},pc.prototype.getClass=function(){return pc};var fc=function(){},gc={Mod2BoundaryNodeRule:{configurable:!0},EndPointBoundaryNodeRule:{configurable:!0},MultiValentEndPointBoundaryNodeRule:{configurable:!0},MonoValentEndPointBoundaryNodeRule:{configurable:!0},MOD2_BOUNDARY_RULE:{configurable:!0},ENDPOINT_BOUNDARY_RULE:{configurable:!0},MULTIVALENT_ENDPOINT_BOUNDARY_RULE:{configurable:!0},MONOVALENT_ENDPOINT_BOUNDARY_RULE:{configurable:!0},OGC_SFS_BOUNDARY_RULE:{configurable:!0}};fc.prototype.isInBoundary=function(t){},fc.prototype.interfaces_=function(){return[]},fc.prototype.getClass=function(){return fc},gc.Mod2BoundaryNodeRule.get=function(){return dc},gc.EndPointBoundaryNodeRule.get=function(){return yc},gc.MultiValentEndPointBoundaryNodeRule.get=function(){return _c},gc.MonoValentEndPointBoundaryNodeRule.get=function(){return mc},gc.MOD2_BOUNDARY_RULE.get=function(){return new dc},gc.ENDPOINT_BOUNDARY_RULE.get=function(){return new yc},gc.MULTIVALENT_ENDPOINT_BOUNDARY_RULE.get=function(){return new _c},gc.MONOVALENT_ENDPOINT_BOUNDARY_RULE.get=function(){return new mc},gc.OGC_SFS_BOUNDARY_RULE.get=function(){return fc.MOD2_BOUNDARY_RULE},Object.defineProperties(fc,gc);var dc=function(){};dc.prototype.isInBoundary=function(t){return t%2==1},dc.prototype.interfaces_=function(){return[fc]},dc.prototype.getClass=function(){return dc};var yc=function(){};yc.prototype.isInBoundary=function(t){return t>0},yc.prototype.interfaces_=function(){return[fc]},yc.prototype.getClass=function(){return yc};var _c=function(){};_c.prototype.isInBoundary=function(t){return t>1},_c.prototype.interfaces_=function(){return[fc]},_c.prototype.getClass=function(){return _c};var mc=function(){};mc.prototype.isInBoundary=function(t){return 1===t},mc.prototype.interfaces_=function(){return[fc]},mc.prototype.getClass=function(){return mc};var vc=function(){};vc.prototype.add=function(){},vc.prototype.addAll=function(){},vc.prototype.isEmpty=function(){},vc.prototype.iterator=function(){},vc.prototype.size=function(){},vc.prototype.toArray=function(){},vc.prototype.remove=function(){};var xc=function(t){function e(e){t.call(this),this.message=e||""}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={name:{configurable:!0}};return n.name.get=function(){return"IndexOutOfBoundsException"},Object.defineProperties(e,n),e}(Error),Ec=function(){};Ec.prototype.hasNext=function(){},Ec.prototype.next=function(){},Ec.prototype.remove=function(){};var wc=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.get=function(){},e.prototype.set=function(){},e.prototype.isEmpty=function(){},e}(vc);(Pi.prototype=new Error).name="NoSuchElementException";var bc=function(t){function e(){t.call(this),this.array_=[],arguments[0]instanceof vc&&this.addAll(arguments[0])}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.ensureCapacity=function(){},e.prototype.interfaces_=function(){return[t,vc]},e.prototype.add=function(t){return 1===arguments.length?this.array_.push(t):this.array_.splice(arguments[0],arguments[1]),!0},e.prototype.clear=function(){this.array_=[]},e.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},e.prototype.set=function(t,e){var n=this.array_[t];return this.array_[t]=e,n},e.prototype.iterator=function(){return new Ic(this)},e.prototype.get=function(t){if(t<0||t>=this.size())throw new xc;return this.array_[t]},e.prototype.isEmpty=function(){return 0===this.array_.length},e.prototype.size=function(){return this.array_.length},e.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t},e.prototype.remove=function(t){for(var e=!1,n=0,r=this.array_.length;n<r;n++)if(this.array_[n]===t){this.array_.splice(n,1),e=!0;break}return e},e}(wc),Ic=function(t){function e(e){t.call(this),this.arrayList_=e,this.position_=0}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.next=function(){if(this.position_===this.arrayList_.size())throw new Pi;return this.arrayList_.get(this.position_++)},e.prototype.hasNext=function(){return this.position_<this.arrayList_.size()},e.prototype.set=function(t){return this.arrayList_.set(this.position_-1,t)},e.prototype.remove=function(){this.arrayList_.remove(this.arrayList_.get(this.position_))},e}(Ec),Nc=function(t){function e(){if(t.call(this),0===arguments.length);else if(1===arguments.length){var e=arguments[0];this.ensureCapacity(e.length),this.add(e,!0)}else if(2===arguments.length){var n=arguments[0],r=arguments[1];this.ensureCapacity(n.length),this.add(n,r)}}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={coordArrayType:{configurable:!0}};return n.coordArrayType.get=function(){return new Array(0).fill(null)},e.prototype.getCoordinate=function(t){return this.get(t)},e.prototype.addAll=function(){if(2===arguments.length){for(var e=arguments[0],n=arguments[1],r=!1,i=e.iterator();i.hasNext();)this.add(i.next(),n),r=!0;return r}return t.prototype.addAll.apply(this,arguments)},e.prototype.clone=function(){for(var e=t.prototype.clone.call(this),n=0;n<this.size();n++)e.add(n,this.get(n).copy());return e},e.prototype.toCoordinateArray=function(){return this.toArray(e.coordArrayType)},e.prototype.add=function(){if(1===arguments.length){var e=arguments[0];t.prototype.add.call(this,e)}else if(2===arguments.length){if(arguments[0]instanceof Array&&"boolean"==typeof arguments[1]){var n=arguments[0],r=arguments[1];return this.add(n,r,!0),!0}if(arguments[0]instanceof bu&&"boolean"==typeof arguments[1]){var i=arguments[0];if(!arguments[1]&&this.size()>=1){if(this.get(this.size()-1).equals2D(i))return null}t.prototype.add.call(this,i)}else if(arguments[0]instanceof Object&&"boolean"==typeof arguments[1]){var o=arguments[0],s=arguments[1];return this.add(o,s),!0}}else if(3===arguments.length){if("boolean"==typeof arguments[2]&&arguments[0]instanceof Array&&"boolean"==typeof arguments[1]){var a=arguments[0],u=arguments[1];if(arguments[2])for(var c=0;c<a.length;c++)this.add(a[c],u);else for(var h=a.length-1;h>=0;h--)this.add(a[h],u);return!0}if("boolean"==typeof arguments[2]&&Number.isInteger(arguments[0])&&arguments[1]instanceof bu){var l=arguments[0],p=arguments[1];if(!arguments[2]){var f=this.size();if(f>0){if(l>0){if(this.get(l-1).equals2D(p))return null}if(l<f){if(this.get(l).equals2D(p))return null}}}t.prototype.add.call(this,l,p)}}else if(4===arguments.length){var g=arguments[0],d=arguments[1],y=arguments[2],_=arguments[3],m=1;y>_&&(m=-1);for(var v=y;v!==_;v+=m)this.add(g[v],d);return!0}},e.prototype.closeRing=function(){this.size()>0&&this.add(new bu(this.get(0)),!1)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},Object.defineProperties(e,n),e}(bc),Cc=function(){},Sc={ForwardComparator:{configurable:!0},BidirectionalComparator:{configurable:!0},coordArrayType:{configurable:!0}};Sc.ForwardComparator.get=function(){return Mc},Sc.BidirectionalComparator.get=function(){return Lc},Sc.coordArrayType.get=function(){return new Array(0).fill(null)},Cc.prototype.interfaces_=function(){return[]},Cc.prototype.getClass=function(){return Cc},Cc.isRing=function(t){return!(t.length<4)&&!!t[0].equals2D(t[t.length-1])},Cc.ptNotInList=function(t,e){for(var n=0;n<t.length;n++){var r=t[n];if(Cc.indexOf(r,e)<0)return r}return null},Cc.scroll=function(t,e){var n=Cc.indexOf(e,t);if(n<0)return null;var r=new Array(t.length).fill(null);Xu.arraycopy(t,n,r,0,t.length-n),Xu.arraycopy(t,0,r,t.length-n,n),Xu.arraycopy(r,0,t,0,t.length)},Cc.equals=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(t===e)return!0;if(null===t||null===e)return!1;if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(!t[n].equals(e[n]))return!1;return!0}if(3===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2];if(r===i)return!0;if(null===r||null===i)return!1;if(r.length!==i.length)return!1;for(var s=0;s<r.length;s++)if(0!==o.compare(r[s],i[s]))return!1;return!0}},Cc.intersection=function(t,e){for(var n=new Nc,r=0;r<t.length;r++)e.intersects(t[r])&&n.add(t[r],!0);return n.toCoordinateArray()},Cc.hasRepeatedPoints=function(t){for(var e=1;e<t.length;e++)if(t[e-1].equals(t[e]))return!0;return!1},Cc.removeRepeatedPoints=function(t){if(!Cc.hasRepeatedPoints(t))return t;return new Nc(t,!1).toCoordinateArray()},Cc.reverse=function(t){for(var e=t.length-1,n=Math.trunc(e/2),r=0;r<=n;r++){var i=t[r];t[r]=t[e-r],t[e-r]=i}},Cc.removeNull=function(t){for(var e=0,n=0;n<t.length;n++)null!==t[n]&&e++;var r=new Array(e).fill(null);if(0===e)return r;for(var i=0,o=0;o<t.length;o++)null!==t[o]&&(r[i++]=t[o]);return r},Cc.copyDeep=function(){if(1===arguments.length){for(var t=arguments[0],e=new Array(t.length).fill(null),n=0;n<t.length;n++)e[n]=new bu(t[n]);return e}if(5===arguments.length)for(var r=arguments[0],i=arguments[1],o=arguments[2],s=arguments[3],a=arguments[4],u=0;u<a;u++)o[s+u]=new bu(r[i+u])},Cc.isEqualReversed=function(t,e){for(var n=0;n<t.length;n++){var r=t[n],i=e[t.length-n-1];if(0!==r.compareTo(i))return!1}return!0},Cc.envelope=function(t){for(var e=new Yu,n=0;n<t.length;n++)e.expandToInclude(t[n]);return e},Cc.toCoordinateArray=function(t){return t.toArray(Cc.coordArrayType)},Cc.atLeastNCoordinatesOrNothing=function(t,e){return e.length>=t?e:[]},Cc.indexOf=function(t,e){for(var n=0;n<e.length;n++)if(t.equals(e[n]))return n;return-1},Cc.increasingDirection=function(t){for(var e=0;e<Math.trunc(t.length/2);e++){var n=t.length-1-e,r=t[e].compareTo(t[n]);if(0!==r)return r}return 1},Cc.compare=function(t,e){for(var n=0;n<t.length&&n<e.length;){var r=t[n].compareTo(e[n]);if(0!==r)return r;n++}return n<e.length?-1:n<t.length?1:0},Cc.minCoordinate=function(t){for(var e=null,n=0;n<t.length;n++)(null===e||e.compareTo(t[n])>0)&&(e=t[n]);return e},Cc.extract=function(t,e,n){e=Pu.clamp(e,0,t.length);var r=(n=Pu.clamp(n,-1,t.length))-e+1;n<0&&(r=0),e>=t.length&&(r=0),n<e&&(r=0);var i=new Array(r).fill(null);if(0===r)return i;for(var o=0,s=e;s<=n;s++)i[o++]=t[s];return i},Object.defineProperties(Cc,Sc);var Mc=function(){};Mc.prototype.compare=function(t,e){return Cc.compare(t,e)},Mc.prototype.interfaces_=function(){return[wu]},Mc.prototype.getClass=function(){return Mc};var Lc=function(){};Lc.prototype.compare=function(t,e){var n=t,r=e;if(n.length<r.length)return-1;if(n.length>r.length)return 1;if(0===n.length)return 0;var i=Cc.compare(n,r);return Cc.isEqualReversed(n,r)?0:i},Lc.prototype.OLDcompare=function(t,e){var n=t,r=e;if(n.length<r.length)return-1;if(n.length>r.length)return 1;if(0===n.length)return 0;for(var i=Cc.increasingDirection(n),o=Cc.increasingDirection(r),s=i>0?0:n.length-1,a=o>0?0:n.length-1,u=0;u<n.length;u++){var c=n[s].compareTo(r[a]);if(0!==c)return c;s+=i,a+=o}return 0},Lc.prototype.interfaces_=function(){return[wu]},Lc.prototype.getClass=function(){return Lc};var Pc=function(){};Pc.prototype.get=function(){},Pc.prototype.put=function(){},Pc.prototype.size=function(){},Pc.prototype.values=function(){},Pc.prototype.entrySet=function(){};var Oc=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(Pc);(Oi.prototype=new Error).name="OperationNotSupported",(Ri.prototype=new vc).contains=function(){};var Rc=function(t){function e(){t.call(this),this.array_=[],arguments[0]instanceof vc&&this.addAll(arguments[0])}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.contains=function(t){for(var e=0,n=this.array_.length;e<n;e++){if(this.array_[e]===t)return!0}return!1},e.prototype.add=function(t){return!this.contains(t)&&(this.array_.push(t),!0)},e.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},e.prototype.remove=function(t){throw new Error},e.prototype.size=function(){return this.array_.length},e.prototype.isEmpty=function(){return 0===this.array_.length},e.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t},e.prototype.iterator=function(){return new Tc(this)},e}(Ri),Tc=function(t){function e(e){t.call(this),this.hashSet_=e,this.position_=0}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.next=function(){if(this.position_===this.hashSet_.size())throw new Pi;return this.hashSet_.array_[this.position_++]},e.prototype.hasNext=function(){return this.position_<this.hashSet_.size()},e.prototype.remove=function(){throw new Oi},e}(Ec),Ac=0;(Gi.prototype=new Oc).get=function(t){for(var e=this.root_;null!==e;){var n=t.compareTo(e.key);if(n<0)e=e.left;else{if(!(n>0))return e.value;e=e.right}}return null},Gi.prototype.put=function(t,e){if(null===this.root_)return this.root_={key:t,value:e,left:null,right:null,parent:null,color:Ac,getValue:function(){return this.value},getKey:function(){return this.key}},this.size_=1,null;var n,r,i=this.root_;do{if(n=i,(r=t.compareTo(i.key))<0)i=i.left;else{if(!(r>0)){var o=i.value;return i.value=e,o}i=i.right}}while(null!==i);var s={key:t,left:null,right:null,value:e,parent:n,color:Ac,getValue:function(){return this.value},getKey:function(){return this.key}};return r<0?n.left=s:n.right=s,this.fixAfterInsertion(s),this.size_++,null},Gi.prototype.fixAfterInsertion=function(t){for(t.color=1;null!=t&&t!==this.root_&&1===t.parent.color;)if(Ai(t)===Fi(Ai(Ai(t)))){var e=qi(Ai(Ai(t)));1===Ti(e)?(Di(Ai(t),Ac),Di(e,Ac),Di(Ai(Ai(t)),1),t=Ai(Ai(t))):(t===qi(Ai(t))&&(t=Ai(t),this.rotateLeft(t)),Di(Ai(t),Ac),Di(Ai(Ai(t)),1),this.rotateRight(Ai(Ai(t))))}else{var n=Fi(Ai(Ai(t)));1===Ti(n)?(Di(Ai(t),Ac),Di(n,Ac),Di(Ai(Ai(t)),1),t=Ai(Ai(t))):(t===Fi(Ai(t))&&(t=Ai(t),this.rotateRight(t)),Di(Ai(t),Ac),Di(Ai(Ai(t)),1),this.rotateLeft(Ai(Ai(t))))}this.root_.color=Ac},Gi.prototype.values=function(){var t=new bc,e=this.getFirstEntry();if(null!==e)for(t.add(e.value);null!==(e=Gi.successor(e));)t.add(e.value);return t},Gi.prototype.entrySet=function(){var t=new Rc,e=this.getFirstEntry();if(null!==e)for(t.add(e);null!==(e=Gi.successor(e));)t.add(e);return t},Gi.prototype.rotateLeft=function(t){if(null!=t){var e=t.right;t.right=e.left,null!=e.left&&(e.left.parent=t),e.parent=t.parent,null===t.parent?this.root_=e:t.parent.left===t?t.parent.left=e:t.parent.right=e,e.left=t,t.parent=e}},Gi.prototype.rotateRight=function(t){if(null!=t){var e=t.left;t.left=e.right,null!=e.right&&(e.right.parent=t),e.parent=t.parent,null===t.parent?this.root_=e:t.parent.right===t?t.parent.right=e:t.parent.left=e,e.right=t,t.parent=e}},Gi.prototype.getFirstEntry=function(){var t=this.root_;if(null!=t)for(;null!=t.left;)t=t.left;return t},Gi.successor=function(t){if(null===t)return null;if(null!==t.right){for(var e=t.right;null!==e.left;)e=e.left;return e}for(var n=t.parent,r=t;null!==n&&r===n.right;)r=n,n=n.parent;return n},Gi.prototype.size=function(){return this.size_};var Dc=function(){};Dc.prototype.interfaces_=function(){return[]},Dc.prototype.getClass=function(){return Dc},Bi.prototype=new Ri,(ki.prototype=new Bi).contains=function(t){for(var e=0,n=this.array_.length;e<n;e++){if(0===this.array_[e].compareTo(t))return!0}return!1},ki.prototype.add=function(t){if(this.contains(t))return!1;for(var e=0,n=this.array_.length;e<n;e++){if(1===this.array_[e].compareTo(t))return this.array_.splice(e,0,t),!0}return this.array_.push(t),!0},ki.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},ki.prototype.remove=function(t){throw new Oi},ki.prototype.size=function(){return this.array_.length},ki.prototype.isEmpty=function(){return 0===this.array_.length},ki.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t},ki.prototype.iterator=function(){return new Fc(this)};var Fc=function(t){this.treeSet_=t,this.position_=0};Fc.prototype.next=function(){if(this.position_===this.treeSet_.size())throw new Pi;return this.treeSet_.array_[this.position_++]},Fc.prototype.hasNext=function(){return this.position_<this.treeSet_.size()},Fc.prototype.remove=function(){throw new Oi};var qc=function(){};qc.sort=function(){var t,e,n,r,i=arguments[0];if(1===arguments.length)r=function(t,e){return t.compareTo(e)},i.sort(r);else if(2===arguments.length)n=arguments[1],r=function(t,e){return n.compare(t,e)},i.sort(r);else if(3===arguments.length){(e=i.slice(arguments[1],arguments[2])).sort();var o=i.slice(0,arguments[1]).concat(e,i.slice(arguments[2],i.length));for(i.splice(0,i.length),t=0;t<o.length;t++)i.push(o[t])}else if(4===arguments.length)for(e=i.slice(arguments[1],arguments[2]),n=arguments[3],r=function(t,e){return n.compare(t,e)},e.sort(r),o=i.slice(0,arguments[1]).concat(e,i.slice(arguments[2],i.length)),i.splice(0,i.length),t=0;t<o.length;t++)i.push(o[t])},qc.asList=function(t){for(var e=new bc,n=0,r=t.length;n<r;n++)e.add(t[n]);return e};var Gc=function(){},Bc={P:{configurable:!0},L:{configurable:!0},A:{configurable:!0},FALSE:{configurable:!0},TRUE:{configurable:!0},DONTCARE:{configurable:!0},SYM_FALSE:{configurable:!0},SYM_TRUE:{configurable:!0},SYM_DONTCARE:{configurable:!0},SYM_P:{configurable:!0},SYM_L:{configurable:!0},SYM_A:{configurable:!0}};Bc.P.get=function(){return 0},Bc.L.get=function(){return 1},Bc.A.get=function(){return 2},Bc.FALSE.get=function(){return-1},Bc.TRUE.get=function(){return-2},Bc.DONTCARE.get=function(){return-3},Bc.SYM_FALSE.get=function(){return"F"},Bc.SYM_TRUE.get=function(){return"T"},Bc.SYM_DONTCARE.get=function(){return"*"},Bc.SYM_P.get=function(){return"0"},Bc.SYM_L.get=function(){return"1"},Bc.SYM_A.get=function(){return"2"},Gc.prototype.interfaces_=function(){return[]},Gc.prototype.getClass=function(){return Gc},Gc.toDimensionSymbol=function(t){switch(t){case Gc.FALSE:return Gc.SYM_FALSE;case Gc.TRUE:return Gc.SYM_TRUE;case Gc.DONTCARE:return Gc.SYM_DONTCARE;case Gc.P:return Gc.SYM_P;case Gc.L:return Gc.SYM_L;case Gc.A:return Gc.SYM_A}throw new _u("Unknown dimension value: "+t)},Gc.toDimensionValue=function(t){switch(Au.toUpperCase(t)){case Gc.SYM_FALSE:return Gc.FALSE;case Gc.SYM_TRUE:return Gc.TRUE;case Gc.SYM_DONTCARE:return Gc.DONTCARE;case Gc.SYM_P:return Gc.P;case Gc.SYM_L:return Gc.L;case Gc.SYM_A:return Gc.A}throw new _u("Unknown dimension symbol: "+t)},Object.defineProperties(Gc,Bc);var kc=function(){};kc.prototype.filter=function(t){},kc.prototype.interfaces_=function(){return[]},kc.prototype.getClass=function(){return kc};var zc=function(){};zc.prototype.filter=function(t,e){},zc.prototype.isDone=function(){},zc.prototype.isGeometryChanged=function(){},zc.prototype.interfaces_=function(){return[]},zc.prototype.getClass=function(){return zc};var jc=function(t){function e(e,n){if(t.call(this,n),this._geometries=e||[],t.hasNullElements(this._geometries))throw new _u("geometries must not contain null elements")}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){for(var t=new Yu,e=0;e<this._geometries.length;e++)t.expandToInclude(this._geometries[e].getEnvelopeInternal());return t},e.prototype.getGeometryN=function(t){return this._geometries[t]},e.prototype.getSortIndex=function(){return t.SORTINDEX_GEOMETRYCOLLECTION},e.prototype.getCoordinates=function(){for(var t=new Array(this.getNumPoints()).fill(null),e=-1,n=0;n<this._geometries.length;n++)for(var r=this._geometries[n].getCoordinates(),i=0;i<r.length;i++)t[++e]=r[i];return t},e.prototype.getArea=function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getArea();return t},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];if(!this.isEquivalentClass(e))return!1;var r=e;if(this._geometries.length!==r._geometries.length)return!1;for(var i=0;i<this._geometries.length;i++)if(!this._geometries[i].equalsExact(r._geometries[i],n))return!1;return!0}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){for(var t=0;t<this._geometries.length;t++)this._geometries[t].normalize();qc.sort(this._geometries)},e.prototype.getCoordinate=function(){return this.isEmpty()?null:this._geometries[0].getCoordinate()},e.prototype.getBoundaryDimension=function(){for(var t=Gc.FALSE,e=0;e<this._geometries.length;e++)t=Math.max(t,this._geometries[e].getBoundaryDimension());return t},e.prototype.getDimension=function(){for(var t=Gc.FALSE,e=0;e<this._geometries.length;e++)t=Math.max(t,this._geometries[e].getDimension());return t},e.prototype.getLength=function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getLength();return t},e.prototype.getNumPoints=function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getNumPoints();return t},e.prototype.getNumGeometries=function(){return this._geometries.length},e.prototype.reverse=function(){for(var t=this._geometries.length,e=new Array(t).fill(null),n=0;n<this._geometries.length;n++)e[n]=this._geometries[n].reverse();return this.getFactory().createGeometryCollection(e)},e.prototype.compareToSameClass=function(){if(1===arguments.length){var t=arguments[0],e=new ki(qc.asList(this._geometries)),n=new ki(qc.asList(t._geometries));return this.compare(e,n)}if(2===arguments.length){for(var r=arguments[0],i=arguments[1],o=r,s=this.getNumGeometries(),a=o.getNumGeometries(),u=0;u<s&&u<a;){var c=this.getGeometryN(u),h=o.getGeometryN(u),l=c.compareToSameClass(h,i);if(0!==l)return l;u++}return u<s?1:u<a?-1:0}},e.prototype.apply=function(){if(Lu(arguments[0],pc))for(var t=arguments[0],e=0;e<this._geometries.length;e++)this._geometries[e].apply(t);else if(Lu(arguments[0],zc)){var n=arguments[0];if(0===this._geometries.length)return null;for(var r=0;r<this._geometries.length&&(this._geometries[r].apply(n),!n.isDone());r++);n.isGeometryChanged()&&this.geometryChanged()}else if(Lu(arguments[0],kc)){var i=arguments[0];i.filter(this);for(var o=0;o<this._geometries.length;o++)this._geometries[o].apply(i)}else if(Lu(arguments[0],uc)){var s=arguments[0];s.filter(this);for(var a=0;a<this._geometries.length;a++)this._geometries[a].apply(s)}},e.prototype.getBoundary=function(){return this.checkNotGeometryCollection(this),tc.shouldNeverReachHere(),null},e.prototype.clone=function(){var e=t.prototype.clone.call(this);e._geometries=new Array(this._geometries.length).fill(null);for(var n=0;n<this._geometries.length;n++)e._geometries[n]=this._geometries[n].clone();return e},e.prototype.getGeometryType=function(){return"GeometryCollection"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.isEmpty=function(){for(var t=0;t<this._geometries.length;t++)if(!this._geometries[t].isEmpty())return!1;return!0},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x4f07bcb1f857d800},Object.defineProperties(e,n),e}(cc),Xc=function(t){function e(){t.apply(this,arguments)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return cc.SORTINDEX_MULTILINESTRING},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&t.prototype.equalsExact.call(this,e,n)}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.getBoundaryDimension=function(){return this.isClosed()?Gc.FALSE:0},e.prototype.isClosed=function(){if(this.isEmpty())return!1;for(var t=0;t<this._geometries.length;t++)if(!this._geometries[t].isClosed())return!1;return!0},e.prototype.getDimension=function(){return 1},e.prototype.reverse=function(){for(var t=this._geometries.length,e=new Array(t).fill(null),n=0;n<this._geometries.length;n++)e[t-1-n]=this._geometries[n].reverse();return this.getFactory().createMultiLineString(e)},e.prototype.getBoundary=function(){return new Uc(this).getBoundary()},e.prototype.getGeometryType=function(){return"MultiLineString"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.interfaces_=function(){return[Dc]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return 0x7155d2ab4afa8000},Object.defineProperties(e,n),e}(jc),Uc=function(){if(this._geom=null,this._geomFact=null,this._bnRule=null,this._endpointMap=null,1===arguments.length){var t=arguments[0],e=fc.MOD2_BOUNDARY_RULE;this._geom=t,this._geomFact=t.getFactory(),this._bnRule=e}else if(2===arguments.length){var n=arguments[0],r=arguments[1];this._geom=n,this._geomFact=n.getFactory(),this._bnRule=r}};Uc.prototype.boundaryMultiLineString=function(t){if(this._geom.isEmpty())return this.getEmptyMultiPoint();var e=this.computeBoundaryCoordinates(t);return 1===e.length?this._geomFact.createPoint(e[0]):this._geomFact.createMultiPointFromCoords(e)},Uc.prototype.getBoundary=function(){return this._geom instanceof Jc?this.boundaryLineString(this._geom):this._geom instanceof Xc?this.boundaryMultiLineString(this._geom):this._geom.getBoundary()},Uc.prototype.boundaryLineString=function(t){if(this._geom.isEmpty())return this.getEmptyMultiPoint();if(t.isClosed()){return this._bnRule.isInBoundary(2)?t.getStartPoint():this._geomFact.createMultiPoint()}return this._geomFact.createMultiPoint([t.getStartPoint(),t.getEndPoint()])},Uc.prototype.getEmptyMultiPoint=function(){return this._geomFact.createMultiPoint()},Uc.prototype.computeBoundaryCoordinates=function(t){var e=new bc;this._endpointMap=new Gi;for(var n=0;n<t.getNumGeometries();n++){var r=t.getGeometryN(n);0!==r.getNumPoints()&&(this.addEndpoint(r.getCoordinateN(0)),this.addEndpoint(r.getCoordinateN(r.getNumPoints()-1)))}for(var i=this._endpointMap.entrySet().iterator();i.hasNext();){var o=i.next(),s=o.getValue().count;this._bnRule.isInBoundary(s)&&e.add(o.getKey())}return Cc.toCoordinateArray(e)},Uc.prototype.addEndpoint=function(t){var e=this._endpointMap.get(t);null===e&&(e=new Yc,this._endpointMap.put(t,e)),e.count++},Uc.prototype.interfaces_=function(){return[]},Uc.prototype.getClass=function(){return Uc},Uc.getBoundary=function(){if(1===arguments.length){var t=arguments[0];return new Uc(t).getBoundary()}if(2===arguments.length){var e=arguments[0],n=arguments[1];return new Uc(e,n).getBoundary()}};var Yc=function(){this.count=null};Yc.prototype.interfaces_=function(){return[]},Yc.prototype.getClass=function(){return Yc};var Vc=function(){},Hc={NEWLINE:{configurable:!0},SIMPLE_ORDINATE_FORMAT:{configurable:!0}};Vc.prototype.interfaces_=function(){return[]},Vc.prototype.getClass=function(){return Vc},Vc.chars=function(t,e){for(var n=new Array(e).fill(null),r=0;r<e;r++)n[r]=t;return String(n)},Vc.getStackTrace=function(){if(1===arguments.length){var t=arguments[0],e=new function(){},n=new function(){}(e);return t.printStackTrace(n),e.toString()}if(2===arguments.length){for(var r=arguments[0],i=arguments[1],o="",s=new function(){}(new function(){}(Vc.getStackTrace(r))),a=0;a<i;a++)try{o+=s.readLine()+Vc.NEWLINE}catch(t){if(!(t instanceof zi))throw t;tc.shouldNeverReachHere()}return o}},Vc.split=function(t,e){for(var n=e.length,r=new bc,i=""+t,o=i.indexOf(e);o>=0;){var s=i.substring(0,o);r.add(s),o=(i=i.substring(o+n)).indexOf(e)}i.length>0&&r.add(i);for(var a=new Array(r.size()).fill(null),u=0;u<a.length;u++)a[u]=r.get(u);return a},Vc.toString=function(){if(1===arguments.length){var t=arguments[0];return Vc.SIMPLE_ORDINATE_FORMAT.format(t)}},Vc.spaces=function(t){return Vc.chars(" ",t)},Hc.NEWLINE.get=function(){return Xu.getProperty("line.separator")},Hc.SIMPLE_ORDINATE_FORMAT.get=function(){return new function(){}("0.#")},Object.defineProperties(Vc,Hc);var Wc=function(){};Wc.prototype.interfaces_=function(){return[]},Wc.prototype.getClass=function(){return Wc},Wc.copyCoord=function(t,e,n,r){for(var i=Math.min(t.getDimension(),n.getDimension()),o=0;o<i;o++)n.setOrdinate(r,o,t.getOrdinate(e,o))},Wc.isRing=function(t){var e=t.size();return 0===e||!(e<=3)&&(t.getOrdinate(0,Bu.X)===t.getOrdinate(e-1,Bu.X)&&t.getOrdinate(0,Bu.Y)===t.getOrdinate(e-1,Bu.Y))},Wc.isEqual=function(t,e){var n=t.size();if(n!==e.size())return!1;for(var r=Math.min(t.getDimension(),e.getDimension()),i=0;i<n;i++)for(var o=0;o<r;o++){var s=t.getOrdinate(i,o),a=e.getOrdinate(i,o);if(t.getOrdinate(i,o)!==e.getOrdinate(i,o)&&(!mu.isNaN(s)||!mu.isNaN(a)))return!1}return!0},Wc.extend=function(t,e,n){var r=t.create(n,e.getDimension()),i=e.size();if(Wc.copy(e,0,r,0,i),i>0)for(var o=i;o<n;o++)Wc.copy(e,i-1,r,o,1);return r},Wc.reverse=function(t){for(var e=t.size()-1,n=Math.trunc(e/2),r=0;r<=n;r++)Wc.swap(t,r,e-r)},Wc.swap=function(t,e,n){if(e===n)return null;for(var r=0;r<t.getDimension();r++){var i=t.getOrdinate(e,r);t.setOrdinate(e,r,t.getOrdinate(n,r)),t.setOrdinate(n,r,i)}},Wc.copy=function(t,e,n,r,i){for(var o=0;o<i;o++)Wc.copyCoord(t,e+o,n,r+o)},Wc.toString=function(){if(1===arguments.length){var t=arguments[0],e=t.size();if(0===e)return"()";var n=t.getDimension(),r=new Ru;r.append("(");for(var i=0;i<e;i++){i>0&&r.append(" ");for(var o=0;o<n;o++)o>0&&r.append(","),r.append(Vc.toString(t.getOrdinate(i,o)))}return r.append(")"),r.toString()}},Wc.ensureValidRing=function(t,e){var n=e.size();if(0===n)return e;if(n<=3)return Wc.createClosedRing(t,e,4);return e.getOrdinate(0,Bu.X)===e.getOrdinate(n-1,Bu.X)&&e.getOrdinate(0,Bu.Y)===e.getOrdinate(n-1,Bu.Y)?e:Wc.createClosedRing(t,e,n+1)},Wc.createClosedRing=function(t,e,n){var r=t.create(n,e.getDimension()),i=e.size();Wc.copy(e,0,r,0,i);for(var o=i;o<n;o++)Wc.copy(e,0,r,o,1);return r};var Jc=function(t){function e(e,n){t.call(this,n),this._points=null,this.init(e)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){return this.isEmpty()?new Yu:this._points.expandEnvelope(new Yu)},e.prototype.isRing=function(){return this.isClosed()&&this.isSimple()},e.prototype.getSortIndex=function(){return t.SORTINDEX_LINESTRING},e.prototype.getCoordinates=function(){return this._points.toCoordinateArray()},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];if(!this.isEquivalentClass(e))return!1;var r=e;if(this._points.size()!==r._points.size())return!1;for(var i=0;i<this._points.size();i++)if(!this.equal(this._points.getCoordinate(i),r._points.getCoordinate(i),n))return!1;return!0}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){for(var t=0;t<Math.trunc(this._points.size()/2);t++){var e=this._points.size()-1-t;if(!this._points.getCoordinate(t).equals(this._points.getCoordinate(e)))return this._points.getCoordinate(t).compareTo(this._points.getCoordinate(e))>0&&Wc.reverse(this._points),null}},e.prototype.getCoordinate=function(){return this.isEmpty()?null:this._points.getCoordinate(0)},e.prototype.getBoundaryDimension=function(){return this.isClosed()?Gc.FALSE:0},e.prototype.isClosed=function(){return!this.isEmpty()&&this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints()-1))},e.prototype.getEndPoint=function(){return this.isEmpty()?null:this.getPointN(this.getNumPoints()-1)},e.prototype.getDimension=function(){return 1},e.prototype.getLength=function(){return sc.computeLength(this._points)},e.prototype.getNumPoints=function(){return this._points.size()},e.prototype.reverse=function(){var t=this._points.copy();Wc.reverse(t);return this.getFactory().createLineString(t)},e.prototype.compareToSameClass=function(){if(1===arguments.length){for(var t=arguments[0],e=0,n=0;e<this._points.size()&&n<t._points.size();){var r=this._points.getCoordinate(e).compareTo(t._points.getCoordinate(n));if(0!==r)return r;e++,n++}return e<this._points.size()?1:n<t._points.size()?-1:0}if(2===arguments.length){var i=arguments[0];return arguments[1].compare(this._points,i._points)}},e.prototype.apply=function(){if(Lu(arguments[0],pc))for(var t=arguments[0],e=0;e<this._points.size();e++)t.filter(this._points.getCoordinate(e));else if(Lu(arguments[0],zc)){var n=arguments[0];if(0===this._points.size())return null;for(var r=0;r<this._points.size()&&(n.filter(this._points,r),!n.isDone());r++);n.isGeometryChanged()&&this.geometryChanged()}else if(Lu(arguments[0],kc)){arguments[0].filter(this)}else if(Lu(arguments[0],uc)){arguments[0].filter(this)}},e.prototype.getBoundary=function(){return new Uc(this).getBoundary()},e.prototype.isEquivalentClass=function(t){return t instanceof e},e.prototype.clone=function(){var e=t.prototype.clone.call(this);return e._points=this._points.clone(),e},e.prototype.getCoordinateN=function(t){return this._points.getCoordinate(t)},e.prototype.getGeometryType=function(){return"LineString"},e.prototype.copy=function(){return new e(this._points.copy(),this._factory)},e.prototype.getCoordinateSequence=function(){return this._points},e.prototype.isEmpty=function(){return 0===this._points.size()},e.prototype.init=function(t){if(null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),1===t.size())throw new _u("Invalid number of points in LineString (found "+t.size()+" - must be 0 or >= 2)");this._points=t},e.prototype.isCoordinate=function(t){for(var e=0;e<this._points.size();e++)if(this._points.getCoordinate(e).equals(t))return!0;return!1},e.prototype.getStartPoint=function(){return this.isEmpty()?null:this.getPointN(0)},e.prototype.getPointN=function(t){return this.getFactory().createPoint(this._points.getCoordinate(t))},e.prototype.interfaces_=function(){return[Dc]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return 0x2b2b51ba435c8e00},Object.defineProperties(e,n),e}(cc),Zc=function(){};Zc.prototype.interfaces_=function(){return[]},Zc.prototype.getClass=function(){return Zc};var Kc=function(t){function e(e,n){t.call(this,n),this._coordinates=e||null,this.init(this._coordinates)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){if(this.isEmpty())return new Yu;var t=new Yu;return t.expandToInclude(this._coordinates.getX(0),this._coordinates.getY(0)),t},e.prototype.getSortIndex=function(){return t.SORTINDEX_POINT},e.prototype.getCoordinates=function(){return this.isEmpty()?[]:[this.getCoordinate()]},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&(!(!this.isEmpty()||!e.isEmpty())||this.isEmpty()===e.isEmpty()&&this.equal(e.getCoordinate(),this.getCoordinate(),n))}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){},e.prototype.getCoordinate=function(){return 0!==this._coordinates.size()?this._coordinates.getCoordinate(0):null},e.prototype.getBoundaryDimension=function(){return Gc.FALSE},e.prototype.getDimension=function(){return 0},e.prototype.getNumPoints=function(){return this.isEmpty()?0:1},e.prototype.reverse=function(){return this.copy()},e.prototype.getX=function(){if(null===this.getCoordinate())throw new Error("getX called on empty Point");return this.getCoordinate().x},e.prototype.compareToSameClass=function(){if(1===arguments.length){var t=arguments[0];return this.getCoordinate().compareTo(t.getCoordinate())}if(2===arguments.length){var e=arguments[0];return arguments[1].compare(this._coordinates,e._coordinates)}},e.prototype.apply=function(){if(Lu(arguments[0],pc)){var t=arguments[0];if(this.isEmpty())return null;t.filter(this.getCoordinate())}else if(Lu(arguments[0],zc)){var e=arguments[0];if(this.isEmpty())return null;e.filter(this._coordinates,0),e.isGeometryChanged()&&this.geometryChanged()}else if(Lu(arguments[0],kc)){arguments[0].filter(this)}else if(Lu(arguments[0],uc)){arguments[0].filter(this)}},e.prototype.getBoundary=function(){return this.getFactory().createGeometryCollection(null)},e.prototype.clone=function(){var e=t.prototype.clone.call(this);return e._coordinates=this._coordinates.clone(),e},e.prototype.getGeometryType=function(){return"Point"},e.prototype.copy=function(){return new e(this._coordinates.copy(),this._factory)},e.prototype.getCoordinateSequence=function(){return this._coordinates},e.prototype.getY=function(){if(null===this.getCoordinate())throw new Error("getY called on empty Point");return this.getCoordinate().y},e.prototype.isEmpty=function(){return 0===this._coordinates.size()},e.prototype.init=function(t){null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),tc.isTrue(t.size()<=1),this._coordinates=t},e.prototype.isSimple=function(){return!0},e.prototype.interfaces_=function(){return[Zc]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return 0x44077bad161cbc00},Object.defineProperties(e,n),e}(cc),Qc=function(){};Qc.prototype.interfaces_=function(){return[]},Qc.prototype.getClass=function(){return Qc};var $c=function(t){function e(e,n,r){if(t.call(this,r),this._shell=null,this._holes=null,null===e&&(e=this.getFactory().createLinearRing()),null===n&&(n=[]),t.hasNullElements(n))throw new _u("holes must not contain null elements");if(e.isEmpty()&&t.hasNonEmptyElements(n))throw new _u("shell is empty but holes are not");this._shell=e,this._holes=n}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){return this._shell.getEnvelopeInternal()},e.prototype.getSortIndex=function(){return t.SORTINDEX_POLYGON},e.prototype.getCoordinates=function(){if(this.isEmpty())return[];for(var t=new Array(this.getNumPoints()).fill(null),e=-1,n=this._shell.getCoordinates(),r=0;r<n.length;r++)t[++e]=n[r];for(var i=0;i<this._holes.length;i++)for(var o=this._holes[i].getCoordinates(),s=0;s<o.length;s++)t[++e]=o[s];return t},e.prototype.getArea=function(){var t=0;t+=Math.abs(sc.signedArea(this._shell.getCoordinateSequence()));for(var e=0;e<this._holes.length;e++)t-=Math.abs(sc.signedArea(this._holes[e].getCoordinateSequence()));return t},e.prototype.isRectangle=function(){if(0!==this.getNumInteriorRing())return!1;if(null===this._shell)return!1;if(5!==this._shell.getNumPoints())return!1;for(var t=this._shell.getCoordinateSequence(),e=this.getEnvelopeInternal(),n=0;n<5;n++){var r=t.getX(n);if(r!==e.getMinX()&&r!==e.getMaxX())return!1;var i=t.getY(n);if(i!==e.getMinY()&&i!==e.getMaxY())return!1}for(var o=t.getX(0),s=t.getY(0),a=1;a<=4;a++){var u=t.getX(a),c=t.getY(a);if(u!==o===(c!==s))return!1;o=u,s=c}return!0},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];if(!this.isEquivalentClass(e))return!1;var r=e,i=this._shell,o=r._shell;if(!i.equalsExact(o,n))return!1;if(this._holes.length!==r._holes.length)return!1;for(var s=0;s<this._holes.length;s++)if(!this._holes[s].equalsExact(r._holes[s],n))return!1;return!0}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){if(0===arguments.length){this.normalize(this._shell,!0);for(var t=0;t<this._holes.length;t++)this.normalize(this._holes[t],!1);qc.sort(this._holes)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(e.isEmpty())return null;var r=new Array(e.getCoordinates().length-1).fill(null);Xu.arraycopy(e.getCoordinates(),0,r,0,r.length);var i=Cc.minCoordinate(e.getCoordinates());Cc.scroll(r,i),Xu.arraycopy(r,0,e.getCoordinates(),0,r.length),e.getCoordinates()[r.length]=r[0],sc.isCCW(e.getCoordinates())===n&&Cc.reverse(e.getCoordinates())}},e.prototype.getCoordinate=function(){return this._shell.getCoordinate()},e.prototype.getNumInteriorRing=function(){return this._holes.length},e.prototype.getBoundaryDimension=function(){return 1},e.prototype.getDimension=function(){return 2},e.prototype.getLength=function(){var t=0;t+=this._shell.getLength();for(var e=0;e<this._holes.length;e++)t+=this._holes[e].getLength();return t},e.prototype.getNumPoints=function(){for(var t=this._shell.getNumPoints(),e=0;e<this._holes.length;e++)t+=this._holes[e].getNumPoints();return t},e.prototype.reverse=function(){var t=this.copy();t._shell=this._shell.copy().reverse(),t._holes=new Array(this._holes.length).fill(null);for(var e=0;e<this._holes.length;e++)t._holes[e]=this._holes[e].copy().reverse();return t},e.prototype.convexHull=function(){return this.getExteriorRing().convexHull()},e.prototype.compareToSameClass=function(){if(1===arguments.length){var t=arguments[0],e=this._shell,n=t._shell;return e.compareToSameClass(n)}if(2===arguments.length){var r=arguments[0],i=arguments[1],o=r,s=this._shell,a=o._shell,u=s.compareToSameClass(a,i);if(0!==u)return u;for(var c=this.getNumInteriorRing(),h=o.getNumInteriorRing(),l=0;l<c&&l<h;){var p=this.getInteriorRingN(l),f=o.getInteriorRingN(l),g=p.compareToSameClass(f,i);if(0!==g)return g;l++}return l<c?1:l<h?-1:0}},e.prototype.apply=function(t){if(Lu(t,pc)){this._shell.apply(t);for(var e=0;e<this._holes.length;e++)this._holes[e].apply(t)}else if(Lu(t,zc)){if(this._shell.apply(t),!t.isDone())for(var n=0;n<this._holes.length&&(this._holes[n].apply(t),!t.isDone());n++);t.isGeometryChanged()&&this.geometryChanged()}else if(Lu(t,kc))t.filter(this);else if(Lu(t,uc)){t.filter(this),this._shell.apply(t);for(var r=0;r<this._holes.length;r++)this._holes[r].apply(t)}},e.prototype.getBoundary=function(){if(this.isEmpty())return this.getFactory().createMultiLineString();var t=new Array(this._holes.length+1).fill(null);t[0]=this._shell;for(var e=0;e<this._holes.length;e++)t[e+1]=this._holes[e];return t.length<=1?this.getFactory().createLinearRing(t[0].getCoordinateSequence()):this.getFactory().createMultiLineString(t)},e.prototype.clone=function(){var e=t.prototype.clone.call(this);e._shell=this._shell.clone(),e._holes=new Array(this._holes.length).fill(null);for(var n=0;n<this._holes.length;n++)e._holes[n]=this._holes[n].clone();return e},e.prototype.getGeometryType=function(){return"Polygon"},e.prototype.copy=function(){for(var t=this._shell.copy(),n=new Array(this._holes.length).fill(null),r=0;r<n.length;r++)n[r]=this._holes[r].copy();return new e(t,n,this._factory)},e.prototype.getExteriorRing=function(){return this._shell},e.prototype.isEmpty=function(){return this._shell.isEmpty()},e.prototype.getInteriorRingN=function(t){return this._holes[t]},e.prototype.interfaces_=function(){return[Qc]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x307ffefd8dc97200},Object.defineProperties(e,n),e}(cc),th=function(t){function e(){t.apply(this,arguments)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return cc.SORTINDEX_MULTIPOINT},e.prototype.isValid=function(){return!0},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&t.prototype.equalsExact.call(this,e,n)}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.getCoordinate=function(){if(1===arguments.length){var e=arguments[0];return this._geometries[e].getCoordinate()}return t.prototype.getCoordinate.apply(this,arguments)},e.prototype.getBoundaryDimension=function(){return Gc.FALSE},e.prototype.getDimension=function(){return 0},e.prototype.getBoundary=function(){return this.getFactory().createGeometryCollection(null)},e.prototype.getGeometryType=function(){return"MultiPoint"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.interfaces_=function(){return[Zc]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x6fb1ed4162e0fc00},Object.defineProperties(e,n),e}(jc),eh=function(t){function e(e,n){e instanceof bu&&n instanceof _h&&(e=n.getCoordinateSequenceFactory().create(e)),t.call(this,e,n),this.validateConstruction()}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={MINIMUM_VALID_SIZE:{configurable:!0},serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return cc.SORTINDEX_LINEARRING},e.prototype.getBoundaryDimension=function(){return Gc.FALSE},e.prototype.isClosed=function(){return!!this.isEmpty()||t.prototype.isClosed.call(this)},e.prototype.reverse=function(){var t=this._points.copy();Wc.reverse(t);return this.getFactory().createLinearRing(t)},e.prototype.validateConstruction=function(){if(!this.isEmpty()&&!t.prototype.isClosed.call(this))throw new _u("Points of LinearRing do not form a closed linestring");if(this.getCoordinateSequence().size()>=1&&this.getCoordinateSequence().size()<e.MINIMUM_VALID_SIZE)throw new _u("Invalid number of points in LinearRing (found "+this.getCoordinateSequence().size()+" - must be 0 or >= 4)")},e.prototype.getGeometryType=function(){return"LinearRing"},e.prototype.copy=function(){return new e(this._points.copy(),this._factory)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},n.MINIMUM_VALID_SIZE.get=function(){return 4},n.serialVersionUID.get=function(){return-0x3b229e262367a600},Object.defineProperties(e,n),e}(Jc),nh=function(t){function e(){t.apply(this,arguments)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return cc.SORTINDEX_MULTIPOLYGON},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&t.prototype.equalsExact.call(this,e,n)}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.getBoundaryDimension=function(){return 1},e.prototype.getDimension=function(){return 2},e.prototype.reverse=function(){for(var t=this._geometries.length,e=new Array(t).fill(null),n=0;n<this._geometries.length;n++)e[n]=this._geometries[n].reverse();return this.getFactory().createMultiPolygon(e)},e.prototype.getBoundary=function(){if(this.isEmpty())return this.getFactory().createMultiLineString();for(var t=new bc,e=0;e<this._geometries.length;e++)for(var n=this._geometries[e].getBoundary(),r=0;r<n.getNumGeometries();r++)t.add(n.getGeometryN(r));var i=new Array(t.size()).fill(null);return this.getFactory().createMultiLineString(t.toArray(i))},e.prototype.getGeometryType=function(){return"MultiPolygon"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.interfaces_=function(){return[Qc]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x7a5aa1369171980},Object.defineProperties(e,n),e}(jc),rh=function(t){this._factory=t||null,this._isUserDataCopied=!1},ih={NoOpGeometryOperation:{configurable:!0},CoordinateOperation:{configurable:!0},CoordinateSequenceOperation:{configurable:!0}};rh.prototype.setCopyUserData=function(t){this._isUserDataCopied=t},rh.prototype.edit=function(t,e){if(null===t)return null;var n=this.editInternal(t,e);return this._isUserDataCopied&&n.setUserData(t.getUserData()),n},rh.prototype.editInternal=function(t,e){return null===this._factory&&(this._factory=t.getFactory()),t instanceof jc?this.editGeometryCollection(t,e):t instanceof $c?this.editPolygon(t,e):t instanceof Kc?e.edit(t,this._factory):t instanceof Jc?e.edit(t,this._factory):(tc.shouldNeverReachHere("Unsupported Geometry class: "+t.getClass().getName()),null)},rh.prototype.editGeometryCollection=function(t,e){for(var n=e.edit(t,this._factory),r=new bc,i=0;i<n.getNumGeometries();i++){var o=this.edit(n.getGeometryN(i),e);null===o||o.isEmpty()||r.add(o)}return n.getClass()===th?this._factory.createMultiPoint(r.toArray([])):n.getClass()===Xc?this._factory.createMultiLineString(r.toArray([])):n.getClass()===nh?this._factory.createMultiPolygon(r.toArray([])):this._factory.createGeometryCollection(r.toArray([]))},rh.prototype.editPolygon=function(t,e){var n=e.edit(t,this._factory);if(null===n&&(n=this._factory.createPolygon(null)),n.isEmpty())return n;var r=this.edit(n.getExteriorRing(),e);if(null===r||r.isEmpty())return this._factory.createPolygon();for(var i=new bc,o=0;o<n.getNumInteriorRing();o++){var s=this.edit(n.getInteriorRingN(o),e);null===s||s.isEmpty()||i.add(s)}return this._factory.createPolygon(r,i.toArray([]))},rh.prototype.interfaces_=function(){return[]},rh.prototype.getClass=function(){return rh},rh.GeometryEditorOperation=function(){},ih.NoOpGeometryOperation.get=function(){return oh},ih.CoordinateOperation.get=function(){return sh},ih.CoordinateSequenceOperation.get=function(){return ah},Object.defineProperties(rh,ih);var oh=function(){};oh.prototype.edit=function(t,e){return t},oh.prototype.interfaces_=function(){return[rh.GeometryEditorOperation]},oh.prototype.getClass=function(){return oh};var sh=function(){};sh.prototype.edit=function(t,e){var n=this.editCoordinates(t.getCoordinates(),t);return null===n?t:t instanceof eh?e.createLinearRing(n):t instanceof Jc?e.createLineString(n):t instanceof Kc?n.length>0?e.createPoint(n[0]):e.createPoint():t},sh.prototype.interfaces_=function(){return[rh.GeometryEditorOperation]},sh.prototype.getClass=function(){return sh};var ah=function(){};ah.prototype.edit=function(t,e){return t instanceof eh?e.createLinearRing(this.edit(t.getCoordinateSequence(),t)):t instanceof Jc?e.createLineString(this.edit(t.getCoordinateSequence(),t)):t instanceof Kc?e.createPoint(this.edit(t.getCoordinateSequence(),t)):t},ah.prototype.interfaces_=function(){return[rh.GeometryEditorOperation]},ah.prototype.getClass=function(){return ah};var uh=function(){if(this._dimension=3,this._coordinates=null,1===arguments.length){if(arguments[0]instanceof Array)this._coordinates=arguments[0],this._dimension=3;else if(Number.isInteger(arguments[0])){var t=arguments[0];this._coordinates=new Array(t).fill(null);for(var e=0;e<t;e++)this._coordinates[e]=new bu}else if(Lu(arguments[0],Bu)){var n=arguments[0];if(null===n)return this._coordinates=new Array(0).fill(null),null;this._dimension=n.getDimension(),this._coordinates=new Array(n.size()).fill(null);for(var r=0;r<this._coordinates.length;r++)this._coordinates[r]=n.getCoordinateCopy(r)}}else if(2===arguments.length)if(arguments[0]instanceof Array&&Number.isInteger(arguments[1])){var i=arguments[0],o=arguments[1];this._coordinates=i,this._dimension=o,null===i&&(this._coordinates=new Array(0).fill(null))}else if(Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var s=arguments[0],a=arguments[1];this._coordinates=new Array(s).fill(null),this._dimension=a;for(var u=0;u<s;u++)this._coordinates[u]=new bu}},ch={serialVersionUID:{configurable:!0}};uh.prototype.setOrdinate=function(t,e,n){switch(e){case Bu.X:this._coordinates[t].x=n;break;case Bu.Y:this._coordinates[t].y=n;break;case Bu.Z:this._coordinates[t].z=n;break;default:throw new _u("invalid ordinateIndex")}},uh.prototype.size=function(){return this._coordinates.length},uh.prototype.getOrdinate=function(t,e){switch(e){case Bu.X:return this._coordinates[t].x;case Bu.Y:return this._coordinates[t].y;case Bu.Z:return this._coordinates[t].z}return mu.NaN},uh.prototype.getCoordinate=function(){if(1===arguments.length){var t=arguments[0];return this._coordinates[t]}if(2===arguments.length){var e=arguments[0],n=arguments[1];n.x=this._coordinates[e].x,n.y=this._coordinates[e].y,n.z=this._coordinates[e].z}},uh.prototype.getCoordinateCopy=function(t){return new bu(this._coordinates[t])},uh.prototype.getDimension=function(){return this._dimension},uh.prototype.getX=function(t){return this._coordinates[t].x},uh.prototype.clone=function(){for(var t=new Array(this.size()).fill(null),e=0;e<this._coordinates.length;e++)t[e]=this._coordinates[e].clone();return new uh(t,this._dimension)},uh.prototype.expandEnvelope=function(t){for(var e=0;e<this._coordinates.length;e++)t.expandToInclude(this._coordinates[e]);return t},uh.prototype.copy=function(){for(var t=new Array(this.size()).fill(null),e=0;e<this._coordinates.length;e++)t[e]=this._coordinates[e].copy();return new uh(t,this._dimension)},uh.prototype.toString=function(){if(this._coordinates.length>0){var t=new Ru(17*this._coordinates.length);t.append("("),t.append(this._coordinates[0]);for(var e=1;e<this._coordinates.length;e++)t.append(", "),t.append(this._coordinates[e]);return t.append(")"),t.toString()}return"()"},uh.prototype.getY=function(t){return this._coordinates[t].y},uh.prototype.toCoordinateArray=function(){return this._coordinates},uh.prototype.interfaces_=function(){return[Bu,Li]},uh.prototype.getClass=function(){return uh},ch.serialVersionUID.get=function(){return-0xcb44a778db18e00},Object.defineProperties(uh,ch);var hh=function(){},lh={serialVersionUID:{configurable:!0},instanceObject:{configurable:!0}};hh.prototype.readResolve=function(){return hh.instance()},hh.prototype.create=function(){if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return new uh(t)}if(Lu(arguments[0],Bu)){var e=arguments[0];return new uh(e)}}else if(2===arguments.length){var n=arguments[0],r=arguments[1];return r>3&&(r=3),r<2?new uh(n):new uh(n,r)}},hh.prototype.interfaces_=function(){return[Cu,Li]},hh.prototype.getClass=function(){return hh},hh.instance=function(){return hh.instanceObject},lh.serialVersionUID.get=function(){return-0x38e49fa6cf6f2e00},lh.instanceObject.get=function(){return new hh},Object.defineProperties(hh,lh);var ph=function(t){function e(){t.call(this),this.map_=new Map}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.get=function(t){return this.map_.get(t)||null},e.prototype.put=function(t,e){return this.map_.set(t,e),e},e.prototype.values=function(){for(var t=new bc,e=this.map_.values(),n=e.next();!n.done;)t.add(n.value),n=e.next();return t},e.prototype.entrySet=function(){var t=new Rc;return this.map_.entries().forEach(function(e){return t.add(e)}),t},e.prototype.size=function(){return this.map_.size()},e}(Pc),fh=function t(){if(this._modelType=null,this._scale=null,0===arguments.length)this._modelType=t.FLOATING;else if(1===arguments.length)if(arguments[0]instanceof dh){var e=arguments[0];this._modelType=e,e===t.FIXED&&this.setScale(1)}else if("number"==typeof arguments[0]){var n=arguments[0];this._modelType=t.FIXED,this.setScale(n)}else if(arguments[0]instanceof t){var r=arguments[0];this._modelType=r._modelType,this._scale=r._scale}},gh={serialVersionUID:{configurable:!0},maximumPreciseValue:{configurable:!0}};fh.prototype.equals=function(t){if(!(t instanceof fh))return!1;var e=t;return this._modelType===e._modelType&&this._scale===e._scale},fh.prototype.compareTo=function(t){var e=t,n=this.getMaximumSignificantDigits(),r=e.getMaximumSignificantDigits();return new Tu(n).compareTo(new Tu(r))},fh.prototype.getScale=function(){return this._scale},fh.prototype.isFloating=function(){return this._modelType===fh.FLOATING||this._modelType===fh.FLOATING_SINGLE},fh.prototype.getType=function(){return this._modelType},fh.prototype.toString=function(){var t="UNKNOWN";return this._modelType===fh.FLOATING?t="Floating":this._modelType===fh.FLOATING_SINGLE?t="Floating-Single":this._modelType===fh.FIXED&&(t="Fixed (Scale="+this.getScale()+")"),t},fh.prototype.makePrecise=function(){if("number"==typeof arguments[0]){var t=arguments[0];if(mu.isNaN(t))return t;if(this._modelType===fh.FLOATING_SINGLE){return t}return this._modelType===fh.FIXED?Math.round(t*this._scale)/this._scale:t}if(arguments[0]instanceof bu){var e=arguments[0];if(this._modelType===fh.FLOATING)return null;e.x=this.makePrecise(e.x),e.y=this.makePrecise(e.y)}},fh.prototype.getMaximumSignificantDigits=function(){var t=16;return this._modelType===fh.FLOATING?t=16:this._modelType===fh.FLOATING_SINGLE?t=6:this._modelType===fh.FIXED&&(t=1+Math.trunc(Math.ceil(Math.log(this.getScale())/Math.log(10)))),t},fh.prototype.setScale=function(t){this._scale=Math.abs(t)},fh.prototype.interfaces_=function(){return[Li,xu]},fh.prototype.getClass=function(){return fh},fh.mostPrecise=function(t,e){return t.compareTo(e)>=0?t:e},gh.serialVersionUID.get=function(){return 0x6bee6404e9a25c00},gh.maximumPreciseValue.get=function(){return 9007199254740992},Object.defineProperties(fh,gh);var dh=function t(e){this._name=e||null,t.nameToTypeMap.put(e,this)},yh={serialVersionUID:{configurable:!0},nameToTypeMap:{configurable:!0}};dh.prototype.readResolve=function(){return dh.nameToTypeMap.get(this._name)},dh.prototype.toString=function(){return this._name},dh.prototype.interfaces_=function(){return[Li]},dh.prototype.getClass=function(){return dh},yh.serialVersionUID.get=function(){return-552860263173159e4},yh.nameToTypeMap.get=function(){return new ph},Object.defineProperties(dh,yh),fh.Type=dh,fh.FIXED=new dh("FIXED"),fh.FLOATING=new dh("FLOATING"),fh.FLOATING_SINGLE=new dh("FLOATING SINGLE");var _h=function t(){this._precisionModel=new fh,this._SRID=0,this._coordinateSequenceFactory=t.getDefaultCoordinateSequenceFactory(),0===arguments.length||(1===arguments.length?Lu(arguments[0],Cu)?this._coordinateSequenceFactory=arguments[0]:arguments[0]instanceof fh&&(this._precisionModel=arguments[0]):2===arguments.length?(this._precisionModel=arguments[0],this._SRID=arguments[1]):3===arguments.length&&(this._precisionModel=arguments[0],this._SRID=arguments[1],this._coordinateSequenceFactory=arguments[2]))},mh={serialVersionUID:{configurable:!0}};_h.prototype.toGeometry=function(t){return t.isNull()?this.createPoint(null):t.getMinX()===t.getMaxX()&&t.getMinY()===t.getMaxY()?this.createPoint(new bu(t.getMinX(),t.getMinY())):t.getMinX()===t.getMaxX()||t.getMinY()===t.getMaxY()?this.createLineString([new bu(t.getMinX(),t.getMinY()),new bu(t.getMaxX(),t.getMaxY())]):this.createPolygon(this.createLinearRing([new bu(t.getMinX(),t.getMinY()),new bu(t.getMinX(),t.getMaxY()),new bu(t.getMaxX(),t.getMaxY()),new bu(t.getMaxX(),t.getMinY()),new bu(t.getMinX(),t.getMinY())]),null)},_h.prototype.createLineString=function(t){return t?t instanceof Array?new Jc(this.getCoordinateSequenceFactory().create(t),this):Lu(t,Bu)?new Jc(t,this):void 0:new Jc(this.getCoordinateSequenceFactory().create([]),this)},_h.prototype.createMultiLineString=function(){if(0===arguments.length)return new Xc(null,this);if(1===arguments.length){var t=arguments[0];return new Xc(t,this)}},_h.prototype.buildGeometry=function(t){for(var e=null,n=!1,r=!1,i=t.iterator();i.hasNext();){var o=i.next(),s=o.getClass();null===e&&(e=s),s!==e&&(n=!0),o.isGeometryCollectionOrDerived()&&(r=!0)}if(null===e)return this.createGeometryCollection();if(n||r)return this.createGeometryCollection(_h.toGeometryArray(t));var a=t.iterator().next();if(t.size()>1){if(a instanceof $c)return this.createMultiPolygon(_h.toPolygonArray(t));if(a instanceof Jc)return this.createMultiLineString(_h.toLineStringArray(t));if(a instanceof Kc)return this.createMultiPoint(_h.toPointArray(t));tc.shouldNeverReachHere("Unhandled class: "+a.getClass().getName())}return a},_h.prototype.createMultiPointFromCoords=function(t){return this.createMultiPoint(null!==t?this.getCoordinateSequenceFactory().create(t):null)},_h.prototype.createPoint=function(){if(0===arguments.length)return this.createPoint(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof bu){var t=arguments[0];return this.createPoint(null!==t?this.getCoordinateSequenceFactory().create([t]):null)}if(Lu(arguments[0],Bu)){var e=arguments[0];return new Kc(e,this)}}},_h.prototype.getCoordinateSequenceFactory=function(){return this._coordinateSequenceFactory},_h.prototype.createPolygon=function(){if(0===arguments.length)return new $c(null,null,this);if(1===arguments.length){if(Lu(arguments[0],Bu)){var t=arguments[0];return this.createPolygon(this.createLinearRing(t))}if(arguments[0]instanceof Array){var e=arguments[0];return this.createPolygon(this.createLinearRing(e))}if(arguments[0]instanceof eh){var n=arguments[0];return this.createPolygon(n,null)}}else if(2===arguments.length){var r=arguments[0],i=arguments[1];return new $c(r,i,this)}},_h.prototype.getSRID=function(){return this._SRID},_h.prototype.createGeometryCollection=function(){if(0===arguments.length)return new jc(null,this);if(1===arguments.length){var t=arguments[0];return new jc(t,this)}},_h.prototype.createGeometry=function(t){return new rh(this).edit(t,{edit:function(){if(2===arguments.length){var t=arguments[0];return this._coordinateSequenceFactory.create(t)}}})},_h.prototype.getPrecisionModel=function(){return this._precisionModel},_h.prototype.createLinearRing=function(){if(0===arguments.length)return this.createLinearRing(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return this.createLinearRing(null!==t?this.getCoordinateSequenceFactory().create(t):null)}if(Lu(arguments[0],Bu)){var e=arguments[0];return new eh(e,this)}}},_h.prototype.createMultiPolygon=function(){if(0===arguments.length)return new nh(null,this);if(1===arguments.length){var t=arguments[0];return new nh(t,this)}},_h.prototype.createMultiPoint=function(){if(0===arguments.length)return new th(null,this);if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return new th(t,this)}if(arguments[0]instanceof Array){var e=arguments[0];return this.createMultiPoint(null!==e?this.getCoordinateSequenceFactory().create(e):null)}if(Lu(arguments[0],Bu)){var n=arguments[0];if(null===n)return this.createMultiPoint(new Array(0).fill(null));for(var r=new Array(n.size()).fill(null),i=0;i<n.size();i++){var o=this.getCoordinateSequenceFactory().create(1,n.getDimension());Wc.copy(n,i,o,0,1),r[i]=this.createPoint(o)}return this.createMultiPoint(r)}}},_h.prototype.interfaces_=function(){return[Li]},_h.prototype.getClass=function(){return _h},_h.toMultiPolygonArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_h.toGeometryArray=function(t){if(null===t)return null;var e=new Array(t.size()).fill(null);return t.toArray(e)},_h.getDefaultCoordinateSequenceFactory=function(){return hh.instance()},_h.toMultiLineStringArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_h.toLineStringArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_h.toMultiPointArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_h.toLinearRingArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_h.toPointArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_h.toPolygonArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_h.createPointFromInternalCoord=function(t,e){return e.getPrecisionModel().makePrecise(t),e.getFactory().createPoint(t)},mh.serialVersionUID.get=function(){return-0x5ea75f2051eeb400},Object.defineProperties(_h,mh);var vh=["Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon"],xh=function(t){this.geometryFactory=t||new _h};xh.prototype.read=function(t){var e,n=(e="string"==typeof t?JSON.parse(t):t).type;if(!Eh[n])throw new Error("Unknown GeoJSON type: "+e.type);return-1!==vh.indexOf(n)?Eh[n].apply(this,[e.coordinates]):"GeometryCollection"===n?Eh[n].apply(this,[e.geometries]):Eh[n].apply(this,[e])},xh.prototype.write=function(t){var e=t.getGeometryType();if(!wh[e])throw new Error("Geometry is not supported");return wh[e].apply(this,[t])};var Eh={Feature:function(t){var e={};for(var n in t)e[n]=t[n];if(t.geometry){var r=t.geometry.type;if(!Eh[r])throw new Error("Unknown GeoJSON type: "+t.type);e.geometry=this.read(t.geometry)}return t.bbox&&(e.bbox=Eh.bbox.apply(this,[t.bbox])),e},FeatureCollection:function(t){var e={};if(t.features){e.features=[];for(var n=0;n<t.features.length;++n)e.features.push(this.read(t.features[n]))}return t.bbox&&(e.bbox=this.parse.bbox.apply(this,[t.bbox])),e},coordinates:function(t){for(var e=[],n=0;n<t.length;++n){var r=t[n];e.push(new bu(r[0],r[1]))}return e},bbox:function(t){return this.geometryFactory.createLinearRing([new bu(t[0],t[1]),new bu(t[2],t[1]),new bu(t[2],t[3]),new bu(t[0],t[3]),new bu(t[0],t[1])])},Point:function(t){var e=new bu(t[0],t[1]);return this.geometryFactory.createPoint(e)},MultiPoint:function(t){for(var e=[],n=0;n<t.length;++n)e.push(Eh.Point.apply(this,[t[n]]));return this.geometryFactory.createMultiPoint(e)},LineString:function(t){var e=Eh.coordinates.apply(this,[t]);return this.geometryFactory.createLineString(e)},MultiLineString:function(t){for(var e=[],n=0;n<t.length;++n)e.push(Eh.LineString.apply(this,[t[n]]));return this.geometryFactory.createMultiLineString(e)},Polygon:function(t){for(var e=Eh.coordinates.apply(this,[t[0]]),n=this.geometryFactory.createLinearRing(e),r=[],i=1;i<t.length;++i){var o=t[i],s=Eh.coordinates.apply(this,[o]),a=this.geometryFactory.createLinearRing(s);r.push(a)}return this.geometryFactory.createPolygon(n,r)},MultiPolygon:function(t){for(var e=[],n=0;n<t.length;++n){var r=t[n];e.push(Eh.Polygon.apply(this,[r]))}return this.geometryFactory.createMultiPolygon(e)},GeometryCollection:function(t){for(var e=[],n=0;n<t.length;++n){var r=t[n];e.push(this.read(r))}return this.geometryFactory.createGeometryCollection(e)}},wh={coordinate:function(t){return[t.x,t.y]},Point:function(t){return{type:"Point",coordinates:wh.coordinate.apply(this,[t.getCoordinate()])}},MultiPoint:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var r=t._geometries[n],i=wh.Point.apply(this,[r]);e.push(i.coordinates)}return{type:"MultiPoint",coordinates:e}},LineString:function(t){for(var e=[],n=t.getCoordinates(),r=0;r<n.length;++r){var i=n[r];e.push(wh.coordinate.apply(this,[i]))}return{type:"LineString",coordinates:e}},MultiLineString:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var r=t._geometries[n],i=wh.LineString.apply(this,[r]);e.push(i.coordinates)}return{type:"MultiLineString",coordinates:e}},Polygon:function(t){var e=[],n=wh.LineString.apply(this,[t._shell]);e.push(n.coordinates);for(var r=0;r<t._holes.length;++r){var i=t._holes[r],o=wh.LineString.apply(this,[i]);e.push(o.coordinates)}return{type:"Polygon",coordinates:e}},MultiPolygon:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var r=t._geometries[n],i=wh.Polygon.apply(this,[r]);e.push(i.coordinates)}return{type:"MultiPolygon",coordinates:e}},GeometryCollection:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var r=t._geometries[n],i=r.getGeometryType();e.push(wh[i].apply(this,[r]))}return{type:"GeometryCollection",geometries:e}}},bh=function(t){this.geometryFactory=t||new _h,this.precisionModel=this.geometryFactory.getPrecisionModel(),this.parser=new xh(this.geometryFactory)};bh.prototype.read=function(t){var e=this.parser.read(t);return this.precisionModel.getType()===fh.FIXED&&this.reducePrecision(e),e},bh.prototype.reducePrecision=function(t){var e,n;if(t.coordinate)this.precisionModel.makePrecise(t.coordinate);else if(t.points)for(e=0,n=t.points.length;e<n;e++)this.precisionModel.makePrecise(t.points[e]);else if(t.geometries)for(e=0,n=t.geometries.length;e<n;e++)this.reducePrecision(t.geometries[e])};var Ih=function(){this.parser=new xh(this.geometryFactory)};Ih.prototype.write=function(t){return this.parser.write(t)};var Nh=function(){},Ch={ON:{configurable:!0},LEFT:{configurable:!0},RIGHT:{configurable:!0}};Nh.prototype.interfaces_=function(){return[]},Nh.prototype.getClass=function(){return Nh},Nh.opposite=function(t){return t===Nh.LEFT?Nh.RIGHT:t===Nh.RIGHT?Nh.LEFT:t},Ch.ON.get=function(){return 0},Ch.LEFT.get=function(){return 1},Ch.RIGHT.get=function(){return 2},Object.defineProperties(Nh,Ch),(ji.prototype=new Error).name="EmptyStackException",(Xi.prototype=new wc).add=function(t){return this.array_.push(t),!0},Xi.prototype.get=function(t){if(t<0||t>=this.size())throw new Error;return this.array_[t]},Xi.prototype.push=function(t){return this.array_.push(t),t},Xi.prototype.pop=function(t){if(0===this.array_.length)throw new ji;return this.array_.pop()},Xi.prototype.peek=function(){if(0===this.array_.length)throw new ji;return this.array_[this.array_.length-1]},Xi.prototype.empty=function(){return 0===this.array_.length},Xi.prototype.isEmpty=function(){return this.empty()},Xi.prototype.search=function(t){return this.array_.indexOf(t)},Xi.prototype.size=function(){return this.array_.length},Xi.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t};var Sh=function(){this._minIndex=-1,this._minCoord=null,this._minDe=null,this._orientedDe=null};Sh.prototype.getCoordinate=function(){return this._minCoord},Sh.prototype.getRightmostSide=function(t,e){var n=this.getRightmostSideOfSegment(t,e);return n<0&&(n=this.getRightmostSideOfSegment(t,e-1)),n<0&&(this._minCoord=null,this.checkForRightmostCoordinate(t)),n},Sh.prototype.findRightmostEdgeAtVertex=function(){var t=this._minDe.getEdge().getCoordinates();tc.isTrue(this._minIndex>0&&this._minIndex<t.length,"rightmost point expected to be interior vertex of edge");var e=t[this._minIndex-1],n=t[this._minIndex+1],r=sc.computeOrientation(this._minCoord,n,e),i=!1;e.y<this._minCoord.y&&n.y<this._minCoord.y&&r===sc.COUNTERCLOCKWISE?i=!0:e.y>this._minCoord.y&&n.y>this._minCoord.y&&r===sc.CLOCKWISE&&(i=!0),i&&(this._minIndex=this._minIndex-1)},Sh.prototype.getRightmostSideOfSegment=function(t,e){var n=t.getEdge().getCoordinates();if(e<0||e+1>=n.length)return-1;if(n[e].y===n[e+1].y)return-1;var r=Nh.LEFT;return n[e].y<n[e+1].y&&(r=Nh.RIGHT),r},Sh.prototype.getEdge=function(){return this._orientedDe},Sh.prototype.checkForRightmostCoordinate=function(t){for(var e=t.getEdge().getCoordinates(),n=0;n<e.length-1;n++)(null===this._minCoord||e[n].x>this._minCoord.x)&&(this._minDe=t,this._minIndex=n,this._minCoord=e[n])},Sh.prototype.findRightmostEdgeAtNode=function(){var t=this._minDe.getNode().getEdges();this._minDe=t.getRightmostEdge(),this._minDe.isForward()||(this._minDe=this._minDe.getSym(),this._minIndex=this._minDe.getEdge().getCoordinates().length-1)},Sh.prototype.findEdge=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();n.isForward()&&this.checkForRightmostCoordinate(n)}tc.isTrue(0!==this._minIndex||this._minCoord.equals(this._minDe.getCoordinate()),"inconsistency in rightmost processing"),0===this._minIndex?this.findRightmostEdgeAtNode():this.findRightmostEdgeAtVertex(),this._orientedDe=this._minDe;this.getRightmostSide(this._minDe,this._minIndex)===Nh.LEFT&&(this._orientedDe=this._minDe.getSym())},Sh.prototype.interfaces_=function(){return[]},Sh.prototype.getClass=function(){return Sh};var Mh=function(t){function e(n,r){t.call(this,e.msgWithCoord(n,r)),this.pt=r?new bu(r):null,this.name="TopologyException"}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.getCoordinate=function(){return this.pt},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.msgWithCoord=function(t,e){return e?t:t+" [ "+e+" ]"},e}(Qu),Lh=function(){this.array_=[]};Lh.prototype.addLast=function(t){this.array_.push(t)},Lh.prototype.removeFirst=function(){return this.array_.shift()},Lh.prototype.isEmpty=function(){return 0===this.array_.length};var Ph=function(){this._finder=null,this._dirEdgeList=new bc,this._nodes=new bc,this._rightMostCoord=null,this._env=null,this._finder=new Sh};Ph.prototype.clearVisitedEdges=function(){for(var t=this._dirEdgeList.iterator();t.hasNext();){t.next().setVisited(!1)}},Ph.prototype.getRightmostCoordinate=function(){return this._rightMostCoord},Ph.prototype.computeNodeDepth=function(t){for(var e=null,n=t.getEdges().iterator();n.hasNext();){var r=n.next();if(r.isVisited()||r.getSym().isVisited()){e=r;break}}if(null===e)throw new Mh("unable to find edge to compute depths at "+t.getCoordinate());t.getEdges().computeDepths(e);for(var i=t.getEdges().iterator();i.hasNext();){var o=i.next();o.setVisited(!0),this.copySymDepths(o)}},Ph.prototype.computeDepth=function(t){this.clearVisitedEdges();var e=this._finder.getEdge();e.setEdgeDepths(Nh.RIGHT,t),this.copySymDepths(e),this.computeDepths(e)},Ph.prototype.create=function(t){this.addReachable(t),this._finder.findEdge(this._dirEdgeList),this._rightMostCoord=this._finder.getCoordinate()},Ph.prototype.findResultEdges=function(){for(var t=this._dirEdgeList.iterator();t.hasNext();){var e=t.next();e.getDepth(Nh.RIGHT)>=1&&e.getDepth(Nh.LEFT)<=0&&!e.isInteriorAreaEdge()&&e.setInResult(!0)}},Ph.prototype.computeDepths=function(t){var e=new Rc,n=new Lh,r=t.getNode();for(n.addLast(r),e.add(r),t.setVisited(!0);!n.isEmpty();){var i=n.removeFirst();e.add(i),this.computeNodeDepth(i);for(var o=i.getEdges().iterator();o.hasNext();){var s=o.next().getSym();if(!s.isVisited()){var a=s.getNode();e.contains(a)||(n.addLast(a),e.add(a))}}}},Ph.prototype.compareTo=function(t){var e=t;return this._rightMostCoord.x<e._rightMostCoord.x?-1:this._rightMostCoord.x>e._rightMostCoord.x?1:0},Ph.prototype.getEnvelope=function(){if(null===this._env){for(var t=new Yu,e=this._dirEdgeList.iterator();e.hasNext();)for(var n=e.next().getEdge().getCoordinates(),r=0;r<n.length-1;r++)t.expandToInclude(n[r]);this._env=t}return this._env},Ph.prototype.addReachable=function(t){var e=new Xi;for(e.add(t);!e.empty();){var n=e.pop();this.add(n,e)}},Ph.prototype.copySymDepths=function(t){var e=t.getSym();e.setDepth(Nh.LEFT,t.getDepth(Nh.RIGHT)),e.setDepth(Nh.RIGHT,t.getDepth(Nh.LEFT))},Ph.prototype.add=function(t,e){t.setVisited(!0),this._nodes.add(t);for(var n=t.getEdges().iterator();n.hasNext();){var r=n.next();this._dirEdgeList.add(r);var i=r.getSym().getNode();i.isVisited()||e.push(i)}},Ph.prototype.getNodes=function(){return this._nodes},Ph.prototype.getDirectedEdges=function(){return this._dirEdgeList},Ph.prototype.interfaces_=function(){return[xu]},Ph.prototype.getClass=function(){return Ph};var Oh=function t(){if(this.location=null,1===arguments.length){if(arguments[0]instanceof Array){var e=arguments[0];this.init(e.length)}else if(Number.isInteger(arguments[0])){var n=arguments[0];this.init(1),this.location[Nh.ON]=n}else if(arguments[0]instanceof t){var r=arguments[0];if(this.init(r.location.length),null!==r)for(var i=0;i<this.location.length;i++)this.location[i]=r.location[i]}}else if(3===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2];this.init(3),this.location[Nh.ON]=o,this.location[Nh.LEFT]=s,this.location[Nh.RIGHT]=a}};Oh.prototype.setAllLocations=function(t){for(var e=0;e<this.location.length;e++)this.location[e]=t},Oh.prototype.isNull=function(){for(var t=0;t<this.location.length;t++)if(this.location[t]!==Su.NONE)return!1;return!0},Oh.prototype.setAllLocationsIfNull=function(t){for(var e=0;e<this.location.length;e++)this.location[e]===Su.NONE&&(this.location[e]=t)},Oh.prototype.isLine=function(){return 1===this.location.length},Oh.prototype.merge=function(t){if(t.location.length>this.location.length){var e=new Array(3).fill(null);e[Nh.ON]=this.location[Nh.ON],e[Nh.LEFT]=Su.NONE,e[Nh.RIGHT]=Su.NONE,this.location=e}for(var n=0;n<this.location.length;n++)this.location[n]===Su.NONE&&n<t.location.length&&(this.location[n]=t.location[n])},Oh.prototype.getLocations=function(){return this.location},Oh.prototype.flip=function(){if(this.location.length<=1)return null;var t=this.location[Nh.LEFT];this.location[Nh.LEFT]=this.location[Nh.RIGHT],this.location[Nh.RIGHT]=t},Oh.prototype.toString=function(){var t=new Ru;return this.location.length>1&&t.append(Su.toLocationSymbol(this.location[Nh.LEFT])),t.append(Su.toLocationSymbol(this.location[Nh.ON])),this.location.length>1&&t.append(Su.toLocationSymbol(this.location[Nh.RIGHT])),t.toString()},Oh.prototype.setLocations=function(t,e,n){this.location[Nh.ON]=t,this.location[Nh.LEFT]=e,this.location[Nh.RIGHT]=n},Oh.prototype.get=function(t){return t<this.location.length?this.location[t]:Su.NONE},Oh.prototype.isArea=function(){return this.location.length>1},Oh.prototype.isAnyNull=function(){for(var t=0;t<this.location.length;t++)if(this.location[t]===Su.NONE)return!0;return!1},Oh.prototype.setLocation=function(){if(1===arguments.length){var t=arguments[0];this.setLocation(Nh.ON,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.location[e]=n}},Oh.prototype.init=function(t){this.location=new Array(t).fill(null),this.setAllLocations(Su.NONE)},Oh.prototype.isEqualOnSide=function(t,e){return this.location[e]===t.location[e]},Oh.prototype.allPositionsEqual=function(t){for(var e=0;e<this.location.length;e++)if(this.location[e]!==t)return!1;return!0},Oh.prototype.interfaces_=function(){return[]},Oh.prototype.getClass=function(){return Oh};var Rh=function t(){if(this.elt=new Array(2).fill(null),1===arguments.length){if(Number.isInteger(arguments[0])){var e=arguments[0];this.elt[0]=new Oh(e),this.elt[1]=new Oh(e)}else if(arguments[0]instanceof t){var n=arguments[0];this.elt[0]=new Oh(n.elt[0]),this.elt[1]=new Oh(n.elt[1])}}else if(2===arguments.length){var r=arguments[0],i=arguments[1];this.elt[0]=new Oh(Su.NONE),this.elt[1]=new Oh(Su.NONE),this.elt[r].setLocation(i)}else if(3===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2];this.elt[0]=new Oh(o,s,a),this.elt[1]=new Oh(o,s,a)}else if(4===arguments.length){var u=arguments[0],c=arguments[1],h=arguments[2],l=arguments[3];this.elt[0]=new Oh(Su.NONE,Su.NONE,Su.NONE),this.elt[1]=new Oh(Su.NONE,Su.NONE,Su.NONE),this.elt[u].setLocations(c,h,l)}};Rh.prototype.getGeometryCount=function(){var t=0;return this.elt[0].isNull()||t++,this.elt[1].isNull()||t++,t},Rh.prototype.setAllLocations=function(t,e){this.elt[t].setAllLocations(e)},Rh.prototype.isNull=function(t){return this.elt[t].isNull()},Rh.prototype.setAllLocationsIfNull=function(){if(1===arguments.length){var t=arguments[0];this.setAllLocationsIfNull(0,t),this.setAllLocationsIfNull(1,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.elt[e].setAllLocationsIfNull(n)}},Rh.prototype.isLine=function(t){return this.elt[t].isLine()},Rh.prototype.merge=function(t){for(var e=0;e<2;e++)null===this.elt[e]&&null!==t.elt[e]?this.elt[e]=new Oh(t.elt[e]):this.elt[e].merge(t.elt[e])},Rh.prototype.flip=function(){this.elt[0].flip(),this.elt[1].flip()},Rh.prototype.getLocation=function(){if(1===arguments.length){var t=arguments[0];return this.elt[t].get(Nh.ON)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return this.elt[e].get(n)}},Rh.prototype.toString=function(){var t=new Ru;return null!==this.elt[0]&&(t.append("A:"),t.append(this.elt[0].toString())),null!==this.elt[1]&&(t.append(" B:"),t.append(this.elt[1].toString())),t.toString()},Rh.prototype.isArea=function(){if(0===arguments.length)return this.elt[0].isArea()||this.elt[1].isArea();if(1===arguments.length){var t=arguments[0];return this.elt[t].isArea()}},Rh.prototype.isAnyNull=function(t){return this.elt[t].isAnyNull()},Rh.prototype.setLocation=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.elt[t].setLocation(Nh.ON,e)}else if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2];this.elt[n].setLocation(r,i)}},Rh.prototype.isEqualOnSide=function(t,e){return this.elt[0].isEqualOnSide(t.elt[0],e)&&this.elt[1].isEqualOnSide(t.elt[1],e)},Rh.prototype.allPositionsEqual=function(t,e){return this.elt[t].allPositionsEqual(e)},Rh.prototype.toLine=function(t){this.elt[t].isArea()&&(this.elt[t]=new Oh(this.elt[t].location[0]))},Rh.prototype.interfaces_=function(){return[]},Rh.prototype.getClass=function(){return Rh},Rh.toLineLabel=function(t){for(var e=new Rh(Su.NONE),n=0;n<2;n++)e.setLocation(n,t.getLocation(n));return e};var Th=function(){this._startDe=null,this._maxNodeDegree=-1,this._edges=new bc,this._pts=new bc,this._label=new Rh(Su.NONE),this._ring=null,this._isHole=null,this._shell=null,this._holes=new bc,this._geometryFactory=null;var t=arguments[0],e=arguments[1];this._geometryFactory=e,this.computePoints(t),this.computeRing()};Th.prototype.computeRing=function(){if(null!==this._ring)return null;for(var t=new Array(this._pts.size()).fill(null),e=0;e<this._pts.size();e++)t[e]=this._pts.get(e);this._ring=this._geometryFactory.createLinearRing(t),this._isHole=sc.isCCW(this._ring.getCoordinates())},Th.prototype.isIsolated=function(){return 1===this._label.getGeometryCount()},Th.prototype.computePoints=function(t){this._startDe=t;var e=t,n=!0;do{if(null===e)throw new Mh("Found null DirectedEdge");if(e.getEdgeRing()===this)throw new Mh("Directed Edge visited twice during ring-building at "+e.getCoordinate());this._edges.add(e);var r=e.getLabel();tc.isTrue(r.isArea()),this.mergeLabel(r),this.addPoints(e.getEdge(),e.isForward(),n),n=!1,this.setEdgeRing(e,this),e=this.getNext(e)}while(e!==this._startDe)},Th.prototype.getLinearRing=function(){return this._ring},Th.prototype.getCoordinate=function(t){return this._pts.get(t)},Th.prototype.computeMaxNodeDegree=function(){this._maxNodeDegree=0;var t=this._startDe;do{var e=t.getNode().getEdges().getOutgoingDegree(this);e>this._maxNodeDegree&&(this._maxNodeDegree=e),t=this.getNext(t)}while(t!==this._startDe);this._maxNodeDegree*=2},Th.prototype.addPoints=function(t,e,n){var r=t.getCoordinates();if(e){var i=1;n&&(i=0);for(var o=i;o<r.length;o++)this._pts.add(r[o])}else{var s=r.length-2;n&&(s=r.length-1);for(var a=s;a>=0;a--)this._pts.add(r[a])}},Th.prototype.isHole=function(){return this._isHole},Th.prototype.setInResult=function(){var t=this._startDe;do{t.getEdge().setInResult(!0),t=t.getNext()}while(t!==this._startDe)},Th.prototype.containsPoint=function(t){var e=this.getLinearRing();if(!e.getEnvelopeInternal().contains(t))return!1;if(!sc.isPointInRing(t,e.getCoordinates()))return!1;for(var n=this._holes.iterator();n.hasNext();){if(n.next().containsPoint(t))return!1}return!0},Th.prototype.addHole=function(t){this._holes.add(t)},Th.prototype.isShell=function(){return null===this._shell},Th.prototype.getLabel=function(){return this._label},Th.prototype.getEdges=function(){return this._edges},Th.prototype.getMaxNodeDegree=function(){return this._maxNodeDegree<0&&this.computeMaxNodeDegree(),this._maxNodeDegree},Th.prototype.getShell=function(){return this._shell},Th.prototype.mergeLabel=function(){if(1===arguments.length){var t=arguments[0];this.mergeLabel(t,0),this.mergeLabel(t,1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],r=e.getLocation(n,Nh.RIGHT);if(r===Su.NONE)return null;if(this._label.getLocation(n)===Su.NONE)return this._label.setLocation(n,r),null}},Th.prototype.setShell=function(t){this._shell=t,null!==t&&t.addHole(this)},Th.prototype.toPolygon=function(t){for(var e=new Array(this._holes.size()).fill(null),n=0;n<this._holes.size();n++)e[n]=this._holes.get(n).getLinearRing();return t.createPolygon(this.getLinearRing(),e)},Th.prototype.interfaces_=function(){return[]},Th.prototype.getClass=function(){return Th};var Ah=function(t){function e(){var e=arguments[0],n=arguments[1];t.call(this,e,n)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.setEdgeRing=function(t,e){t.setMinEdgeRing(e)},e.prototype.getNext=function(t){return t.getNextMin()},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Th),Dh=function(t){function e(){var e=arguments[0],n=arguments[1];t.call(this,e,n)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.buildMinimalRings=function(){var t=new bc,e=this._startDe;do{if(null===e.getMinEdgeRing()){var n=new Ah(e,this._geometryFactory);t.add(n)}e=e.getNext()}while(e!==this._startDe);return t},e.prototype.setEdgeRing=function(t,e){t.setEdgeRing(e)},e.prototype.linkDirectedEdgesForMinimalEdgeRings=function(){var t=this._startDe;do{t.getNode().getEdges().linkMinimalDirectedEdges(this),t=t.getNext()}while(t!==this._startDe)},e.prototype.getNext=function(t){return t.getNext()},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Th),Fh=function(){if(this._label=null,this._isInResult=!1,this._isCovered=!1,this._isCoveredSet=!1,this._isVisited=!1,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this._label=t}};Fh.prototype.setVisited=function(t){this._isVisited=t},Fh.prototype.setInResult=function(t){this._isInResult=t},Fh.prototype.isCovered=function(){return this._isCovered},Fh.prototype.isCoveredSet=function(){return this._isCoveredSet},Fh.prototype.setLabel=function(t){this._label=t},Fh.prototype.getLabel=function(){return this._label},Fh.prototype.setCovered=function(t){this._isCovered=t,this._isCoveredSet=!0},Fh.prototype.updateIM=function(t){tc.isTrue(this._label.getGeometryCount()>=2,"found partial label"),this.computeIM(t)},Fh.prototype.isInResult=function(){return this._isInResult},Fh.prototype.isVisited=function(){return this._isVisited},Fh.prototype.interfaces_=function(){return[]},Fh.prototype.getClass=function(){return Fh};var qh=function(t){function e(){t.call(this),this._coord=null,this._edges=null;var e=arguments[0],n=arguments[1];this._coord=e,this._edges=n,this._label=new Rh(0,Su.NONE)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.isIncidentEdgeInResult=function(){for(var t=this.getEdges().getEdges().iterator();t.hasNext();){if(t.next().getEdge().isInResult())return!0}return!1},e.prototype.isIsolated=function(){return 1===this._label.getGeometryCount()},e.prototype.getCoordinate=function(){return this._coord},e.prototype.print=function(t){t.println("node "+this._coord+" lbl: "+this._label)},e.prototype.computeIM=function(t){},e.prototype.computeMergedLocation=function(t,e){var n=Su.NONE;if(n=this._label.getLocation(e),!t.isNull(e)){var r=t.getLocation(e);n!==Su.BOUNDARY&&(n=r)}return n},e.prototype.setLabel=function(){if(2!==arguments.length)return t.prototype.setLabel.apply(this,arguments);var e=arguments[0],n=arguments[1];null===this._label?this._label=new Rh(e,n):this._label.setLocation(e,n)},e.prototype.getEdges=function(){return this._edges},e.prototype.mergeLabel=function(){if(arguments[0]instanceof e){var t=arguments[0];this.mergeLabel(t._label)}else if(arguments[0]instanceof Rh)for(var n=arguments[0],r=0;r<2;r++){var i=this.computeMergedLocation(n,r);this._label.getLocation(r)===Su.NONE&&this._label.setLocation(r,i)}},e.prototype.add=function(t){this._edges.insert(t),t.setNode(this)},e.prototype.setLabelBoundary=function(t){if(null===this._label)return null;var e=Su.NONE;null!==this._label&&(e=this._label.getLocation(t));var n=null;switch(e){case Su.BOUNDARY:n=Su.INTERIOR;break;case Su.INTERIOR:default:n=Su.BOUNDARY}this._label.setLocation(t,n)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Fh),Gh=function(){this.nodeMap=new Gi,this.nodeFact=null;var t=arguments[0];this.nodeFact=t};Gh.prototype.find=function(t){return this.nodeMap.get(t)},Gh.prototype.addNode=function(){if(arguments[0]instanceof bu){var t=arguments[0],e=this.nodeMap.get(t);return null===e&&(e=this.nodeFact.createNode(t),this.nodeMap.put(t,e)),e}if(arguments[0]instanceof qh){var n=arguments[0],r=this.nodeMap.get(n.getCoordinate());return null===r?(this.nodeMap.put(n.getCoordinate(),n),n):(r.mergeLabel(n),r)}},Gh.prototype.print=function(t){for(var e=this.iterator();e.hasNext();){e.next().print(t)}},Gh.prototype.iterator=function(){return this.nodeMap.values().iterator()},Gh.prototype.values=function(){return this.nodeMap.values()},Gh.prototype.getBoundaryNodes=function(t){for(var e=new bc,n=this.iterator();n.hasNext();){var r=n.next();r.getLabel().getLocation(t)===Su.BOUNDARY&&e.add(r)}return e},Gh.prototype.add=function(t){var e=t.getCoordinate();this.addNode(e).add(t)},Gh.prototype.interfaces_=function(){return[]},Gh.prototype.getClass=function(){return Gh};var Bh=function(){},kh={NE:{configurable:!0},NW:{configurable:!0},SW:{configurable:!0},SE:{configurable:!0}};Bh.prototype.interfaces_=function(){return[]},Bh.prototype.getClass=function(){return Bh},Bh.isNorthern=function(t){return t===Bh.NE||t===Bh.NW},Bh.isOpposite=function(t,e){if(t===e)return!1;return 2===(t-e+4)%4},Bh.commonHalfPlane=function(t,e){if(t===e)return t;if(2===(t-e+4)%4)return-1;var n=t<e?t:e;return 0===n&&3===(t>e?t:e)?3:n},Bh.isInHalfPlane=function(t,e){return e===Bh.SE?t===Bh.SE||t===Bh.SW:t===e||t===e+1},Bh.quadrant=function(){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){var t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new _u("Cannot compute the quadrant for point ( "+t+", "+e+" )");return t>=0?e>=0?Bh.NE:Bh.SE:e>=0?Bh.NW:Bh.SW}if(arguments[0]instanceof bu&&arguments[1]instanceof bu){var n=arguments[0],r=arguments[1];if(r.x===n.x&&r.y===n.y)throw new _u("Cannot compute the quadrant for two identical points "+n);return r.x>=n.x?r.y>=n.y?Bh.NE:Bh.SE:r.y>=n.y?Bh.NW:Bh.SW}},kh.NE.get=function(){return 0},kh.NW.get=function(){return 1},kh.SW.get=function(){return 2},kh.SE.get=function(){return 3},Object.defineProperties(Bh,kh);var zh=function(){if(this._edge=null,this._label=null,this._node=null,this._p0=null,this._p1=null,this._dx=null,this._dy=null,this._quadrant=null,1===arguments.length){var t=arguments[0];this._edge=t}else if(3===arguments.length){var e=arguments[0],n=arguments[1],r=arguments[2];this._edge=e,this.init(n,r),this._label=null}else if(4===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3];this._edge=i,this.init(o,s),this._label=a}};zh.prototype.compareDirection=function(t){return this._dx===t._dx&&this._dy===t._dy?0:this._quadrant>t._quadrant?1:this._quadrant<t._quadrant?-1:sc.computeOrientation(t._p0,t._p1,this._p1)},zh.prototype.getDy=function(){return this._dy},zh.prototype.getCoordinate=function(){return this._p0},zh.prototype.setNode=function(t){this._node=t},zh.prototype.print=function(t){var e=Math.atan2(this._dy,this._dx),n=this.getClass().getName(),r=n.lastIndexOf("."),i=n.substring(r+1);t.print("  "+i+": "+this._p0+" - "+this._p1+" "+this._quadrant+":"+e+"   "+this._label)},zh.prototype.compareTo=function(t){var e=t;return this.compareDirection(e)},zh.prototype.getDirectedCoordinate=function(){return this._p1},zh.prototype.getDx=function(){return this._dx},zh.prototype.getLabel=function(){return this._label},zh.prototype.getEdge=function(){return this._edge},zh.prototype.getQuadrant=function(){return this._quadrant},zh.prototype.getNode=function(){return this._node},zh.prototype.toString=function(){var t=Math.atan2(this._dy,this._dx),e=this.getClass().getName(),n=e.lastIndexOf(".");return"  "+e.substring(n+1)+": "+this._p0+" - "+this._p1+" "+this._quadrant+":"+t+"   "+this._label},zh.prototype.computeLabel=function(t){},zh.prototype.init=function(t,e){this._p0=t,this._p1=e,this._dx=e.x-t.x,this._dy=e.y-t.y,this._quadrant=Bh.quadrant(this._dx,this._dy),tc.isTrue(!(0===this._dx&&0===this._dy),"EdgeEnd with identical endpoints found")},zh.prototype.interfaces_=function(){return[xu]},zh.prototype.getClass=function(){return zh};var jh=function(t){function e(){var e=arguments[0],n=arguments[1];if(t.call(this,e),this._isForward=null,this._isInResult=!1,this._isVisited=!1,this._sym=null,this._next=null,this._nextMin=null,this._edgeRing=null,this._minEdgeRing=null,this._depth=[0,-999,-999],this._isForward=n,n)this.init(e.getCoordinate(0),e.getCoordinate(1));else{var r=e.getNumPoints()-1;this.init(e.getCoordinate(r),e.getCoordinate(r-1))}this.computeDirectedLabel()}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.getNextMin=function(){return this._nextMin},e.prototype.getDepth=function(t){return this._depth[t]},e.prototype.setVisited=function(t){this._isVisited=t},e.prototype.computeDirectedLabel=function(){this._label=new Rh(this._edge.getLabel()),this._isForward||this._label.flip()},e.prototype.getNext=function(){return this._next},e.prototype.setDepth=function(t,e){if(-999!==this._depth[t]&&this._depth[t]!==e)throw new Mh("assigned depths do not match",this.getCoordinate());this._depth[t]=e},e.prototype.isInteriorAreaEdge=function(){for(var t=!0,e=0;e<2;e++)this._label.isArea(e)&&this._label.getLocation(e,Nh.LEFT)===Su.INTERIOR&&this._label.getLocation(e,Nh.RIGHT)===Su.INTERIOR||(t=!1);return t},e.prototype.setNextMin=function(t){this._nextMin=t},e.prototype.print=function(e){t.prototype.print.call(this,e),e.print(" "+this._depth[Nh.LEFT]+"/"+this._depth[Nh.RIGHT]),e.print(" ("+this.getDepthDelta()+")"),this._isInResult&&e.print(" inResult")},e.prototype.setMinEdgeRing=function(t){this._minEdgeRing=t},e.prototype.isLineEdge=function(){var t=this._label.isLine(0)||this._label.isLine(1),e=!this._label.isArea(0)||this._label.allPositionsEqual(0,Su.EXTERIOR),n=!this._label.isArea(1)||this._label.allPositionsEqual(1,Su.EXTERIOR);return t&&e&&n},e.prototype.setEdgeRing=function(t){this._edgeRing=t},e.prototype.getMinEdgeRing=function(){return this._minEdgeRing},e.prototype.getDepthDelta=function(){var t=this._edge.getDepthDelta();return this._isForward||(t=-t),t},e.prototype.setInResult=function(t){this._isInResult=t},e.prototype.getSym=function(){return this._sym},e.prototype.isForward=function(){return this._isForward},e.prototype.getEdge=function(){return this._edge},e.prototype.printEdge=function(t){this.print(t),t.print(" "),this._isForward?this._edge.print(t):this._edge.printReverse(t)},e.prototype.setSym=function(t){this._sym=t},e.prototype.setVisitedEdge=function(t){this.setVisited(t),this._sym.setVisited(t)},e.prototype.setEdgeDepths=function(t,e){var n=this.getEdge().getDepthDelta();this._isForward||(n=-n);var r=1;t===Nh.LEFT&&(r=-1);var i=Nh.opposite(t),o=e+n*r;this.setDepth(t,e),this.setDepth(i,o)},e.prototype.getEdgeRing=function(){return this._edgeRing},e.prototype.isInResult=function(){return this._isInResult},e.prototype.setNext=function(t){this._next=t},e.prototype.isVisited=function(){return this._isVisited},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.depthFactor=function(t,e){return t===Su.EXTERIOR&&e===Su.INTERIOR?1:t===Su.INTERIOR&&e===Su.EXTERIOR?-1:0},e}(zh),Xh=function(){};Xh.prototype.createNode=function(t){return new qh(t,null)},Xh.prototype.interfaces_=function(){return[]},Xh.prototype.getClass=function(){return Xh};var Uh=function(){if(this._edges=new bc,this._nodes=null,this._edgeEndList=new bc,0===arguments.length)this._nodes=new Gh(new Xh);else if(1===arguments.length){var t=arguments[0];this._nodes=new Gh(t)}};Uh.prototype.printEdges=function(t){t.println("Edges:");for(var e=0;e<this._edges.size();e++){t.println("edge "+e+":");var n=this._edges.get(e);n.print(t),n.eiList.print(t)}},Uh.prototype.find=function(t){return this._nodes.find(t)},Uh.prototype.addNode=function(){if(arguments[0]instanceof qh){var t=arguments[0];return this._nodes.addNode(t)}if(arguments[0]instanceof bu){var e=arguments[0];return this._nodes.addNode(e)}},Uh.prototype.getNodeIterator=function(){return this._nodes.iterator()},Uh.prototype.linkResultDirectedEdges=function(){for(var t=this._nodes.iterator();t.hasNext();){t.next().getEdges().linkResultDirectedEdges()}},Uh.prototype.debugPrintln=function(t){Xu.out.println(t)},Uh.prototype.isBoundaryNode=function(t,e){var n=this._nodes.find(e);if(null===n)return!1;var r=n.getLabel();return null!==r&&r.getLocation(t)===Su.BOUNDARY},Uh.prototype.linkAllDirectedEdges=function(){for(var t=this._nodes.iterator();t.hasNext();){t.next().getEdges().linkAllDirectedEdges()}},Uh.prototype.matchInSameDirection=function(t,e,n,r){return!!t.equals(n)&&(sc.computeOrientation(t,e,r)===sc.COLLINEAR&&Bh.quadrant(t,e)===Bh.quadrant(n,r))},Uh.prototype.getEdgeEnds=function(){return this._edgeEndList},Uh.prototype.debugPrint=function(t){Xu.out.print(t)},Uh.prototype.getEdgeIterator=function(){return this._edges.iterator()},Uh.prototype.findEdgeInSameDirection=function(t,e){for(var n=0;n<this._edges.size();n++){var r=this._edges.get(n),i=r.getCoordinates();if(this.matchInSameDirection(t,e,i[0],i[1]))return r;if(this.matchInSameDirection(t,e,i[i.length-1],i[i.length-2]))return r}return null},Uh.prototype.insertEdge=function(t){this._edges.add(t)},Uh.prototype.findEdgeEnd=function(t){for(var e=this.getEdgeEnds().iterator();e.hasNext();){var n=e.next();if(n.getEdge()===t)return n}return null},Uh.prototype.addEdges=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this._edges.add(n);var r=new jh(n,!0),i=new jh(n,!1);r.setSym(i),i.setSym(r),this.add(r),this.add(i)}},Uh.prototype.add=function(t){this._nodes.add(t),this._edgeEndList.add(t)},Uh.prototype.getNodes=function(){return this._nodes.values()},Uh.prototype.findEdge=function(t,e){for(var n=0;n<this._edges.size();n++){var r=this._edges.get(n),i=r.getCoordinates();if(t.equals(i[0])&&e.equals(i[1]))return r}return null},Uh.prototype.interfaces_=function(){return[]},Uh.prototype.getClass=function(){return Uh},Uh.linkResultDirectedEdges=function(t){for(var e=t.iterator();e.hasNext();){e.next().getEdges().linkResultDirectedEdges()}};var Yh=function(){this._geometryFactory=null,this._shellList=new bc;var t=arguments[0];this._geometryFactory=t};Yh.prototype.sortShellsAndHoles=function(t,e,n){for(var r=t.iterator();r.hasNext();){var i=r.next();i.isHole()?n.add(i):e.add(i)}},Yh.prototype.computePolygons=function(t){for(var e=new bc,n=t.iterator();n.hasNext();){var r=n.next().toPolygon(this._geometryFactory);e.add(r)}return e},Yh.prototype.placeFreeHoles=function(t,e){for(var n=e.iterator();n.hasNext();){var r=n.next();if(null===r.getShell()){var i=this.findEdgeRingContaining(r,t);if(null===i)throw new Mh("unable to assign hole to a shell",r.getCoordinate(0));r.setShell(i)}}},Yh.prototype.buildMinimalEdgeRings=function(t,e,n){for(var r=new bc,i=t.iterator();i.hasNext();){var o=i.next();if(o.getMaxNodeDegree()>2){o.linkDirectedEdgesForMinimalEdgeRings();var s=o.buildMinimalRings(),a=this.findShell(s);null!==a?(this.placePolygonHoles(a,s),e.add(a)):n.addAll(s)}else r.add(o)}return r},Yh.prototype.containsPoint=function(t){for(var e=this._shellList.iterator();e.hasNext();){if(e.next().containsPoint(t))return!0}return!1},Yh.prototype.buildMaximalEdgeRings=function(t){for(var e=new bc,n=t.iterator();n.hasNext();){var r=n.next();if(r.isInResult()&&r.getLabel().isArea()&&null===r.getEdgeRing()){var i=new Dh(r,this._geometryFactory);e.add(i),i.setInResult()}}return e},Yh.prototype.placePolygonHoles=function(t,e){for(var n=e.iterator();n.hasNext();){var r=n.next();r.isHole()&&r.setShell(t)}},Yh.prototype.getPolygons=function(){return this.computePolygons(this._shellList)},Yh.prototype.findEdgeRingContaining=function(t,e){for(var n=t.getLinearRing(),r=n.getEnvelopeInternal(),i=n.getCoordinateN(0),o=null,s=null,a=e.iterator();a.hasNext();){var u=a.next(),c=u.getLinearRing(),h=c.getEnvelopeInternal();null!==o&&(s=o.getLinearRing().getEnvelopeInternal());var l=!1;h.contains(r)&&sc.isPointInRing(i,c.getCoordinates())&&(l=!0),l&&(null===o||s.contains(h))&&(o=u)}return o},Yh.prototype.findShell=function(t){for(var e=0,n=null,r=t.iterator();r.hasNext();){var i=r.next();i.isHole()||(n=i,e++)}return tc.isTrue(e<=1,"found two shells in MinimalEdgeRing list"),n},Yh.prototype.add=function(){if(1===arguments.length){var t=arguments[0];this.add(t.getEdgeEnds(),t.getNodes())}else if(2===arguments.length){var e=arguments[0],n=arguments[1];Uh.linkResultDirectedEdges(n);var r=this.buildMaximalEdgeRings(e),i=new bc,o=this.buildMinimalEdgeRings(r,this._shellList,i);this.sortShellsAndHoles(o,this._shellList,i),this.placeFreeHoles(this._shellList,i)}},Yh.prototype.interfaces_=function(){return[]},Yh.prototype.getClass=function(){return Yh};var Vh=function(){};Vh.prototype.getBounds=function(){},Vh.prototype.interfaces_=function(){return[]},Vh.prototype.getClass=function(){return Vh};var Hh=function(){this._bounds=null,this._item=null;var t=arguments[0],e=arguments[1];this._bounds=t,this._item=e};Hh.prototype.getItem=function(){return this._item},Hh.prototype.getBounds=function(){return this._bounds},Hh.prototype.interfaces_=function(){return[Vh,Li]},Hh.prototype.getClass=function(){return Hh};var Wh=function(){this._size=null,this._items=null,this._size=0,this._items=new bc,this._items.add(null)};Wh.prototype.poll=function(){if(this.isEmpty())return null;var t=this._items.get(1);return this._items.set(1,this._items.get(this._size)),this._size-=1,this.reorder(1),t},Wh.prototype.size=function(){return this._size},Wh.prototype.reorder=function(t){for(var e=null,n=this._items.get(t);2*t<=this._size&&((e=2*t)!==this._size&&this._items.get(e+1).compareTo(this._items.get(e))<0&&e++,this._items.get(e).compareTo(n)<0);t=e)this._items.set(t,this._items.get(e));this._items.set(t,n)},Wh.prototype.clear=function(){this._size=0,this._items.clear()},Wh.prototype.isEmpty=function(){return 0===this._size},Wh.prototype.add=function(t){this._items.add(null),this._size+=1;var e=this._size;for(this._items.set(0,t);t.compareTo(this._items.get(Math.trunc(e/2)))<0;e/=2)this._items.set(e,this._items.get(Math.trunc(e/2)));this._items.set(e,t)},Wh.prototype.interfaces_=function(){return[]},Wh.prototype.getClass=function(){return Wh};var Jh=function(){};Jh.prototype.visitItem=function(t){},Jh.prototype.interfaces_=function(){return[]},Jh.prototype.getClass=function(){return Jh};var Zh=function(){};Zh.prototype.insert=function(t,e){},Zh.prototype.remove=function(t,e){},Zh.prototype.query=function(){},Zh.prototype.interfaces_=function(){return[]},Zh.prototype.getClass=function(){return Zh};var Kh=function(){if(this._childBoundables=new bc,this._bounds=null,this._level=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this._level=t}},Qh={serialVersionUID:{configurable:!0}};Kh.prototype.getLevel=function(){return this._level},Kh.prototype.size=function(){return this._childBoundables.size()},Kh.prototype.getChildBoundables=function(){return this._childBoundables},Kh.prototype.addChildBoundable=function(t){tc.isTrue(null===this._bounds),this._childBoundables.add(t)},Kh.prototype.isEmpty=function(){return this._childBoundables.isEmpty()},Kh.prototype.getBounds=function(){return null===this._bounds&&(this._bounds=this.computeBounds()),this._bounds},Kh.prototype.interfaces_=function(){return[Vh,Li]},Kh.prototype.getClass=function(){return Kh},Qh.serialVersionUID.get=function(){return 0x5a1e55ec41369800},Object.defineProperties(Kh,Qh);var $h=function(){};$h.reverseOrder=function(){return{compare:function(t,e){return e.compareTo(t)}}},$h.min=function(t){return $h.sort(t),t.get(0)},$h.sort=function(t,e){var n=t.toArray();e?qc.sort(n,e):qc.sort(n);for(var r=t.iterator(),i=0,o=n.length;i<o;i++)r.next(),r.set(n[i])},$h.singletonList=function(t){var e=new bc;return e.add(t),e};var tl=function(){this._boundable1=null,this._boundable2=null,this._distance=null,this._itemDistance=null;var t=arguments[0],e=arguments[1],n=arguments[2];this._boundable1=t,this._boundable2=e,this._itemDistance=n,this._distance=this.distance()};tl.prototype.expandToQueue=function(t,e){var n=tl.isComposite(this._boundable1),r=tl.isComposite(this._boundable2);if(n&&r)return tl.area(this._boundable1)>tl.area(this._boundable2)?(this.expand(this._boundable1,this._boundable2,t,e),null):(this.expand(this._boundable2,this._boundable1,t,e),null);if(n)return this.expand(this._boundable1,this._boundable2,t,e),null;if(r)return this.expand(this._boundable2,this._boundable1,t,e),null;throw new _u("neither boundable is composite")},tl.prototype.isLeaves=function(){return!(tl.isComposite(this._boundable1)||tl.isComposite(this._boundable2))},tl.prototype.compareTo=function(t){var e=t;return this._distance<e._distance?-1:this._distance>e._distance?1:0},tl.prototype.expand=function(t,e,n,r){for(var i=t.getChildBoundables().iterator();i.hasNext();){var o=i.next(),s=new tl(o,e,this._itemDistance);s.getDistance()<r&&n.add(s)}},tl.prototype.getBoundable=function(t){return 0===t?this._boundable1:this._boundable2},tl.prototype.getDistance=function(){return this._distance},tl.prototype.distance=function(){return this.isLeaves()?this._itemDistance.distance(this._boundable1,this._boundable2):this._boundable1.getBounds().distance(this._boundable2.getBounds())},tl.prototype.interfaces_=function(){return[xu]},tl.prototype.getClass=function(){return tl},tl.area=function(t){return t.getBounds().getArea()},tl.isComposite=function(t){return t instanceof Kh};var el=function t(){if(this._root=null,this._built=!1,this._itemBoundables=new bc,this._nodeCapacity=null,0===arguments.length){var e=t.DEFAULT_NODE_CAPACITY;this._nodeCapacity=e}else if(1===arguments.length){var n=arguments[0];tc.isTrue(n>1,"Node capacity must be greater than 1"),this._nodeCapacity=n}},nl={IntersectsOp:{configurable:!0},serialVersionUID:{configurable:!0},DEFAULT_NODE_CAPACITY:{configurable:!0}};el.prototype.getNodeCapacity=function(){return this._nodeCapacity},el.prototype.lastNode=function(t){return t.get(t.size()-1)},el.prototype.size=function(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.size(this._root));if(1===arguments.length){for(var t=0,e=arguments[0].getChildBoundables().iterator();e.hasNext();){var n=e.next();n instanceof Kh?t+=this.size(n):n instanceof Hh&&(t+=1)}return t}},el.prototype.removeItem=function(t,e){for(var n=null,r=t.getChildBoundables().iterator();r.hasNext();){var i=r.next();i instanceof Hh&&i.getItem()===e&&(n=i)}return null!==n&&(t.getChildBoundables().remove(n),!0)},el.prototype.itemsTree=function(){if(0===arguments.length){this.build();var t=this.itemsTree(this._root);return null===t?new bc:t}if(1===arguments.length){for(var e=arguments[0],n=new bc,r=e.getChildBoundables().iterator();r.hasNext();){var i=r.next();if(i instanceof Kh){var o=this.itemsTree(i);null!==o&&n.add(o)}else i instanceof Hh?n.add(i.getItem()):tc.shouldNeverReachHere()}return n.size()<=0?null:n}},el.prototype.insert=function(t,e){tc.isTrue(!this._built,"Cannot insert items into an STR packed R-tree after it has been built."),this._itemBoundables.add(new Hh(t,e))},el.prototype.boundablesAtLevel=function(){if(1===arguments.length){var t=arguments[0],e=new bc;return this.boundablesAtLevel(t,this._root,e),e}if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2];if(tc.isTrue(n>-2),r.getLevel()===n)return i.add(r),null;for(var o=r.getChildBoundables().iterator();o.hasNext();){var s=o.next();s instanceof Kh?this.boundablesAtLevel(n,s,i):(tc.isTrue(s instanceof Hh),-1===n&&i.add(s))}return null}},el.prototype.query=function(){if(1===arguments.length){var t=arguments[0];this.build();var e=new bc;return this.isEmpty()?e:(this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.query(t,this._root,e),e)}if(2===arguments.length){var n=arguments[0],r=arguments[1];if(this.build(),this.isEmpty())return null;this.getIntersectsOp().intersects(this._root.getBounds(),n)&&this.query(n,this._root,r)}else if(3===arguments.length)if(Lu(arguments[2],Jh)&&arguments[0]instanceof Object&&arguments[1]instanceof Kh)for(var i=arguments[0],o=arguments[1],s=arguments[2],a=o.getChildBoundables(),u=0;u<a.size();u++){var c=a.get(u);this.getIntersectsOp().intersects(c.getBounds(),i)&&(c instanceof Kh?this.query(i,c,s):c instanceof Hh?s.visitItem(c.getItem()):tc.shouldNeverReachHere())}else if(Lu(arguments[2],wc)&&arguments[0]instanceof Object&&arguments[1]instanceof Kh)for(var h=arguments[0],l=arguments[1],p=arguments[2],f=l.getChildBoundables(),g=0;g<f.size();g++){var d=f.get(g);this.getIntersectsOp().intersects(d.getBounds(),h)&&(d instanceof Kh?this.query(h,d,p):d instanceof Hh?p.add(d.getItem()):tc.shouldNeverReachHere())}},el.prototype.build=function(){if(this._built)return null;this._root=this._itemBoundables.isEmpty()?this.createNode(0):this.createHigherLevels(this._itemBoundables,-1),this._itemBoundables=null,this._built=!0},el.prototype.getRoot=function(){return this.build(),this._root},el.prototype.remove=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.build(),!!this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.remove(t,this._root,e)}if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2],o=this.removeItem(r,i);if(o)return!0;for(var s=null,a=r.getChildBoundables().iterator();a.hasNext();){var u=a.next();if(this.getIntersectsOp().intersects(u.getBounds(),n)&&(u instanceof Kh&&(o=this.remove(n,u,i)))){s=u;break}}return null!==s&&s.getChildBoundables().isEmpty()&&r.getChildBoundables().remove(s),o}},el.prototype.createHigherLevels=function(t,e){tc.isTrue(!t.isEmpty());var n=this.createParentBoundables(t,e+1);return 1===n.size()?n.get(0):this.createHigherLevels(n,e+1)},el.prototype.depth=function(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.depth(this._root));if(1===arguments.length){for(var t=0,e=arguments[0].getChildBoundables().iterator();e.hasNext();){var n=e.next();if(n instanceof Kh){var r=this.depth(n);r>t&&(t=r)}}return t+1}},el.prototype.createParentBoundables=function(t,e){tc.isTrue(!t.isEmpty());var n=new bc;n.add(this.createNode(e));var r=new bc(t);$h.sort(r,this.getComparator());for(var i=r.iterator();i.hasNext();){var o=i.next();this.lastNode(n).getChildBoundables().size()===this.getNodeCapacity()&&n.add(this.createNode(e)),this.lastNode(n).addChildBoundable(o)}return n},el.prototype.isEmpty=function(){return this._built?this._root.isEmpty():this._itemBoundables.isEmpty()},el.prototype.interfaces_=function(){return[Li]},el.prototype.getClass=function(){return el},el.compareDoubles=function(t,e){return t>e?1:t<e?-1:0},nl.IntersectsOp.get=function(){return rl},nl.serialVersionUID.get=function(){return-0x35ef64c82d4c5400},nl.DEFAULT_NODE_CAPACITY.get=function(){return 10},Object.defineProperties(el,nl);var rl=function(){},il=function(){};il.prototype.distance=function(t,e){},il.prototype.interfaces_=function(){return[]},il.prototype.getClass=function(){return il};var ol=function(t){function e(n){n=n||e.DEFAULT_NODE_CAPACITY,t.call(this,n)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={STRtreeNode:{configurable:!0},serialVersionUID:{configurable:!0},xComparator:{configurable:!0},yComparator:{configurable:!0},intersectsOp:{configurable:!0},DEFAULT_NODE_CAPACITY:{configurable:!0}};return e.prototype.createParentBoundablesFromVerticalSlices=function(t,e){tc.isTrue(t.length>0);for(var n=new bc,r=0;r<t.length;r++)n.addAll(this.createParentBoundablesFromVerticalSlice(t[r],e));return n},e.prototype.createNode=function(t){return new sl(t)},e.prototype.size=function(){return 0===arguments.length?t.prototype.size.call(this):t.prototype.size.apply(this,arguments)},e.prototype.insert=function(){if(2!==arguments.length)return t.prototype.insert.apply(this,arguments);var e=arguments[0],n=arguments[1];if(e.isNull())return null;t.prototype.insert.call(this,e,n)},e.prototype.getIntersectsOp=function(){return e.intersectsOp},e.prototype.verticalSlices=function(t,e){for(var n=Math.trunc(Math.ceil(t.size()/e)),r=new Array(e).fill(null),i=t.iterator(),o=0;o<e;o++){r[o]=new bc;for(var s=0;i.hasNext()&&s<n;){var a=i.next();r[o].add(a),s++}}return r},e.prototype.query=function(){if(1===arguments.length){var e=arguments[0];return t.prototype.query.call(this,e)}if(2===arguments.length){var n=arguments[0],r=arguments[1];t.prototype.query.call(this,n,r)}else if(3===arguments.length)if(Lu(arguments[2],Jh)&&arguments[0]instanceof Object&&arguments[1]instanceof Kh){var i=arguments[0],o=arguments[1],s=arguments[2];t.prototype.query.call(this,i,o,s)}else if(Lu(arguments[2],wc)&&arguments[0]instanceof Object&&arguments[1]instanceof Kh){var a=arguments[0],u=arguments[1],c=arguments[2];t.prototype.query.call(this,a,u,c)}},e.prototype.getComparator=function(){return e.yComparator},e.prototype.createParentBoundablesFromVerticalSlice=function(e,n){return t.prototype.createParentBoundables.call(this,e,n)},e.prototype.remove=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return t.prototype.remove.call(this,e,n)}return t.prototype.remove.apply(this,arguments)},e.prototype.depth=function(){return 0===arguments.length?t.prototype.depth.call(this):t.prototype.depth.apply(this,arguments)},e.prototype.createParentBoundables=function(t,n){tc.isTrue(!t.isEmpty());var r=Math.trunc(Math.ceil(t.size()/this.getNodeCapacity())),i=new bc(t);$h.sort(i,e.xComparator);var o=this.verticalSlices(i,Math.trunc(Math.ceil(Math.sqrt(r))));return this.createParentBoundablesFromVerticalSlices(o,n)},e.prototype.nearestNeighbour=function(){if(1===arguments.length){if(Lu(arguments[0],il)){var t=arguments[0],n=new tl(this.getRoot(),this.getRoot(),t);return this.nearestNeighbour(n)}if(arguments[0]instanceof tl){var r=arguments[0];return this.nearestNeighbour(r,mu.POSITIVE_INFINITY)}}else if(2===arguments.length){if(arguments[0]instanceof e&&Lu(arguments[1],il)){var i=arguments[0],o=arguments[1],s=new tl(this.getRoot(),i.getRoot(),o);return this.nearestNeighbour(s)}if(arguments[0]instanceof tl&&"number"==typeof arguments[1]){var a=arguments[0],u=arguments[1],c=null,h=new Wh;for(h.add(a);!h.isEmpty()&&u>0;){var l=h.poll(),p=l.getDistance();if(p>=u)break;l.isLeaves()?(u=p,c=l):l.expandToQueue(h,u)}return[c.getBoundable(0).getItem(),c.getBoundable(1).getItem()]}}else if(3===arguments.length){var f=arguments[0],g=arguments[1],d=arguments[2],y=new Hh(f,g),_=new tl(this.getRoot(),y,d);return this.nearestNeighbour(_)[0]}},e.prototype.interfaces_=function(){return[Zh,Li]},e.prototype.getClass=function(){return e},e.centreX=function(t){return e.avg(t.getMinX(),t.getMaxX())},e.avg=function(t,e){return(t+e)/2},e.centreY=function(t){return e.avg(t.getMinY(),t.getMaxY())},n.STRtreeNode.get=function(){return sl},n.serialVersionUID.get=function(){return 0x39920f7d5f261e0},n.xComparator.get=function(){return{interfaces_:function(){return[wu]},compare:function(n,r){return t.compareDoubles(e.centreX(n.getBounds()),e.centreX(r.getBounds()))}}},n.yComparator.get=function(){return{interfaces_:function(){return[wu]},compare:function(n,r){return t.compareDoubles(e.centreY(n.getBounds()),e.centreY(r.getBounds()))}}},n.intersectsOp.get=function(){return{interfaces_:function(){return[t.IntersectsOp]},intersects:function(t,e){return t.intersects(e)}}},n.DEFAULT_NODE_CAPACITY.get=function(){return 10},Object.defineProperties(e,n),e}(el),sl=function(t){function e(){var e=arguments[0];t.call(this,e)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.computeBounds=function(){for(var t=null,e=this.getChildBoundables().iterator();e.hasNext();){var n=e.next();null===t?t=new Yu(n.getBounds()):t.expandToInclude(n.getBounds())}return t},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Kh),al=function(){};al.prototype.interfaces_=function(){return[]},al.prototype.getClass=function(){return al},al.relativeSign=function(t,e){return t<e?-1:t>e?1:0},al.compare=function(t,e,n){if(e.equals2D(n))return 0;var r=al.relativeSign(e.x,n.x),i=al.relativeSign(e.y,n.y);switch(t){case 0:return al.compareValue(r,i);case 1:return al.compareValue(i,r);case 2:return al.compareValue(i,-r);case 3:return al.compareValue(-r,i);case 4:return al.compareValue(-r,-i);case 5:return al.compareValue(-i,-r);case 6:return al.compareValue(-i,r);case 7:return al.compareValue(r,-i)}return tc.shouldNeverReachHere("invalid octant value"),0},al.compareValue=function(t,e){return t<0?-1:t>0?1:e<0?-1:e>0?1:0};var ul=function(){this._segString=null,this.coord=null,this.segmentIndex=null,this._segmentOctant=null,this._isInterior=null;var t=arguments[0],e=arguments[1],n=arguments[2],r=arguments[3];this._segString=t,this.coord=new bu(e),this.segmentIndex=n,this._segmentOctant=r,this._isInterior=!e.equals2D(t.getCoordinate(n))};ul.prototype.getCoordinate=function(){return this.coord},ul.prototype.print=function(t){t.print(this.coord),t.print(" seg # = "+this.segmentIndex)},ul.prototype.compareTo=function(t){var e=t;return this.segmentIndex<e.segmentIndex?-1:this.segmentIndex>e.segmentIndex?1:this.coord.equals2D(e.coord)?0:al.compare(this._segmentOctant,this.coord,e.coord)},ul.prototype.isEndPoint=function(t){return 0===this.segmentIndex&&!this._isInterior||this.segmentIndex===t},ul.prototype.isInterior=function(){return this._isInterior},ul.prototype.interfaces_=function(){return[xu]},ul.prototype.getClass=function(){return ul};var cl=function(){this._nodeMap=new Gi,this._edge=null;var t=arguments[0];this._edge=t};cl.prototype.getSplitCoordinates=function(){var t=new Nc;this.addEndpoints();for(var e=this.iterator(),n=e.next();e.hasNext();){var r=e.next();this.addEdgeCoordinates(n,r,t),n=r}return t.toCoordinateArray()},cl.prototype.addCollapsedNodes=function(){var t=new bc;this.findCollapsesFromInsertedNodes(t),this.findCollapsesFromExistingVertices(t);for(var e=t.iterator();e.hasNext();){var n=e.next().intValue();this.add(this._edge.getCoordinate(n),n)}},cl.prototype.print=function(t){t.println("Intersections:");for(var e=this.iterator();e.hasNext();){e.next().print(t)}},cl.prototype.findCollapsesFromExistingVertices=function(t){for(var e=0;e<this._edge.size()-2;e++){var n=this._edge.getCoordinate(e),r=this._edge.getCoordinate(e+2);n.equals2D(r)&&t.add(new Tu(e+1))}},cl.prototype.addEdgeCoordinates=function(t,e,n){var r=this._edge.getCoordinate(e.segmentIndex),i=e.isInterior()||!e.coord.equals2D(r);n.add(new bu(t.coord),!1);for(var o=t.segmentIndex+1;o<=e.segmentIndex;o++)n.add(this._edge.getCoordinate(o));i&&n.add(new bu(e.coord))},cl.prototype.iterator=function(){return this._nodeMap.values().iterator()},cl.prototype.addSplitEdges=function(t){this.addEndpoints(),this.addCollapsedNodes();for(var e=this.iterator(),n=e.next();e.hasNext();){var r=e.next(),i=this.createSplitEdge(n,r);t.add(i),n=r}},cl.prototype.findCollapseIndex=function(t,e,n){if(!t.coord.equals2D(e.coord))return!1;var r=e.segmentIndex-t.segmentIndex;return e.isInterior()||r--,1===r&&(n[0]=t.segmentIndex+1,!0)},cl.prototype.findCollapsesFromInsertedNodes=function(t){for(var e=new Array(1).fill(null),n=this.iterator(),r=n.next();n.hasNext();){var i=n.next();this.findCollapseIndex(r,i,e)&&t.add(new Tu(e[0])),r=i}},cl.prototype.getEdge=function(){return this._edge},cl.prototype.addEndpoints=function(){var t=this._edge.size()-1;this.add(this._edge.getCoordinate(0),0),this.add(this._edge.getCoordinate(t),t)},cl.prototype.createSplitEdge=function(t,e){var n=e.segmentIndex-t.segmentIndex+2,r=this._edge.getCoordinate(e.segmentIndex),i=e.isInterior()||!e.coord.equals2D(r);i||n--;var o=new Array(n).fill(null),s=0;o[s++]=new bu(t.coord);for(var a=t.segmentIndex+1;a<=e.segmentIndex;a++)o[s++]=this._edge.getCoordinate(a);return i&&(o[s]=new bu(e.coord)),new fl(o,this._edge.getData())},cl.prototype.add=function(t,e){var n=new ul(this._edge,t,e,this._edge.getSegmentOctant(e)),r=this._nodeMap.get(n);return null!==r?(tc.isTrue(r.coord.equals2D(t),"Found equal nodes with different coordinates"),r):(this._nodeMap.put(n,n),n)},cl.prototype.checkSplitEdgesCorrectness=function(t){var e=this._edge.getCoordinates(),n=t.get(0).getCoordinate(0);if(!n.equals2D(e[0]))throw new Qu("bad split edge start point at "+n);var r=t.get(t.size()-1).getCoordinates(),i=r[r.length-1];if(!i.equals2D(e[e.length-1]))throw new Qu("bad split edge end point at "+i)},cl.prototype.interfaces_=function(){return[]},cl.prototype.getClass=function(){return cl};var hl=function(){};hl.prototype.interfaces_=function(){return[]},hl.prototype.getClass=function(){return hl},hl.octant=function(){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){var t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new _u("Cannot compute the octant for point ( "+t+", "+e+" )");var n=Math.abs(t),r=Math.abs(e);return t>=0?e>=0?n>=r?0:1:n>=r?7:6:e>=0?n>=r?3:2:n>=r?4:5}if(arguments[0]instanceof bu&&arguments[1]instanceof bu){var i=arguments[0],o=arguments[1],s=o.x-i.x,a=o.y-i.y;if(0===s&&0===a)throw new _u("Cannot compute the octant for two identical points "+i);return hl.octant(s,a)}};var ll=function(){};ll.prototype.getCoordinates=function(){},ll.prototype.size=function(){},ll.prototype.getCoordinate=function(t){},ll.prototype.isClosed=function(){},ll.prototype.setData=function(t){},ll.prototype.getData=function(){},ll.prototype.interfaces_=function(){return[]},ll.prototype.getClass=function(){return ll};var pl=function(){};pl.prototype.addIntersection=function(t,e){},pl.prototype.interfaces_=function(){return[ll]},pl.prototype.getClass=function(){return pl};var fl=function(){this._nodeList=new cl(this),this._pts=null,this._data=null;var t=arguments[0],e=arguments[1];this._pts=t,this._data=e};fl.prototype.getCoordinates=function(){return this._pts},fl.prototype.size=function(){return this._pts.length},fl.prototype.getCoordinate=function(t){return this._pts[t]},fl.prototype.isClosed=function(){return this._pts[0].equals(this._pts[this._pts.length-1])},fl.prototype.getSegmentOctant=function(t){return t===this._pts.length-1?-1:this.safeOctant(this.getCoordinate(t),this.getCoordinate(t+1))},fl.prototype.setData=function(t){this._data=t},fl.prototype.safeOctant=function(t,e){return t.equals2D(e)?0:hl.octant(t,e)},fl.prototype.getData=function(){return this._data},fl.prototype.addIntersection=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.addIntersectionNode(t,e)}else if(4===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[3],o=new bu(n.getIntersection(i));this.addIntersection(o,r)}},fl.prototype.toString=function(){return Ku.toLineString(new uh(this._pts))},fl.prototype.getNodeList=function(){return this._nodeList},fl.prototype.addIntersectionNode=function(t,e){var n=e,r=n+1;if(r<this._pts.length){var i=this._pts[r];t.equals2D(i)&&(n=r)}return this._nodeList.add(t,n)},fl.prototype.addIntersections=function(t,e,n){for(var r=0;r<t.getIntersectionNum();r++)this.addIntersection(t,e,n,r)},fl.prototype.interfaces_=function(){return[pl]},fl.prototype.getClass=function(){return fl},fl.getNodedSubstrings=function(){if(1===arguments.length){var t=arguments[0],e=new bc;return fl.getNodedSubstrings(t,e),e}if(2===arguments.length)for(var n=arguments[0],r=arguments[1],i=n.iterator();i.hasNext();){i.next().getNodeList().addSplitEdges(r)}};var gl=function(){if(this.p0=null,this.p1=null,0===arguments.length)this.p0=new bu,this.p1=new bu;else if(1===arguments.length){var t=arguments[0];this.p0=new bu(t.p0),this.p1=new bu(t.p1)}else if(2===arguments.length)this.p0=arguments[0],this.p1=arguments[1];else if(4===arguments.length){var e=arguments[0],n=arguments[1],r=arguments[2],i=arguments[3];this.p0=new bu(e,n),this.p1=new bu(r,i)}},dl={serialVersionUID:{configurable:!0}};gl.prototype.minX=function(){return Math.min(this.p0.x,this.p1.x)},gl.prototype.orientationIndex=function(){if(arguments[0]instanceof gl){var t=arguments[0],e=sc.orientationIndex(this.p0,this.p1,t.p0),n=sc.orientationIndex(this.p0,this.p1,t.p1);return e>=0&&n>=0?Math.max(e,n):e<=0&&n<=0?Math.max(e,n):0}if(arguments[0]instanceof bu){var r=arguments[0];return sc.orientationIndex(this.p0,this.p1,r)}},gl.prototype.toGeometry=function(t){return t.createLineString([this.p0,this.p1])},gl.prototype.isVertical=function(){return this.p0.x===this.p1.x},gl.prototype.equals=function(t){if(!(t instanceof gl))return!1;var e=t;return this.p0.equals(e.p0)&&this.p1.equals(e.p1)},gl.prototype.intersection=function(t){var e=new rc;return e.computeIntersection(this.p0,this.p1,t.p0,t.p1),e.hasIntersection()?e.getIntersection(0):null},gl.prototype.project=function(){if(arguments[0]instanceof bu){var t=arguments[0];if(t.equals(this.p0)||t.equals(this.p1))return new bu(t);var e=this.projectionFactor(t),n=new bu;return n.x=this.p0.x+e*(this.p1.x-this.p0.x),n.y=this.p0.y+e*(this.p1.y-this.p0.y),n}if(arguments[0]instanceof gl){var r=arguments[0],i=this.projectionFactor(r.p0),o=this.projectionFactor(r.p1);if(i>=1&&o>=1)return null;if(i<=0&&o<=0)return null;var s=this.project(r.p0);i<0&&(s=this.p0),i>1&&(s=this.p1);var a=this.project(r.p1);return o<0&&(a=this.p0),o>1&&(a=this.p1),new gl(s,a)}},gl.prototype.normalize=function(){this.p1.compareTo(this.p0)<0&&this.reverse()},gl.prototype.angle=function(){return Math.atan2(this.p1.y-this.p0.y,this.p1.x-this.p0.x)},gl.prototype.getCoordinate=function(t){return 0===t?this.p0:this.p1},gl.prototype.distancePerpendicular=function(t){return sc.distancePointLinePerpendicular(t,this.p0,this.p1)},gl.prototype.minY=function(){return Math.min(this.p0.y,this.p1.y)},gl.prototype.midPoint=function(){return gl.midPoint(this.p0,this.p1)},gl.prototype.projectionFactor=function(t){if(t.equals(this.p0))return 0;if(t.equals(this.p1))return 1;var e=this.p1.x-this.p0.x,n=this.p1.y-this.p0.y,r=e*e+n*n;if(r<=0)return mu.NaN;return((t.x-this.p0.x)*e+(t.y-this.p0.y)*n)/r},gl.prototype.closestPoints=function(t){var e=this.intersection(t);if(null!==e)return[e,e];var n=new Array(2).fill(null),r=mu.MAX_VALUE,i=null,o=this.closestPoint(t.p0);r=o.distance(t.p0),n[0]=o,n[1]=t.p0;var s=this.closestPoint(t.p1);(i=s.distance(t.p1))<r&&(r=i,n[0]=s,n[1]=t.p1);var a=t.closestPoint(this.p0);(i=a.distance(this.p0))<r&&(r=i,n[0]=this.p0,n[1]=a);var u=t.closestPoint(this.p1);return(i=u.distance(this.p1))<r&&(r=i,n[0]=this.p1,n[1]=u),n},gl.prototype.closestPoint=function(t){var e=this.projectionFactor(t);if(e>0&&e<1)return this.project(t);return this.p0.distance(t)<this.p1.distance(t)?this.p0:this.p1},gl.prototype.maxX=function(){return Math.max(this.p0.x,this.p1.x)},gl.prototype.getLength=function(){return this.p0.distance(this.p1)},gl.prototype.compareTo=function(t){var e=t,n=this.p0.compareTo(e.p0);return 0!==n?n:this.p1.compareTo(e.p1)},gl.prototype.reverse=function(){var t=this.p0;this.p0=this.p1,this.p1=t},gl.prototype.equalsTopo=function(t){return this.p0.equals(t.p0)&&(this.p1.equals(t.p1)||this.p0.equals(t.p1))&&this.p1.equals(t.p0)},gl.prototype.lineIntersection=function(t){try{return Uu.intersection(this.p0,this.p1,t.p0,t.p1)}catch(t){if(!(t instanceof ju))throw t}return null},gl.prototype.maxY=function(){return Math.max(this.p0.y,this.p1.y)},gl.prototype.pointAlongOffset=function(t,e){var n=this.p0.x+t*(this.p1.x-this.p0.x),r=this.p0.y+t*(this.p1.y-this.p0.y),i=this.p1.x-this.p0.x,o=this.p1.y-this.p0.y,s=Math.sqrt(i*i+o*o),a=0,u=0;if(0!==e){if(s<=0)throw new Error("Cannot compute offset from zero-length line segment");a=e*i/s,u=e*o/s}return new bu(n-u,r+a)},gl.prototype.setCoordinates=function(){if(1===arguments.length){var t=arguments[0];this.setCoordinates(t.p0,t.p1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.p0.x=e.x,this.p0.y=e.y,this.p1.x=n.x,this.p1.y=n.y}},gl.prototype.segmentFraction=function(t){var e=this.projectionFactor(t);return e<0?e=0:(e>1||mu.isNaN(e))&&(e=1),e},gl.prototype.toString=function(){return"LINESTRING( "+this.p0.x+" "+this.p0.y+", "+this.p1.x+" "+this.p1.y+")"},gl.prototype.isHorizontal=function(){return this.p0.y===this.p1.y},gl.prototype.distance=function(){if(arguments[0]instanceof gl){var t=arguments[0];return sc.distanceLineLine(this.p0,this.p1,t.p0,t.p1)}if(arguments[0]instanceof bu){var e=arguments[0];return sc.distancePointLine(e,this.p0,this.p1)}},gl.prototype.pointAlong=function(t){var e=new bu;return e.x=this.p0.x+t*(this.p1.x-this.p0.x),e.y=this.p0.y+t*(this.p1.y-this.p0.y),e},gl.prototype.hashCode=function(){var t=mu.doubleToLongBits(this.p0.x);t^=31*mu.doubleToLongBits(this.p0.y);var e=Math.trunc(t)^Math.trunc(t>>32),n=mu.doubleToLongBits(this.p1.x);n^=31*mu.doubleToLongBits(this.p1.y);return e^(Math.trunc(n)^Math.trunc(n>>32))},gl.prototype.interfaces_=function(){return[xu,Li]},gl.prototype.getClass=function(){return gl},gl.midPoint=function(t,e){return new bu((t.x+e.x)/2,(t.y+e.y)/2)},dl.serialVersionUID.get=function(){return 0x2d2172135f411c00},Object.defineProperties(gl,dl);var yl=function(){this.tempEnv1=new Yu,this.tempEnv2=new Yu,this._overlapSeg1=new gl,this._overlapSeg2=new gl};yl.prototype.overlap=function(){if(2===arguments.length);else if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],r=arguments[3];t.getLineSegment(e,this._overlapSeg1),n.getLineSegment(r,this._overlapSeg2),this.overlap(this._overlapSeg1,this._overlapSeg2)}},yl.prototype.interfaces_=function(){return[]},yl.prototype.getClass=function(){return yl};var _l=function(){this._pts=null,this._start=null,this._end=null,this._env=null,this._context=null,this._id=null;var t=arguments[0],e=arguments[1],n=arguments[2],r=arguments[3];this._pts=t,this._start=e,this._end=n,this._context=r};_l.prototype.getLineSegment=function(t,e){e.p0=this._pts[t],e.p1=this._pts[t+1]},_l.prototype.computeSelect=function(t,e,n,r){var i=this._pts[e],o=this._pts[n];if(r.tempEnv1.init(i,o),n-e==1)return r.select(this,e),null;if(!t.intersects(r.tempEnv1))return null;var s=Math.trunc((e+n)/2);e<s&&this.computeSelect(t,e,s,r),s<n&&this.computeSelect(t,s,n,r)},_l.prototype.getCoordinates=function(){for(var t=new Array(this._end-this._start+1).fill(null),e=0,n=this._start;n<=this._end;n++)t[e++]=this._pts[n];return t},_l.prototype.computeOverlaps=function(t,e){this.computeOverlapsInternal(this._start,this._end,t,t._start,t._end,e)},_l.prototype.setId=function(t){this._id=t},_l.prototype.select=function(t,e){this.computeSelect(t,this._start,this._end,e)},_l.prototype.getEnvelope=function(){if(null===this._env){var t=this._pts[this._start],e=this._pts[this._end];this._env=new Yu(t,e)}return this._env},_l.prototype.getEndIndex=function(){return this._end},_l.prototype.getStartIndex=function(){return this._start},_l.prototype.getContext=function(){return this._context},_l.prototype.getId=function(){return this._id},_l.prototype.computeOverlapsInternal=function(t,e,n,r,i,o){var s=this._pts[t],a=this._pts[e],u=n._pts[r],c=n._pts[i];if(e-t==1&&i-r==1)return o.overlap(this,t,n,r),null;if(o.tempEnv1.init(s,a),o.tempEnv2.init(u,c),!o.tempEnv1.intersects(o.tempEnv2))return null;var h=Math.trunc((t+e)/2),l=Math.trunc((r+i)/2);t<h&&(r<l&&this.computeOverlapsInternal(t,h,n,r,l,o),l<i&&this.computeOverlapsInternal(t,h,n,l,i,o)),h<e&&(r<l&&this.computeOverlapsInternal(h,e,n,r,l,o),l<i&&this.computeOverlapsInternal(h,e,n,l,i,o))},_l.prototype.interfaces_=function(){return[]},_l.prototype.getClass=function(){return _l};var ml=function(){};ml.prototype.interfaces_=function(){return[]},ml.prototype.getClass=function(){return ml},ml.getChainStartIndices=function(t){var e=0,n=new bc;n.add(new Tu(e));do{var r=ml.findChainEnd(t,e);n.add(new Tu(r)),e=r}while(e<t.length-1);return ml.toIntArray(n)},ml.findChainEnd=function(t,e){for(var n=e;n<t.length-1&&t[n].equals2D(t[n+1]);)n++;if(n>=t.length-1)return t.length-1;for(var r=Bh.quadrant(t[n],t[n+1]),i=e+1;i<t.length;){if(!t[i-1].equals2D(t[i])){if(Bh.quadrant(t[i-1],t[i])!==r)break}i++}return i-1},ml.getChains=function(){if(1===arguments.length){var t=arguments[0];return ml.getChains(t,null)}if(2===arguments.length){for(var e=arguments[0],n=arguments[1],r=new bc,i=ml.getChainStartIndices(e),o=0;o<i.length-1;o++){var s=new _l(e,i[o],i[o+1],n);r.add(s)}return r}},ml.toIntArray=function(t){for(var e=new Array(t.size()).fill(null),n=0;n<e.length;n++)e[n]=t.get(n).intValue();return e};var vl=function(){};vl.prototype.computeNodes=function(t){},vl.prototype.getNodedSubstrings=function(){},vl.prototype.interfaces_=function(){return[]},vl.prototype.getClass=function(){return vl};var xl=function(){if(this._segInt=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.setSegmentIntersector(t)}};xl.prototype.setSegmentIntersector=function(t){this._segInt=t},xl.prototype.interfaces_=function(){return[vl]},xl.prototype.getClass=function(){return xl};var El=function(t){function e(e){e?t.call(this,e):t.call(this),this._monoChains=new bc,this._index=new ol,this._idCounter=0,this._nodedSegStrings=null,this._nOverlaps=0}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={SegmentOverlapAction:{configurable:!0}};return e.prototype.getMonotoneChains=function(){return this._monoChains},e.prototype.getNodedSubstrings=function(){return fl.getNodedSubstrings(this._nodedSegStrings)},e.prototype.getIndex=function(){return this._index},e.prototype.add=function(t){for(var e=ml.getChains(t.getCoordinates(),t).iterator();e.hasNext();){var n=e.next();n.setId(this._idCounter++),this._index.insert(n.getEnvelope(),n),this._monoChains.add(n)}},e.prototype.computeNodes=function(t){this._nodedSegStrings=t;for(var e=t.iterator();e.hasNext();)this.add(e.next());this.intersectChains()},e.prototype.intersectChains=function(){for(var t=new wl(this._segInt),e=this._monoChains.iterator();e.hasNext();)for(var n=e.next(),r=this._index.query(n.getEnvelope()).iterator();r.hasNext();){var i=r.next();if(i.getId()>n.getId()&&(n.computeOverlaps(i,t),this._nOverlaps++),this._segInt.isDone())return null}},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},n.SegmentOverlapAction.get=function(){return wl},Object.defineProperties(e,n),e}(xl),wl=function(t){function e(){t.call(this),this._si=null;var e=arguments[0];this._si=e}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.overlap=function(){if(4!==arguments.length)return t.prototype.overlap.apply(this,arguments);var e=arguments[0],n=arguments[1],r=arguments[2],i=arguments[3],o=e.getContext(),s=r.getContext();this._si.processIntersections(o,n,s,i)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(yl),bl=function t(){if(this._quadrantSegments=t.DEFAULT_QUADRANT_SEGMENTS,this._endCapStyle=t.CAP_ROUND,this._joinStyle=t.JOIN_ROUND,this._mitreLimit=t.DEFAULT_MITRE_LIMIT,this._isSingleSided=!1,this._simplifyFactor=t.DEFAULT_SIMPLIFY_FACTOR,0===arguments.length);else if(1===arguments.length){var e=arguments[0];this.setQuadrantSegments(e)}else if(2===arguments.length){var n=arguments[0],r=arguments[1];this.setQuadrantSegments(n),this.setEndCapStyle(r)}else if(4===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3];this.setQuadrantSegments(i),this.setEndCapStyle(o),this.setJoinStyle(s),this.setMitreLimit(a)}},Il={CAP_ROUND:{configurable:!0},CAP_FLAT:{configurable:!0},CAP_SQUARE:{configurable:!0},JOIN_ROUND:{configurable:!0},JOIN_MITRE:{configurable:!0},JOIN_BEVEL:{configurable:!0},DEFAULT_QUADRANT_SEGMENTS:{configurable:!0},DEFAULT_MITRE_LIMIT:{configurable:!0},DEFAULT_SIMPLIFY_FACTOR:{configurable:!0}};bl.prototype.getEndCapStyle=function(){return this._endCapStyle},bl.prototype.isSingleSided=function(){return this._isSingleSided},bl.prototype.setQuadrantSegments=function(t){this._quadrantSegments=t,0===this._quadrantSegments&&(this._joinStyle=bl.JOIN_BEVEL),this._quadrantSegments<0&&(this._joinStyle=bl.JOIN_MITRE,this._mitreLimit=Math.abs(this._quadrantSegments)),t<=0&&(this._quadrantSegments=1),this._joinStyle!==bl.JOIN_ROUND&&(this._quadrantSegments=bl.DEFAULT_QUADRANT_SEGMENTS)},bl.prototype.getJoinStyle=function(){return this._joinStyle},bl.prototype.setJoinStyle=function(t){this._joinStyle=t},bl.prototype.setSimplifyFactor=function(t){this._simplifyFactor=t<0?0:t},bl.prototype.getSimplifyFactor=function(){return this._simplifyFactor},bl.prototype.getQuadrantSegments=function(){return this._quadrantSegments},bl.prototype.setEndCapStyle=function(t){this._endCapStyle=t},bl.prototype.getMitreLimit=function(){return this._mitreLimit},bl.prototype.setMitreLimit=function(t){this._mitreLimit=t},bl.prototype.setSingleSided=function(t){this._isSingleSided=t},bl.prototype.interfaces_=function(){return[]},bl.prototype.getClass=function(){return bl},bl.bufferDistanceError=function(t){var e=Math.PI/2/t;return 1-Math.cos(e/2)},Il.CAP_ROUND.get=function(){return 1},Il.CAP_FLAT.get=function(){return 2},Il.CAP_SQUARE.get=function(){return 3},Il.JOIN_ROUND.get=function(){return 1},Il.JOIN_MITRE.get=function(){return 2},Il.JOIN_BEVEL.get=function(){return 3},Il.DEFAULT_QUADRANT_SEGMENTS.get=function(){return 8},Il.DEFAULT_MITRE_LIMIT.get=function(){return 5},Il.DEFAULT_SIMPLIFY_FACTOR.get=function(){return.01},Object.defineProperties(bl,Il);var Nl=function(t){this._distanceTol=null,this._isDeleted=null,this._angleOrientation=sc.COUNTERCLOCKWISE,this._inputLine=t||null},Cl={INIT:{configurable:!0},DELETE:{configurable:!0},KEEP:{configurable:!0},NUM_PTS_TO_CHECK:{configurable:!0}};Nl.prototype.isDeletable=function(t,e,n,r){var i=this._inputLine[t],o=this._inputLine[e],s=this._inputLine[n];return!!this.isConcave(i,o,s)&&(!!this.isShallow(i,o,s,r)&&this.isShallowSampled(i,o,t,n,r))},Nl.prototype.deleteShallowConcavities=function(){for(var t=1,e=this.findNextNonDeletedIndex(t),n=this.findNextNonDeletedIndex(e),r=!1;n<this._inputLine.length;){var i=!1;this.isDeletable(t,e,n,this._distanceTol)&&(this._isDeleted[e]=Nl.DELETE,i=!0,r=!0),t=i?n:e,e=this.findNextNonDeletedIndex(t),n=this.findNextNonDeletedIndex(e)}return r},Nl.prototype.isShallowConcavity=function(t,e,n,r){if(!(sc.computeOrientation(t,e,n)===this._angleOrientation))return!1;return sc.distancePointLine(e,t,n)<r},Nl.prototype.isShallowSampled=function(t,e,n,r,i){var o=Math.trunc((r-n)/Nl.NUM_PTS_TO_CHECK);o<=0&&(o=1);for(var s=n;s<r;s+=o)if(!this.isShallow(t,e,this._inputLine[s],i))return!1;return!0},Nl.prototype.isConcave=function(t,e,n){var r=sc.computeOrientation(t,e,n)===this._angleOrientation;return r},Nl.prototype.simplify=function(t){this._distanceTol=Math.abs(t),t<0&&(this._angleOrientation=sc.CLOCKWISE),this._isDeleted=new Array(this._inputLine.length).fill(null);var e=!1;do{e=this.deleteShallowConcavities()}while(e);return this.collapseLine()},Nl.prototype.findNextNonDeletedIndex=function(t){for(var e=t+1;e<this._inputLine.length&&this._isDeleted[e]===Nl.DELETE;)e++;return e},Nl.prototype.isShallow=function(t,e,n,r){return sc.distancePointLine(e,t,n)<r},Nl.prototype.collapseLine=function(){for(var t=new Nc,e=0;e<this._inputLine.length;e++)this._isDeleted[e]!==Nl.DELETE&&t.add(this._inputLine[e]);return t.toCoordinateArray()},Nl.prototype.interfaces_=function(){return[]},Nl.prototype.getClass=function(){return Nl},Nl.simplify=function(t,e){return new Nl(t).simplify(e)},Cl.INIT.get=function(){return 0},Cl.DELETE.get=function(){return 1},Cl.KEEP.get=function(){return 1},Cl.NUM_PTS_TO_CHECK.get=function(){return 10},Object.defineProperties(Nl,Cl);var Sl=function(){this._ptList=null,this._precisionModel=null,this._minimimVertexDistance=0,this._ptList=new bc},Ml={COORDINATE_ARRAY_TYPE:{configurable:!0}};Sl.prototype.getCoordinates=function(){return this._ptList.toArray(Sl.COORDINATE_ARRAY_TYPE)},Sl.prototype.setPrecisionModel=function(t){this._precisionModel=t},Sl.prototype.addPt=function(t){var e=new bu(t);if(this._precisionModel.makePrecise(e),this.isRedundant(e))return null;this._ptList.add(e)},Sl.prototype.revere=function(){},Sl.prototype.addPts=function(t,e){if(e)for(var n=0;n<t.length;n++)this.addPt(t[n]);else for(var r=t.length-1;r>=0;r--)this.addPt(t[r])},Sl.prototype.isRedundant=function(t){if(this._ptList.size()<1)return!1;var e=this._ptList.get(this._ptList.size()-1);return t.distance(e)<this._minimimVertexDistance},Sl.prototype.toString=function(){return(new _h).createLineString(this.getCoordinates()).toString()},Sl.prototype.closeRing=function(){if(this._ptList.size()<1)return null;var t=new bu(this._ptList.get(0)),e=this._ptList.get(this._ptList.size()-1);if(t.equals(e))return null;this._ptList.add(t)},Sl.prototype.setMinimumVertexDistance=function(t){this._minimimVertexDistance=t},Sl.prototype.interfaces_=function(){return[]},Sl.prototype.getClass=function(){return Sl},Ml.COORDINATE_ARRAY_TYPE.get=function(){return new Array(0).fill(null)},Object.defineProperties(Sl,Ml);var Ll=function(){},Pl={PI_TIMES_2:{configurable:!0},PI_OVER_2:{configurable:!0},PI_OVER_4:{configurable:!0},COUNTERCLOCKWISE:{configurable:!0},CLOCKWISE:{configurable:!0},NONE:{configurable:!0}};Ll.prototype.interfaces_=function(){return[]},Ll.prototype.getClass=function(){return Ll},Ll.toDegrees=function(t){return 180*t/Math.PI},Ll.normalize=function(t){for(;t>Math.PI;)t-=Ll.PI_TIMES_2;for(;t<=-Math.PI;)t+=Ll.PI_TIMES_2;return t},Ll.angle=function(){if(1===arguments.length){var t=arguments[0];return Math.atan2(t.y,t.x)}if(2===arguments.length){var e=arguments[0],n=arguments[1],r=n.x-e.x,i=n.y-e.y;return Math.atan2(i,r)}},Ll.isAcute=function(t,e,n){var r=t.x-e.x,i=t.y-e.y;return r*(n.x-e.x)+i*(n.y-e.y)>0},Ll.isObtuse=function(t,e,n){var r=t.x-e.x,i=t.y-e.y;return r*(n.x-e.x)+i*(n.y-e.y)<0},Ll.interiorAngle=function(t,e,n){var r=Ll.angle(e,t),i=Ll.angle(e,n);return Math.abs(i-r)},Ll.normalizePositive=function(t){if(t<0){for(;t<0;)t+=Ll.PI_TIMES_2;t>=Ll.PI_TIMES_2&&(t=0)}else{for(;t>=Ll.PI_TIMES_2;)t-=Ll.PI_TIMES_2;t<0&&(t=0)}return t},Ll.angleBetween=function(t,e,n){var r=Ll.angle(e,t),i=Ll.angle(e,n);return Ll.diff(r,i)},Ll.diff=function(t,e){var n=null;return(n=t<e?e-t:t-e)>Math.PI&&(n=2*Math.PI-n),n},Ll.toRadians=function(t){return t*Math.PI/180},Ll.getTurn=function(t,e){var n=Math.sin(e-t);return n>0?Ll.COUNTERCLOCKWISE:n<0?Ll.CLOCKWISE:Ll.NONE},Ll.angleBetweenOriented=function(t,e,n){var r=Ll.angle(e,t),i=Ll.angle(e,n)-r;return i<=-Math.PI?i+Ll.PI_TIMES_2:i>Math.PI?i-Ll.PI_TIMES_2:i},Pl.PI_TIMES_2.get=function(){return 2*Math.PI},Pl.PI_OVER_2.get=function(){return Math.PI/2},Pl.PI_OVER_4.get=function(){return Math.PI/4},Pl.COUNTERCLOCKWISE.get=function(){return sc.COUNTERCLOCKWISE},Pl.CLOCKWISE.get=function(){return sc.CLOCKWISE},Pl.NONE.get=function(){return sc.COLLINEAR},Object.defineProperties(Ll,Pl);var Ol=function t(){this._maxCurveSegmentError=0,this._filletAngleQuantum=null,this._closingSegLengthFactor=1,this._segList=null,this._distance=0,this._precisionModel=null,this._bufParams=null,this._li=null,this._s0=null,this._s1=null,this._s2=null,this._seg0=new gl,this._seg1=new gl,this._offset0=new gl,this._offset1=new gl,this._side=0,this._hasNarrowConcaveAngle=!1;var e=arguments[0],n=arguments[1],r=arguments[2];this._precisionModel=e,this._bufParams=n,this._li=new rc,this._filletAngleQuantum=Math.PI/2/n.getQuadrantSegments(),n.getQuadrantSegments()>=8&&n.getJoinStyle()===bl.JOIN_ROUND&&(this._closingSegLengthFactor=t.MAX_CLOSING_SEG_LEN_FACTOR),this.init(r)},Rl={OFFSET_SEGMENT_SEPARATION_FACTOR:{configurable:!0},INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR:{configurable:!0},CURVE_VERTEX_SNAP_DISTANCE_FACTOR:{configurable:!0},MAX_CLOSING_SEG_LEN_FACTOR:{configurable:!0}};Ol.prototype.addNextSegment=function(t,e){if(this._s0=this._s1,this._s1=this._s2,this._s2=t,this._seg0.setCoordinates(this._s0,this._s1),this.computeOffsetSegment(this._seg0,this._side,this._distance,this._offset0),this._seg1.setCoordinates(this._s1,this._s2),this.computeOffsetSegment(this._seg1,this._side,this._distance,this._offset1),this._s1.equals(this._s2))return null;var n=sc.computeOrientation(this._s0,this._s1,this._s2),r=n===sc.CLOCKWISE&&this._side===Nh.LEFT||n===sc.COUNTERCLOCKWISE&&this._side===Nh.RIGHT;0===n?this.addCollinear(e):r?this.addOutsideTurn(n,e):this.addInsideTurn(n,e)},Ol.prototype.addLineEndCap=function(t,e){var n=new gl(t,e),r=new gl;this.computeOffsetSegment(n,Nh.LEFT,this._distance,r);var i=new gl;this.computeOffsetSegment(n,Nh.RIGHT,this._distance,i);var o=e.x-t.x,s=e.y-t.y,a=Math.atan2(s,o);switch(this._bufParams.getEndCapStyle()){case bl.CAP_ROUND:this._segList.addPt(r.p1),this.addFilletArc(e,a+Math.PI/2,a-Math.PI/2,sc.CLOCKWISE,this._distance),this._segList.addPt(i.p1);break;case bl.CAP_FLAT:this._segList.addPt(r.p1),this._segList.addPt(i.p1);break;case bl.CAP_SQUARE:var u=new bu;u.x=Math.abs(this._distance)*Math.cos(a),u.y=Math.abs(this._distance)*Math.sin(a);var c=new bu(r.p1.x+u.x,r.p1.y+u.y),h=new bu(i.p1.x+u.x,i.p1.y+u.y);this._segList.addPt(c),this._segList.addPt(h)}},Ol.prototype.getCoordinates=function(){return this._segList.getCoordinates()},Ol.prototype.addMitreJoin=function(t,e,n,r){var i=!0,o=null;try{o=Uu.intersection(e.p0,e.p1,n.p0,n.p1);(r<=0?1:o.distance(t)/Math.abs(r))>this._bufParams.getMitreLimit()&&(i=!1)}catch(t){if(!(t instanceof ju))throw t;o=new bu(0,0),i=!1}i?this._segList.addPt(o):this.addLimitedMitreJoin(e,n,r,this._bufParams.getMitreLimit())},Ol.prototype.addFilletCorner=function(t,e,n,r,i){var o=e.x-t.x,s=e.y-t.y,a=Math.atan2(s,o),u=n.x-t.x,c=n.y-t.y,h=Math.atan2(c,u);r===sc.CLOCKWISE?a<=h&&(a+=2*Math.PI):a>=h&&(a-=2*Math.PI),this._segList.addPt(e),this.addFilletArc(t,a,h,r,i),this._segList.addPt(n)},Ol.prototype.addOutsideTurn=function(t,e){if(this._offset0.p1.distance(this._offset1.p0)<this._distance*Ol.OFFSET_SEGMENT_SEPARATION_FACTOR)return this._segList.addPt(this._offset0.p1),null;this._bufParams.getJoinStyle()===bl.JOIN_MITRE?this.addMitreJoin(this._s1,this._offset0,this._offset1,this._distance):this._bufParams.getJoinStyle()===bl.JOIN_BEVEL?this.addBevelJoin(this._offset0,this._offset1):(e&&this._segList.addPt(this._offset0.p1),this.addFilletCorner(this._s1,this._offset0.p1,this._offset1.p0,t,this._distance),this._segList.addPt(this._offset1.p0))},Ol.prototype.createSquare=function(t){this._segList.addPt(new bu(t.x+this._distance,t.y+this._distance)),this._segList.addPt(new bu(t.x+this._distance,t.y-this._distance)),this._segList.addPt(new bu(t.x-this._distance,t.y-this._distance)),this._segList.addPt(new bu(t.x-this._distance,t.y+this._distance)),this._segList.closeRing()},Ol.prototype.addSegments=function(t,e){this._segList.addPts(t,e)},Ol.prototype.addFirstSegment=function(){this._segList.addPt(this._offset1.p0)},Ol.prototype.addLastSegment=function(){this._segList.addPt(this._offset1.p1)},Ol.prototype.initSideSegments=function(t,e,n){this._s1=t,this._s2=e,this._side=n,this._seg1.setCoordinates(t,e),this.computeOffsetSegment(this._seg1,n,this._distance,this._offset1)},Ol.prototype.addLimitedMitreJoin=function(t,e,n,r){var i=this._seg0.p1,o=Ll.angle(i,this._seg0.p0),s=Ll.angleBetweenOriented(this._seg0.p0,i,this._seg1.p1)/2,a=Ll.normalize(o+s),u=Ll.normalize(a+Math.PI),c=r*n,h=n-c*Math.abs(Math.sin(s)),l=i.x+c*Math.cos(u),p=i.y+c*Math.sin(u),f=new bu(l,p),g=new gl(i,f),d=g.pointAlongOffset(1,h),y=g.pointAlongOffset(1,-h);this._side===Nh.LEFT?(this._segList.addPt(d),this._segList.addPt(y)):(this._segList.addPt(y),this._segList.addPt(d))},Ol.prototype.computeOffsetSegment=function(t,e,n,r){var i=e===Nh.LEFT?1:-1,o=t.p1.x-t.p0.x,s=t.p1.y-t.p0.y,a=Math.sqrt(o*o+s*s),u=i*n*o/a,c=i*n*s/a;r.p0.x=t.p0.x-c,r.p0.y=t.p0.y+u,r.p1.x=t.p1.x-c,r.p1.y=t.p1.y+u},Ol.prototype.addFilletArc=function(t,e,n,r,i){var o=r===sc.CLOCKWISE?-1:1,s=Math.abs(e-n),a=Math.trunc(s/this._filletAngleQuantum+.5);if(a<1)return null;for(var u=s/a,c=0,h=new bu;c<s;){var l=e+o*c;h.x=t.x+i*Math.cos(l),h.y=t.y+i*Math.sin(l),this._segList.addPt(h),c+=u}},Ol.prototype.addInsideTurn=function(t,e){if(this._li.computeIntersection(this._offset0.p0,this._offset0.p1,this._offset1.p0,this._offset1.p1),this._li.hasIntersection())this._segList.addPt(this._li.getIntersection(0));else if(this._hasNarrowConcaveAngle=!0,this._offset0.p1.distance(this._offset1.p0)<this._distance*Ol.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR)this._segList.addPt(this._offset0.p1);else{if(this._segList.addPt(this._offset0.p1),this._closingSegLengthFactor>0){var n=new bu((this._closingSegLengthFactor*this._offset0.p1.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset0.p1.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(n);var r=new bu((this._closingSegLengthFactor*this._offset1.p0.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset1.p0.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(r)}else this._segList.addPt(this._s1);this._segList.addPt(this._offset1.p0)}},Ol.prototype.createCircle=function(t){var e=new bu(t.x+this._distance,t.y);this._segList.addPt(e),this.addFilletArc(t,0,2*Math.PI,-1,this._distance),this._segList.closeRing()},Ol.prototype.addBevelJoin=function(t,e){this._segList.addPt(t.p1),this._segList.addPt(e.p0)},Ol.prototype.init=function(t){this._distance=t,this._maxCurveSegmentError=t*(1-Math.cos(this._filletAngleQuantum/2)),this._segList=new Sl,this._segList.setPrecisionModel(this._precisionModel),this._segList.setMinimumVertexDistance(t*Ol.CURVE_VERTEX_SNAP_DISTANCE_FACTOR)},Ol.prototype.addCollinear=function(t){this._li.computeIntersection(this._s0,this._s1,this._s1,this._s2);this._li.getIntersectionNum()>=2&&(this._bufParams.getJoinStyle()===bl.JOIN_BEVEL||this._bufParams.getJoinStyle()===bl.JOIN_MITRE?(t&&this._segList.addPt(this._offset0.p1),this._segList.addPt(this._offset1.p0)):this.addFilletCorner(this._s1,this._offset0.p1,this._offset1.p0,sc.CLOCKWISE,this._distance))},Ol.prototype.closeRing=function(){this._segList.closeRing()},Ol.prototype.hasNarrowConcaveAngle=function(){return this._hasNarrowConcaveAngle},Ol.prototype.interfaces_=function(){return[]},Ol.prototype.getClass=function(){return Ol},Rl.OFFSET_SEGMENT_SEPARATION_FACTOR.get=function(){return.001},Rl.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR.get=function(){return.001},Rl.CURVE_VERTEX_SNAP_DISTANCE_FACTOR.get=function(){return 1e-6},Rl.MAX_CLOSING_SEG_LEN_FACTOR.get=function(){return 80},Object.defineProperties(Ol,Rl);var Tl=function(){this._distance=0,this._precisionModel=null,this._bufParams=null;var t=arguments[0],e=arguments[1];this._precisionModel=t,this._bufParams=e};Tl.prototype.getOffsetCurve=function(t,e){if(this._distance=e,0===e)return null;var n=e<0,r=Math.abs(e),i=this.getSegGen(r);t.length<=1?this.computePointCurve(t[0],i):this.computeOffsetCurve(t,n,i);var o=i.getCoordinates();return n&&Cc.reverse(o),o},Tl.prototype.computeSingleSidedBufferCurve=function(t,e,n){var r=this.simplifyTolerance(this._distance);if(e){n.addSegments(t,!0);var i=Nl.simplify(t,-r),o=i.length-1;n.initSideSegments(i[o],i[o-1],Nh.LEFT),n.addFirstSegment();for(var s=o-2;s>=0;s--)n.addNextSegment(i[s],!0)}else{n.addSegments(t,!1);var a=Nl.simplify(t,r),u=a.length-1;n.initSideSegments(a[0],a[1],Nh.LEFT),n.addFirstSegment();for(var c=2;c<=u;c++)n.addNextSegment(a[c],!0)}n.addLastSegment(),n.closeRing()},Tl.prototype.computeRingBufferCurve=function(t,e,n){var r=this.simplifyTolerance(this._distance);e===Nh.RIGHT&&(r=-r);var i=Nl.simplify(t,r),o=i.length-1;n.initSideSegments(i[o-1],i[0],e);for(var s=1;s<=o;s++){var a=1!==s;n.addNextSegment(i[s],a)}n.closeRing()},Tl.prototype.computeLineBufferCurve=function(t,e){var n=this.simplifyTolerance(this._distance),r=Nl.simplify(t,n),i=r.length-1;e.initSideSegments(r[0],r[1],Nh.LEFT);for(var o=2;o<=i;o++)e.addNextSegment(r[o],!0);e.addLastSegment(),e.addLineEndCap(r[i-1],r[i]);var s=Nl.simplify(t,-n),a=s.length-1;e.initSideSegments(s[a],s[a-1],Nh.LEFT);for(var u=a-2;u>=0;u--)e.addNextSegment(s[u],!0);e.addLastSegment(),e.addLineEndCap(s[1],s[0]),e.closeRing()},Tl.prototype.computePointCurve=function(t,e){switch(this._bufParams.getEndCapStyle()){case bl.CAP_ROUND:e.createCircle(t);break;case bl.CAP_SQUARE:e.createSquare(t)}},Tl.prototype.getLineCurve=function(t,e){if(this._distance=e,e<0&&!this._bufParams.isSingleSided())return null;if(0===e)return null;var n=Math.abs(e),r=this.getSegGen(n);if(t.length<=1)this.computePointCurve(t[0],r);else if(this._bufParams.isSingleSided()){var i=e<0;this.computeSingleSidedBufferCurve(t,i,r)}else this.computeLineBufferCurve(t,r);return r.getCoordinates()},Tl.prototype.getBufferParameters=function(){return this._bufParams},Tl.prototype.simplifyTolerance=function(t){return t*this._bufParams.getSimplifyFactor()},Tl.prototype.getRingCurve=function(t,e,n){if(this._distance=n,t.length<=2)return this.getLineCurve(t,n);if(0===n)return Tl.copyCoordinates(t);var r=this.getSegGen(n);return this.computeRingBufferCurve(t,e,r),r.getCoordinates()},Tl.prototype.computeOffsetCurve=function(t,e,n){var r=this.simplifyTolerance(this._distance);if(e){var i=Nl.simplify(t,-r),o=i.length-1;n.initSideSegments(i[o],i[o-1],Nh.LEFT),n.addFirstSegment();for(var s=o-2;s>=0;s--)n.addNextSegment(i[s],!0)}else{var a=Nl.simplify(t,r),u=a.length-1;n.initSideSegments(a[0],a[1],Nh.LEFT),n.addFirstSegment();for(var c=2;c<=u;c++)n.addNextSegment(a[c],!0)}n.addLastSegment()},Tl.prototype.getSegGen=function(t){return new Ol(this._precisionModel,this._bufParams,t)},Tl.prototype.interfaces_=function(){return[]},Tl.prototype.getClass=function(){return Tl},Tl.copyCoordinates=function(t){for(var e=new Array(t.length).fill(null),n=0;n<e.length;n++)e[n]=new bu(t[n]);return e};var Al=function(){this._subgraphs=null,this._seg=new gl,this._cga=new sc;var t=arguments[0];this._subgraphs=t},Dl={DepthSegment:{configurable:!0}};Al.prototype.findStabbedSegments=function(){if(1===arguments.length){for(var t=arguments[0],e=new bc,n=this._subgraphs.iterator();n.hasNext();){var r=n.next(),i=r.getEnvelope();t.y<i.getMinY()||t.y>i.getMaxY()||this.findStabbedSegments(t,r.getDirectedEdges(),e)}return e}if(3===arguments.length)if(Lu(arguments[2],wc)&&arguments[0]instanceof bu&&arguments[1]instanceof jh)for(var o=arguments[0],s=arguments[1],a=arguments[2],u=s.getEdge().getCoordinates(),c=0;c<u.length-1;c++){this._seg.p0=u[c],this._seg.p1=u[c+1],this._seg.p0.y>this._seg.p1.y&&this._seg.reverse();if(!(Math.max(this._seg.p0.x,this._seg.p1.x)<o.x)&&!(this._seg.isHorizontal()||o.y<this._seg.p0.y||o.y>this._seg.p1.y||sc.computeOrientation(this._seg.p0,this._seg.p1,o)===sc.RIGHT)){var h=s.getDepth(Nh.LEFT);this._seg.p0.equals(u[c])||(h=s.getDepth(Nh.RIGHT));var l=new Fl(this._seg,h);a.add(l)}}else if(Lu(arguments[2],wc)&&arguments[0]instanceof bu&&Lu(arguments[1],wc))for(var p=arguments[0],f=arguments[1],g=arguments[2],d=f.iterator();d.hasNext();){var y=d.next();y.isForward()&&this.findStabbedSegments(p,y,g)}},Al.prototype.getDepth=function(t){var e=this.findStabbedSegments(t);if(0===e.size())return 0;return $h.min(e)._leftDepth},Al.prototype.interfaces_=function(){return[]},Al.prototype.getClass=function(){return Al},Dl.DepthSegment.get=function(){return Fl},Object.defineProperties(Al,Dl);var Fl=function(){this._upwardSeg=null,this._leftDepth=null;var t=arguments[0],e=arguments[1];this._upwardSeg=new gl(t),this._leftDepth=e};Fl.prototype.compareTo=function(t){var e=t;if(this._upwardSeg.minX()>=e._upwardSeg.maxX())return 1;if(this._upwardSeg.maxX()<=e._upwardSeg.minX())return-1;var n=this._upwardSeg.orientationIndex(e._upwardSeg);return 0!==n?n:0!=(n=-1*e._upwardSeg.orientationIndex(this._upwardSeg))?n:this._upwardSeg.compareTo(e._upwardSeg)},Fl.prototype.compareX=function(t,e){var n=t.p0.compareTo(e.p0);return 0!==n?n:t.p1.compareTo(e.p1)},Fl.prototype.toString=function(){return this._upwardSeg.toString()},Fl.prototype.interfaces_=function(){return[xu]},Fl.prototype.getClass=function(){return Fl};var ql=function(t,e,n){this.p0=t||null,this.p1=e||null,this.p2=n||null};ql.prototype.area=function(){return ql.area(this.p0,this.p1,this.p2)},ql.prototype.signedArea=function(){return ql.signedArea(this.p0,this.p1,this.p2)},ql.prototype.interpolateZ=function(t){if(null===t)throw new _u("Supplied point is null.");return ql.interpolateZ(t,this.p0,this.p1,this.p2)},ql.prototype.longestSideLength=function(){return ql.longestSideLength(this.p0,this.p1,this.p2)},ql.prototype.isAcute=function(){return ql.isAcute(this.p0,this.p1,this.p2)},ql.prototype.circumcentre=function(){return ql.circumcentre(this.p0,this.p1,this.p2)},ql.prototype.area3D=function(){return ql.area3D(this.p0,this.p1,this.p2)},ql.prototype.centroid=function(){return ql.centroid(this.p0,this.p1,this.p2)},ql.prototype.inCentre=function(){return ql.inCentre(this.p0,this.p1,this.p2)},ql.prototype.interfaces_=function(){return[]},ql.prototype.getClass=function(){return ql},ql.area=function(t,e,n){return Math.abs(((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2)},ql.signedArea=function(t,e,n){return((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2},ql.det=function(t,e,n,r){return t*r-e*n},ql.interpolateZ=function(t,e,n,r){var i=e.x,o=e.y,s=n.x-i,a=r.x-i,u=n.y-o,c=r.y-o,h=s*c-a*u,l=t.x-i,p=t.y-o,f=(c*l-a*p)/h,g=(-u*l+s*p)/h;return e.z+f*(n.z-e.z)+g*(r.z-e.z)},ql.longestSideLength=function(t,e,n){var r=t.distance(e),i=e.distance(n),o=n.distance(t),s=r;return i>s&&(s=i),o>s&&(s=o),s},ql.isAcute=function(t,e,n){return!!Ll.isAcute(t,e,n)&&(!!Ll.isAcute(e,n,t)&&!!Ll.isAcute(n,t,e))},ql.circumcentre=function(t,e,n){var r=n.x,i=n.y,o=t.x-r,s=t.y-i,a=e.x-r,u=e.y-i,c=2*ql.det(o,s,a,u),h=ql.det(s,o*o+s*s,u,a*a+u*u),l=ql.det(o,o*o+s*s,a,a*a+u*u);return new bu(r-h/c,i+l/c)},ql.perpendicularBisector=function(t,e){var n=e.x-t.x,r=e.y-t.y,i=new Uu(t.x+n/2,t.y+r/2,1),o=new Uu(t.x-r+n/2,t.y+n+r/2,1);return new Uu(i,o)},ql.angleBisector=function(t,e,n){var r=e.distance(t),i=r/(r+e.distance(n)),o=n.x-t.x,s=n.y-t.y;return new bu(t.x+i*o,t.y+i*s)},ql.area3D=function(t,e,n){var r=e.x-t.x,i=e.y-t.y,o=e.z-t.z,s=n.x-t.x,a=n.y-t.y,u=n.z-t.z,c=i*u-o*a,h=o*s-r*u,l=r*a-i*s,p=c*c+h*h+l*l,f=Math.sqrt(p)/2;return f},ql.centroid=function(t,e,n){var r=(t.x+e.x+n.x)/3,i=(t.y+e.y+n.y)/3;return new bu(r,i)},ql.inCentre=function(t,e,n){var r=e.distance(n),i=t.distance(n),o=t.distance(e),s=r+i+o,a=(r*t.x+i*e.x+o*n.x)/s,u=(r*t.y+i*e.y+o*n.y)/s;return new bu(a,u)};var Gl=function(){this._inputGeom=null,this._distance=null,this._curveBuilder=null,this._curveList=new bc;var t=arguments[0],e=arguments[1],n=arguments[2];this._inputGeom=t,this._distance=e,this._curveBuilder=n};Gl.prototype.addPoint=function(t){if(this._distance<=0)return null;var e=t.getCoordinates(),n=this._curveBuilder.getLineCurve(e,this._distance);this.addCurve(n,Su.EXTERIOR,Su.INTERIOR)},Gl.prototype.addPolygon=function(t){var e=this._distance,n=Nh.LEFT;this._distance<0&&(e=-this._distance,n=Nh.RIGHT);var r=t.getExteriorRing(),i=Cc.removeRepeatedPoints(r.getCoordinates());if(this._distance<0&&this.isErodedCompletely(r,this._distance))return null;if(this._distance<=0&&i.length<3)return null;this.addPolygonRing(i,e,n,Su.EXTERIOR,Su.INTERIOR);for(var o=0;o<t.getNumInteriorRing();o++){var s=t.getInteriorRingN(o),a=Cc.removeRepeatedPoints(s.getCoordinates());this._distance>0&&this.isErodedCompletely(s,-this._distance)||this.addPolygonRing(a,e,Nh.opposite(n),Su.INTERIOR,Su.EXTERIOR)}},Gl.prototype.isTriangleErodedCompletely=function(t,e){var n=new ql(t[0],t[1],t[2]),r=n.inCentre();return sc.distancePointLine(r,n.p0,n.p1)<Math.abs(e)},Gl.prototype.addLineString=function(t){if(this._distance<=0&&!this._curveBuilder.getBufferParameters().isSingleSided())return null;var e=Cc.removeRepeatedPoints(t.getCoordinates()),n=this._curveBuilder.getLineCurve(e,this._distance);this.addCurve(n,Su.EXTERIOR,Su.INTERIOR)},Gl.prototype.addCurve=function(t,e,n){if(null===t||t.length<2)return null;var r=new fl(t,new Rh(0,Su.BOUNDARY,e,n));this._curveList.add(r)},Gl.prototype.getCurves=function(){return this.add(this._inputGeom),this._curveList},Gl.prototype.addPolygonRing=function(t,e,n,r,i){if(0===e&&t.length<eh.MINIMUM_VALID_SIZE)return null;var o=r,s=i;t.length>=eh.MINIMUM_VALID_SIZE&&sc.isCCW(t)&&(o=i,s=r,n=Nh.opposite(n));var a=this._curveBuilder.getRingCurve(t,n,e);this.addCurve(a,o,s)},Gl.prototype.add=function(t){if(t.isEmpty())return null;t instanceof $c?this.addPolygon(t):t instanceof Jc?this.addLineString(t):t instanceof Kc?this.addPoint(t):t instanceof th?this.addCollection(t):t instanceof Xc?this.addCollection(t):t instanceof nh?this.addCollection(t):t instanceof jc&&this.addCollection(t)},Gl.prototype.isErodedCompletely=function(t,e){var n=t.getCoordinates();if(n.length<4)return e<0;if(4===n.length)return this.isTriangleErodedCompletely(n,e);var r=t.getEnvelopeInternal(),i=Math.min(r.getHeight(),r.getWidth());return e<0&&2*Math.abs(e)>i},Gl.prototype.addCollection=function(t){for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);this.add(n)}},Gl.prototype.interfaces_=function(){return[]},Gl.prototype.getClass=function(){return Gl};var Bl=function(){};Bl.prototype.locate=function(t){},Bl.prototype.interfaces_=function(){return[]},Bl.prototype.getClass=function(){return Bl};var kl=function(){this._parent=null,this._atStart=null,this._max=null,this._index=null,this._subcollectionIterator=null;var t=arguments[0];this._parent=t,this._atStart=!0,this._index=0,this._max=t.getNumGeometries()};kl.prototype.next=function(){if(this._atStart)return this._atStart=!1,kl.isAtomic(this._parent)&&this._index++,this._parent;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return this._subcollectionIterator.next();this._subcollectionIterator=null}if(this._index>=this._max)throw new Pi;var t=this._parent.getGeometryN(this._index++);return t instanceof jc?(this._subcollectionIterator=new kl(t),this._subcollectionIterator.next()):t},kl.prototype.remove=function(){throw new Error(this.getClass().getName())},kl.prototype.hasNext=function(){if(this._atStart)return!0;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return!0;this._subcollectionIterator=null}return!(this._index>=this._max)},kl.prototype.interfaces_=function(){return[Ec]},kl.prototype.getClass=function(){return kl},kl.isAtomic=function(t){return!(t instanceof jc)};var zl=function(){this._geom=null;var t=arguments[0];this._geom=t};zl.prototype.locate=function(t){return zl.locate(t,this._geom)},zl.prototype.interfaces_=function(){return[Bl]},zl.prototype.getClass=function(){return zl},zl.isPointInRing=function(t,e){return!!e.getEnvelopeInternal().intersects(t)&&sc.isPointInRing(t,e.getCoordinates())},zl.containsPointInPolygon=function(t,e){if(e.isEmpty())return!1;var n=e.getExteriorRing();if(!zl.isPointInRing(t,n))return!1;for(var r=0;r<e.getNumInteriorRing();r++){var i=e.getInteriorRingN(r);if(zl.isPointInRing(t,i))return!1}return!0},zl.containsPoint=function(t,e){if(e instanceof $c)return zl.containsPointInPolygon(t,e);if(e instanceof jc)for(var n=new kl(e);n.hasNext();){var r=n.next();if(r!==e&&zl.containsPoint(t,r))return!0}return!1},zl.locate=function(t,e){return e.isEmpty()?Su.EXTERIOR:zl.containsPoint(t,e)?Su.INTERIOR:Su.EXTERIOR};var jl=function(){this._edgeMap=new Gi,this._edgeList=null,this._ptInAreaLocation=[Su.NONE,Su.NONE]};jl.prototype.getNextCW=function(t){this.getEdges();var e=this._edgeList.indexOf(t),n=e-1;return 0===e&&(n=this._edgeList.size()-1),this._edgeList.get(n)},jl.prototype.propagateSideLabels=function(t){for(var e=Su.NONE,n=this.iterator();n.hasNext();){var r=n.next().getLabel();r.isArea(t)&&r.getLocation(t,Nh.LEFT)!==Su.NONE&&(e=r.getLocation(t,Nh.LEFT))}if(e===Su.NONE)return null;for(var i=e,o=this.iterator();o.hasNext();){var s=o.next(),a=s.getLabel();if(a.getLocation(t,Nh.ON)===Su.NONE&&a.setLocation(t,Nh.ON,i),a.isArea(t)){var u=a.getLocation(t,Nh.LEFT),c=a.getLocation(t,Nh.RIGHT);if(c!==Su.NONE){if(c!==i)throw new Mh("side location conflict",s.getCoordinate());u===Su.NONE&&tc.shouldNeverReachHere("found single null side (at "+s.getCoordinate()+")"),i=u}else tc.isTrue(a.getLocation(t,Nh.LEFT)===Su.NONE,"found single null side"),a.setLocation(t,Nh.RIGHT,i),a.setLocation(t,Nh.LEFT,i)}}},jl.prototype.getCoordinate=function(){var t=this.iterator();if(!t.hasNext())return null;return t.next().getCoordinate()},jl.prototype.print=function(t){Xu.out.println("EdgeEndStar:   "+this.getCoordinate());for(var e=this.iterator();e.hasNext();){e.next().print(t)}},jl.prototype.isAreaLabelsConsistent=function(t){return this.computeEdgeEndLabels(t.getBoundaryNodeRule()),this.checkAreaLabelsConsistent(0)},jl.prototype.checkAreaLabelsConsistent=function(t){var e=this.getEdges();if(e.size()<=0)return!0;var n=e.size()-1,r=e.get(n).getLabel().getLocation(t,Nh.LEFT);tc.isTrue(r!==Su.NONE,"Found unlabelled area edge");for(var i=r,o=this.iterator();o.hasNext();){var s=o.next().getLabel();tc.isTrue(s.isArea(t),"Found non-area edge");var a=s.getLocation(t,Nh.LEFT),u=s.getLocation(t,Nh.RIGHT);if(a===u)return!1;if(u!==i)return!1;i=a}return!0},jl.prototype.findIndex=function(t){this.iterator();for(var e=0;e<this._edgeList.size();e++){if(this._edgeList.get(e)===t)return e}return-1},jl.prototype.iterator=function(){return this.getEdges().iterator()},jl.prototype.getEdges=function(){return null===this._edgeList&&(this._edgeList=new bc(this._edgeMap.values())),this._edgeList},jl.prototype.getLocation=function(t,e,n){return this._ptInAreaLocation[t]===Su.NONE&&(this._ptInAreaLocation[t]=zl.locate(e,n[t].getGeometry())),this._ptInAreaLocation[t]},jl.prototype.toString=function(){var t=new Ru;t.append("EdgeEndStar:   "+this.getCoordinate()),t.append("\n");for(var e=this.iterator();e.hasNext();){var n=e.next();t.append(n),t.append("\n")}return t.toString()},jl.prototype.computeEdgeEndLabels=function(t){for(var e=this.iterator();e.hasNext();){e.next().computeLabel(t)}},jl.prototype.computeLabelling=function(t){this.computeEdgeEndLabels(t[0].getBoundaryNodeRule()),this.propagateSideLabels(0),this.propagateSideLabels(1);for(var e=[!1,!1],n=this.iterator();n.hasNext();)for(var r=n.next().getLabel(),i=0;i<2;i++)r.isLine(i)&&r.getLocation(i)===Su.BOUNDARY&&(e[i]=!0);for(var o=this.iterator();o.hasNext();)for(var s=o.next(),a=s.getLabel(),u=0;u<2;u++)if(a.isAnyNull(u)){var c=Su.NONE;if(e[u])c=Su.EXTERIOR;else{var h=s.getCoordinate();c=this.getLocation(u,h,t)}a.setAllLocationsIfNull(u,c)}},jl.prototype.getDegree=function(){return this._edgeMap.size()},jl.prototype.insertEdgeEnd=function(t,e){this._edgeMap.put(t,e),this._edgeList=null},jl.prototype.interfaces_=function(){return[]},jl.prototype.getClass=function(){return jl};var Xl=function(t){function e(){t.call(this),this._resultAreaEdgeList=null,this._label=null,this._SCANNING_FOR_INCOMING=1,this._LINKING_TO_OUTGOING=2}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.linkResultDirectedEdges=function(){this.getResultAreaEdges();for(var t=null,e=null,n=this._SCANNING_FOR_INCOMING,r=0;r<this._resultAreaEdgeList.size();r++){var i=this._resultAreaEdgeList.get(r),o=i.getSym();if(i.getLabel().isArea())switch(null===t&&i.isInResult()&&(t=i),n){case this._SCANNING_FOR_INCOMING:if(!o.isInResult())continue;e=o,n=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(!i.isInResult())continue;e.setNext(i),n=this._SCANNING_FOR_INCOMING}}if(n===this._LINKING_TO_OUTGOING){if(null===t)throw new Mh("no outgoing dirEdge found",this.getCoordinate());tc.isTrue(t.isInResult(),"unable to link last incoming dirEdge"),e.setNext(t)}},e.prototype.insert=function(t){var e=t;this.insertEdgeEnd(e,e)},e.prototype.getRightmostEdge=function(){var t=this.getEdges(),e=t.size();if(e<1)return null;var n=t.get(0);if(1===e)return n;var r=t.get(e-1),i=n.getQuadrant(),o=r.getQuadrant();return Bh.isNorthern(i)&&Bh.isNorthern(o)?n:Bh.isNorthern(i)||Bh.isNorthern(o)?0!==n.getDy()?n:0!==r.getDy()?r:(tc.shouldNeverReachHere("found two horizontal edges incident on node"),null):r},e.prototype.print=function(t){Xu.out.println("DirectedEdgeStar: "+this.getCoordinate());for(var e=this.iterator();e.hasNext();){var n=e.next();t.print("out "),n.print(t),t.println(),t.print("in "),n.getSym().print(t),t.println()}},e.prototype.getResultAreaEdges=function(){if(null!==this._resultAreaEdgeList)return this._resultAreaEdgeList;this._resultAreaEdgeList=new bc;for(var t=this.iterator();t.hasNext();){var e=t.next();(e.isInResult()||e.getSym().isInResult())&&this._resultAreaEdgeList.add(e)}return this._resultAreaEdgeList},e.prototype.updateLabelling=function(t){for(var e=this.iterator();e.hasNext();){var n=e.next().getLabel();n.setAllLocationsIfNull(0,t.getLocation(0)),n.setAllLocationsIfNull(1,t.getLocation(1))}},e.prototype.linkAllDirectedEdges=function(){this.getEdges();for(var t=null,e=null,n=this._edgeList.size()-1;n>=0;n--){var r=this._edgeList.get(n),i=r.getSym();null===e&&(e=i),null!==t&&i.setNext(t),t=r}e.setNext(t)},e.prototype.computeDepths=function(){if(1===arguments.length){var t=arguments[0],e=this.findIndex(t),n=t.getDepth(Nh.LEFT),r=t.getDepth(Nh.RIGHT),i=this.computeDepths(e+1,this._edgeList.size(),n);if(this.computeDepths(0,e,i)!==r)throw new Mh("depth mismatch at "+t.getCoordinate())}else if(3===arguments.length){for(var o=arguments[0],s=arguments[1],a=arguments[2],u=o;u<s;u++){var c=this._edgeList.get(u);c.setEdgeDepths(Nh.RIGHT,a),a=c.getDepth(Nh.LEFT)}return a}},e.prototype.mergeSymLabels=function(){for(var t=this.iterator();t.hasNext();){var e=t.next();e.getLabel().merge(e.getSym().getLabel())}},e.prototype.linkMinimalDirectedEdges=function(t){for(var e=null,n=null,r=this._SCANNING_FOR_INCOMING,i=this._resultAreaEdgeList.size()-1;i>=0;i--){var o=this._resultAreaEdgeList.get(i),s=o.getSym();switch(null===e&&o.getEdgeRing()===t&&(e=o),r){case this._SCANNING_FOR_INCOMING:if(s.getEdgeRing()!==t)continue;n=s,r=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(o.getEdgeRing()!==t)continue;n.setNextMin(o),r=this._SCANNING_FOR_INCOMING}}r===this._LINKING_TO_OUTGOING&&(tc.isTrue(null!==e,"found null for first outgoing dirEdge"),tc.isTrue(e.getEdgeRing()===t,"unable to link last incoming dirEdge"),n.setNextMin(e))},e.prototype.getOutgoingDegree=function(){if(0===arguments.length){for(var t=0,e=this.iterator();e.hasNext();){e.next().isInResult()&&t++}return t}if(1===arguments.length){for(var n=arguments[0],r=0,i=this.iterator();i.hasNext();){i.next().getEdgeRing()===n&&r++}return r}},e.prototype.getLabel=function(){return this._label},e.prototype.findCoveredLineEdges=function(){for(var t=Su.NONE,e=this.iterator();e.hasNext();){var n=e.next(),r=n.getSym();if(!n.isLineEdge()){if(n.isInResult()){t=Su.INTERIOR;break}if(r.isInResult()){t=Su.EXTERIOR;break}}}if(t===Su.NONE)return null;for(var i=t,o=this.iterator();o.hasNext();){var s=o.next(),a=s.getSym();s.isLineEdge()?s.getEdge().setCovered(i===Su.INTERIOR):(s.isInResult()&&(i=Su.EXTERIOR),a.isInResult()&&(i=Su.INTERIOR))}},e.prototype.computeLabelling=function(e){t.prototype.computeLabelling.call(this,e),this._label=new Rh(Su.NONE);for(var n=this.iterator();n.hasNext();)for(var r=n.next().getEdge().getLabel(),i=0;i<2;i++){var o=r.getLocation(i);o!==Su.INTERIOR&&o!==Su.BOUNDARY||this._label.setLocation(i,Su.INTERIOR)}},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(jl),Ul=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.createNode=function(t){return new qh(t,new Xl)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Xh),Yl=function t(){this._pts=null,this._orientation=null;var e=arguments[0];this._pts=e,this._orientation=t.orientation(e)};Yl.prototype.compareTo=function(t){var e=t;return Yl.compareOriented(this._pts,this._orientation,e._pts,e._orientation)},Yl.prototype.interfaces_=function(){return[xu]},Yl.prototype.getClass=function(){return Yl},Yl.orientation=function(t){return 1===Cc.increasingDirection(t)},Yl.compareOriented=function(t,e,n,r){for(var i=e?1:-1,o=r?1:-1,s=e?t.length:-1,a=r?n.length:-1,u=e?0:t.length-1,c=r?0:n.length-1;;){var h=t[u].compareTo(n[c]);if(0!==h)return h;var l=(u+=i)===s,p=(c+=o)===a;if(l&&!p)return-1;if(!l&&p)return 1;if(l&&p)return 0}};var Vl=function(){this._edges=new bc,this._ocaMap=new Gi};Vl.prototype.print=function(t){t.print("MULTILINESTRING ( ");for(var e=0;e<this._edges.size();e++){var n=this._edges.get(e);e>0&&t.print(","),t.print("(");for(var r=n.getCoordinates(),i=0;i<r.length;i++)i>0&&t.print(","),t.print(r[i].x+" "+r[i].y);t.println(")")}t.print(")  ")},Vl.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next())},Vl.prototype.findEdgeIndex=function(t){for(var e=0;e<this._edges.size();e++)if(this._edges.get(e).equals(t))return e;return-1},Vl.prototype.iterator=function(){return this._edges.iterator()},Vl.prototype.getEdges=function(){return this._edges},Vl.prototype.get=function(t){return this._edges.get(t)},Vl.prototype.findEqualEdge=function(t){var e=new Yl(t.getCoordinates());return this._ocaMap.get(e)},Vl.prototype.add=function(t){this._edges.add(t);var e=new Yl(t.getCoordinates());this._ocaMap.put(e,t)},Vl.prototype.interfaces_=function(){return[]},Vl.prototype.getClass=function(){return Vl};var Hl=function(){};Hl.prototype.processIntersections=function(t,e,n,r){},Hl.prototype.isDone=function(){},Hl.prototype.interfaces_=function(){return[]},Hl.prototype.getClass=function(){return Hl};var Wl=function(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._hasInterior=!1,this._properIntersectionPoint=null,this._li=null,this._isSelfIntersection=null,this.numIntersections=0,this.numInteriorIntersections=0,this.numProperIntersections=0,this.numTests=0;var t=arguments[0];this._li=t};Wl.prototype.isTrivialIntersection=function(t,e,n,r){if(t===n&&1===this._li.getIntersectionNum()){if(Wl.isAdjacentSegments(e,r))return!0;if(t.isClosed()){var i=t.size()-1;if(0===e&&r===i||0===r&&e===i)return!0}}return!1},Wl.prototype.getProperIntersectionPoint=function(){return this._properIntersectionPoint},Wl.prototype.hasProperInteriorIntersection=function(){return this._hasProperInterior},Wl.prototype.getLineIntersector=function(){return this._li},Wl.prototype.hasProperIntersection=function(){return this._hasProper},Wl.prototype.processIntersections=function(t,e,n,r){if(t===n&&e===r)return null;this.numTests++;var i=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[r],a=n.getCoordinates()[r+1];this._li.computeIntersection(i,o,s,a),this._li.hasIntersection()&&(this.numIntersections++,this._li.isInteriorIntersection()&&(this.numInteriorIntersections++,this._hasInterior=!0),this.isTrivialIntersection(t,e,n,r)||(this._hasIntersection=!0,t.addIntersections(this._li,e,0),n.addIntersections(this._li,r,1),this._li.isProper()&&(this.numProperIntersections++,this._hasProper=!0,this._hasProperInterior=!0)))},Wl.prototype.hasIntersection=function(){return this._hasIntersection},Wl.prototype.isDone=function(){return!1},Wl.prototype.hasInteriorIntersection=function(){return this._hasInterior},Wl.prototype.interfaces_=function(){return[Hl]},Wl.prototype.getClass=function(){return Wl},Wl.isAdjacentSegments=function(t,e){return 1===Math.abs(t-e)};var Jl=function(){this.coord=null,this.segmentIndex=null,this.dist=null;var t=arguments[0],e=arguments[1],n=arguments[2];this.coord=new bu(t),this.segmentIndex=e,this.dist=n};Jl.prototype.getSegmentIndex=function(){return this.segmentIndex},Jl.prototype.getCoordinate=function(){return this.coord},Jl.prototype.print=function(t){t.print(this.coord),t.print(" seg # = "+this.segmentIndex),t.println(" dist = "+this.dist)},Jl.prototype.compareTo=function(t){var e=t;return this.compare(e.segmentIndex,e.dist)},Jl.prototype.isEndPoint=function(t){return 0===this.segmentIndex&&0===this.dist||this.segmentIndex===t},Jl.prototype.toString=function(){return this.coord+" seg # = "+this.segmentIndex+" dist = "+this.dist},Jl.prototype.getDistance=function(){return this.dist},Jl.prototype.compare=function(t,e){return this.segmentIndex<t?-1:this.segmentIndex>t?1:this.dist<e?-1:this.dist>e?1:0},Jl.prototype.interfaces_=function(){return[xu]},Jl.prototype.getClass=function(){return Jl};var Zl=function(){this._nodeMap=new Gi,this.edge=null;var t=arguments[0];this.edge=t};Zl.prototype.print=function(t){t.println("Intersections:");for(var e=this.iterator();e.hasNext();){e.next().print(t)}},Zl.prototype.iterator=function(){return this._nodeMap.values().iterator()},Zl.prototype.addSplitEdges=function(t){this.addEndpoints();for(var e=this.iterator(),n=e.next();e.hasNext();){var r=e.next(),i=this.createSplitEdge(n,r);t.add(i),n=r}},Zl.prototype.addEndpoints=function(){var t=this.edge.pts.length-1;this.add(this.edge.pts[0],0,0),this.add(this.edge.pts[t],t,0)},Zl.prototype.createSplitEdge=function(t,e){var n=e.segmentIndex-t.segmentIndex+2,r=this.edge.pts[e.segmentIndex],i=e.dist>0||!e.coord.equals2D(r);i||n--;var o=new Array(n).fill(null),s=0;o[s++]=new bu(t.coord);for(var a=t.segmentIndex+1;a<=e.segmentIndex;a++)o[s++]=this.edge.pts[a];return i&&(o[s]=e.coord),new ep(o,new Rh(this.edge._label))},Zl.prototype.add=function(t,e,n){var r=new Jl(t,e,n),i=this._nodeMap.get(r);return null!==i?i:(this._nodeMap.put(r,r),r)},Zl.prototype.isIntersection=function(t){for(var e=this.iterator();e.hasNext();){if(e.next().coord.equals(t))return!0}return!1},Zl.prototype.interfaces_=function(){return[]},Zl.prototype.getClass=function(){return Zl};var Kl=function(){};Kl.prototype.getChainStartIndices=function(t){var e=0,n=new bc;n.add(new Tu(e));do{var r=this.findChainEnd(t,e);n.add(new Tu(r)),e=r}while(e<t.length-1);return Kl.toIntArray(n)},Kl.prototype.findChainEnd=function(t,e){for(var n=Bh.quadrant(t[e],t[e+1]),r=e+1;r<t.length;){if(Bh.quadrant(t[r-1],t[r])!==n)break;r++}return r-1},Kl.prototype.interfaces_=function(){return[]},Kl.prototype.getClass=function(){return Kl},Kl.toIntArray=function(t){for(var e=new Array(t.size()).fill(null),n=0;n<e.length;n++)e[n]=t.get(n).intValue();return e};var Ql=function(){this.e=null,this.pts=null,this.startIndex=null,this.env1=new Yu,this.env2=new Yu;var t=arguments[0];this.e=t,this.pts=t.getCoordinates();var e=new Kl;this.startIndex=e.getChainStartIndices(this.pts)};Ql.prototype.getCoordinates=function(){return this.pts},Ql.prototype.getMaxX=function(t){var e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e>n?e:n},Ql.prototype.getMinX=function(t){var e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e<n?e:n},Ql.prototype.computeIntersectsForChain=function(){if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],r=arguments[3];this.computeIntersectsForChain(this.startIndex[t],this.startIndex[t+1],e,e.startIndex[n],e.startIndex[n+1],r)}else if(6===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3],u=arguments[4],c=arguments[5],h=this.pts[i],l=this.pts[o],p=s.pts[a],f=s.pts[u];if(o-i==1&&u-a==1)return c.addIntersections(this.e,i,s.e,a),null;if(this.env1.init(h,l),this.env2.init(p,f),!this.env1.intersects(this.env2))return null;var g=Math.trunc((i+o)/2),d=Math.trunc((a+u)/2);i<g&&(a<d&&this.computeIntersectsForChain(i,g,s,a,d,c),d<u&&this.computeIntersectsForChain(i,g,s,d,u,c)),g<o&&(a<d&&this.computeIntersectsForChain(g,o,s,a,d,c),d<u&&this.computeIntersectsForChain(g,o,s,d,u,c))}},Ql.prototype.getStartIndexes=function(){return this.startIndex},Ql.prototype.computeIntersects=function(t,e){for(var n=0;n<this.startIndex.length-1;n++)for(var r=0;r<t.startIndex.length-1;r++)this.computeIntersectsForChain(n,t,r,e)},Ql.prototype.interfaces_=function(){return[]},Ql.prototype.getClass=function(){return Ql};var $l=function t(){this._depth=Array(2).fill().map(function(){return Array(3)});for(var e=0;e<2;e++)for(var n=0;n<3;n++)this._depth[e][n]=t.NULL_VALUE},tp={NULL_VALUE:{configurable:!0}};$l.prototype.getDepth=function(t,e){return this._depth[t][e]},$l.prototype.setDepth=function(t,e,n){this._depth[t][e]=n},$l.prototype.isNull=function(){if(0===arguments.length){for(var t=0;t<2;t++)for(var e=0;e<3;e++)if(this._depth[t][e]!==$l.NULL_VALUE)return!1;return!0}if(1===arguments.length){var n=arguments[0];return this._depth[n][1]===$l.NULL_VALUE}if(2===arguments.length){var r=arguments[0],i=arguments[1];return this._depth[r][i]===$l.NULL_VALUE}},$l.prototype.normalize=function(){for(var t=0;t<2;t++)if(!this.isNull(t)){var e=this._depth[t][1];this._depth[t][2]<e&&(e=this._depth[t][2]),e<0&&(e=0);for(var n=1;n<3;n++){var r=0;this._depth[t][n]>e&&(r=1),this._depth[t][n]=r}}},$l.prototype.getDelta=function(t){return this._depth[t][Nh.RIGHT]-this._depth[t][Nh.LEFT]},$l.prototype.getLocation=function(t,e){return this._depth[t][e]<=0?Su.EXTERIOR:Su.INTERIOR},$l.prototype.toString=function(){return"A: "+this._depth[0][1]+","+this._depth[0][2]+" B: "+this._depth[1][1]+","+this._depth[1][2]},$l.prototype.add=function(){if(1===arguments.length)for(var t=arguments[0],e=0;e<2;e++)for(var n=1;n<3;n++){var r=t.getLocation(e,n);r!==Su.EXTERIOR&&r!==Su.INTERIOR||(this.isNull(e,n)?this._depth[e][n]=$l.depthAtLocation(r):this._depth[e][n]+=$l.depthAtLocation(r))}else if(3===arguments.length){var i=arguments[0],o=arguments[1];arguments[2]===Su.INTERIOR&&this._depth[i][o]++}},$l.prototype.interfaces_=function(){return[]},$l.prototype.getClass=function(){return $l},$l.depthAtLocation=function(t){return t===Su.EXTERIOR?0:t===Su.INTERIOR?1:$l.NULL_VALUE},tp.NULL_VALUE.get=function(){return-1},Object.defineProperties($l,tp);var ep=function(t){function e(){if(t.call(this),this.pts=null,this._env=null,this.eiList=new Zl(this),this._name=null,this._mce=null,this._isIsolated=!0,this._depth=new $l,this._depthDelta=0,1===arguments.length){var n=arguments[0];e.call(this,n,null)}else if(2===arguments.length){var r=arguments[0],i=arguments[1];this.pts=r,this._label=i}}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.getDepth=function(){return this._depth},e.prototype.getCollapsedEdge=function(){var t=new Array(2).fill(null);t[0]=this.pts[0],t[1]=this.pts[1];return new e(t,Rh.toLineLabel(this._label))},e.prototype.isIsolated=function(){return this._isIsolated},e.prototype.getCoordinates=function(){return this.pts},e.prototype.setIsolated=function(t){this._isIsolated=t},e.prototype.setName=function(t){this._name=t},e.prototype.equals=function(t){if(!(t instanceof e))return!1;var n=t;if(this.pts.length!==n.pts.length)return!1;for(var r=!0,i=!0,o=this.pts.length,s=0;s<this.pts.length;s++)if(this.pts[s].equals2D(n.pts[s])||(r=!1),this.pts[s].equals2D(n.pts[--o])||(i=!1),!r&&!i)return!1;return!0},e.prototype.getCoordinate=function(){if(0===arguments.length)return this.pts.length>0?this.pts[0]:null;if(1===arguments.length){var t=arguments[0];return this.pts[t]}},e.prototype.print=function(t){t.print("edge "+this._name+": "),t.print("LINESTRING (");for(var e=0;e<this.pts.length;e++)e>0&&t.print(","),t.print(this.pts[e].x+" "+this.pts[e].y);t.print(")  "+this._label+" "+this._depthDelta)},e.prototype.computeIM=function(t){e.updateIM(this._label,t)},e.prototype.isCollapsed=function(){return!!this._label.isArea()&&(3===this.pts.length&&!!this.pts[0].equals(this.pts[2]))},e.prototype.isClosed=function(){return this.pts[0].equals(this.pts[this.pts.length-1])},e.prototype.getMaximumSegmentIndex=function(){return this.pts.length-1},e.prototype.getDepthDelta=function(){return this._depthDelta},e.prototype.getNumPoints=function(){return this.pts.length},e.prototype.printReverse=function(t){t.print("edge "+this._name+": ");for(var e=this.pts.length-1;e>=0;e--)t.print(this.pts[e]+" ");t.println("")},e.prototype.getMonotoneChainEdge=function(){return null===this._mce&&(this._mce=new Ql(this)),this._mce},e.prototype.getEnvelope=function(){if(null===this._env){this._env=new Yu;for(var t=0;t<this.pts.length;t++)this._env.expandToInclude(this.pts[t])}return this._env},e.prototype.addIntersection=function(t,e,n,r){var i=new bu(t.getIntersection(r)),o=e,s=t.getEdgeDistance(n,r),a=o+1;if(a<this.pts.length){var u=this.pts[a];i.equals2D(u)&&(o=a,s=0)}this.eiList.add(i,o,s)},e.prototype.toString=function(){var t=new Ru;t.append("edge "+this._name+": "),t.append("LINESTRING (");for(var e=0;e<this.pts.length;e++)e>0&&t.append(","),t.append(this.pts[e].x+" "+this.pts[e].y);return t.append(")  "+this._label+" "+this._depthDelta),t.toString()},e.prototype.isPointwiseEqual=function(t){if(this.pts.length!==t.pts.length)return!1;for(var e=0;e<this.pts.length;e++)if(!this.pts[e].equals2D(t.pts[e]))return!1;return!0},e.prototype.setDepthDelta=function(t){this._depthDelta=t},e.prototype.getEdgeIntersectionList=function(){return this.eiList},e.prototype.addIntersections=function(t,e,n){for(var r=0;r<t.getIntersectionNum();r++)this.addIntersection(t,e,n,r)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.updateIM=function(){if(2!==arguments.length)return t.prototype.updateIM.apply(this,arguments);var e=arguments[0],n=arguments[1];n.setAtLeastIfValid(e.getLocation(0,Nh.ON),e.getLocation(1,Nh.ON),1),e.isArea()&&(n.setAtLeastIfValid(e.getLocation(0,Nh.LEFT),e.getLocation(1,Nh.LEFT),2),n.setAtLeastIfValid(e.getLocation(0,Nh.RIGHT),e.getLocation(1,Nh.RIGHT),2))},e}(Fh),np=function(t){this._workingPrecisionModel=null,this._workingNoder=null,this._geomFact=null,this._graph=null,this._edgeList=new Vl,this._bufParams=t||null};np.prototype.setWorkingPrecisionModel=function(t){this._workingPrecisionModel=t},np.prototype.insertUniqueEdge=function(t){var e=this._edgeList.findEqualEdge(t);if(null!==e){var n=e.getLabel(),r=t.getLabel();e.isPointwiseEqual(t)||(r=new Rh(t.getLabel())).flip(),n.merge(r);var i=np.depthDelta(r),o=e.getDepthDelta()+i;e.setDepthDelta(o)}else this._edgeList.add(t),t.setDepthDelta(np.depthDelta(t.getLabel()))},np.prototype.buildSubgraphs=function(t,e){for(var n=new bc,r=t.iterator();r.hasNext();){var i=r.next(),o=i.getRightmostCoordinate(),s=new Al(n).getDepth(o);i.computeDepth(s),i.findResultEdges(),n.add(i),e.add(i.getDirectedEdges(),i.getNodes())}},np.prototype.createSubgraphs=function(t){for(var e=new bc,n=t.getNodes().iterator();n.hasNext();){var r=n.next();if(!r.isVisited()){var i=new Ph;i.create(r),e.add(i)}}return $h.sort(e,$h.reverseOrder()),e},np.prototype.createEmptyResultGeometry=function(){return this._geomFact.createPolygon()},np.prototype.getNoder=function(t){if(null!==this._workingNoder)return this._workingNoder;var e=new El,n=new rc;return n.setPrecisionModel(t),e.setSegmentIntersector(new Wl(n)),e},np.prototype.buffer=function(t,e){var n=this._workingPrecisionModel;null===n&&(n=t.getPrecisionModel()),this._geomFact=t.getFactory();var r=new Tl(n,this._bufParams),i=new Gl(t,e,r).getCurves();if(i.size()<=0)return this.createEmptyResultGeometry();this.computeNodedEdges(i,n),this._graph=new Uh(new Ul),this._graph.addEdges(this._edgeList.getEdges());var o=this.createSubgraphs(this._graph),s=new Yh(this._geomFact);this.buildSubgraphs(o,s);var a=s.getPolygons();if(a.size()<=0)return this.createEmptyResultGeometry();return this._geomFact.buildGeometry(a)},np.prototype.computeNodedEdges=function(t,e){var n=this.getNoder(e);n.computeNodes(t);for(var r=n.getNodedSubstrings().iterator();r.hasNext();){var i=r.next(),o=i.getCoordinates();if(2!==o.length||!o[0].equals2D(o[1])){var s=i.getData(),a=new ep(i.getCoordinates(),new Rh(s));this.insertUniqueEdge(a)}}},np.prototype.setNoder=function(t){this._workingNoder=t},np.prototype.interfaces_=function(){return[]},np.prototype.getClass=function(){return np},np.depthDelta=function(t){var e=t.getLocation(0,Nh.LEFT),n=t.getLocation(0,Nh.RIGHT);return e===Su.INTERIOR&&n===Su.EXTERIOR?1:e===Su.EXTERIOR&&n===Su.INTERIOR?-1:0},np.convertSegStrings=function(t){for(var e=new _h,n=new bc;t.hasNext();){var r=t.next(),i=e.createLineString(r.getCoordinates());n.add(i)}return e.buildGeometry(n)};var rp=function(){if(this._noder=null,this._scaleFactor=null,this._offsetX=null,this._offsetY=null,this._isScaled=!1,2===arguments.length){var t=arguments[0],e=arguments[1];this._noder=t,this._scaleFactor=e,this._offsetX=0,this._offsetY=0,this._isScaled=!this.isIntegerPrecision()}else if(4===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2],o=arguments[3];this._noder=n,this._scaleFactor=r,this._offsetX=i,this._offsetY=o,this._isScaled=!this.isIntegerPrecision()}};rp.prototype.rescale=function(){if(Lu(arguments[0],vc))for(var t=arguments[0].iterator();t.hasNext();){var e=t.next();this.rescale(e.getCoordinates())}else if(arguments[0]instanceof Array){for(var n=arguments[0],r=0;r<n.length;r++)n[r].x=n[r].x/this._scaleFactor+this._offsetX,n[r].y=n[r].y/this._scaleFactor+this._offsetY;2===n.length&&n[0].equals2D(n[1])&&Xu.out.println(n)}},rp.prototype.scale=function(){if(Lu(arguments[0],vc)){for(var t=arguments[0],e=new bc,n=t.iterator();n.hasNext();){var r=n.next();e.add(new fl(this.scale(r.getCoordinates()),r.getData()))}return e}if(arguments[0]instanceof Array){for(var i=arguments[0],o=new Array(i.length).fill(null),s=0;s<i.length;s++)o[s]=new bu(Math.round((i[s].x-this._offsetX)*this._scaleFactor),Math.round((i[s].y-this._offsetY)*this._scaleFactor),i[s].z);return Cc.removeRepeatedPoints(o)}},rp.prototype.isIntegerPrecision=function(){return 1===this._scaleFactor},rp.prototype.getNodedSubstrings=function(){var t=this._noder.getNodedSubstrings();return this._isScaled&&this.rescale(t),t},rp.prototype.computeNodes=function(t){var e=t;this._isScaled&&(e=this.scale(t)),this._noder.computeNodes(e)},rp.prototype.interfaces_=function(){return[vl]},rp.prototype.getClass=function(){return rp};var ip=function(){this._li=new rc,this._segStrings=null;var t=arguments[0];this._segStrings=t},op={fact:{configurable:!0}};ip.prototype.checkEndPtVertexIntersections=function(){if(0===arguments.length)for(var t=this._segStrings.iterator();t.hasNext();){var e=t.next().getCoordinates();this.checkEndPtVertexIntersections(e[0],this._segStrings),this.checkEndPtVertexIntersections(e[e.length-1],this._segStrings)}else if(2===arguments.length)for(var n=arguments[0],r=arguments[1].iterator();r.hasNext();)for(var i=r.next().getCoordinates(),o=1;o<i.length-1;o++)if(i[o].equals(n))throw new Qu("found endpt/interior pt intersection at index "+o+" :pt "+n)},ip.prototype.checkInteriorIntersections=function(){if(0===arguments.length)for(var t=this._segStrings.iterator();t.hasNext();)for(var e=t.next(),n=this._segStrings.iterator();n.hasNext();){var r=n.next();this.checkInteriorIntersections(e,r)}else if(2===arguments.length)for(var i=arguments[0],o=arguments[1],s=i.getCoordinates(),a=o.getCoordinates(),u=0;u<s.length-1;u++)for(var c=0;c<a.length-1;c++)this.checkInteriorIntersections(i,u,o,c);else if(4===arguments.length){var h=arguments[0],l=arguments[1],p=arguments[2],f=arguments[3];if(h===p&&l===f)return null;var g=h.getCoordinates()[l],d=h.getCoordinates()[l+1],y=p.getCoordinates()[f],_=p.getCoordinates()[f+1];if(this._li.computeIntersection(g,d,y,_),this._li.hasIntersection()&&(this._li.isProper()||this.hasInteriorIntersection(this._li,g,d)||this.hasInteriorIntersection(this._li,y,_)))throw new Qu("found non-noded intersection at "+g+"-"+d+" and "+y+"-"+_)}},ip.prototype.checkValid=function(){this.checkEndPtVertexIntersections(),this.checkInteriorIntersections(),this.checkCollapses()},ip.prototype.checkCollapses=function(){if(0===arguments.length)for(var t=this._segStrings.iterator();t.hasNext();){var e=t.next();this.checkCollapses(e)}else if(1===arguments.length)for(var n=arguments[0].getCoordinates(),r=0;r<n.length-2;r++)this.checkCollapse(n[r],n[r+1],n[r+2])},ip.prototype.hasInteriorIntersection=function(t,e,n){for(var r=0;r<t.getIntersectionNum();r++){var i=t.getIntersection(r);if(!i.equals(e)&&!i.equals(n))return!0}return!1},ip.prototype.checkCollapse=function(t,e,n){if(t.equals(n))throw new Qu("found non-noded collapse at "+ip.fact.createLineString([t,e,n]))},ip.prototype.interfaces_=function(){return[]},ip.prototype.getClass=function(){return ip},op.fact.get=function(){return new _h},Object.defineProperties(ip,op);var sp=function(){this._li=null,this._pt=null,this._originalPt=null,this._ptScaled=null,this._p0Scaled=null,this._p1Scaled=null,this._scaleFactor=null,this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,this._corner=new Array(4).fill(null),this._safeEnv=null;var t=arguments[0],e=arguments[1],n=arguments[2];if(this._originalPt=t,this._pt=t,this._scaleFactor=e,this._li=n,e<=0)throw new _u("Scale factor must be non-zero");1!==e&&(this._pt=new bu(this.scale(t.x),this.scale(t.y)),this._p0Scaled=new bu,this._p1Scaled=new bu),this.initCorners(this._pt)},ap={SAFE_ENV_EXPANSION_FACTOR:{configurable:!0}};sp.prototype.intersectsScaled=function(t,e){var n=Math.min(t.x,e.x),r=Math.max(t.x,e.x),i=Math.min(t.y,e.y),o=Math.max(t.y,e.y),s=this._maxx<n||this._minx>r||this._maxy<i||this._miny>o;if(s)return!1;var a=this.intersectsToleranceSquare(t,e);return tc.isTrue(!(s&&a),"Found bad envelope test"),a},sp.prototype.initCorners=function(t){this._minx=t.x-.5,this._maxx=t.x+.5,this._miny=t.y-.5,this._maxy=t.y+.5,this._corner[0]=new bu(this._maxx,this._maxy),this._corner[1]=new bu(this._minx,this._maxy),this._corner[2]=new bu(this._minx,this._miny),this._corner[3]=new bu(this._maxx,this._miny)},sp.prototype.intersects=function(t,e){return 1===this._scaleFactor?this.intersectsScaled(t,e):(this.copyScaled(t,this._p0Scaled),this.copyScaled(e,this._p1Scaled),this.intersectsScaled(this._p0Scaled,this._p1Scaled))},sp.prototype.scale=function(t){return Math.round(t*this._scaleFactor)},sp.prototype.getCoordinate=function(){return this._originalPt},sp.prototype.copyScaled=function(t,e){e.x=this.scale(t.x),e.y=this.scale(t.y)},sp.prototype.getSafeEnvelope=function(){if(null===this._safeEnv){var t=sp.SAFE_ENV_EXPANSION_FACTOR/this._scaleFactor;this._safeEnv=new Yu(this._originalPt.x-t,this._originalPt.x+t,this._originalPt.y-t,this._originalPt.y+t)}return this._safeEnv},sp.prototype.intersectsPixelClosure=function(t,e){return this._li.computeIntersection(t,e,this._corner[0],this._corner[1]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[1],this._corner[2]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[2],this._corner[3]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[3],this._corner[0]),!!this._li.hasIntersection())))},sp.prototype.intersectsToleranceSquare=function(t,e){var n=!1,r=!1;return this._li.computeIntersection(t,e,this._corner[0],this._corner[1]),!!this._li.isProper()||(this._li.computeIntersection(t,e,this._corner[1],this._corner[2]),!!this._li.isProper()||(this._li.hasIntersection()&&(n=!0),this._li.computeIntersection(t,e,this._corner[2],this._corner[3]),!!this._li.isProper()||(this._li.hasIntersection()&&(r=!0),this._li.computeIntersection(t,e,this._corner[3],this._corner[0]),!!this._li.isProper()||(!(!n||!r)||(!!t.equals(this._pt)||!!e.equals(this._pt))))))},sp.prototype.addSnappedNode=function(t,e){var n=t.getCoordinate(e),r=t.getCoordinate(e+1);return!!this.intersects(n,r)&&(t.addIntersection(this.getCoordinate(),e),!0)},sp.prototype.interfaces_=function(){return[]},sp.prototype.getClass=function(){return sp},ap.SAFE_ENV_EXPANSION_FACTOR.get=function(){return.75},Object.defineProperties(sp,ap);var up=function(){this.tempEnv1=new Yu,this.selectedSegment=new gl};up.prototype.select=function(){if(1===arguments.length);else if(2===arguments.length){var t=arguments[0],e=arguments[1];t.getLineSegment(e,this.selectedSegment),this.select(this.selectedSegment)}},up.prototype.interfaces_=function(){return[]},up.prototype.getClass=function(){return up};var cp=function(){this._index=null;var t=arguments[0];this._index=t},hp={HotPixelSnapAction:{configurable:!0}};cp.prototype.snap=function(){if(1===arguments.length){var t=arguments[0];return this.snap(t,null,-1)}if(3===arguments.length){var e=arguments[0],n=arguments[1],r=arguments[2],i=e.getSafeEnvelope(),o=new lp(e,n,r);return this._index.query(i,{interfaces_:function(){return[Jh]},visitItem:function(t){t.select(i,o)}}),o.isNodeAdded()}},cp.prototype.interfaces_=function(){return[]},cp.prototype.getClass=function(){return cp},hp.HotPixelSnapAction.get=function(){return lp},Object.defineProperties(cp,hp);var lp=function(t){function e(){t.call(this),this._hotPixel=null,this._parentEdge=null,this._hotPixelVertexIndex=null,this._isNodeAdded=!1;var e=arguments[0],n=arguments[1],r=arguments[2];this._hotPixel=e,this._parentEdge=n,this._hotPixelVertexIndex=r}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.isNodeAdded=function(){return this._isNodeAdded},e.prototype.select=function(){if(2!==arguments.length)return t.prototype.select.apply(this,arguments);var e=arguments[0],n=arguments[1],r=e.getContext();if(null!==this._parentEdge&&r===this._parentEdge&&n===this._hotPixelVertexIndex)return null;this._isNodeAdded=this._hotPixel.addSnappedNode(r,n)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(up),pp=function(){this._li=null,this._interiorIntersections=null;var t=arguments[0];this._li=t,this._interiorIntersections=new bc};pp.prototype.processIntersections=function(t,e,n,r){if(t===n&&e===r)return null;var i=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[r],a=n.getCoordinates()[r+1];if(this._li.computeIntersection(i,o,s,a),this._li.hasIntersection()&&this._li.isInteriorIntersection()){for(var u=0;u<this._li.getIntersectionNum();u++)this._interiorIntersections.add(this._li.getIntersection(u));t.addIntersections(this._li,e,0),n.addIntersections(this._li,r,1)}},pp.prototype.isDone=function(){return!1},pp.prototype.getInteriorIntersections=function(){return this._interiorIntersections},pp.prototype.interfaces_=function(){return[Hl]},pp.prototype.getClass=function(){return pp};var fp=function(){this._pm=null,this._li=null,this._scaleFactor=null,this._noder=null,this._pointSnapper=null,this._nodedSegStrings=null;var t=arguments[0];this._pm=t,this._li=new rc,this._li.setPrecisionModel(t),this._scaleFactor=t.getScale()};fp.prototype.checkCorrectness=function(t){var e=fl.getNodedSubstrings(t),n=new ip(e);try{n.checkValid()}catch(t){if(!(t instanceof zu))throw t;t.printStackTrace()}},fp.prototype.getNodedSubstrings=function(){return fl.getNodedSubstrings(this._nodedSegStrings)},fp.prototype.snapRound=function(t,e){var n=this.findInteriorIntersections(t,e);this.computeIntersectionSnaps(n),this.computeVertexSnaps(t)},fp.prototype.findInteriorIntersections=function(t,e){var n=new pp(e);return this._noder.setSegmentIntersector(n),this._noder.computeNodes(t),n.getInteriorIntersections()},fp.prototype.computeVertexSnaps=function(){if(Lu(arguments[0],vc))for(var t=arguments[0].iterator();t.hasNext();){var e=t.next();this.computeVertexSnaps(e)}else if(arguments[0]instanceof fl)for(var n=arguments[0],r=n.getCoordinates(),i=0;i<r.length;i++){var o=new sp(r[i],this._scaleFactor,this._li);this._pointSnapper.snap(o,n,i)&&n.addIntersection(r[i],i)}},fp.prototype.computeNodes=function(t){this._nodedSegStrings=t,this._noder=new El,this._pointSnapper=new cp(this._noder.getIndex()),this.snapRound(t,this._li)},fp.prototype.computeIntersectionSnaps=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),r=new sp(n,this._scaleFactor,this._li);this._pointSnapper.snap(r)}},fp.prototype.interfaces_=function(){return[vl]},fp.prototype.getClass=function(){return fp};var gp=function(){if(this._argGeom=null,this._distance=null,this._bufParams=new bl,this._resultGeometry=null,this._saveException=null,1===arguments.length){var t=arguments[0];this._argGeom=t}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this._argGeom=e,this._bufParams=n}},dp={CAP_ROUND:{configurable:!0},CAP_BUTT:{configurable:!0},CAP_FLAT:{configurable:!0},CAP_SQUARE:{configurable:!0},MAX_PRECISION_DIGITS:{configurable:!0}};gp.prototype.bufferFixedPrecision=function(t){var e=new rp(new fp(new fh(1)),t.getScale()),n=new np(this._bufParams);n.setWorkingPrecisionModel(t),n.setNoder(e),this._resultGeometry=n.buffer(this._argGeom,this._distance)},gp.prototype.bufferReducedPrecision=function(){var t=this;if(0===arguments.length){for(var e=gp.MAX_PRECISION_DIGITS;e>=0;e--){try{t.bufferReducedPrecision(e)}catch(e){if(!(e instanceof Mh))throw e;t._saveException=e}if(null!==t._resultGeometry)return null}throw this._saveException}if(1===arguments.length){var n=arguments[0],r=gp.precisionScaleFactor(this._argGeom,this._distance,n),i=new fh(r);this.bufferFixedPrecision(i)}},gp.prototype.computeGeometry=function(){if(this.bufferOriginalPrecision(),null!==this._resultGeometry)return null;var t=this._argGeom.getFactory().getPrecisionModel();t.getType()===fh.FIXED?this.bufferFixedPrecision(t):this.bufferReducedPrecision()},gp.prototype.setQuadrantSegments=function(t){this._bufParams.setQuadrantSegments(t)},gp.prototype.bufferOriginalPrecision=function(){try{var t=new np(this._bufParams);this._resultGeometry=t.buffer(this._argGeom,this._distance)}catch(t){if(!(t instanceof Qu))throw t;this._saveException=t}},gp.prototype.getResultGeometry=function(t){return this._distance=t,this.computeGeometry(),this._resultGeometry},gp.prototype.setEndCapStyle=function(t){this._bufParams.setEndCapStyle(t)},gp.prototype.interfaces_=function(){return[]},gp.prototype.getClass=function(){return gp},gp.bufferOp=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return new gp(t).getResultGeometry(e)}if(3===arguments.length){if(Number.isInteger(arguments[2])&&arguments[0]instanceof cc&&"number"==typeof arguments[1]){var n=arguments[0],r=arguments[1],i=arguments[2],o=new gp(n);o.setQuadrantSegments(i);return o.getResultGeometry(r)}if(arguments[2]instanceof bl&&arguments[0]instanceof cc&&"number"==typeof arguments[1]){var s=arguments[0],a=arguments[1],u=arguments[2];return new gp(s,u).getResultGeometry(a)}}else if(4===arguments.length){var c=arguments[0],h=arguments[1],l=arguments[2],p=arguments[3],f=new gp(c);f.setQuadrantSegments(l),f.setEndCapStyle(p);return f.getResultGeometry(h)}},gp.precisionScaleFactor=function(t,e,n){var r=t.getEnvelopeInternal(),i=Pu.max(Math.abs(r.getMaxX()),Math.abs(r.getMaxY()),Math.abs(r.getMinX()),Math.abs(r.getMinY()))+2*(e>0?e:0),o=n-Math.trunc(Math.log(i)/Math.log(10)+1);return Math.pow(10,o)},dp.CAP_ROUND.get=function(){return bl.CAP_ROUND},dp.CAP_BUTT.get=function(){return bl.CAP_FLAT},dp.CAP_FLAT.get=function(){return bl.CAP_FLAT},dp.CAP_SQUARE.get=function(){return bl.CAP_SQUARE},dp.MAX_PRECISION_DIGITS.get=function(){return 12},Object.defineProperties(gp,dp);var yp=function(){this._pt=[new bu,new bu],this._distance=mu.NaN,this._isNull=!0};yp.prototype.getCoordinates=function(){return this._pt},yp.prototype.getCoordinate=function(t){return this._pt[t]},yp.prototype.setMinimum=function(){if(1===arguments.length){var t=arguments[0];this.setMinimum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var r=e.distance(n);r<this._distance&&this.initialize(e,n,r)}},yp.prototype.initialize=function(){if(0===arguments.length)this._isNull=!0;else if(2===arguments.length){var t=arguments[0],e=arguments[1];this._pt[0].setCoordinate(t),this._pt[1].setCoordinate(e),this._distance=t.distance(e),this._isNull=!1}else if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2];this._pt[0].setCoordinate(n),this._pt[1].setCoordinate(r),this._distance=i,this._isNull=!1}},yp.prototype.getDistance=function(){return this._distance},yp.prototype.setMaximum=function(){if(1===arguments.length){var t=arguments[0];this.setMaximum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var r=e.distance(n);r>this._distance&&this.initialize(e,n,r)}},yp.prototype.interfaces_=function(){return[]},yp.prototype.getClass=function(){return yp};var _p=function(){};_p.prototype.interfaces_=function(){return[]},_p.prototype.getClass=function(){return _p},_p.computeDistance=function(){if(arguments[2]instanceof yp&&arguments[0]instanceof Jc&&arguments[1]instanceof bu)for(var t=arguments[0],e=arguments[1],n=arguments[2],r=t.getCoordinates(),i=new gl,o=0;o<r.length-1;o++){i.setCoordinates(r[o],r[o+1]);var s=i.closestPoint(e);n.setMinimum(s,e)}else if(arguments[2]instanceof yp&&arguments[0]instanceof $c&&arguments[1]instanceof bu){var a=arguments[0],u=arguments[1],c=arguments[2];_p.computeDistance(a.getExteriorRing(),u,c);for(var h=0;h<a.getNumInteriorRing();h++)_p.computeDistance(a.getInteriorRingN(h),u,c)}else if(arguments[2]instanceof yp&&arguments[0]instanceof cc&&arguments[1]instanceof bu){var l=arguments[0],p=arguments[1],f=arguments[2];if(l instanceof Jc)_p.computeDistance(l,p,f);else if(l instanceof $c)_p.computeDistance(l,p,f);else if(l instanceof jc)for(var g=l,d=0;d<g.getNumGeometries();d++){var y=g.getGeometryN(d);_p.computeDistance(y,p,f)}else f.setMinimum(l.getCoordinate(),p)}else if(arguments[2]instanceof yp&&arguments[0]instanceof gl&&arguments[1]instanceof bu){var _=arguments[0],m=arguments[1],v=arguments[2],x=_.closestPoint(m);v.setMinimum(x,m)}};var mp=function(t){this._maxPtDist=new yp,this._inputGeom=t||null},vp={MaxPointDistanceFilter:{configurable:!0},MaxMidpointDistanceFilter:{configurable:!0}};mp.prototype.computeMaxMidpointDistance=function(t){var e=new Ep(this._inputGeom);t.apply(e),this._maxPtDist.setMaximum(e.getMaxPointDistance())},mp.prototype.computeMaxVertexDistance=function(t){var e=new xp(this._inputGeom);t.apply(e),this._maxPtDist.setMaximum(e.getMaxPointDistance())},mp.prototype.findDistance=function(t){return this.computeMaxVertexDistance(t),this.computeMaxMidpointDistance(t),this._maxPtDist.getDistance()},mp.prototype.getDistancePoints=function(){return this._maxPtDist},mp.prototype.interfaces_=function(){return[]},mp.prototype.getClass=function(){return mp},vp.MaxPointDistanceFilter.get=function(){return xp},vp.MaxMidpointDistanceFilter.get=function(){return Ep},Object.defineProperties(mp,vp);var xp=function(t){this._maxPtDist=new yp,this._minPtDist=new yp,this._geom=t||null};xp.prototype.filter=function(t){this._minPtDist.initialize(),_p.computeDistance(this._geom,t,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)},xp.prototype.getMaxPointDistance=function(){return this._maxPtDist},xp.prototype.interfaces_=function(){return[pc]},xp.prototype.getClass=function(){return xp};var Ep=function(t){this._maxPtDist=new yp,this._minPtDist=new yp,this._geom=t||null};Ep.prototype.filter=function(t,e){if(0===e)return null;var n=t.getCoordinate(e-1),r=t.getCoordinate(e),i=new bu((n.x+r.x)/2,(n.y+r.y)/2);this._minPtDist.initialize(),_p.computeDistance(this._geom,i,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)},Ep.prototype.isDone=function(){return!1},Ep.prototype.isGeometryChanged=function(){return!1},Ep.prototype.getMaxPointDistance=function(){return this._maxPtDist},Ep.prototype.interfaces_=function(){return[zc]},Ep.prototype.getClass=function(){return Ep};var wp=function(t){this._comps=t||null};wp.prototype.filter=function(t){t instanceof $c&&this._comps.add(t)},wp.prototype.interfaces_=function(){return[kc]},wp.prototype.getClass=function(){return wp},wp.getPolygons=function(){if(1===arguments.length){var t=arguments[0];return wp.getPolygons(t,new bc)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e instanceof $c?n.add(e):e instanceof jc&&e.apply(new wp(n)),n}};var bp=function(){if(this._lines=null,this._isForcedToLineString=!1,1===arguments.length){var t=arguments[0];this._lines=t}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this._lines=e,this._isForcedToLineString=n}};bp.prototype.filter=function(t){if(this._isForcedToLineString&&t instanceof eh){var e=t.getFactory().createLineString(t.getCoordinateSequence());return this._lines.add(e),null}t instanceof Jc&&this._lines.add(t)},bp.prototype.setForceToLineString=function(t){this._isForcedToLineString=t},bp.prototype.interfaces_=function(){return[uc]},bp.prototype.getClass=function(){return bp},bp.getGeometry=function(){if(1===arguments.length){var t=arguments[0];return t.getFactory().buildGeometry(bp.getLines(t))}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e.getFactory().buildGeometry(bp.getLines(e,n))}},bp.getLines=function(){if(1===arguments.length){var t=arguments[0];return bp.getLines(t,!1)}if(2===arguments.length){if(Lu(arguments[0],vc)&&Lu(arguments[1],vc)){for(var e=arguments[0],n=arguments[1],r=e.iterator();r.hasNext();){var i=r.next();bp.getLines(i,n)}return n}if(arguments[0]instanceof cc&&"boolean"==typeof arguments[1]){var o=arguments[0],s=arguments[1],a=new bc;return o.apply(new bp(a,s)),a}if(arguments[0]instanceof cc&&Lu(arguments[1],vc)){var u=arguments[0],c=arguments[1];return u instanceof Jc?c.add(u):u.apply(new bp(c)),c}}else if(3===arguments.length){if("boolean"==typeof arguments[2]&&Lu(arguments[0],vc)&&Lu(arguments[1],vc)){for(var h=arguments[0],l=arguments[1],p=arguments[2],f=h.iterator();f.hasNext();){var g=f.next();bp.getLines(g,l,p)}return l}if("boolean"==typeof arguments[2]&&arguments[0]instanceof cc&&Lu(arguments[1],vc)){var d=arguments[0],y=arguments[1],_=arguments[2];return d.apply(new bp(y,_)),y}}};var Ip=function(){if(this._boundaryRule=fc.OGC_SFS_BOUNDARY_RULE,this._isIn=null,this._numBoundaries=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];if(null===t)throw new _u("Rule must be non-null");this._boundaryRule=t}};Ip.prototype.locateInternal=function(){if(arguments[0]instanceof bu&&arguments[1]instanceof $c){var t=arguments[0],e=arguments[1];if(e.isEmpty())return Su.EXTERIOR;var n=e.getExteriorRing(),r=this.locateInPolygonRing(t,n);if(r===Su.EXTERIOR)return Su.EXTERIOR;if(r===Su.BOUNDARY)return Su.BOUNDARY;for(var i=0;i<e.getNumInteriorRing();i++){var o=e.getInteriorRingN(i),s=this.locateInPolygonRing(t,o);if(s===Su.INTERIOR)return Su.EXTERIOR;if(s===Su.BOUNDARY)return Su.BOUNDARY}return Su.INTERIOR}if(arguments[0]instanceof bu&&arguments[1]instanceof Jc){var a=arguments[0],u=arguments[1];if(!u.getEnvelopeInternal().intersects(a))return Su.EXTERIOR;var c=u.getCoordinates();return u.isClosed()||!a.equals(c[0])&&!a.equals(c[c.length-1])?sc.isOnLine(a,c)?Su.INTERIOR:Su.EXTERIOR:Su.BOUNDARY}if(arguments[0]instanceof bu&&arguments[1]instanceof Kc){var h=arguments[0];return arguments[1].getCoordinate().equals2D(h)?Su.INTERIOR:Su.EXTERIOR}},Ip.prototype.locateInPolygonRing=function(t,e){return e.getEnvelopeInternal().intersects(t)?sc.locatePointInRing(t,e.getCoordinates()):Su.EXTERIOR},Ip.prototype.intersects=function(t,e){return this.locate(t,e)!==Su.EXTERIOR},Ip.prototype.updateLocationInfo=function(t){t===Su.INTERIOR&&(this._isIn=!0),t===Su.BOUNDARY&&this._numBoundaries++},Ip.prototype.computeLocation=function(t,e){if(e instanceof Kc&&this.updateLocationInfo(this.locateInternal(t,e)),e instanceof Jc)this.updateLocationInfo(this.locateInternal(t,e));else if(e instanceof $c)this.updateLocationInfo(this.locateInternal(t,e));else if(e instanceof Xc)for(var n=e,r=0;r<n.getNumGeometries();r++){var i=n.getGeometryN(r);this.updateLocationInfo(this.locateInternal(t,i))}else if(e instanceof nh)for(var o=e,s=0;s<o.getNumGeometries();s++){var a=o.getGeometryN(s);this.updateLocationInfo(this.locateInternal(t,a))}else if(e instanceof jc)for(var u=new kl(e);u.hasNext();){var c=u.next();c!==e&&this.computeLocation(t,c)}},Ip.prototype.locate=function(t,e){return e.isEmpty()?Su.EXTERIOR:e instanceof Jc?this.locateInternal(t,e):e instanceof $c?this.locateInternal(t,e):(this._isIn=!1,this._numBoundaries=0,this.computeLocation(t,e),this._boundaryRule.isInBoundary(this._numBoundaries)?Su.BOUNDARY:this._numBoundaries>0||this._isIn?Su.INTERIOR:Su.EXTERIOR)},Ip.prototype.interfaces_=function(){return[]},Ip.prototype.getClass=function(){return Ip};var Np=function t(){if(this._component=null,this._segIndex=null,this._pt=null,2===arguments.length){var e=arguments[0],n=arguments[1];t.call(this,e,t.INSIDE_AREA,n)}else if(3===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2];this._component=r,this._segIndex=i,this._pt=o}},Cp={INSIDE_AREA:{configurable:!0}};Np.prototype.isInsideArea=function(){return this._segIndex===Np.INSIDE_AREA},Np.prototype.getCoordinate=function(){return this._pt},Np.prototype.getGeometryComponent=function(){return this._component},Np.prototype.getSegmentIndex=function(){return this._segIndex},Np.prototype.interfaces_=function(){return[]},Np.prototype.getClass=function(){return Np},Cp.INSIDE_AREA.get=function(){return-1},Object.defineProperties(Np,Cp);var Sp=function(t){this._pts=t||null};Sp.prototype.filter=function(t){t instanceof Kc&&this._pts.add(t)},Sp.prototype.interfaces_=function(){return[kc]},Sp.prototype.getClass=function(){return Sp},Sp.getPoints=function(){if(1===arguments.length){var t=arguments[0];return t instanceof Kc?$h.singletonList(t):Sp.getPoints(t,new bc)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e instanceof Kc?n.add(e):e instanceof jc&&e.apply(new Sp(n)),n}};var Mp=function(){this._locations=null;var t=arguments[0];this._locations=t};Mp.prototype.filter=function(t){(t instanceof Kc||t instanceof Jc||t instanceof $c)&&this._locations.add(new Np(t,0,t.getCoordinate()))},Mp.prototype.interfaces_=function(){return[kc]},Mp.prototype.getClass=function(){return Mp},Mp.getLocations=function(t){var e=new bc;return t.apply(new Mp(e)),e};var Lp=function(){if(this._geom=null,this._terminateDistance=0,this._ptLocator=new Ip,this._minDistanceLocation=null,this._minDistance=mu.MAX_VALUE,2===arguments.length){var t=arguments[0],e=arguments[1];this._geom=[t,e],this._terminateDistance=0}else if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2];this._geom=new Array(2).fill(null),this._geom[0]=n,this._geom[1]=r,this._terminateDistance=i}};Lp.prototype.computeContainmentDistance=function(){if(0===arguments.length){var t=new Array(2).fill(null);if(this.computeContainmentDistance(0,t),this._minDistance<=this._terminateDistance)return null;this.computeContainmentDistance(1,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],r=1-e,i=wp.getPolygons(this._geom[e]);if(i.size()>0){var o=Mp.getLocations(this._geom[r]);if(this.computeContainmentDistance(o,i,n),this._minDistance<=this._terminateDistance)return this._minDistanceLocation[r]=n[0],this._minDistanceLocation[e]=n[1],null}}else if(3===arguments.length)if(arguments[2]instanceof Array&&Lu(arguments[0],wc)&&Lu(arguments[1],wc)){for(var s=arguments[0],a=arguments[1],u=arguments[2],c=0;c<s.size();c++)for(var h=s.get(c),l=0;l<a.size();l++)if(this.computeContainmentDistance(h,a.get(l),u),this._minDistance<=this._terminateDistance)return null}else if(arguments[2]instanceof Array&&arguments[0]instanceof Np&&arguments[1]instanceof $c){var p=arguments[0],f=arguments[1],g=arguments[2],d=p.getCoordinate();if(Su.EXTERIOR!==this._ptLocator.locate(d,f))return this._minDistance=0,g[0]=p,g[1]=new Np(f,d),null}},Lp.prototype.computeMinDistanceLinesPoints=function(t,e,n){for(var r=0;r<t.size();r++)for(var i=t.get(r),o=0;o<e.size();o++){var s=e.get(o);if(this.computeMinDistance(i,s,n),this._minDistance<=this._terminateDistance)return null}},Lp.prototype.computeFacetDistance=function(){var t=new Array(2).fill(null),e=bp.getLines(this._geom[0]),n=bp.getLines(this._geom[1]),r=Sp.getPoints(this._geom[0]),i=Sp.getPoints(this._geom[1]);return this.computeMinDistanceLines(e,n,t),this.updateMinDistance(t,!1),this._minDistance<=this._terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistanceLinesPoints(e,i,t),this.updateMinDistance(t,!1),this._minDistance<=this._terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistanceLinesPoints(n,r,t),this.updateMinDistance(t,!0),this._minDistance<=this._terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistancePoints(r,i,t),void this.updateMinDistance(t,!1))))},Lp.prototype.nearestLocations=function(){return this.computeMinDistance(),this._minDistanceLocation},Lp.prototype.updateMinDistance=function(t,e){if(null===t[0])return null;e?(this._minDistanceLocation[0]=t[1],this._minDistanceLocation[1]=t[0]):(this._minDistanceLocation[0]=t[0],this._minDistanceLocation[1]=t[1])},Lp.prototype.nearestPoints=function(){this.computeMinDistance();return[this._minDistanceLocation[0].getCoordinate(),this._minDistanceLocation[1].getCoordinate()]},Lp.prototype.computeMinDistance=function(){if(0===arguments.length){if(null!==this._minDistanceLocation)return null;if(this._minDistanceLocation=new Array(2).fill(null),this.computeContainmentDistance(),this._minDistance<=this._terminateDistance)return null;this.computeFacetDistance()}else if(3===arguments.length)if(arguments[2]instanceof Array&&arguments[0]instanceof Jc&&arguments[1]instanceof Kc){var t=arguments[0],e=arguments[1],n=arguments[2];if(t.getEnvelopeInternal().distance(e.getEnvelopeInternal())>this._minDistance)return null;for(var r=t.getCoordinates(),i=e.getCoordinate(),o=0;o<r.length-1;o++){var s=sc.distancePointLine(i,r[o],r[o+1]);if(s<this._minDistance){this._minDistance=s;var a=new gl(r[o],r[o+1]).closestPoint(i);n[0]=new Np(t,o,a),n[1]=new Np(e,0,i)}if(this._minDistance<=this._terminateDistance)return null}}else if(arguments[2]instanceof Array&&arguments[0]instanceof Jc&&arguments[1]instanceof Jc){var u=arguments[0],c=arguments[1],h=arguments[2];if(u.getEnvelopeInternal().distance(c.getEnvelopeInternal())>this._minDistance)return null;for(var l=u.getCoordinates(),p=c.getCoordinates(),f=0;f<l.length-1;f++)for(var g=0;g<p.length-1;g++){var d=sc.distanceLineLine(l[f],l[f+1],p[g],p[g+1]);if(d<this._minDistance){this._minDistance=d;var y=new gl(l[f],l[f+1]),_=new gl(p[g],p[g+1]),m=y.closestPoints(_);h[0]=new Np(u,f,m[0]),h[1]=new Np(c,g,m[1])}if(this._minDistance<=this._terminateDistance)return null}}},Lp.prototype.computeMinDistancePoints=function(t,e,n){for(var r=0;r<t.size();r++)for(var i=t.get(r),o=0;o<e.size();o++){var s=e.get(o),a=i.getCoordinate().distance(s.getCoordinate());if(a<this._minDistance&&(this._minDistance=a,n[0]=new Np(i,0,i.getCoordinate()),n[1]=new Np(s,0,s.getCoordinate())),this._minDistance<=this._terminateDistance)return null}},Lp.prototype.distance=function(){if(null===this._geom[0]||null===this._geom[1])throw new _u("null geometries are not supported");return this._geom[0].isEmpty()||this._geom[1].isEmpty()?0:(this.computeMinDistance(),this._minDistance)},Lp.prototype.computeMinDistanceLines=function(t,e,n){for(var r=0;r<t.size();r++)for(var i=t.get(r),o=0;o<e.size();o++){var s=e.get(o);if(this.computeMinDistance(i,s,n),this._minDistance<=this._terminateDistance)return null}},Lp.prototype.interfaces_=function(){return[]},Lp.prototype.getClass=function(){return Lp},Lp.distance=function(t,e){return new Lp(t,e).distance()},Lp.isWithinDistance=function(t,e,n){return new Lp(t,e,n).distance()<=n},Lp.nearestPoints=function(t,e){return new Lp(t,e).nearestPoints()};var Pp=function(){this._pt=[new bu,new bu],this._distance=mu.NaN,this._isNull=!0};Pp.prototype.getCoordinates=function(){return this._pt},Pp.prototype.getCoordinate=function(t){return this._pt[t]},Pp.prototype.setMinimum=function(){if(1===arguments.length){var t=arguments[0];this.setMinimum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var r=e.distance(n);r<this._distance&&this.initialize(e,n,r)}},Pp.prototype.initialize=function(){if(0===arguments.length)this._isNull=!0;else if(2===arguments.length){var t=arguments[0],e=arguments[1];this._pt[0].setCoordinate(t),this._pt[1].setCoordinate(e),this._distance=t.distance(e),this._isNull=!1}else if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2];this._pt[0].setCoordinate(n),this._pt[1].setCoordinate(r),this._distance=i,this._isNull=!1}},Pp.prototype.toString=function(){return Ku.toLineString(this._pt[0],this._pt[1])},Pp.prototype.getDistance=function(){return this._distance},Pp.prototype.setMaximum=function(){if(1===arguments.length){var t=arguments[0];this.setMaximum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var r=e.distance(n);r>this._distance&&this.initialize(e,n,r)}},Pp.prototype.interfaces_=function(){return[]},Pp.prototype.getClass=function(){return Pp};var Op=function(){};Op.prototype.interfaces_=function(){return[]},Op.prototype.getClass=function(){return Op},Op.computeDistance=function(){if(arguments[2]instanceof Pp&&arguments[0]instanceof Jc&&arguments[1]instanceof bu)for(var t=arguments[0],e=arguments[1],n=arguments[2],r=new gl,i=t.getCoordinates(),o=0;o<i.length-1;o++){r.setCoordinates(i[o],i[o+1]);var s=r.closestPoint(e);n.setMinimum(s,e)}else if(arguments[2]instanceof Pp&&arguments[0]instanceof $c&&arguments[1]instanceof bu){var a=arguments[0],u=arguments[1],c=arguments[2];Op.computeDistance(a.getExteriorRing(),u,c);for(var h=0;h<a.getNumInteriorRing();h++)Op.computeDistance(a.getInteriorRingN(h),u,c)}else if(arguments[2]instanceof Pp&&arguments[0]instanceof cc&&arguments[1]instanceof bu){var l=arguments[0],p=arguments[1],f=arguments[2];if(l instanceof Jc)Op.computeDistance(l,p,f);else if(l instanceof $c)Op.computeDistance(l,p,f);else if(l instanceof jc)for(var g=l,d=0;d<g.getNumGeometries();d++){var y=g.getGeometryN(d);Op.computeDistance(y,p,f)}else f.setMinimum(l.getCoordinate(),p)}else if(arguments[2]instanceof Pp&&arguments[0]instanceof gl&&arguments[1]instanceof bu){var _=arguments[0],m=arguments[1],v=arguments[2],x=_.closestPoint(m);v.setMinimum(x,m)}};var Rp=function(){this._g0=null,this._g1=null,this._ptDist=new Pp,this._densifyFrac=0;var t=arguments[0],e=arguments[1];this._g0=t,this._g1=e},Tp={MaxPointDistanceFilter:{configurable:!0},MaxDensifiedByFractionDistanceFilter:{configurable:!0}};Rp.prototype.getCoordinates=function(){return this._ptDist.getCoordinates()},Rp.prototype.setDensifyFraction=function(t){if(t>1||t<=0)throw new _u("Fraction is not in range (0.0 - 1.0]");this._densifyFrac=t},Rp.prototype.compute=function(t,e){this.computeOrientedDistance(t,e,this._ptDist),this.computeOrientedDistance(e,t,this._ptDist)},Rp.prototype.distance=function(){return this.compute(this._g0,this._g1),this._ptDist.getDistance()},Rp.prototype.computeOrientedDistance=function(t,e,n){var r=new Ap(e);if(t.apply(r),n.setMaximum(r.getMaxPointDistance()),this._densifyFrac>0){var i=new Dp(e,this._densifyFrac);t.apply(i),n.setMaximum(i.getMaxPointDistance())}},Rp.prototype.orientedDistance=function(){return this.computeOrientedDistance(this._g0,this._g1,this._ptDist),this._ptDist.getDistance()},Rp.prototype.interfaces_=function(){return[]},Rp.prototype.getClass=function(){return Rp},Rp.distance=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return new Rp(t,e).distance()}if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2],o=new Rp(n,r);return o.setDensifyFraction(i),o.distance()}},Tp.MaxPointDistanceFilter.get=function(){return Ap},Tp.MaxDensifiedByFractionDistanceFilter.get=function(){return Dp},Object.defineProperties(Rp,Tp);var Ap=function(){this._maxPtDist=new Pp,this._minPtDist=new Pp,this._euclideanDist=new Op,this._geom=null;var t=arguments[0];this._geom=t};Ap.prototype.filter=function(t){this._minPtDist.initialize(),Op.computeDistance(this._geom,t,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)},Ap.prototype.getMaxPointDistance=function(){return this._maxPtDist},Ap.prototype.interfaces_=function(){return[pc]},Ap.prototype.getClass=function(){return Ap};var Dp=function(){this._maxPtDist=new Pp,this._minPtDist=new Pp,this._geom=null,this._numSubSegs=0;var t=arguments[0],e=arguments[1];this._geom=t,this._numSubSegs=Math.trunc(Math.round(1/e))};Dp.prototype.filter=function(t,e){if(0===e)return null;for(var n=t.getCoordinate(e-1),r=t.getCoordinate(e),i=(r.x-n.x)/this._numSubSegs,o=(r.y-n.y)/this._numSubSegs,s=0;s<this._numSubSegs;s++){var a=n.x+s*i,u=n.y+s*o,c=new bu(a,u);this._minPtDist.initialize(),Op.computeDistance(this._geom,c,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)}},Dp.prototype.isDone=function(){return!1},Dp.prototype.isGeometryChanged=function(){return!1},Dp.prototype.getMaxPointDistance=function(){return this._maxPtDist},Dp.prototype.interfaces_=function(){return[zc]},Dp.prototype.getClass=function(){return Dp};var Fp=function(t,e,n){this._minValidDistance=null,this._maxValidDistance=null,this._minDistanceFound=null,this._maxDistanceFound=null,this._isValid=!0,this._errMsg=null,this._errorLocation=null,this._errorIndicator=null,this._input=t||null,this._bufDistance=e||null,this._result=n||null},qp={VERBOSE:{configurable:!0},MAX_DISTANCE_DIFF_FRAC:{configurable:!0}};Fp.prototype.checkMaximumDistance=function(t,e,n){var r=new Rp(e,t);if(r.setDensifyFraction(.25),this._maxDistanceFound=r.orientedDistance(),this._maxDistanceFound>n){this._isValid=!1;var i=r.getCoordinates();this._errorLocation=i[1],this._errorIndicator=t.getFactory().createLineString(i),this._errMsg="Distance between buffer curve and input is too large ("+this._maxDistanceFound+" at "+Ku.toLineString(i[0],i[1])+")"}},Fp.prototype.isValid=function(){var t=Math.abs(this._bufDistance),e=Fp.MAX_DISTANCE_DIFF_FRAC*t;return this._minValidDistance=t-e,this._maxValidDistance=t+e,!(!this._input.isEmpty()&&!this._result.isEmpty())||(this._bufDistance>0?this.checkPositiveValid():this.checkNegativeValid(),Fp.VERBOSE&&Xu.out.println("Min Dist= "+this._minDistanceFound+"  err= "+(1-this._minDistanceFound/this._bufDistance)+"  Max Dist= "+this._maxDistanceFound+"  err= "+(this._maxDistanceFound/this._bufDistance-1)),this._isValid)},Fp.prototype.checkNegativeValid=function(){if(!(this._input instanceof $c||this._input instanceof nh||this._input instanceof jc))return null;var t=this.getPolygonLines(this._input);if(this.checkMinimumDistance(t,this._result,this._minValidDistance),!this._isValid)return null;this.checkMaximumDistance(t,this._result,this._maxValidDistance)},Fp.prototype.getErrorIndicator=function(){return this._errorIndicator},Fp.prototype.checkMinimumDistance=function(t,e,n){var r=new Lp(t,e,n);if(this._minDistanceFound=r.distance(),this._minDistanceFound<n){this._isValid=!1;var i=r.nearestPoints();this._errorLocation=r.nearestPoints()[1],this._errorIndicator=t.getFactory().createLineString(i),this._errMsg="Distance between buffer curve and input is too small ("+this._minDistanceFound+" at "+Ku.toLineString(i[0],i[1])+" )"}},Fp.prototype.checkPositiveValid=function(){var t=this._result.getBoundary();if(this.checkMinimumDistance(this._input,t,this._minValidDistance),!this._isValid)return null;this.checkMaximumDistance(this._input,t,this._maxValidDistance)},Fp.prototype.getErrorLocation=function(){return this._errorLocation},Fp.prototype.getPolygonLines=function(t){for(var e=new bc,n=new bp(e),r=wp.getPolygons(t).iterator();r.hasNext();){r.next().apply(n)}return t.getFactory().buildGeometry(e)},Fp.prototype.getErrorMessage=function(){return this._errMsg},Fp.prototype.interfaces_=function(){return[]},Fp.prototype.getClass=function(){return Fp},qp.VERBOSE.get=function(){return!1},qp.MAX_DISTANCE_DIFF_FRAC.get=function(){return.012},Object.defineProperties(Fp,qp);var Gp=function(t,e,n){this._isValid=!0,this._errorMsg=null,this._errorLocation=null,this._errorIndicator=null,this._input=t||null,this._distance=e||null,this._result=n||null},Bp={VERBOSE:{configurable:!0},MAX_ENV_DIFF_FRAC:{configurable:!0}};Gp.prototype.isValid=function(){return this.checkPolygonal(),this._isValid?(this.checkExpectedEmpty(),this._isValid?(this.checkEnvelope(),this._isValid?(this.checkArea(),this._isValid?(this.checkDistance(),this._isValid):this._isValid):this._isValid):this._isValid):this._isValid},Gp.prototype.checkEnvelope=function(){if(this._distance<0)return null;var t=this._distance*Gp.MAX_ENV_DIFF_FRAC;0===t&&(t=.001);var e=new Yu(this._input.getEnvelopeInternal());e.expandBy(this._distance);var n=new Yu(this._result.getEnvelopeInternal());n.expandBy(t),n.contains(e)||(this._isValid=!1,this._errorMsg="Buffer envelope is incorrect",this._errorIndicator=this._input.getFactory().toGeometry(n)),this.report("Envelope")},Gp.prototype.checkDistance=function(){var t=new Fp(this._input,this._distance,this._result);t.isValid()||(this._isValid=!1,this._errorMsg=t.getErrorMessage(),this._errorLocation=t.getErrorLocation(),this._errorIndicator=t.getErrorIndicator()),this.report("Distance")},Gp.prototype.checkArea=function(){var t=this._input.getArea(),e=this._result.getArea();this._distance>0&&t>e&&(this._isValid=!1,this._errorMsg="Area of positive buffer is smaller than input",this._errorIndicator=this._result),this._distance<0&&t<e&&(this._isValid=!1,this._errorMsg="Area of negative buffer is larger than input",this._errorIndicator=this._result),this.report("Area")},Gp.prototype.checkPolygonal=function(){this._result instanceof $c||this._result instanceof nh||(this._isValid=!1),this._errorMsg="Result is not polygonal",this._errorIndicator=this._result,this.report("Polygonal")},Gp.prototype.getErrorIndicator=function(){return this._errorIndicator},Gp.prototype.getErrorLocation=function(){return this._errorLocation},Gp.prototype.checkExpectedEmpty=function(){return this._input.getDimension()>=2?null:this._distance>0?null:(this._result.isEmpty()||(this._isValid=!1,this._errorMsg="Result is non-empty",this._errorIndicator=this._result),void this.report("ExpectedEmpty"))},Gp.prototype.report=function(t){if(!Gp.VERBOSE)return null;Xu.out.println("Check "+t+": "+(this._isValid?"passed":"FAILED"))},Gp.prototype.getErrorMessage=function(){return this._errorMsg},Gp.prototype.interfaces_=function(){return[]},Gp.prototype.getClass=function(){return Gp},Gp.isValidMsg=function(t,e,n){var r=new Gp(t,e,n);return r.isValid()?null:r.getErrorMessage()},Gp.isValid=function(t,e,n){return!!new Gp(t,e,n).isValid()},Bp.VERBOSE.get=function(){return!1},Bp.MAX_ENV_DIFF_FRAC.get=function(){return.012},Object.defineProperties(Gp,Bp);var kp=function(){this._pts=null,this._data=null;var t=arguments[0],e=arguments[1];this._pts=t,this._data=e};kp.prototype.getCoordinates=function(){return this._pts},kp.prototype.size=function(){return this._pts.length},kp.prototype.getCoordinate=function(t){return this._pts[t]},kp.prototype.isClosed=function(){return this._pts[0].equals(this._pts[this._pts.length-1])},kp.prototype.getSegmentOctant=function(t){return t===this._pts.length-1?-1:hl.octant(this.getCoordinate(t),this.getCoordinate(t+1))},kp.prototype.setData=function(t){this._data=t},kp.prototype.getData=function(){return this._data},kp.prototype.toString=function(){return Ku.toLineString(new uh(this._pts))},kp.prototype.interfaces_=function(){return[ll]},kp.prototype.getClass=function(){return kp};var zp=function(){this._findAllIntersections=!1,this._isCheckEndSegmentsOnly=!1,this._li=null,this._interiorIntersection=null,this._intSegments=null,this._intersections=new bc,this._intersectionCount=0,this._keepIntersections=!0;var t=arguments[0];this._li=t,this._interiorIntersection=null};zp.prototype.getInteriorIntersection=function(){return this._interiorIntersection},zp.prototype.setCheckEndSegmentsOnly=function(t){this._isCheckEndSegmentsOnly=t},zp.prototype.getIntersectionSegments=function(){return this._intSegments},zp.prototype.count=function(){return this._intersectionCount},zp.prototype.getIntersections=function(){return this._intersections},zp.prototype.setFindAllIntersections=function(t){this._findAllIntersections=t},zp.prototype.setKeepIntersections=function(t){this._keepIntersections=t},zp.prototype.processIntersections=function(t,e,n,r){if(!this._findAllIntersections&&this.hasIntersection())return null;if(t===n&&e===r)return null;if(this._isCheckEndSegmentsOnly){if(!(this.isEndSegment(t,e)||this.isEndSegment(n,r)))return null}var i=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[r],a=n.getCoordinates()[r+1];this._li.computeIntersection(i,o,s,a),this._li.hasIntersection()&&this._li.isInteriorIntersection()&&(this._intSegments=new Array(4).fill(null),this._intSegments[0]=i,this._intSegments[1]=o,this._intSegments[2]=s,this._intSegments[3]=a,this._interiorIntersection=this._li.getIntersection(0),this._keepIntersections&&this._intersections.add(this._interiorIntersection),this._intersectionCount++)},zp.prototype.isEndSegment=function(t,e){return 0===e||e>=t.size()-2},zp.prototype.hasIntersection=function(){return null!==this._interiorIntersection},zp.prototype.isDone=function(){return!this._findAllIntersections&&null!==this._interiorIntersection},zp.prototype.interfaces_=function(){return[Hl]},zp.prototype.getClass=function(){return zp},zp.createAllIntersectionsFinder=function(t){var e=new zp(t);return e.setFindAllIntersections(!0),e},zp.createAnyIntersectionFinder=function(t){return new zp(t)},zp.createIntersectionCounter=function(t){var e=new zp(t);return e.setFindAllIntersections(!0),e.setKeepIntersections(!1),e};var jp=function(){this._li=new rc,this._segStrings=null,this._findAllIntersections=!1,this._segInt=null,this._isValid=!0;var t=arguments[0];this._segStrings=t};jp.prototype.execute=function(){if(null!==this._segInt)return null;this.checkInteriorIntersections()},jp.prototype.getIntersections=function(){return this._segInt.getIntersections()},jp.prototype.isValid=function(){return this.execute(),this._isValid},jp.prototype.setFindAllIntersections=function(t){this._findAllIntersections=t},jp.prototype.checkInteriorIntersections=function(){this._isValid=!0,this._segInt=new zp(this._li),this._segInt.setFindAllIntersections(this._findAllIntersections);var t=new El;if(t.setSegmentIntersector(this._segInt),t.computeNodes(this._segStrings),this._segInt.hasIntersection())return this._isValid=!1,null},jp.prototype.checkValid=function(){if(this.execute(),!this._isValid)throw new Mh(this.getErrorMessage(),this._segInt.getInteriorIntersection())},jp.prototype.getErrorMessage=function(){if(this._isValid)return"no intersections found";var t=this._segInt.getIntersectionSegments();return"found non-noded intersection between "+Ku.toLineString(t[0],t[1])+" and "+Ku.toLineString(t[2],t[3])},jp.prototype.interfaces_=function(){return[]},jp.prototype.getClass=function(){return jp},jp.computeIntersections=function(t){var e=new jp(t);return e.setFindAllIntersections(!0),e.isValid(),e.getIntersections()};var Xp=function t(){this._nv=null;var e=arguments[0];this._nv=new jp(t.toSegmentStrings(e))};Xp.prototype.checkValid=function(){this._nv.checkValid()},Xp.prototype.interfaces_=function(){return[]},Xp.prototype.getClass=function(){return Xp},Xp.toSegmentStrings=function(t){for(var e=new bc,n=t.iterator();n.hasNext();){var r=n.next();e.add(new kp(r.getCoordinates(),r))}return e},Xp.checkValid=function(t){new Xp(t).checkValid()};var Up=function(t){this._mapOp=t};Up.prototype.map=function(t){for(var e=new bc,n=0;n<t.getNumGeometries();n++){var r=this._mapOp.map(t.getGeometryN(n));r.isEmpty()||e.add(r)}return t.getFactory().createGeometryCollection(_h.toGeometryArray(e))},Up.prototype.interfaces_=function(){return[]},Up.prototype.getClass=function(){return Up},Up.map=function(t,e){return new Up(e).map(t)};var Yp=function(){this._op=null,this._geometryFactory=null,this._ptLocator=null,this._lineEdgesList=new bc,this._resultLineList=new bc;var t=arguments[0],e=arguments[1],n=arguments[2];this._op=t,this._geometryFactory=e,this._ptLocator=n};Yp.prototype.collectLines=function(t){for(var e=this._op.getGraph().getEdgeEnds().iterator();e.hasNext();){var n=e.next();this.collectLineEdge(n,t,this._lineEdgesList),this.collectBoundaryTouchEdge(n,t,this._lineEdgesList)}},Yp.prototype.labelIsolatedLine=function(t,e){var n=this._ptLocator.locate(t.getCoordinate(),this._op.getArgGeometry(e));t.getLabel().setLocation(e,n)},Yp.prototype.build=function(t){return this.findCoveredLineEdges(),this.collectLines(t),this.buildLines(t),this._resultLineList},Yp.prototype.collectLineEdge=function(t,e,n){var r=t.getLabel(),i=t.getEdge();t.isLineEdge()&&(t.isVisited()||!Cf.isResultOfOp(r,e)||i.isCovered()||(n.add(i),t.setVisitedEdge(!0)))},Yp.prototype.findCoveredLineEdges=function(){for(var t=this._op.getGraph().getNodes().iterator();t.hasNext();){t.next().getEdges().findCoveredLineEdges()}for(var e=this._op.getGraph().getEdgeEnds().iterator();e.hasNext();){var n=e.next(),r=n.getEdge();if(n.isLineEdge()&&!r.isCoveredSet()){var i=this._op.isCoveredByA(n.getCoordinate());r.setCovered(i)}}},Yp.prototype.labelIsolatedLines=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),r=n.getLabel();n.isIsolated()&&(r.isNull(0)?this.labelIsolatedLine(n,0):this.labelIsolatedLine(n,1))}},Yp.prototype.buildLines=function(t){for(var e=this._lineEdgesList.iterator();e.hasNext();){var n=e.next(),r=this._geometryFactory.createLineString(n.getCoordinates());this._resultLineList.add(r),n.setInResult(!0)}},Yp.prototype.collectBoundaryTouchEdge=function(t,e,n){var r=t.getLabel();return t.isLineEdge()?null:t.isVisited()?null:t.isInteriorAreaEdge()?null:t.getEdge().isInResult()?null:(tc.isTrue(!(t.isInResult()||t.getSym().isInResult())||!t.getEdge().isInResult()),void(Cf.isResultOfOp(r,e)&&e===Cf.INTERSECTION&&(n.add(t.getEdge()),t.setVisitedEdge(!0))))},Yp.prototype.interfaces_=function(){return[]},Yp.prototype.getClass=function(){return Yp};var Vp=function(){this._op=null,this._geometryFactory=null,this._resultPointList=new bc;var t=arguments[0],e=arguments[1];this._op=t,this._geometryFactory=e};Vp.prototype.filterCoveredNodeToPoint=function(t){var e=t.getCoordinate();if(!this._op.isCoveredByLA(e)){var n=this._geometryFactory.createPoint(e);this._resultPointList.add(n)}},Vp.prototype.extractNonCoveredResultNodes=function(t){for(var e=this._op.getGraph().getNodes().iterator();e.hasNext();){var n=e.next();if(!n.isInResult()&&(!n.isIncidentEdgeInResult()&&(0===n.getEdges().getDegree()||t===Cf.INTERSECTION))){var r=n.getLabel();Cf.isResultOfOp(r,t)&&this.filterCoveredNodeToPoint(n)}}},Vp.prototype.build=function(t){return this.extractNonCoveredResultNodes(t),this._resultPointList},Vp.prototype.interfaces_=function(){return[]},Vp.prototype.getClass=function(){return Vp};var Hp=function(){this._inputGeom=null,this._factory=null,this._pruneEmptyGeometry=!0,this._preserveGeometryCollectionType=!0,this._preserveCollections=!1,this._preserveType=!1};Hp.prototype.transformPoint=function(t,e){return this._factory.createPoint(this.transformCoordinates(t.getCoordinateSequence(),t))},Hp.prototype.transformPolygon=function(t,e){var n=!0,r=this.transformLinearRing(t.getExteriorRing(),t);null!==r&&r instanceof eh&&!r.isEmpty()||(n=!1);for(var i=new bc,o=0;o<t.getNumInteriorRing();o++){var s=this.transformLinearRing(t.getInteriorRingN(o),t);null===s||s.isEmpty()||(s instanceof eh||(n=!1),i.add(s))}if(n)return this._factory.createPolygon(r,i.toArray([]));var a=new bc;return null!==r&&a.add(r),a.addAll(i),this._factory.buildGeometry(a)},Hp.prototype.createCoordinateSequence=function(t){return this._factory.getCoordinateSequenceFactory().create(t)},Hp.prototype.getInputGeometry=function(){return this._inputGeom},Hp.prototype.transformMultiLineString=function(t,e){for(var n=new bc,r=0;r<t.getNumGeometries();r++){var i=this.transformLineString(t.getGeometryN(r),t);null!==i&&(i.isEmpty()||n.add(i))}return this._factory.buildGeometry(n)},Hp.prototype.transformCoordinates=function(t,e){return this.copy(t)},Hp.prototype.transformLineString=function(t,e){return this._factory.createLineString(this.transformCoordinates(t.getCoordinateSequence(),t))},Hp.prototype.transformMultiPoint=function(t,e){for(var n=new bc,r=0;r<t.getNumGeometries();r++){var i=this.transformPoint(t.getGeometryN(r),t);null!==i&&(i.isEmpty()||n.add(i))}return this._factory.buildGeometry(n)},Hp.prototype.transformMultiPolygon=function(t,e){for(var n=new bc,r=0;r<t.getNumGeometries();r++){var i=this.transformPolygon(t.getGeometryN(r),t);null!==i&&(i.isEmpty()||n.add(i))}return this._factory.buildGeometry(n)},Hp.prototype.copy=function(t){return t.copy()},Hp.prototype.transformGeometryCollection=function(t,e){for(var n=new bc,r=0;r<t.getNumGeometries();r++){var i=this.transform(t.getGeometryN(r));null!==i&&(this._pruneEmptyGeometry&&i.isEmpty()||n.add(i))}return this._preserveGeometryCollectionType?this._factory.createGeometryCollection(_h.toGeometryArray(n)):this._factory.buildGeometry(n)},Hp.prototype.transform=function(t){if(this._inputGeom=t,this._factory=t.getFactory(),t instanceof Kc)return this.transformPoint(t,null);if(t instanceof th)return this.transformMultiPoint(t,null);if(t instanceof eh)return this.transformLinearRing(t,null);if(t instanceof Jc)return this.transformLineString(t,null);if(t instanceof Xc)return this.transformMultiLineString(t,null);if(t instanceof $c)return this.transformPolygon(t,null);if(t instanceof nh)return this.transformMultiPolygon(t,null);if(t instanceof jc)return this.transformGeometryCollection(t,null);throw new _u("Unknown Geometry subtype: "+t.getClass().getName())},Hp.prototype.transformLinearRing=function(t,e){var n=this.transformCoordinates(t.getCoordinateSequence(),t);if(null===n)return this._factory.createLinearRing(null);var r=n.size();return r>0&&r<4&&!this._preserveType?this._factory.createLineString(n):this._factory.createLinearRing(n)},Hp.prototype.interfaces_=function(){return[]},Hp.prototype.getClass=function(){return Hp};var Wp=function t(){if(this._snapTolerance=0,this._srcPts=null,this._seg=new gl,this._allowSnappingToSourceVertices=!1,this._isClosed=!1,arguments[0]instanceof Jc&&"number"==typeof arguments[1]){var e=arguments[0],n=arguments[1];t.call(this,e.getCoordinates(),n)}else if(arguments[0]instanceof Array&&"number"==typeof arguments[1]){var r=arguments[0],i=arguments[1];this._srcPts=r,this._isClosed=t.isClosed(r),this._snapTolerance=i}};Wp.prototype.snapVertices=function(t,e){for(var n=this._isClosed?t.size()-1:t.size(),r=0;r<n;r++){var i=t.get(r),o=this.findSnapForVertex(i,e);null!==o&&(t.set(r,new bu(o)),0===r&&this._isClosed&&t.set(t.size()-1,new bu(o)))}},Wp.prototype.findSnapForVertex=function(t,e){for(var n=0;n<e.length;n++){if(t.equals2D(e[n]))return null;if(t.distance(e[n])<this._snapTolerance)return e[n]}return null},Wp.prototype.snapTo=function(t){var e=new Nc(this._srcPts);this.snapVertices(e,t),this.snapSegments(e,t);return e.toCoordinateArray()},Wp.prototype.snapSegments=function(t,e){if(0===e.length)return null;var n=e.length;e[0].equals2D(e[e.length-1])&&(n=e.length-1);for(var r=0;r<n;r++){var i=e[r],o=this.findSegmentIndexToSnap(i,t);o>=0&&t.add(o+1,new bu(i),!1)}},Wp.prototype.findSegmentIndexToSnap=function(t,e){for(var n=mu.MAX_VALUE,r=-1,i=0;i<e.size()-1;i++){if(this._seg.p0=e.get(i),this._seg.p1=e.get(i+1),this._seg.p0.equals2D(t)||this._seg.p1.equals2D(t)){if(this._allowSnappingToSourceVertices)continue;return-1}var o=this._seg.distance(t);o<this._snapTolerance&&o<n&&(n=o,r=i)}return r},Wp.prototype.setAllowSnappingToSourceVertices=function(t){this._allowSnappingToSourceVertices=t},Wp.prototype.interfaces_=function(){return[]},Wp.prototype.getClass=function(){return Wp},Wp.isClosed=function(t){return!(t.length<=1)&&t[0].equals2D(t[t.length-1])};var Jp=function(t){this._srcGeom=t||null},Zp={SNAP_PRECISION_FACTOR:{configurable:!0}};Jp.prototype.snapTo=function(t,e){var n=this.extractTargetCoordinates(t);return new Kp(e,n).transform(this._srcGeom)},Jp.prototype.snapToSelf=function(t,e){var n=this.extractTargetCoordinates(this._srcGeom),r=new Kp(t,n,!0).transform(this._srcGeom),i=r;return e&&Lu(i,Qc)&&(i=r.buffer(0)),i},Jp.prototype.computeSnapTolerance=function(t){return this.computeMinimumSegmentLength(t)/10},Jp.prototype.extractTargetCoordinates=function(t){for(var e=new ki,n=t.getCoordinates(),r=0;r<n.length;r++)e.add(n[r]);return e.toArray(new Array(0).fill(null))},Jp.prototype.computeMinimumSegmentLength=function(t){for(var e=mu.MAX_VALUE,n=0;n<t.length-1;n++){var r=t[n].distance(t[n+1]);r<e&&(e=r)}return e},Jp.prototype.interfaces_=function(){return[]},Jp.prototype.getClass=function(){return Jp},Jp.snap=function(t,e,n){var r=new Array(2).fill(null),i=new Jp(t);r[0]=i.snapTo(e,n);var o=new Jp(e);return r[1]=o.snapTo(r[0],n),r},Jp.computeOverlaySnapTolerance=function(){if(1===arguments.length){var t=arguments[0],e=Jp.computeSizeBasedSnapTolerance(t),n=t.getPrecisionModel();if(n.getType()===fh.FIXED){var r=1/n.getScale()*2/1.415;r>e&&(e=r)}return e}if(2===arguments.length){var i=arguments[0],o=arguments[1];return Math.min(Jp.computeOverlaySnapTolerance(i),Jp.computeOverlaySnapTolerance(o))}},Jp.computeSizeBasedSnapTolerance=function(t){var e=t.getEnvelopeInternal();return Math.min(e.getHeight(),e.getWidth())*Jp.SNAP_PRECISION_FACTOR},Jp.snapToSelf=function(t,e,n){return new Jp(t).snapToSelf(e,n)},Zp.SNAP_PRECISION_FACTOR.get=function(){return 1e-9},Object.defineProperties(Jp,Zp);var Kp=function(t){function e(e,n,r){t.call(this),this._snapTolerance=e||null,this._snapPts=n||null,this._isSelfSnap=void 0!==r&&r}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.snapLine=function(t,e){var n=new Wp(t,this._snapTolerance);return n.setAllowSnappingToSourceVertices(this._isSelfSnap),n.snapTo(e)},e.prototype.transformCoordinates=function(t,e){var n=t.toCoordinateArray(),r=this.snapLine(n,this._snapPts);return this._factory.getCoordinateSequenceFactory().create(r)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Hp),Qp=function(){this._isFirst=!0,this._commonMantissaBitsCount=53,this._commonBits=0,this._commonSignExp=null};Qp.prototype.getCommon=function(){return mu.longBitsToDouble(this._commonBits)},Qp.prototype.add=function(t){var e=mu.doubleToLongBits(t);if(this._isFirst)return this._commonBits=e,this._commonSignExp=Qp.signExpBits(this._commonBits),this._isFirst=!1,null;if(Qp.signExpBits(e)!==this._commonSignExp)return this._commonBits=0,null;this._commonMantissaBitsCount=Qp.numCommonMostSigMantissaBits(this._commonBits,e),this._commonBits=Qp.zeroLowerBits(this._commonBits,64-(12+this._commonMantissaBitsCount))},Qp.prototype.toString=function(){if(1===arguments.length){var t=arguments[0],e=mu.longBitsToDouble(t),n="0000000000000000000000000000000000000000000000000000000000000000"+mu.toBinaryString(t),r=n.substring(n.length-64);return r.substring(0,1)+"  "+r.substring(1,12)+"(exp) "+r.substring(12)+" [ "+e+" ]"}},Qp.prototype.interfaces_=function(){return[]},Qp.prototype.getClass=function(){return Qp},Qp.getBit=function(t,e){return 0!=(t&1<<e)?1:0},Qp.signExpBits=function(t){return t>>52},Qp.zeroLowerBits=function(t,e){return t&~((1<<e)-1)},Qp.numCommonMostSigMantissaBits=function(t,e){for(var n=0,r=52;r>=0;r--){if(Qp.getBit(t,r)!==Qp.getBit(e,r))return n;n++}return 52};var $p=function(){this._commonCoord=null,this._ccFilter=new ef},tf={CommonCoordinateFilter:{configurable:!0},Translater:{configurable:!0}};$p.prototype.addCommonBits=function(t){var e=new nf(this._commonCoord);t.apply(e),t.geometryChanged()},$p.prototype.removeCommonBits=function(t){if(0===this._commonCoord.x&&0===this._commonCoord.y)return t;var e=new bu(this._commonCoord);e.x=-e.x,e.y=-e.y;var n=new nf(e);return t.apply(n),t.geometryChanged(),t},$p.prototype.getCommonCoordinate=function(){return this._commonCoord},$p.prototype.add=function(t){t.apply(this._ccFilter),this._commonCoord=this._ccFilter.getCommonCoordinate()},$p.prototype.interfaces_=function(){return[]},$p.prototype.getClass=function(){return $p},tf.CommonCoordinateFilter.get=function(){return ef},tf.Translater.get=function(){return nf},Object.defineProperties($p,tf);var ef=function(){this._commonBitsX=new Qp,this._commonBitsY=new Qp};ef.prototype.filter=function(t){this._commonBitsX.add(t.x),this._commonBitsY.add(t.y)},ef.prototype.getCommonCoordinate=function(){return new bu(this._commonBitsX.getCommon(),this._commonBitsY.getCommon())},ef.prototype.interfaces_=function(){return[pc]},ef.prototype.getClass=function(){return ef};var nf=function(){this.trans=null;var t=arguments[0];this.trans=t};nf.prototype.filter=function(t,e){var n=t.getOrdinate(e,0)+this.trans.x,r=t.getOrdinate(e,1)+this.trans.y;t.setOrdinate(e,0,n),t.setOrdinate(e,1,r)},nf.prototype.isDone=function(){return!1},nf.prototype.isGeometryChanged=function(){return!0},nf.prototype.interfaces_=function(){return[zc]},nf.prototype.getClass=function(){return nf};var rf=function(t,e){this._geom=new Array(2).fill(null),this._snapTolerance=null,this._cbr=null,this._geom[0]=t,this._geom[1]=e,this.computeSnapTolerance()};rf.prototype.selfSnap=function(t){return new Jp(t).snapTo(t,this._snapTolerance)},rf.prototype.removeCommonBits=function(t){this._cbr=new $p,this._cbr.add(t[0]),this._cbr.add(t[1]);var e=new Array(2).fill(null);return e[0]=this._cbr.removeCommonBits(t[0].copy()),e[1]=this._cbr.removeCommonBits(t[1].copy()),e},rf.prototype.prepareResult=function(t){return this._cbr.addCommonBits(t),t},rf.prototype.getResultGeometry=function(t){var e=this.snap(this._geom),n=Cf.overlayOp(e[0],e[1],t);return this.prepareResult(n)},rf.prototype.checkValid=function(t){t.isValid()||Xu.out.println("Snapped geometry is invalid")},rf.prototype.computeSnapTolerance=function(){this._snapTolerance=Jp.computeOverlaySnapTolerance(this._geom[0],this._geom[1])},rf.prototype.snap=function(t){var e=this.removeCommonBits(t);return Jp.snap(e[0],e[1],this._snapTolerance)},rf.prototype.interfaces_=function(){return[]},rf.prototype.getClass=function(){return rf},rf.overlayOp=function(t,e,n){return new rf(t,e).getResultGeometry(n)},rf.union=function(t,e){return rf.overlayOp(t,e,Cf.UNION)},rf.intersection=function(t,e){return rf.overlayOp(t,e,Cf.INTERSECTION)},rf.symDifference=function(t,e){return rf.overlayOp(t,e,Cf.SYMDIFFERENCE)},rf.difference=function(t,e){return rf.overlayOp(t,e,Cf.DIFFERENCE)};var of=function(t,e){this._geom=new Array(2).fill(null),this._geom[0]=t,this._geom[1]=e};of.prototype.getResultGeometry=function(t){var e=null,n=!1,r=null;try{e=Cf.overlayOp(this._geom[0],this._geom[1],t);n=!0}catch(t){if(!(t instanceof Qu))throw t;r=t}if(!n)try{e=rf.overlayOp(this._geom[0],this._geom[1],t)}catch(t){throw t instanceof Qu?r:t}return e},of.prototype.interfaces_=function(){return[]},of.prototype.getClass=function(){return of},of.overlayOp=function(t,e,n){return new of(t,e).getResultGeometry(n)},of.union=function(t,e){return of.overlayOp(t,e,Cf.UNION)},of.intersection=function(t,e){return of.overlayOp(t,e,Cf.INTERSECTION)},of.symDifference=function(t,e){return of.overlayOp(t,e,Cf.SYMDIFFERENCE)},of.difference=function(t,e){return of.overlayOp(t,e,Cf.DIFFERENCE)};var sf=function(){this.mce=null,this.chainIndex=null;var t=arguments[0],e=arguments[1];this.mce=t,this.chainIndex=e};sf.prototype.computeIntersections=function(t,e){this.mce.computeIntersectsForChain(this.chainIndex,t.mce,t.chainIndex,e)},sf.prototype.interfaces_=function(){return[]},sf.prototype.getClass=function(){return sf};var af=function t(){if(this._label=null,this._xValue=null,this._eventType=null,this._insertEvent=null,this._deleteEventIndex=null,this._obj=null,2===arguments.length){var e=arguments[0],n=arguments[1];this._eventType=t.DELETE,this._xValue=e,this._insertEvent=n}else if(3===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2];this._eventType=t.INSERT,this._label=r,this._xValue=i,this._obj=o}},uf={INSERT:{configurable:!0},DELETE:{configurable:!0}};af.prototype.isDelete=function(){return this._eventType===af.DELETE},af.prototype.setDeleteEventIndex=function(t){this._deleteEventIndex=t},af.prototype.getObject=function(){return this._obj},af.prototype.compareTo=function(t){var e=t;return this._xValue<e._xValue?-1:this._xValue>e._xValue?1:this._eventType<e._eventType?-1:this._eventType>e._eventType?1:0},af.prototype.getInsertEvent=function(){return this._insertEvent},af.prototype.isInsert=function(){return this._eventType===af.INSERT},af.prototype.isSameLabel=function(t){return null!==this._label&&this._label===t._label},af.prototype.getDeleteEventIndex=function(){return this._deleteEventIndex},af.prototype.interfaces_=function(){return[xu]},af.prototype.getClass=function(){return af},uf.INSERT.get=function(){return 1},uf.DELETE.get=function(){return 2},Object.defineProperties(af,uf);var cf=function(){};cf.prototype.interfaces_=function(){return[]},cf.prototype.getClass=function(){return cf};var hf=function(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._properIntersectionPoint=null,this._li=null,this._includeProper=null,this._recordIsolated=null,this._isSelfIntersection=null,this._numIntersections=0,this.numTests=0,this._bdyNodes=null,this._isDone=!1,this._isDoneWhenProperInt=!1;var t=arguments[0],e=arguments[1],n=arguments[2];this._li=t,this._includeProper=e,this._recordIsolated=n};hf.prototype.isTrivialIntersection=function(t,e,n,r){if(t===n&&1===this._li.getIntersectionNum()){if(hf.isAdjacentSegments(e,r))return!0;if(t.isClosed()){var i=t.getNumPoints()-1;if(0===e&&r===i||0===r&&e===i)return!0}}return!1},hf.prototype.getProperIntersectionPoint=function(){return this._properIntersectionPoint},hf.prototype.setIsDoneIfProperInt=function(t){this._isDoneWhenProperInt=t},hf.prototype.hasProperInteriorIntersection=function(){return this._hasProperInterior},hf.prototype.isBoundaryPointInternal=function(t,e){for(var n=e.iterator();n.hasNext();){var r=n.next().getCoordinate();if(t.isIntersection(r))return!0}return!1},hf.prototype.hasProperIntersection=function(){return this._hasProper},hf.prototype.hasIntersection=function(){return this._hasIntersection},hf.prototype.isDone=function(){return this._isDone},hf.prototype.isBoundaryPoint=function(t,e){return null!==e&&(!!this.isBoundaryPointInternal(t,e[0])||!!this.isBoundaryPointInternal(t,e[1]))},hf.prototype.setBoundaryNodes=function(t,e){this._bdyNodes=new Array(2).fill(null),this._bdyNodes[0]=t,this._bdyNodes[1]=e},hf.prototype.addIntersections=function(t,e,n,r){if(t===n&&e===r)return null;this.numTests++;var i=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[r],a=n.getCoordinates()[r+1];this._li.computeIntersection(i,o,s,a),this._li.hasIntersection()&&(this._recordIsolated&&(t.setIsolated(!1),n.setIsolated(!1)),this._numIntersections++,this.isTrivialIntersection(t,e,n,r)||(this._hasIntersection=!0,!this._includeProper&&this._li.isProper()||(t.addIntersections(this._li,e,0),n.addIntersections(this._li,r,1)),this._li.isProper()&&(this._properIntersectionPoint=this._li.getIntersection(0).copy(),this._hasProper=!0,this._isDoneWhenProperInt&&(this._isDone=!0),this.isBoundaryPoint(this._li,this._bdyNodes)||(this._hasProperInterior=!0))))},hf.prototype.interfaces_=function(){return[]},hf.prototype.getClass=function(){return hf},hf.isAdjacentSegments=function(t,e){return 1===Math.abs(t-e)};var lf=function(t){function e(){t.call(this),this.events=new bc,this.nOverlaps=null}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.prepareEvents=function(){$h.sort(this.events);for(var t=0;t<this.events.size();t++){var e=this.events.get(t);e.isDelete()&&e.getInsertEvent().setDeleteEventIndex(t)}},e.prototype.computeIntersections=function(){if(1===arguments.length){var t=arguments[0];this.nOverlaps=0,this.prepareEvents();for(var e=0;e<this.events.size();e++){var n=this.events.get(e);if(n.isInsert()&&this.processOverlaps(e,n.getDeleteEventIndex(),n,t),t.isDone())break}}else if(3===arguments.length)if(arguments[2]instanceof hf&&Lu(arguments[0],wc)&&Lu(arguments[1],wc)){var r=arguments[0],i=arguments[1],o=arguments[2];this.addEdges(r,r),this.addEdges(i,i),this.computeIntersections(o)}else if("boolean"==typeof arguments[2]&&Lu(arguments[0],wc)&&arguments[1]instanceof hf){var s=arguments[0],a=arguments[1];arguments[2]?this.addEdges(s,null):this.addEdges(s),this.computeIntersections(a)}},e.prototype.addEdge=function(t,e){for(var n=t.getMonotoneChainEdge(),r=n.getStartIndexes(),i=0;i<r.length-1;i++){var o=new sf(n,i),s=new af(e,n.getMinX(i),o);this.events.add(s),this.events.add(new af(n.getMaxX(i),s))}},e.prototype.processOverlaps=function(t,e,n,r){for(var i=n.getObject(),o=t;o<e;o++){var s=this.events.get(o);if(s.isInsert()){var a=s.getObject();n.isSameLabel(s)||(i.computeIntersections(a,r),this.nOverlaps++)}}},e.prototype.addEdges=function(){if(1===arguments.length)for(var t=arguments[0].iterator();t.hasNext();){var e=t.next();this.addEdge(e,e)}else if(2===arguments.length)for(var n=arguments[0],r=arguments[1],i=n.iterator();i.hasNext();){var o=i.next();this.addEdge(o,r)}},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(cf),pf=function(){this._min=mu.POSITIVE_INFINITY,this._max=mu.NEGATIVE_INFINITY},ff={NodeComparator:{configurable:!0}};pf.prototype.getMin=function(){return this._min},pf.prototype.intersects=function(t,e){return!(this._min>e||this._max<t)},pf.prototype.getMax=function(){return this._max},pf.prototype.toString=function(){return Ku.toLineString(new bu(this._min,0),new bu(this._max,0))},pf.prototype.interfaces_=function(){return[]},pf.prototype.getClass=function(){return pf},ff.NodeComparator.get=function(){return gf},Object.defineProperties(pf,ff);var gf=function(){};gf.prototype.compare=function(t,e){var n=t,r=e,i=(n._min+n._max)/2,o=(r._min+r._max)/2;return i<o?-1:i>o?1:0},gf.prototype.interfaces_=function(){return[wu]},gf.prototype.getClass=function(){return gf};var df=function(t){function e(){t.call(this),this._item=null;var e=arguments[0],n=arguments[1],r=arguments[2];this._min=e,this._max=n,this._item=r}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.query=function(t,e,n){if(!this.intersects(t,e))return null;n.visitItem(this._item)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(pf),yf=function(t){function e(){t.call(this),this._node1=null,this._node2=null;var e=arguments[0],n=arguments[1];this._node1=e,this._node2=n,this.buildExtent(this._node1,this._node2)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.buildExtent=function(t,e){this._min=Math.min(t._min,e._min),this._max=Math.max(t._max,e._max)},e.prototype.query=function(t,e,n){if(!this.intersects(t,e))return null;null!==this._node1&&this._node1.query(t,e,n),null!==this._node2&&this._node2.query(t,e,n)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(pf),_f=function(){this._leaves=new bc,this._root=null,this._level=0};_f.prototype.buildTree=function(){$h.sort(this._leaves,new pf.NodeComparator);for(var t=this._leaves,e=null,n=new bc;;){if(this.buildLevel(t,n),1===n.size())return n.get(0);e=t,t=n,n=e}},_f.prototype.insert=function(t,e,n){if(null!==this._root)throw new Error("Index cannot be added to once it has been queried");this._leaves.add(new df(t,e,n))},_f.prototype.query=function(t,e,n){this.init(),this._root.query(t,e,n)},_f.prototype.buildRoot=function(){if(null!==this._root)return null;this._root=this.buildTree()},_f.prototype.printNode=function(t){Xu.out.println(Ku.toLineString(new bu(t._min,this._level),new bu(t._max,this._level)))},_f.prototype.init=function(){if(null!==this._root)return null;this.buildRoot()},_f.prototype.buildLevel=function(t,e){this._level++,e.clear();for(var n=0;n<t.size();n+=2){var r=t.get(n);if(null===(n+1<t.size()?t.get(n):null))e.add(r);else{var i=new yf(t.get(n),t.get(n+1));e.add(i)}}},_f.prototype.interfaces_=function(){return[]},_f.prototype.getClass=function(){return _f};var mf=function(){this._items=new bc};mf.prototype.visitItem=function(t){this._items.add(t)},mf.prototype.getItems=function(){return this._items},mf.prototype.interfaces_=function(){return[Jh]},mf.prototype.getClass=function(){return mf};var vf=function(){this._index=null;var t=arguments[0];if(!Lu(t,Qc))throw new _u("Argument must be Polygonal");this._index=new wf(t)},xf={SegmentVisitor:{configurable:!0},IntervalIndexedGeometry:{configurable:!0}};vf.prototype.locate=function(t){var e=new oc(t),n=new Ef(e);return this._index.query(t.y,t.y,n),e.getLocation()},vf.prototype.interfaces_=function(){return[Bl]},vf.prototype.getClass=function(){return vf},xf.SegmentVisitor.get=function(){return Ef},xf.IntervalIndexedGeometry.get=function(){return wf},Object.defineProperties(vf,xf);var Ef=function(){this._counter=null;var t=arguments[0];this._counter=t};Ef.prototype.visitItem=function(t){var e=t;this._counter.countSegment(e.getCoordinate(0),e.getCoordinate(1))},Ef.prototype.interfaces_=function(){return[Jh]},Ef.prototype.getClass=function(){return Ef};var wf=function(){this._index=new _f;var t=arguments[0];this.init(t)};wf.prototype.init=function(t){for(var e=bp.getLines(t).iterator();e.hasNext();){var n=e.next().getCoordinates();this.addLine(n)}},wf.prototype.addLine=function(t){for(var e=1;e<t.length;e++){var n=new gl(t[e-1],t[e]),r=Math.min(n.p0.y,n.p1.y),i=Math.max(n.p0.y,n.p1.y);this._index.insert(r,i,n)}},wf.prototype.query=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new mf;return this._index.query(t,e,n),n.getItems()}if(3===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2];this._index.query(r,i,o)}},wf.prototype.interfaces_=function(){return[]},wf.prototype.getClass=function(){return wf};var bf=function(t){function e(){if(t.call(this),this._parentGeom=null,this._lineEdgeMap=new ph,this._boundaryNodeRule=null,this._useBoundaryDeterminationRule=!0,this._argIndex=null,this._boundaryNodes=null,this._hasTooFewPoints=!1,this._invalidPoint=null,this._areaPtLocator=null,this._ptLocator=new Ip,2===arguments.length){var e=arguments[0],n=arguments[1],r=fc.OGC_SFS_BOUNDARY_RULE;this._argIndex=e,this._parentGeom=n,this._boundaryNodeRule=r,null!==n&&this.add(n)}else if(3===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2];this._argIndex=i,this._parentGeom=o,this._boundaryNodeRule=s,null!==o&&this.add(o)}}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.insertBoundaryPoint=function(t,n){var r=this._nodes.addNode(n).getLabel(),i=1;Su.NONE;r.getLocation(t,Nh.ON)===Su.BOUNDARY&&i++;var o=e.determineBoundary(this._boundaryNodeRule,i);r.setLocation(t,o)},e.prototype.computeSelfNodes=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.computeSelfNodes(t,e,!1)}if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2],o=new hf(n,!0,!1);o.setIsDoneIfProperInt(i);var s=this.createEdgeSetIntersector(),a=this._parentGeom instanceof eh||this._parentGeom instanceof $c||this._parentGeom instanceof nh,u=r||!a;return s.computeIntersections(this._edges,o,u),this.addSelfIntersectionNodes(this._argIndex),o}},e.prototype.computeSplitEdges=function(t){for(var e=this._edges.iterator();e.hasNext();){e.next().eiList.addSplitEdges(t)}},e.prototype.computeEdgeIntersections=function(t,e,n){var r=new hf(e,n,!0);r.setBoundaryNodes(this.getBoundaryNodes(),t.getBoundaryNodes());return this.createEdgeSetIntersector().computeIntersections(this._edges,t._edges,r),r},e.prototype.getGeometry=function(){return this._parentGeom},e.prototype.getBoundaryNodeRule=function(){return this._boundaryNodeRule},e.prototype.hasTooFewPoints=function(){return this._hasTooFewPoints},e.prototype.addPoint=function(){if(arguments[0]instanceof Kc){var t=arguments[0].getCoordinate();this.insertPoint(this._argIndex,t,Su.INTERIOR)}else if(arguments[0]instanceof bu){var e=arguments[0];this.insertPoint(this._argIndex,e,Su.INTERIOR)}},e.prototype.addPolygon=function(t){this.addPolygonRing(t.getExteriorRing(),Su.EXTERIOR,Su.INTERIOR);for(var e=0;e<t.getNumInteriorRing();e++){var n=t.getInteriorRingN(e);this.addPolygonRing(n,Su.INTERIOR,Su.EXTERIOR)}},e.prototype.addEdge=function(t){this.insertEdge(t);var e=t.getCoordinates();this.insertPoint(this._argIndex,e[0],Su.BOUNDARY),this.insertPoint(this._argIndex,e[e.length-1],Su.BOUNDARY)},e.prototype.addLineString=function(t){var e=Cc.removeRepeatedPoints(t.getCoordinates());if(e.length<2)return this._hasTooFewPoints=!0,this._invalidPoint=e[0],null;var n=new ep(e,new Rh(this._argIndex,Su.INTERIOR));this._lineEdgeMap.put(t,n),this.insertEdge(n),tc.isTrue(e.length>=2,"found LineString with single point"),this.insertBoundaryPoint(this._argIndex,e[0]),this.insertBoundaryPoint(this._argIndex,e[e.length-1])},e.prototype.getInvalidPoint=function(){return this._invalidPoint},e.prototype.getBoundaryPoints=function(){for(var t=this.getBoundaryNodes(),e=new Array(t.size()).fill(null),n=0,r=t.iterator();r.hasNext();){var i=r.next();e[n++]=i.getCoordinate().copy()}return e},e.prototype.getBoundaryNodes=function(){return null===this._boundaryNodes&&(this._boundaryNodes=this._nodes.getBoundaryNodes(this._argIndex)),this._boundaryNodes},e.prototype.addSelfIntersectionNode=function(t,e,n){if(this.isBoundaryNode(t,e))return null;n===Su.BOUNDARY&&this._useBoundaryDeterminationRule?this.insertBoundaryPoint(t,e):this.insertPoint(t,e,n)},e.prototype.addPolygonRing=function(t,e,n){if(t.isEmpty())return null;var r=Cc.removeRepeatedPoints(t.getCoordinates());if(r.length<4)return this._hasTooFewPoints=!0,this._invalidPoint=r[0],null;var i=e,o=n;sc.isCCW(r)&&(i=n,o=e);var s=new ep(r,new Rh(this._argIndex,Su.BOUNDARY,i,o));this._lineEdgeMap.put(t,s),this.insertEdge(s),this.insertPoint(this._argIndex,r[0],Su.BOUNDARY)},e.prototype.insertPoint=function(t,e,n){var r=this._nodes.addNode(e),i=r.getLabel();null===i?r._label=new Rh(t,n):i.setLocation(t,n)},e.prototype.createEdgeSetIntersector=function(){return new lf},e.prototype.addSelfIntersectionNodes=function(t){for(var e=this._edges.iterator();e.hasNext();)for(var n=e.next(),r=n.getLabel().getLocation(t),i=n.eiList.iterator();i.hasNext();){var o=i.next();this.addSelfIntersectionNode(t,o.coord,r)}},e.prototype.add=function(){if(1!==arguments.length)return t.prototype.add.apply(this,arguments);var e=arguments[0];if(e.isEmpty())return null;if(e instanceof nh&&(this._useBoundaryDeterminationRule=!1),e instanceof $c)this.addPolygon(e);else if(e instanceof Jc)this.addLineString(e);else if(e instanceof Kc)this.addPoint(e);else if(e instanceof th)this.addCollection(e);else if(e instanceof Xc)this.addCollection(e);else if(e instanceof nh)this.addCollection(e);else{if(!(e instanceof jc))throw new Error(e.getClass().getName());this.addCollection(e)}},e.prototype.addCollection=function(t){for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);this.add(n)}},e.prototype.locate=function(t){return Lu(this._parentGeom,Qc)&&this._parentGeom.getNumGeometries()>50?(null===this._areaPtLocator&&(this._areaPtLocator=new vf(this._parentGeom)),this._areaPtLocator.locate(t)):this._ptLocator.locate(t,this._parentGeom)},e.prototype.findEdge=function(){if(1===arguments.length){var e=arguments[0];return this._lineEdgeMap.get(e)}return t.prototype.findEdge.apply(this,arguments)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.determineBoundary=function(t,e){return t.isInBoundary(e)?Su.BOUNDARY:Su.INTERIOR},e}(Uh),If=function(){if(this._li=new rc,this._resultPrecisionModel=null,this._arg=null,1===arguments.length){var t=arguments[0];this.setComputationPrecision(t.getPrecisionModel()),this._arg=new Array(1).fill(null),this._arg[0]=new bf(0,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],r=fc.OGC_SFS_BOUNDARY_RULE;e.getPrecisionModel().compareTo(n.getPrecisionModel())>=0?this.setComputationPrecision(e.getPrecisionModel()):this.setComputationPrecision(n.getPrecisionModel()),this._arg=new Array(2).fill(null),this._arg[0]=new bf(0,e,r),this._arg[1]=new bf(1,n,r)}else if(3===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2];i.getPrecisionModel().compareTo(o.getPrecisionModel())>=0?this.setComputationPrecision(i.getPrecisionModel()):this.setComputationPrecision(o.getPrecisionModel()),this._arg=new Array(2).fill(null),this._arg[0]=new bf(0,i,s),this._arg[1]=new bf(1,o,s)}};If.prototype.getArgGeometry=function(t){return this._arg[t].getGeometry()},If.prototype.setComputationPrecision=function(t){this._resultPrecisionModel=t,this._li.setPrecisionModel(this._resultPrecisionModel)},If.prototype.interfaces_=function(){return[]},If.prototype.getClass=function(){return If};var Nf=function(){};Nf.prototype.interfaces_=function(){return[]},Nf.prototype.getClass=function(){return Nf},Nf.map=function(){if(arguments[0]instanceof cc&&Lu(arguments[1],Nf.MapOp)){for(var t=arguments[0],e=arguments[1],n=new bc,r=0;r<t.getNumGeometries();r++){var i=e.map(t.getGeometryN(r));null!==i&&n.add(i)}return t.getFactory().buildGeometry(n)}if(Lu(arguments[0],vc)&&Lu(arguments[1],Nf.MapOp)){for(var o=arguments[0],s=arguments[1],a=new bc,u=o.iterator();u.hasNext();){var c=u.next(),h=s.map(c);null!==h&&a.add(h)}return a}},Nf.MapOp=function(){};var Cf=function(t){function e(){var e=arguments[0],n=arguments[1];t.call(this,e,n),this._ptLocator=new Ip,this._geomFact=null,this._resultGeom=null,this._graph=null,this._edgeList=new Vl,this._resultPolyList=new bc,this._resultLineList=new bc,this._resultPointList=new bc,this._graph=new Uh(new Ul),this._geomFact=e.getFactory()}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.insertUniqueEdge=function(t){var e=this._edgeList.findEqualEdge(t);if(null!==e){var n=e.getLabel(),r=t.getLabel();e.isPointwiseEqual(t)||(r=new Rh(t.getLabel())).flip();var i=e.getDepth();i.isNull()&&i.add(n),i.add(r),n.merge(r)}else this._edgeList.add(t)},e.prototype.getGraph=function(){return this._graph},e.prototype.cancelDuplicateResultEdges=function(){for(var t=this._graph.getEdgeEnds().iterator();t.hasNext();){var e=t.next(),n=e.getSym();e.isInResult()&&n.isInResult()&&(e.setInResult(!1),n.setInResult(!1))}},e.prototype.isCoveredByLA=function(t){return!!this.isCovered(t,this._resultLineList)||!!this.isCovered(t,this._resultPolyList)},e.prototype.computeGeometry=function(t,n,r,i){var o=new bc;return o.addAll(t),o.addAll(n),o.addAll(r),o.isEmpty()?e.createEmptyResult(i,this._arg[0].getGeometry(),this._arg[1].getGeometry(),this._geomFact):this._geomFact.buildGeometry(o)},e.prototype.mergeSymLabels=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){t.next().getEdges().mergeSymLabels()}},e.prototype.isCovered=function(t,e){for(var n=e.iterator();n.hasNext();){var r=n.next();if(this._ptLocator.locate(t,r)!==Su.EXTERIOR)return!0}return!1},e.prototype.replaceCollapsedEdges=function(){for(var t=new bc,e=this._edgeList.iterator();e.hasNext();){var n=e.next();n.isCollapsed()&&(e.remove(),t.add(n.getCollapsedEdge()))}this._edgeList.addAll(t)},e.prototype.updateNodeLabelling=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){var e=t.next(),n=e.getEdges().getLabel();e.getLabel().merge(n)}},e.prototype.getResultGeometry=function(t){return this.computeOverlay(t),this._resultGeom},e.prototype.insertUniqueEdges=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this.insertUniqueEdge(n)}},e.prototype.computeOverlay=function(t){this.copyPoints(0),this.copyPoints(1),this._arg[0].computeSelfNodes(this._li,!1),this._arg[1].computeSelfNodes(this._li,!1),this._arg[0].computeEdgeIntersections(this._arg[1],this._li,!0);var e=new bc;this._arg[0].computeSplitEdges(e),this._arg[1].computeSplitEdges(e),this.insertUniqueEdges(e),this.computeLabelsFromDepths(),this.replaceCollapsedEdges(),Xp.checkValid(this._edgeList.getEdges()),this._graph.addEdges(this._edgeList.getEdges()),this.computeLabelling(),this.labelIncompleteNodes(),this.findResultAreaEdges(t),this.cancelDuplicateResultEdges();var n=new Yh(this._geomFact);n.add(this._graph),this._resultPolyList=n.getPolygons();var r=new Yp(this,this._geomFact,this._ptLocator);this._resultLineList=r.build(t);var i=new Vp(this,this._geomFact,this._ptLocator);this._resultPointList=i.build(t),this._resultGeom=this.computeGeometry(this._resultPointList,this._resultLineList,this._resultPolyList,t)},e.prototype.labelIncompleteNode=function(t,e){var n=this._ptLocator.locate(t.getCoordinate(),this._arg[e].getGeometry());t.getLabel().setLocation(e,n)},e.prototype.copyPoints=function(t){for(var e=this._arg[t].getNodeIterator();e.hasNext();){var n=e.next();this._graph.addNode(n.getCoordinate()).setLabel(t,n.getLabel().getLocation(t))}},e.prototype.findResultAreaEdges=function(t){for(var n=this._graph.getEdgeEnds().iterator();n.hasNext();){var r=n.next(),i=r.getLabel();i.isArea()&&!r.isInteriorAreaEdge()&&e.isResultOfOp(i.getLocation(0,Nh.RIGHT),i.getLocation(1,Nh.RIGHT),t)&&r.setInResult(!0)}},e.prototype.computeLabelsFromDepths=function(){for(var t=this._edgeList.iterator();t.hasNext();){var e=t.next(),n=e.getLabel(),r=e.getDepth();if(!r.isNull()){r.normalize();for(var i=0;i<2;i++)n.isNull(i)||!n.isArea()||r.isNull(i)||(0===r.getDelta(i)?n.toLine(i):(tc.isTrue(!r.isNull(i,Nh.LEFT),"depth of LEFT side has not been initialized"),n.setLocation(i,Nh.LEFT,r.getLocation(i,Nh.LEFT)),tc.isTrue(!r.isNull(i,Nh.RIGHT),"depth of RIGHT side has not been initialized"),n.setLocation(i,Nh.RIGHT,r.getLocation(i,Nh.RIGHT))))}}},e.prototype.computeLabelling=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){t.next().getEdges().computeLabelling(this._arg)}this.mergeSymLabels(),this.updateNodeLabelling()},e.prototype.labelIncompleteNodes=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){var e=t.next(),n=e.getLabel();e.isIsolated()&&(n.isNull(0)?this.labelIncompleteNode(e,0):this.labelIncompleteNode(e,1)),e.getEdges().updateLabelling(n)}},e.prototype.isCoveredByA=function(t){return!!this.isCovered(t,this._resultPolyList)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(If);Cf.overlayOp=function(t,e,n){return new Cf(t,e).getResultGeometry(n)},Cf.intersection=function(t,e){if(t.isEmpty()||e.isEmpty())return Cf.createEmptyResult(Cf.INTERSECTION,t,e,t.getFactory());if(t.isGeometryCollection()){var n=e;return Up.map(t,{interfaces_:function(){return[Nf.MapOp]},map:function(t){return t.intersection(n)}})}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),of.overlayOp(t,e,Cf.INTERSECTION)},Cf.symDifference=function(t,e){if(t.isEmpty()||e.isEmpty()){if(t.isEmpty()&&e.isEmpty())return Cf.createEmptyResult(Cf.SYMDIFFERENCE,t,e,t.getFactory());if(t.isEmpty())return e.copy();if(e.isEmpty())return t.copy()}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),of.overlayOp(t,e,Cf.SYMDIFFERENCE)},Cf.resultDimension=function(t,e,n){var r=e.getDimension(),i=n.getDimension(),o=-1;switch(t){case Cf.INTERSECTION:o=Math.min(r,i);break;case Cf.UNION:o=Math.max(r,i);break;case Cf.DIFFERENCE:o=r;break;case Cf.SYMDIFFERENCE:o=Math.max(r,i)}return o},Cf.createEmptyResult=function(t,e,n,r){var i=null;switch(Cf.resultDimension(t,e,n)){case-1:i=r.createGeometryCollection(new Array(0).fill(null));break;case 0:i=r.createPoint();break;case 1:i=r.createLineString();break;case 2:i=r.createPolygon()}return i},Cf.difference=function(t,e){return t.isEmpty()?Cf.createEmptyResult(Cf.DIFFERENCE,t,e,t.getFactory()):e.isEmpty()?t.copy():(t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),of.overlayOp(t,e,Cf.DIFFERENCE))},Cf.isResultOfOp=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=t.getLocation(0),r=t.getLocation(1);return Cf.isResultOfOp(n,r,e)}if(3===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2];switch(i===Su.BOUNDARY&&(i=Su.INTERIOR),o===Su.BOUNDARY&&(o=Su.INTERIOR),s){case Cf.INTERSECTION:return i===Su.INTERIOR&&o===Su.INTERIOR;case Cf.UNION:return i===Su.INTERIOR||o===Su.INTERIOR;case Cf.DIFFERENCE:return i===Su.INTERIOR&&o!==Su.INTERIOR;case Cf.SYMDIFFERENCE:return i===Su.INTERIOR&&o!==Su.INTERIOR||i!==Su.INTERIOR&&o===Su.INTERIOR}return!1}},Cf.INTERSECTION=1,Cf.UNION=2,Cf.DIFFERENCE=3,Cf.SYMDIFFERENCE=4;var Sf=function(){this._g=null,this._boundaryDistanceTolerance=null,this._linework=null,this._ptLocator=new Ip,this._seg=new gl;var t=arguments[0],e=arguments[1];this._g=t,this._boundaryDistanceTolerance=e,this._linework=this.extractLinework(t)};Sf.prototype.isWithinToleranceOfBoundary=function(t){for(var e=0;e<this._linework.getNumGeometries();e++)for(var n=this._linework.getGeometryN(e).getCoordinateSequence(),r=0;r<n.size()-1;r++){n.getCoordinate(r,this._seg.p0),n.getCoordinate(r+1,this._seg.p1);if(this._seg.distance(t)<=this._boundaryDistanceTolerance)return!0}return!1},Sf.prototype.getLocation=function(t){return this.isWithinToleranceOfBoundary(t)?Su.BOUNDARY:this._ptLocator.locate(t,this._g)},Sf.prototype.extractLinework=function(t){var e=new Mf;t.apply(e);var n=e.getLinework(),r=_h.toLineStringArray(n);return t.getFactory().createMultiLineString(r)},Sf.prototype.interfaces_=function(){return[]},Sf.prototype.getClass=function(){return Sf};var Mf=function(){this._linework=null,this._linework=new bc};Mf.prototype.getLinework=function(){return this._linework},Mf.prototype.filter=function(t){if(t instanceof $c){var e=t;this._linework.add(e.getExteriorRing());for(var n=0;n<e.getNumInteriorRing();n++)this._linework.add(e.getInteriorRingN(n))}},Mf.prototype.interfaces_=function(){return[kc]},Mf.prototype.getClass=function(){return Mf};var Lf=function(){this._g=null,this._doLeft=!0,this._doRight=!0;var t=arguments[0];this._g=t};Lf.prototype.extractPoints=function(t,e,n){for(var r=t.getCoordinates(),i=0;i<r.length-1;i++)this.computeOffsetPoints(r[i],r[i+1],e,n)},Lf.prototype.setSidesToGenerate=function(t,e){this._doLeft=t,this._doRight=e},Lf.prototype.getPoints=function(t){for(var e=new bc,n=bp.getLines(this._g).iterator();n.hasNext();){var r=n.next();this.extractPoints(r,t,e)}return e},Lf.prototype.computeOffsetPoints=function(t,e,n,r){var i=e.x-t.x,o=e.y-t.y,s=Math.sqrt(i*i+o*o),a=n*i/s,u=n*o/s,c=(e.x+t.x)/2,h=(e.y+t.y)/2;if(this._doLeft){var l=new bu(c-u,h+a);r.add(l)}if(this._doRight){var p=new bu(c+u,h-a);r.add(p)}},Lf.prototype.interfaces_=function(){return[]},Lf.prototype.getClass=function(){return Lf};var Pf=function t(){this._geom=null,this._locFinder=null,this._location=new Array(3).fill(null),this._invalidLocation=null,this._boundaryDistanceTolerance=t.TOLERANCE,this._testCoords=new bc;var e=arguments[0],n=arguments[1],r=arguments[2];this._boundaryDistanceTolerance=t.computeBoundaryDistanceTolerance(e,n),this._geom=[e,n,r],this._locFinder=[new Sf(this._geom[0],this._boundaryDistanceTolerance),new Sf(this._geom[1],this._boundaryDistanceTolerance),new Sf(this._geom[2],this._boundaryDistanceTolerance)]},Of={TOLERANCE:{configurable:!0}};Pf.prototype.reportResult=function(t,e,n){Xu.out.println("Overlay result invalid - A:"+Su.toLocationSymbol(e[0])+" B:"+Su.toLocationSymbol(e[1])+" expected:"+(n?"i":"e")+" actual:"+Su.toLocationSymbol(e[2]))},Pf.prototype.isValid=function(t){this.addTestPts(this._geom[0]),this.addTestPts(this._geom[1]);var e=this.checkValid(t);return e},Pf.prototype.checkValid=function(){if(1===arguments.length){for(var t=arguments[0],e=0;e<this._testCoords.size();e++){var n=this._testCoords.get(e);if(!this.checkValid(t,n))return this._invalidLocation=n,!1}return!0}if(2===arguments.length){var r=arguments[0],i=arguments[1];return this._location[0]=this._locFinder[0].getLocation(i),this._location[1]=this._locFinder[1].getLocation(i),this._location[2]=this._locFinder[2].getLocation(i),!!Pf.hasLocation(this._location,Su.BOUNDARY)||this.isValidResult(r,this._location)}},Pf.prototype.addTestPts=function(t){var e=new Lf(t);this._testCoords.addAll(e.getPoints(5*this._boundaryDistanceTolerance))},Pf.prototype.isValidResult=function(t,e){var n=Cf.isResultOfOp(e[0],e[1],t),r=!(n^e[2]===Su.INTERIOR);return r||this.reportResult(t,e,n),r},Pf.prototype.getInvalidLocation=function(){return this._invalidLocation},Pf.prototype.interfaces_=function(){return[]},Pf.prototype.getClass=function(){return Pf},Pf.hasLocation=function(t,e){for(var n=0;n<3;n++)if(t[n]===e)return!0;return!1},Pf.computeBoundaryDistanceTolerance=function(t,e){return Math.min(Jp.computeSizeBasedSnapTolerance(t),Jp.computeSizeBasedSnapTolerance(e))},Pf.isValid=function(t,e,n,r){return new Pf(t,e,r).isValid(n)},Of.TOLERANCE.get=function(){return 1e-6},Object.defineProperties(Pf,Of);var Rf=function t(e){this._geomFactory=null,this._skipEmpty=!1,this._inputGeoms=null,this._geomFactory=t.extractFactory(e),this._inputGeoms=e};Rf.prototype.extractElements=function(t,e){if(null===t)return null;for(var n=0;n<t.getNumGeometries();n++){var r=t.getGeometryN(n);this._skipEmpty&&r.isEmpty()||e.add(r)}},Rf.prototype.combine=function(){for(var t=new bc,e=this._inputGeoms.iterator();e.hasNext();){var n=e.next();this.extractElements(n,t)}return 0===t.size()?null!==this._geomFactory?this._geomFactory.createGeometryCollection(null):null:this._geomFactory.buildGeometry(t)},Rf.prototype.interfaces_=function(){return[]},Rf.prototype.getClass=function(){return Rf},Rf.combine=function(){if(1===arguments.length){var t=arguments[0];return new Rf(t).combine()}if(2===arguments.length){var e=arguments[0],n=arguments[1];return new Rf(Rf.createList(e,n)).combine()}if(3===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2];return new Rf(Rf.createList(r,i,o)).combine()}},Rf.extractFactory=function(t){return t.isEmpty()?null:t.iterator().next().getFactory()},Rf.createList=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new bc;return n.add(t),n.add(e),n}if(3===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2],s=new bc;return s.add(r),s.add(i),s.add(o),s}};var Tf=function(){this._inputPolys=null,this._geomFactory=null;var t=arguments[0];this._inputPolys=t,null===this._inputPolys&&(this._inputPolys=new bc)},Af={STRTREE_NODE_CAPACITY:{configurable:!0}};Tf.prototype.reduceToGeometries=function(t){for(var e=new bc,n=t.iterator();n.hasNext();){var r=n.next(),i=null;Lu(r,wc)?i=this.unionTree(r):r instanceof cc&&(i=r),e.add(i)}return e},Tf.prototype.extractByEnvelope=function(t,e,n){for(var r=new bc,i=0;i<e.getNumGeometries();i++){var o=e.getGeometryN(i);o.getEnvelopeInternal().intersects(t)?r.add(o):n.add(o)}return this._geomFactory.buildGeometry(r)},Tf.prototype.unionOptimized=function(t,e){var n=t.getEnvelopeInternal(),r=e.getEnvelopeInternal();if(!n.intersects(r)){return Rf.combine(t,e)}if(t.getNumGeometries()<=1&&e.getNumGeometries()<=1)return this.unionActual(t,e);var i=n.intersection(r);return this.unionUsingEnvelopeIntersection(t,e,i)},Tf.prototype.union=function(){if(null===this._inputPolys)throw new Error("union() method cannot be called twice");if(this._inputPolys.isEmpty())return null;this._geomFactory=this._inputPolys.iterator().next().getFactory();for(var t=new ol(Tf.STRTREE_NODE_CAPACITY),e=this._inputPolys.iterator();e.hasNext();){var n=e.next();t.insert(n.getEnvelopeInternal(),n)}this._inputPolys=null;var r=t.itemsTree();return this.unionTree(r)},Tf.prototype.binaryUnion=function(){if(1===arguments.length){var t=arguments[0];return this.binaryUnion(t,0,t.size())}if(3===arguments.length){var e=arguments[0],n=arguments[1],r=arguments[2];if(r-n<=1){var i=Tf.getGeometry(e,n);return this.unionSafe(i,null)}if(r-n==2)return this.unionSafe(Tf.getGeometry(e,n),Tf.getGeometry(e,n+1));var o=Math.trunc((r+n)/2),s=this.binaryUnion(e,n,o),a=this.binaryUnion(e,o,r);return this.unionSafe(s,a)}},Tf.prototype.repeatedUnion=function(t){for(var e=null,n=t.iterator();n.hasNext();){var r=n.next();e=null===e?r.copy():e.union(r)}return e},Tf.prototype.unionSafe=function(t,e){return null===t&&null===e?null:null===t?e.copy():null===e?t.copy():this.unionOptimized(t,e)},Tf.prototype.unionActual=function(t,e){return Tf.restrictToPolygons(t.union(e))},Tf.prototype.unionTree=function(t){var e=this.reduceToGeometries(t);return this.binaryUnion(e)},Tf.prototype.unionUsingEnvelopeIntersection=function(t,e,n){var r=new bc,i=this.extractByEnvelope(n,t,r),o=this.extractByEnvelope(n,e,r),s=this.unionActual(i,o);r.add(s);return Rf.combine(r)},Tf.prototype.bufferUnion=function(){if(1===arguments.length){var t=arguments[0];return t.get(0).getFactory().buildGeometry(t).buffer(0)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e.getFactory().createGeometryCollection([e,n]).buffer(0)}},Tf.prototype.interfaces_=function(){return[]},Tf.prototype.getClass=function(){return Tf},Tf.restrictToPolygons=function(t){if(Lu(t,Qc))return t;var e=wp.getPolygons(t);return 1===e.size()?e.get(0):t.getFactory().createMultiPolygon(_h.toPolygonArray(e))},Tf.getGeometry=function(t,e){return e>=t.size()?null:t.get(e)},Tf.union=function(t){return new Tf(t).union()},Af.STRTREE_NODE_CAPACITY.get=function(){return 4},Object.defineProperties(Tf,Af);var Df=function(){};Df.prototype.interfaces_=function(){return[]},Df.prototype.getClass=function(){return Df},Df.union=function(t,e){if(t.isEmpty()||e.isEmpty()){if(t.isEmpty()&&e.isEmpty())return Cf.createEmptyResult(Cf.UNION,t,e,t.getFactory());if(t.isEmpty())return e.copy();if(e.isEmpty())return t.copy()}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),of.overlayOp(t,e,Cf.UNION)};var Ff=function(){return new Yi};Yi.prototype={constructor:Yi,reset:function(){this.s=this.t=0},add:function(t){Vi(qf,t,this.t),Vi(this,qf.s,this.s),this.s?this.t+=qf.t:this.s=qf.t},valueOf:function(){return this.s}};var qf=new Yi,Gf=1e-6,Bf=Math.PI,kf=Bf/2,zf=Bf/4,jf=2*Bf,Xf=180/Bf,Uf=Bf/180,Yf=Math.abs,Vf=Math.atan,Hf=Math.atan2,Wf=Math.cos,Jf=Math.exp,Zf=Math.log,Kf=Math.sin,Qf=Math.sqrt,$f=Math.tan,tg={Feature:function(t,e){Ji(t.geometry,e)},FeatureCollection:function(t,e){for(var n=t.features,r=-1,i=n.length;++r<i;)Ji(n[r].geometry,e)}},eg={Sphere:function(t,e){e.sphere()},Point:function(t,e){t=t.coordinates,e.point(t[0],t[1],t[2])},MultiPoint:function(t,e){for(var n=t.coordinates,r=-1,i=n.length;++r<i;)t=n[r],e.point(t[0],t[1],t[2])},LineString:function(t,e){Zi(t.coordinates,e,0)},MultiLineString:function(t,e){for(var n=t.coordinates,r=-1,i=n.length;++r<i;)Zi(n[r],e,0)},Polygon:function(t,e){Ki(t.coordinates,e)},MultiPolygon:function(t,e){for(var n=t.coordinates,r=-1,i=n.length;++r<i;)Ki(n[r],e)},GeometryCollection:function(t,e){for(var n=t.geometries,r=-1,i=n.length;++r<i;)Ji(n[r],e)}},ng=function(t,e){t&&tg.hasOwnProperty(t.type)?tg[t.type](t,e):Ji(t,e)},rg=(Ff(),Ff(),Ff(),function(t,e){function n(n,r){return n=t(n,r),e(n[0],n[1])}return t.invert&&e.invert&&(n.invert=function(n,r){return(n=e.invert(n,r))&&t.invert(n[0],n[1])}),n});oo.invert=oo;var ig=function(t){function e(e){return e=t(e[0]*Uf,e[1]*Uf),e[0]*=Xf,e[1]*=Xf,e}return t=so(t[0]*Uf,t[1]*Uf,t.length>2?t[2]*Uf:0),e.invert=function(e){return e=t.invert(e[0]*Uf,e[1]*Uf),e[0]*=Xf,e[1]*=Xf,e},e},og=function(){var t,e=[];return{point:function(e,n){t.push([e,n])},lineStart:function(){e.push(t=[])},lineEnd:Wi,rejoin:function(){e.length>1&&e.push(e.pop().concat(e.shift()))},result:function(){var n=e;return e=[],t=null,n}}},sg=function(t,e,n,r,i,o){var s,a=t[0],u=t[1],c=0,h=1,l=e[0]-a,p=e[1]-u;if(s=n-a,l||!(s>0)){if(s/=l,l<0){if(s<c)return;s<h&&(h=s)}else if(l>0){if(s>h)return;s>c&&(c=s)}if(s=i-a,l||!(s<0)){if(s/=l,l<0){if(s>h)return;s>c&&(c=s)}else if(l>0){if(s<c)return;s<h&&(h=s)}if(s=r-u,p||!(s>0)){if(s/=p,p<0){if(s<c)return;s<h&&(h=s)}else if(p>0){if(s>h)return;s>c&&(c=s)}if(s=o-u,p||!(s<0)){if(s/=p,p<0){if(s>h)return;s>c&&(c=s)}else if(p>0){if(s<c)return;s<h&&(h=s)}return c>0&&(t[0]=a+c*l,t[1]=u+c*p),h<1&&(e[0]=a+h*l,e[1]=u+h*p),!0}}}}},ag=function(t,e){return Yf(t[0]-e[0])<Gf&&Yf(t[1]-e[1])<Gf},ug=function(t,e,n,r,i){var o,s,a=[],u=[];if(t.forEach(function(t){if(!((e=t.length-1)<=0)){var e,n,r=t[0],s=t[e];if(ag(r,s)){for(i.lineStart(),o=0;o<e;++o)i.point((r=t[o])[0],r[1]);i.lineEnd()}else a.push(n=new lo(r,t,null,!0)),u.push(n.o=new lo(r,null,n,!1)),a.push(n=new lo(s,t,null,!1)),u.push(n.o=new lo(s,null,n,!0))}}),a.length){for(u.sort(e),po(a),po(u),o=0,s=u.length;o<s;++o)u[o].e=n=!n;for(var c,h,l=a[0];;){for(var p=l,f=!0;p.v;)if((p=p.n)===l)return;c=p.z,i.lineStart();do{if(p.v=p.o.v=!0,p.e){if(f)for(o=0,s=c.length;o<s;++o)i.point((h=c[o])[0],h[1]);else r(p.x,p.n.x,1,i);p=p.n}else{if(f)for(c=p.p.z,o=c.length-1;o>=0;--o)i.point((h=c[o])[0],h[1]);else r(p.x,p.p.x,-1,i);p=p.p}c=(p=p.o).z,f=!f}while(!p.v);i.lineEnd()}}},cg=function(t,e){return t<e?-1:t>e?1:t>=e?0:NaN},hg=(function(t){1===t.length&&(t=function(t){return function(e,n){return cg(t(e),n)}}(t))}(cg),function(t){for(var e,n,r,i=t.length,o=-1,s=0;++o<i;)s+=t[o].length;for(n=new Array(s);--i>=0;)for(e=(r=t[i]).length;--e>=0;)n[--s]=r[e];return n}),lg=1e9,pg=-lg,fg=Ff(),gg=(Ff(),function(t){return t}),dg=(Ff(),Ff(),1/0),yg=dg,_g=-dg,mg=_g,vg={point:function(t,e){t<dg&&(dg=t),t>_g&&(_g=t),e<yg&&(yg=e),e>mg&&(mg=e)},lineStart:Wi,lineEnd:Wi,polygonStart:Wi,polygonEnd:Wi,result:function(){var t=[[dg,yg],[_g,mg]];return _g=mg=-(yg=dg=1/0),t}},xg=(Ff(),function(t,e,n,r){return function(i,o){function s(e,n){var r=i(e,n);t(e=r[0],n=r[1])&&o.point(e,n)}function a(t,e){var n=i(t,e);y.point(n[0],n[1])}function u(){E.point=a,y.lineStart()}function c(){E.point=s,y.lineEnd()}function h(t,e){d.push([t,e]);var n=i(t,e);v.point(n[0],n[1])}function l(){v.lineStart(),d=[]}function p(){h(d[0][0],d[0][1]),v.lineEnd();var t,e,n,r,i=v.clean(),s=m.result(),a=s.length;if(d.pop(),f.push(d),d=null,a)if(1&i){if(n=s[0],(e=n.length-1)>0){for(x||(o.polygonStart(),x=!0),o.lineStart(),t=0;t<e;++t)o.point((r=n[t])[0],r[1]);o.lineEnd()}}else a>1&&2&i&&s.push(s.pop().concat(s.shift())),g.push(s.filter(go))}var f,g,d,y=e(o),_=i.invert(r[0],r[1]),m=og(),v=e(m),x=!1,E={point:s,lineStart:u,lineEnd:c,polygonStart:function(){E.point=h,E.lineStart=l,E.lineEnd=p,g=[],f=[]},polygonEnd:function(){E.point=s,E.lineStart=u,E.lineEnd=c,g=hg(g);var t=function(t,e){var n=e[0],r=e[1],i=[Kf(n),-Wf(n),0],o=0,s=0;fg.reset();for(var a=0,u=t.length;a<u;++a)if(h=(c=t[a]).length)for(var c,h,l=c[h-1],p=l[0],f=l[1]/2+zf,g=Kf(f),d=Wf(f),y=0;y<h;++y,p=m,g=x,d=E,l=_){var _=c[y],m=_[0],v=_[1]/2+zf,x=Kf(v),E=Wf(v),w=m-p,b=w>=0?1:-1,I=b*w,N=I>Bf,C=g*x;if(fg.add(Hf(C*b*Kf(I),d*E+C*Wf(I))),o+=N?w+b*jf:w,N^p>=n^m>=n){var S=eo($i(l),$i(_));io(S);var M=eo(i,S);io(M);var L=(N^w>=0?-1:1)*Hi(M[2]);(r>L||r===L&&(S[0]||S[1]))&&(s+=N^w>=0?1:-1)}}return(o<-Gf||o<Gf&&fg<-Gf)^1&s}(f,_);g.length?(x||(o.polygonStart(),x=!0),ug(g,yo,t,n,o)):t&&(x||(o.polygonStart(),x=!0),o.lineStart(),n(null,null,1,o),o.lineEnd()),x&&(o.polygonEnd(),x=!1),g=f=null},sphere:function(){o.polygonStart(),o.lineStart(),n(null,null,1,o),o.lineEnd(),o.polygonEnd()}};return E}}),Eg=xg(function(){return!0},function(t){var e,n=NaN,r=NaN,i=NaN;return{lineStart:function(){t.lineStart(),e=1},point:function(o,s){var a=o>0?Bf:-Bf,u=Yf(o-n);Yf(u-Bf)<Gf?(t.point(n,r=(r+s)/2>0?kf:-kf),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),t.point(o,r),e=0):i!==a&&u>=Bf&&(Yf(n-i)<Gf&&(n-=i*Gf),Yf(o-a)<Gf&&(o-=a*Gf),r=function(t,e,n,r){var i,o,s=Kf(t-n);return Yf(s)>Gf?Vf((Kf(e)*(o=Wf(r))*Kf(n)-Kf(r)*(i=Wf(e))*Kf(t))/(i*o*s)):(e+r)/2}(n,r,o,s),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),e=0),t.point(n=o,r=s),i=a},lineEnd:function(){t.lineEnd(),n=r=NaN},clean:function(){return 2-e}}},function(t,e,n,r){var i;if(null==t)i=n*kf,r.point(-Bf,i),r.point(0,i),r.point(Bf,i),r.point(Bf,0),r.point(Bf,-i),r.point(0,-i),r.point(-Bf,-i),r.point(-Bf,0),r.point(-Bf,i);else if(Yf(t[0]-e[0])>Gf){var o=t[0]<e[0]?Bf:-Bf;i=n*o/2,r.point(-o,i),r.point(0,i),r.point(o,i)}else r.point(e[0],e[1])},[-Bf,-kf]),wg=function(t,e){function n(t,e){return Wf(t)*Wf(e)>o}function r(t,e,n){var r=[1,0,0],i=eo($i(t),$i(e)),s=to(i,i),a=i[0],u=s-a*a;if(!u)return!n&&t;var c=o*s/u,h=-o*a/u,l=eo(r,i),p=ro(r,c);no(p,ro(i,h));var f=l,g=to(p,f),d=to(f,f),y=g*g-d*(to(p,p)-1);if(!(y<0)){var _=Qf(y),m=ro(f,(-g-_)/d);if(no(m,p),m=Qi(m),!n)return m;var v,x=t[0],E=e[0],w=t[1],b=e[1];E<x&&(v=x,x=E,E=v);var I=E-x,N=Yf(I-Bf)<Gf;if(!N&&b<w&&(v=w,w=b,b=v),N||I<Gf?N?w+b>0^m[1]<(Yf(m[0]-x)<Gf?w:b):w<=m[1]&&m[1]<=b:I>Bf^(x<=m[0]&&m[0]<=E)){var C=ro(f,(-g+_)/d);return no(C,p),[m,Qi(C)]}}}function i(e,n){var r=s?t:Bf-t,i=0;return e<-r?i|=1:e>r&&(i|=2),n<-r?i|=4:n>r&&(i|=8),i}var o=Wf(t),s=o>0,a=Yf(o)>Gf;return xg(n,function(t){var e,o,u,c,h;return{lineStart:function(){c=u=!1,h=1},point:function(l,p){var f,g=[l,p],d=n(l,p),y=s?d?0:i(l,p):d?i(l+(l<0?Bf:-Bf),p):0;if(!e&&(c=u=d)&&t.lineStart(),d!==u&&(!(f=r(e,g))||ag(e,f)||ag(g,f))&&(g[0]+=Gf,g[1]+=Gf,d=n(g[0],g[1])),d!==u)h=0,d?(t.lineStart(),f=r(g,e),t.point(f[0],f[1])):(f=r(e,g),t.point(f[0],f[1]),t.lineEnd()),e=f;else if(a&&e&&s^d){var _;y&o||!(_=r(g,e,!0))||(h=0,s?(t.lineStart(),t.point(_[0][0],_[0][1]),t.point(_[1][0],_[1][1]),t.lineEnd()):(t.point(_[1][0],_[1][1]),t.lineEnd(),t.lineStart(),t.point(_[0][0],_[0][1])))}!d||e&&ag(e,g)||t.point(g[0],g[1]),e=g,u=d,o=y},lineEnd:function(){u&&t.lineEnd(),e=null},clean:function(){return h|(c&&u)<<1}}},function(n,r,i,o){!function(t,e,n,r,i,o){if(n){var s=Wf(e),a=Kf(e),u=r*n;null==i?(i=e+r*jf,o=e-u/2):(i=ho(s,i),o=ho(s,o),(r>0?i<o:i>o)&&(i+=r*jf));for(var c,h=i;r>0?h>o:h<o;h-=u)c=Qi([s,-a*Wf(h),-a*Kf(h)]),t.point(c[0],c[1])}}(o,t,e,i,n,r)},s?[0,-t]:[-Bf,t-Bf])};mo.prototype={constructor:mo,point:function(t,e){this.stream.point(t,e)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var bg=16,Ig=Wf(30*Uf),Ng=function(t,e){return+e?function(t,e){function n(r,i,o,s,a,u,c,h,l,p,f,g,d,y){var _=c-r,m=h-i,v=_*_+m*m;if(v>4*e&&d--){var x=s+p,E=a+f,w=u+g,b=Qf(x*x+E*E+w*w),I=Hi(w/=b),N=Yf(Yf(w)-1)<Gf||Yf(o-l)<Gf?(o+l)/2:Hf(E,x),C=t(N,I),S=C[0],M=C[1],L=S-r,P=M-i,O=m*L-_*P;(O*O/v>e||Yf((_*L+m*P)/v-.5)>.3||s*p+a*f+u*g<Ig)&&(n(r,i,o,s,a,u,S,M,N,x/=b,E/=b,w,d,y),y.point(S,M),n(S,M,N,x,E,w,c,h,l,p,f,g,d,y))}}return function(e){function r(n,r){n=t(n,r),e.point(n[0],n[1])}function i(){_=NaN,w.point=o,e.lineStart()}function o(r,i){var o=$i([r,i]),s=t(r,i);n(_,m,y,v,x,E,_=s[0],m=s[1],y=r,v=o[0],x=o[1],E=o[2],bg,e),e.point(_,m)}function s(){w.point=r,e.lineEnd()}function a(){i(),w.point=u,w.lineEnd=c}function u(t,e){o(h=t,e),l=_,p=m,f=v,g=x,d=E,w.point=o}function c(){n(_,m,y,v,x,E,l,p,h,f,g,d,bg,e),w.lineEnd=s,s()}var h,l,p,f,g,d,y,_,m,v,x,E,w={point:r,lineStart:i,lineEnd:s,polygonStart:function(){e.polygonStart(),w.lineStart=a},polygonEnd:function(){e.polygonEnd(),w.lineStart=i}};return w}}(t,e):function(t){return _o({point:function(e,n){e=t(e,n),this.stream.point(e[0],e[1])}})}(t)},Cg=_o({point:function(t,e){this.stream.point(t*Uf,e*Uf)}});Eo.invert=function(t,e){return[t,2*Vf(Jf(e))-kf]},wo.invert=function(t,e){return[-e,2*Vf(Jf(t))-kf]};var Sg=function(){var t=function(t){function e(){var e=Bf*a(),s=o(ig(o.rotate()).invert([0,0]));return c(null==h?[[s[0]-e,s[1]-e],[s[0]+e,s[1]+e]]:t===Eo?[[Math.max(s[0]-e,h),n],[Math.min(s[0]+e,r),i]]:[[h,Math.max(s[1]-e,n)],[r,Math.min(s[1]+e,i)]])}var n,r,i,o=xo(t),s=o.center,a=o.scale,u=o.translate,c=o.clipExtent,h=null;return o.scale=function(t){return arguments.length?(a(t),e()):a()},o.translate=function(t){return arguments.length?(u(t),e()):u()},o.center=function(t){return arguments.length?(s(t),e()):s()},o.clipExtent=function(t){return arguments.length?(null==t?h=n=r=i=null:(h=+t[0][0],n=+t[0][1],r=+t[1][0],i=+t[1][1]),e()):null==h?null:[[h,n],[r,i]]},e()}(wo),e=t.center,n=t.rotate;return t.center=function(t){return arguments.length?e([-t[1],t[0]]):(t=e(),[t[1],-t[0]])},t.rotate=function(t){return arguments.length?n([t[0],t[1],t.length>2?t[2]+90:90]):(t=n(),[t[0],t[1],t[2]-90])},n([0,0,90]).scale(159.155)};t.projection=Cs,t.random=gu,t.clusters=du,t.helpers=ko,t.invariant=jo,t.meta=zo,t.isolines=function(t,e,n){if(n=n||{},!I(n))throw new Error("options is invalid");var r=n.zProperty||"elevation",i=n.commonProperties||{},o=n.breaksProperties||[];if(W(t,"Point","Input must contain Points"),!e)throw new Error("breaks is required");if(!Array.isArray(e))throw new Error("breaks must be an Array");if(!I(i))throw new Error("commonProperties must be an Object");if(!Array.isArray(o))throw new Error("breaksProperties must be an Array");var s=rt(t,{zProperty:r,flip:!0});return c(function(t,e,n){var r=j(n),i=r[2]-r[0],o=r[3]-r[1],s=r[0],a=r[1],u=e[0].length-1,c=e.length-1,h=i/u,l=o/c,p=function(t){t[0]=t[0]*h+s,t[1]=t[1]*l+a};return t.forEach(function(t){S(t,p)}),t}(function(t,e,n,r,i){for(var o=[],s=1;s<e.length;s++){var a=+e[s],u=Object.assign({},r,i[s]);u[n]=a;var c=h(Q(t,a),u);o.push(c)}return o}(s,e,r,i,o),s,t))},t.convex=Lt,t.pointsWithinPolygon=Rt,t.concave=function(t,n){if(n=n||{},!I(n))throw new Error("options is invalid");if(!t)throw new Error("points is required");var r=n.maxEdge||1/0;if(!b(r))throw new Error("maxEdge is invalid");var i=Tt(function(t){var e=[],n={};return O(t,function(t){if(t.geometry){var r=t.geometry.coordinates.join("-");n.hasOwnProperty(r)||(e.push(t),n[r]=!0)}}),c(e)}(t));if(i.features=i.features.filter(function(t){var e=t.geometry.coordinates[0][0],i=t.geometry.coordinates[0][1],o=t.geometry.coordinates[0][2],s=qt(e,i,n),a=qt(i,o,n),u=qt(e,o,n);return s<=r&&a<=r&&u<=r}),i.features.length<1)return null;var o=$t(i,n);return 1===o.coordinates.length&&(o.coordinates=o.coordinates[0],o.type="Polygon"),e(o)},t.collect=function(t,e,n,r){var i=Vo(6),o=e.features.map(function(t){return{minX:t.geometry.coordinates[0],minY:t.geometry.coordinates[1],maxX:t.geometry.coordinates[0],maxY:t.geometry.coordinates[1],property:t.properties[n]}});return i.load(o),t.features.forEach(function(t){t.properties||(t.properties={});var e=j(t),n=[];i.search({minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]}).forEach(function(e){Pt([e.minX,e.minY],t)&&n.push(e.property)}),t.properties[r]=n}),t},t.flip=function(t,e){if(e=e||{},!I(e))throw new Error("options is invalid");var n=e.mutate;if(!t)throw new Error("geojson is required");return!1!==n&&void 0!==n||(t=Gt(t)),S(t,function(t){var e=t[0],n=t[1];t[0]=n,t[1]=e}),t},t.simplify=function(t,e){if(e=e||{},!I(e))throw new Error("options is invalid");var n=void 0!==e.tolerance?e.tolerance:1,r=e.highQuality||!1,i=e.mutate||!1;if(!t)throw new Error("geojson is required");if(n&&n<0)throw new Error("invalid tolerance");return!0!==i&&(t=Gt(t)),A(t,function(t){!function(t,e,n){var r=t.type;if("Point"===r||"MultiPoint"===r)return t;te(t,!0);var i=t.coordinates;switch(r){case"LineString":t.coordinates=se(i,e,n);break;case"MultiLineString":t.coordinates=i.map(function(t){return se(t,e,n)});break;case"Polygon":t.coordinates=ae(i,e,n);break;case"MultiPolygon":t.coordinates=i.map(function(t){return ae(t,e,n)})}}(t,n,r)}),t},t.bezierSpline=ue,t.tag=function(t,e,n,r){return t=Gt(t),e=Gt(e),O(t,function(t){t.properties||(t.properties={}),O(e,function(e){void 0===t.properties[r]&&Pt(t,e)&&(t.properties[r]=e.properties[n])})}),t},t.sample=function(t,e){if(!t)throw new Error("featurecollection is required");if(null===e||void 0===e)throw new Error("num is required");if("number"!=typeof e)throw new Error("num must be a number");return c(function(t,e){for(var n,r,i=t.slice(0),o=t.length,s=o-e;o-- >s;)r=Math.floor((o+1)*Math.random()),n=i[r],i[r]=i[o],i[o]=n;return i.slice(s)}(t.features,e))},t.envelope=he,t.square=le,t.circle=fe,t.midpoint=function(t,e){return pe(t,qt(t,e)/2,ge(t,e))},t.center=de,t.centerOfMass=_e,t.centroid=ye,t.combine=function(t){function n(t,e,n){n?r[e].coordinates=r[e].coordinates.concat(t.geometry.coordinates):r[e].coordinates.push(t.geometry.coordinates),r[e].properties.push(t.properties)}var r={MultiPoint:{coordinates:[],properties:[]},MultiLineString:{coordinates:[],properties:[]},MultiPolygon:{coordinates:[],properties:[]}},i=Object.keys(r).reduce(function(t,e){return t[e.replace("Multi","")]=e,t},{});return O(t,function(t){t.geometry&&(r[t.geometry.type]?n(t,t.geometry.type,!0):i[t.geometry.type]&&n(t,i[t.geometry.type],!1))}),c(Object.keys(r).filter(function(t){return r[t].coordinates.length}).sort().map(function(t){return e({type:t,coordinates:r[t].coordinates},{collectedProperties:r[t].properties})}))},t.distance=qt,t.explode=me,t.bbox=j,t.tesselate=function(t){if(!t.geometry||"Polygon"!==t.geometry.type&&"MultiPolygon"!==t.geometry.type)throw new Error("input must be a Polygon or MultiPolygon");var e={type:"FeatureCollection",features:[]};return"Polygon"===t.geometry.type?e.features=De(t.geometry.coordinates):t.geometry.coordinates.forEach(function(t){e.features=e.features.concat(De(t))}),e},t.bboxPolygon=ce,t.booleanPointInPolygon=Pt,t.nearestPoint=Fe,t.nearestPointOnLine=on,t.nearestPointToLine=function(t,e,n){if(n=n||{},!I(n))throw new Error("options is invalid");var r=n.units,i=n.properties||{};if(!t)throw new Error("points is required");if(!(t=function(t){var e=[];switch(t.geometry?t.geometry.type:t.type){case"GeometryCollection":return A(t,function(t){"Point"===t.type&&e.push({type:"Feature",properties:{},geometry:t})}),{type:"FeatureCollection",features:e};case"FeatureCollection":return t.features=t.features.filter(function(t){return"Point"===t.geometry.type}),t;default:throw new Error("points must be a Point Collection")}}(t)).features.length)throw new Error("points must contain features");if(!e)throw new Error("line is required");if("LineString"!==K(e))throw new Error("line must be a LineString");var o=1/0,s=null;return O(t,function(t){var n=gn(t,e,{units:r});n<o&&(o=n,s=t)}),s&&(s.properties=Object.assign({dist:o},s.properties,i)),s},t.planepoint=function(t,e){var n=X(t),r=J(e).coordinates[0];if(r.length<4)throw new Error("OuterRing of a Polygon must have 4 or more Positions.");var i=e.properties||{},o=i.a,s=i.b,a=i.c,u=n[0],c=n[1],h=r[0][0],l=r[0][1],p=void 0!==o?o:r[0][2],f=r[1][0],g=r[1][1],d=void 0!==s?s:r[1][2],y=r[2][0],_=r[2][1],m=void 0!==a?a:r[2][2];return(m*(u-h)*(c-g)+p*(u-f)*(c-_)+d*(u-y)*(c-l)-d*(u-h)*(c-_)-m*(u-f)*(c-l)-p*(u-y)*(c-g))/((u-h)*(c-g)+(u-f)*(c-_)+(u-y)*(c-l)-(u-h)*(c-_)-(u-f)*(c-l)-(u-y)*(c-g))},t.tin=Tt,t.bearing=ge,t.destination=pe,t.kinks=function(t){var e,n,i={type:"FeatureCollection",features:[]};if("LineString"===(n="Feature"===t.type?t.geometry:t).type)e=[n.coordinates];else if("MultiLineString"===n.type)e=n.coordinates;else if("MultiPolygon"===n.type)e=[].concat.apply([],n.coordinates);else{if("Polygon"!==n.type)throw new Error("Input must be a LineString, MultiLineString, Polygon, or MultiPolygon Feature or Geometry");e=n.coordinates}return e.forEach(function(t){e.forEach(function(e){for(var n=0;n<t.length-1;n++)for(var o=n;o<e.length-1;o++){if(t===e){if(1===Math.abs(n-o))continue;if(0===n&&o===t.length-2&&t[n][0]===t[t.length-1][0]&&t[n][1]===t[t.length-1][1])continue}var s=function(t,e,n,r,i,o,s,a){var u,c,h,l,p,f={x:null,y:null,onLine1:!1,onLine2:!1};return 0==(u=(a-o)*(n-t)-(s-i)*(r-e))?null!==f.x&&null!==f.y&&f:(c=e-o,h=t-i,l=(s-i)*c-(a-o)*h,p=(n-t)*c-(r-e)*h,c=l/u,h=p/u,f.x=t+c*(n-t),f.y=e+c*(r-e),c>=0&&c<=1&&(f.onLine1=!0),h>=0&&h<=1&&(f.onLine2=!0),!(!f.onLine1||!f.onLine2)&&[f.x,f.y])}(t[n][0],t[n][1],t[n+1][0],t[n+1][1],e[o][0],e[o][1],e[o+1][0],e[o+1][1]);s&&i.features.push(r([s[0],s[1]]))}})}),i},t.pointOnFeature=yn,t.area=mn,t.along=function(t,e,n){if(n=n||{},!I(n))throw new Error("options is invalid");var i;if("Feature"===t.type)i=t.geometry.coordinates;else{if("LineString"!==t.type)throw new Error("input must be a LineString Feature or Geometry");i=t.coordinates}if(!b(e))throw new Error("distance must be a number");for(var o=0,s=0;s<i.length&&!(e>=o&&s===i.length-1);s++){if(o>=e){var a=e-o;if(a){var u=ge(i[s],i[s-1])-180;return pe(i[s],a,u,n)}return r(i[s])}o+=qt(i[s],i[s+1],n)}return r(i[i.length-1])},t.length=bn,t.lineSlice=function(t,e,n){var r=U(n);if("LineString"!==K(n))throw new Error("line must be a LineString");for(var i,o=on(n,t),s=on(n,e),u=[(i=o.properties.index<=s.properties.index?[o,s]:[s,o])[0].geometry.coordinates],c=i[0].properties.index+1;c<i[1].properties.index+1;c++)u.push(r[c]);return u.push(i[1].geometry.coordinates),a(u,n.properties)},t.lineSliceAlong=In,t.pointGrid=Ln,t.truncate=Pn,t.flatten=function(t){if(!t)throw new Error("geojson is required");var e=[];return F(t,function(t){e.push(t)}),c(e)},t.lineIntersect=nn,t.lineChunk=function(t,e,n){if(n=n||{},!I(n))throw new Error("options is invalid");var r=n.units,i=n.reverse;if(!t)throw new Error("geojson is required");if(e<=0)throw new Error("segmentLength must be greater than 0");var o=[];return F(t,function(t){i&&(t.geometry.coordinates=t.geometry.coordinates.reverse()),function(t,e,n,r){var i=bn(t,{units:n});if(i<=e)return r(t);var o=i/e;Number.isInteger(o)||(o=Math.floor(o)+1);for(var s=0;s<o;s++){var a=In(t,e*s,e*(s+1),{units:n});r(a,s)}}(t,e,r,function(t){o.push(t)})}),c(o)},t.unkinkPolygon=function(t){var e=[];return F(t,function(t){"Polygon"===t.geometry.type&&O(Ls(t),function(n){e.push(o(n.geometry.coordinates,t.properties))})}),c(e)},t.greatCircle=function(t,e,n){if("object"!=typeof(n=n||{}))throw new Error("options is invalid");var r=n.properties,i=n.npoints,o=n.offset;return t=X(t),e=X(e),r=r||{},i=i||100,o=o||10,new qs({x:t[0],y:t[1]},{x:e[0],y:e[1]},r).Arc(i,{offset:o}).json()},t.lineSegment=en,t.lineSplit=function(t,e){if(!t)throw new Error("line is required");if(!e)throw new Error("splitter is required");var n=K(t),r=K(e);if("LineString"!==n)throw new Error("line must be LineString");if("FeatureCollection"===r)throw new Error("splitter cannot be a FeatureCollection");if("GeometryCollection"===r)throw new Error("splitter cannot be a GeometryCollection");var i=Pn(e,{precision:7});switch(r){case"Point":return Dn(t,i);case"MultiPoint":return An(t,i);case"LineString":case"MultiLineString":case"Polygon":case"MultiPolygon":return An(t,nn(t,i))}},t.lineArc=Gn,t.polygonToLine=kn,t.lineToPolygon=jn,t.bboxClip=function(t,e){var n=function(t){return t.geometry?t.geometry.type:t.type}(t),r=U(t),i=t.properties;switch(n){case"LineString":case"MultiLineString":var s=[];return"LineString"===n&&(r=[r]),r.forEach(function(t){Gs(t,e,s)}),1===s.length?a(s[0],i):h(s,i);case"Polygon":return o(Wn(r,e),i);case"MultiPolygon":return p(r.map(function(t){return Wn(t,e)}),i);default:throw new Error("geometry "+n+" not supported")}},t.lineOverlap=$n,t.sector=function(t,e,n,r,i){if(i=i||{},!I(i))throw new Error("options is invalid");if(!t)throw new Error("center is required");if(void 0===n||null===n)throw new Error("bearing1 is required");if(void 0===r||null===r)throw new Error("bearing2 is required");if(!e)throw new Error("radius is required");if("object"!=typeof i)throw new Error("options must be an object");if(er(n)===er(r))return fe(t,e,i);var s=U(t),a=[[s]];return S(Gn(t,e,n,r,i),function(t){a[0].push(t)}),a[0].push(s),o(a)},t.rhumbBearing=sn,t.rhumbDistance=un,t.rhumbDestination=nr,t.polygonTangents=function(t,e){var n,i,o,s=U(t),a=U(e);switch(K(e)){case"Polygon":n=a[0][0],i=a[0][0],o=ir(a[0][0],a[0][a[0].length-1],s);var u=rr(a[0],s,o,void 0,n,i);n=u[0],i=u[1];break;case"MultiPolygon":n=a[0][0][0],i=a[0][0][0],o=ir(a[0][0][0],a[0][0][a[0][0].length-1],s),a.forEach(function(t){var e=rr(t[0],s,o,void 0,n,i);n=e[0],i=e[1]})}return c([r(n),r(i)])},t.rewind=function(t,e){if(e=e||{},!I(e))throw new Error("options is invalid");var n=e.reverse||!1,r=e.mutate||!1;if(!t)throw new Error("<geojson> is required");if("boolean"!=typeof n)throw new Error("<reverse> must be a boolean");if("boolean"!=typeof r)throw new Error("<mutate> must be a boolean");!1===r&&(t=Gt(t));var i=[];switch(t.type){case"GeometryCollection":return A(t,function(t){sr(t,n)}),t;case"FeatureCollection":return O(t,function(t){O(sr(t,n),function(t){i.push(t)})}),c(i)}return sr(t,n)},t.isobands=function(t,e,n){if(n=n||{},!I(n))throw new Error("options is invalid");var r=n.zProperty||"elevation",i=n.commonProperties||{},s=n.breaksProperties||[];if(W(t,"Point","Input must contain Points"),!e)throw new Error("breaks is required");if(!Array.isArray(e))throw new Error("breaks is not an Array");if(!I(i))throw new Error("commonProperties is not an Object");if(!Array.isArray(s))throw new Error("breaksProperties is not an Array");var a=cr(t,{zProperty:r,flip:!0}),u=function(t,e,n){for(var r=[],i=1;i<e.length;i++){var s=+e[i-1],a=+e[i],u=hr(t,s,a-s),c=function(t){var e=[],n=[];t.forEach(function(t){var r=mn(o([t]));n.push(r),e.push({ring:t,area:r})}),n.sort(function(t,e){return e-t});var r=[];return n.forEach(function(t){for(var n=0;n<e.length;n++)if(e[n].area===t){r.push(e[n].ring),e.splice(n,1);break}}),r}(u),h=function(t){for(var e=t.map(function(t){return{lrCoordinates:t,grouped:!1}}),n=[];!function(t){for(var e=0;e<t.length;e++)if(!1===t[e].grouped)return!1;return!0}(e);)for(var r=0;r<e.length;r++)if(!e[r].grouped){var i=[];i.push(e[r].lrCoordinates),e[r].grouped=!0;for(var s=o([e[r].lrCoordinates]),a=r+1;a<e.length;a++)if(!e[a].grouped){var u=o([e[a].lrCoordinates]);(function(t,e){for(var n=me(t),r=0;r<n.features.length;r++)if(!Pt(n.features[r],e))return!1;return!0})(u,s)&&(i.push(e[a].lrCoordinates),e[a].grouped=!0)}n.push(i)}return n}(c),l={};l.groupedRings=h,l[n]=s+"-"+a,r.push(l)}return r}(a,e,r);return c((u=function(t,e,n){var r=j(n),i=r[2]-r[0],o=r[3]-r[1],s=r[0],a=r[1],u=e[0].length-1,c=e.length-1,h=i/u,l=o/c,p=function(t){t[0]=t[0]*h+s,t[1]=t[1]*l+a};return t.forEach(function(t){t.groupedRings.forEach(function(t){t.forEach(function(t){t.forEach(p)})})}),t}(u,a,t)).map(function(t,e){if(s[e]&&!I(s[e]))throw new Error("Each mappedProperty is required to be an Object");var n=Object.assign({},i,s[e]);return n[r]=t[r],p(t.groupedRings,n)}))},t.transformRotate=fr,t.transformScale=gr,t.transformTranslate=function(t,e,n,r){if(r=r||{},!I(r))throw new Error("options is invalid");var i=r.units,o=r.zTranslation,s=r.mutate;if(!t)throw new Error("geojson is required");if(void 0===e||null===e||isNaN(e))throw new Error("distance is required");if(o&&"number"!=typeof o&&isNaN(o))throw new Error("zTranslation is not a number");if(o=void 0!==o?o:0,0===e&&0===o)return t;if(void 0===n||null===n||isNaN(n))throw new Error("direction is required");return e<0&&(e=-e,n=-n),!1!==s&&void 0!==s||(t=Gt(t)),S(t,function(t){var r=U(nr(t,e,n,{units:i}));t[0]=r[0],t[1]=r[1],o&&3===t.length&&(t[2]+=o)}),t},t.lineOffset=function(t,e,n){if(n=n||{},!I(n))throw new Error("options is invalid");var r=n.units;if(!t)throw new Error("geojson is required");if(void 0===e||null===e||isNaN(e))throw new Error("distance is required");var i=K(t),o=t.properties;switch(i){case"LineString":return vr(t,e,r);case"MultiLineString":var s=[];return F(t,function(t){s.push(vr(t,e,r).geometry.coordinates)}),h(s,o);default:throw new Error("geometry "+i+" is not supported")}},t.polygonize=function(t){var e=qa.fromGeoJson(t);e.deleteDangles(),e.deleteCutEdges();var n=[],r=[];return e.getEdgeRings().filter(function(t){return t.isValid()}).forEach(function(t){t.isHole()?n.push(t):r.push(t)}),n.forEach(function(t){Da.findEdgeRingContaining(t,r)&&r.push(t)}),c(r.map(function(t){return t.toPolygon()}))},t.booleanDisjoint=function(t,e){var n;return F(t,function(t){F(e,function(e){if(!1===n)return!1;n=function(t,e){switch(t.type){case"Point":switch(e.type){case"Point":return!function(t,e){return t[0]===e[0]&&t[1]===e[1]}(t.coordinates,e.coordinates);case"LineString":return!wr(e,t);case"Polygon":return!Pt(t,e)}break;case"LineString":switch(e.type){case"Point":return!wr(t,e);case"LineString":return!function(t,e){return nn(t,e).features.length>0}(t,e);case"Polygon":return!br(e,t)}break;case"Polygon":switch(e.type){case"Point":return!Pt(e,t);case"LineString":return!br(t,e);case"Polygon":return!function(t,e){for(var n=0;n<t.coordinates[0].length;n++)if(Pt(t.coordinates[0][n],e))return!0;for(var r=0;r<e.coordinates[0].length;r++)if(Pt(e.coordinates[0][r],t))return!0;return!1}(e,t)}}}(t.geometry,e.geometry)})}),n},t.booleanContains=function(t,e){var n=K(t),r=K(e),i=J(t),o=J(e),s=U(t),a=U(e);switch(n){case"Point":switch(r){case"Point":return Nr(s,a);default:throw new Error("feature2 "+r+" geometry not supported")}case"MultiPoint":switch(r){case"Point":return function(t,e){var n,r=!1;for(n=0;n<t.coordinates.length;n++)if(Nr(t.coordinates[n],e.coordinates)){r=!0;break}return r}(i,o);case"MultiPoint":return function(t,e){for(var n=0;n<e.coordinates.length;n++){for(var r=!1,i=0;i<t.coordinates.length;i++)if(Nr(e.coordinates[n],t.coordinates[i])){r=!0;break}if(!r)return!1}return!0}(i,o);default:throw new Error("feature2 "+r+" geometry not supported")}case"LineString":switch(r){case"Point":return Nn(o,i,{ignoreEndVertices:!0});case"LineString":return function(t,e){for(var n=!1,r=0;r<e.coordinates.length;r++)if(Nn({type:"Point",coordinates:e.coordinates[r]},t,{ignoreEndVertices:!0})&&(n=!0),!Nn({type:"Point",coordinates:e.coordinates[r]},t,{ignoreEndVertices:!1}))return!1;return n}(i,o);case"MultiPoint":return function(t,e){for(var n=!1,r=0;r<e.coordinates.length;r++)if(Nn(e.coordinates[r],t,{ignoreEndVertices:!0})&&(n=!0),!Nn(e.coordinates[r],t))return!1;return!!n}(i,o);default:throw new Error("feature2 "+r+" geometry not supported")}case"Polygon":switch(r){case"Point":return Pt(o,i,{ignoreBoundary:!0});case"LineString":return function(t,e){var n=!1,r=0,i=j(t),o=j(e);if(!Ir(i,o))return!1;for(;r<e.coordinates.length-1;r++){var s=function(t,e){return[(t[0]+e[0])/2,(t[1]+e[1])/2]}(e.coordinates[r],e.coordinates[r+1]);if(Pt({type:"Point",coordinates:s},t,{ignoreBoundary:!0})){n=!0;break}}return n}(i,o);case"Polygon":return function(t,e){var n=j(t),r=j(e);if(!Ir(n,r))return!1;for(var i=0;i<e.coordinates[0].length;i++)if(!Pt(e.coordinates[0][i],t))return!1;return!0}(i,o);case"MultiPoint":return function(t,e){for(var n=0;n<e.coordinates.length;n++)if(!Pt(e.coordinates[n],t,{ignoreBoundary:!0}))return!1;return!0}(i,o);default:throw new Error("feature2 "+r+" geometry not supported")}default:throw new Error("feature1 "+n+" geometry not supported")}},t.booleanCrosses=function(t,e){var n=K(t),r=K(e),i=J(t),o=J(e);switch(n){case"MultiPoint":switch(r){case"LineString":return Cr(i,o);case"Polygon":return Mr(i,o);default:throw new Error("feature2 "+r+" geometry not supported")}case"LineString":switch(r){case"MultiPoint":return Cr(o,i);case"LineString":return function(t,e){if(nn(t,e).features.length>0)for(var n=0;n<t.coordinates.length-1;n++)for(var r=0;r<e.coordinates.length-1;r++){var i=!0;if(0!==r&&r!==e.coordinates.length-2||(i=!1),Lr(t.coordinates[n],t.coordinates[n+1],e.coordinates[r],i))return!0}return!1}(i,o);case"Polygon":return Sr(i,o);default:throw new Error("feature2 "+r+" geometry not supported")}case"Polygon":switch(r){case"MultiPoint":return Mr(o,i);case"LineString":return Sr(o,i);default:throw new Error("feature2 "+r+" geometry not supported")}default:throw new Error("feature1 "+n+" geometry not supported")}},t.booleanClockwise=or,t.booleanOverlap=Tr,t.booleanPointOnLine=Nn,t.booleanEqual=function(t,e){if(!t)throw new Error("feature1 is required");if(!e)throw new Error("feature2 is required");return K(t)===K(e)&&new ja({precision:6}).compare(te(t),te(e))},t.booleanWithin=Cn,t.clone=Gt,t.cleanCoords=te,t.clustersDbscan=function(t,e,n){if("object"!=typeof(n=n||{}))throw new Error("options is invalid");var r=n.minPoints,i=n.units;if(W(t,"Point","Input must contain Points"),null===e||void 0===e)throw new Error("maxDistance is required");if(!(Math.sign(e)>0))throw new Error("Invalid maxDistance");if(!(void 0===r||null===r||Math.sign(r)>0))throw new Error("Invalid minPoints");t=Gt(t),r=r||3;var o=new Ha.DBSCAN,s=-1;return o.run(T(t),E(e,i),r,qt).forEach(function(e){s++,e.forEach(function(e){var n=t.features[e];n.properties||(n.properties={}),n.properties.cluster=s,n.properties.dbscan="core"})}),o.noise.forEach(function(e){var n=t.features[e];n.properties||(n.properties={}),n.properties.cluster?n.properties.dbscan="edge":n.properties.dbscan="noise"}),t},t.clustersKmeans=function(t,e){if("object"!=typeof(e=e||{}))throw new Error("options is invalid");var n=e.numberOfClusters,r=e.mutate;W(t,"Point","Input must contain Points");var i=t.features.length;(n=n||Math.round(Math.sqrt(i/2)))>i&&(n=i),!1!==r&&void 0!==r||(t=Gt(t));var o=T(t),s=o.slice(0,n),a=eu(o,n,s),u={};return a.centroids.forEach(function(t,e){u[e]=t}),O(t,function(t,e){var n=a.idxs[e];t.properties.cluster=n,t.properties.centroid=u[n]}),t},t.pointToLineDistance=gn,t.booleanParallel=function(t,e){if(!t)throw new Error("line1 is required");if(!e)throw new Error("line2 is required");if("LineString"!==Dr(t,"line1"))throw new Error("line1 must be a LineString");if("LineString"!==Dr(e,"line2"))throw new Error("line2 must be a LineString");for(var n=en(te(t)).features,r=en(te(e)).features,i=0;i<n.length;i++){var o=n[i].geometry.coordinates;if(!r[i])break;if(!function(t,e){var n=m(sn(t[0],t[1])),r=m(sn(e[0],e[1]));return n===r}(o,r[i].geometry.coordinates))return!1}return!0},t.shortestPath=function(t,n,i){if(i=i||{},!I(i))throw new Error("options is invalid");var o=i.resolution,s=i.minDistance,u=i.obstacles||c([]);if(!t)throw new Error("start is required");if(!n)throw new Error("end is required");if(o&&!b(o)||o<=0)throw new Error("options.resolution must be a number, greater than 0");if(s)throw new Error("options.minDistance is not yet implemented");var h=X(t),l=X(n);switch(t=r(h),n=r(l),K(u)){case"FeatureCollection":if(0===u.features.length)return a([h,l]);break;case"Polygon":u=c([e(J(u))]);break;default:throw new Error("invalid obstacles")}var p=u;p.features.push(t),p.features.push(n);var f=j(gr(ce(j(p)),1.15));o||(o=qt([f[0],f[1]],[f[2],f[1]],i)/100);p.features.pop(),p.features.pop();for(var g=f[0],d=f[1],y=f[2],_=f[3],m=o/qt([g,d],[y,d],i)*(y-g),v=o/qt([g,d],[g,_],i)*(_-d),x=y-g,E=_-d,w=(x-Math.floor(x/m)*m)/2,N=[],C=[],S=[],M=[],L=1/0,P=1/0,O=_-(E-Math.floor(E/v)*v)/2,R=0;O>=d;){for(var T=[],A=[],D=g+w,F=0;D<=y;){var q=r([D,O]),G=function(t,e){for(var n=0;n<e.features.length;n++)if(Pt(t,e.features[n]))return!0;return!1}(q,u);T.push(G?0:1),A.push(D+"|"+O);var B=qt(q,t);!G&&B<L&&(L=B,S={x:F,y:R});var k=qt(q,n);!G&&k<P&&(P=k,M={x:F,y:R}),D+=m,F++}C.push(T),N.push(A),O-=v,R++}var z=new qr(C,{diagonal:!0}),U=z.grid[S.y][S.x],Y=z.grid[M.y][M.x],V=[h];return nu.search(z,U,Y).forEach(function(t){var e=N[t.x][t.y].split("|");V.push([+e[0],+e[1]])}),V.push(l),te(a(V))},t.voronoi=function(t,e){if(e=e||{},!I(e))throw new Error("options is invalid");var n=e.bbox||[-180,-85,180,85];if(!t)throw new Error("points is required");if(!Array.isArray(n))throw new Error("bbox is invalid");return W(t,"Point","points"),c(fu().x(function(t){return t.geometry.coordinates[0]}).y(function(t){return t.geometry.coordinates[1]}).extent([[n[0],n[1]],[n[2],n[3]]]).polygons(t.features).map(li))},t.ellipse=pi,t.centerMean=gi,t.centerMedian=function(t,e){if(e=e||{},!I(e))throw new Error("options is invalid");var n=e.counter||10;if(!b(n))throw new Error("counter must be a number");var r=e.weight,i=gi(t,{weight:e.weight}),o=c([]);return O(t,function(t){o.features.push(ye(t,{weight:t.properties[r]}))}),o.properties={tolerance:e.tolerance,medianCandidates:[]},di(i.geometry.coordinates,[0,0],o,n)},t.standardDeviationalEllipse=function(t,e){if(e=e||{},!I(e))throw new Error("options is invalid");var n=e.steps||64,r=e.weight,i=e.properties||{};if(!b(n))throw new Error("steps must be a number");if(!I(i))throw new Error("properties must be a number");var o=T(t).length,s=gi(t,{weight:r}),a=0,u=0,h=0;O(t,function(t){var e=t.properties[r]||1,n=yi(U(t),U(s));a+=Math.pow(n.x,2)*e,u+=Math.pow(n.y,2)*e,h+=n.x*n.y*e});var l=a-u,p=Math.sqrt(Math.pow(l,2)+4*Math.pow(h,2)),f=2*h,g=Math.atan((l+p)/f),d=180*g/Math.PI,y=0,_=0,m=0;O(t,function(t){var e=t.properties[r]||1,n=yi(U(t),U(s));y+=Math.pow(n.x*Math.cos(g)-n.y*Math.sin(g),2)*e,_+=Math.pow(n.x*Math.sin(g)+n.y*Math.cos(g),2)*e,m+=e});var v=Math.sqrt(2*y/m),x=Math.sqrt(2*_/m),E=pi(s,v,x,{units:"degrees",angle:d,steps:n,properties:i}),w=Rt(t,c([E])),N={meanCenterCoordinates:U(s),semiMajorAxis:v,semiMinorAxis:x,numberOfFeatures:o,angle:d,percentageWithinEllipse:100*T(w).length/o};return E.properties.standardDeviationalEllipse=N,E},t.difference=function(t,n){var r=J(t),i=J(n),o=t.properties||{};if(r=Ui(r),i=Ui(i),!r)return null;if(!i)return e(r,o);var s=new bh,a=s.read(r),u=s.read(i),c=Cf.difference(a,u);return c.isEmpty()?null:e((new Ih).write(c),o)},t.buffer=function(t,e,n){var r=(n=n||{}).units,i=n.steps||64;if(!t)throw new Error("geojson is required");if("object"!=typeof n)throw new Error("options must be an object");if("number"!=typeof i)throw new Error("steps must be an number");if(void 0===e)throw new Error("radius is required");if(i<=0)throw new Error("steps must be greater than 0");i=i||64,r=r||"kilometers";var o=[];switch(t.type){case"GeometryCollection":return A(t,function(t){var n=bo(t,e,r,i);n&&o.push(n)}),c(o);case"FeatureCollection":return O(t,function(t){var n=bo(t,e,r,i);n&&O(n,function(t){t&&o.push(t)})}),c(o)}return bo(t,e,r,i)},t.union=Mo,t.intersect=Lo,t.dissolve=function(t,e){if(e=e||{},!I(e))throw new Error("options is invalid");var n=e.propertyName;W(t,"Polygon","dissolve");var r=Gt(t),i=r.features,o=[];i.forEach(function(t,e){t.properties.origIndexPosition=e});var s=Qe();s.load(r);for(var u in i){var c=i[u],h=!1;if(s.search(c).features.forEach(function(t){c=i[u];var e=t.properties.origIndexPosition;if(o.length>0&&0!==e)if(e>o[o.length-1])e-=o.length;else{var r=Po(e,o);0!==r&&(e-=r)}if(e!==+u){var l=i[e];l&&c&&(void 0!==n&&l.properties[n]!==c.properties[n]||Tr(c,l)&&function(t,e){var n=a(T(t)),r=a(T(e));return nn(n,r).features.length>0}(c,l)&&(i[u]=Mo(c,l),o.push(t.properties.origIndexPosition),o.sort(function(t,e){return t-e}),s.remove(t),i.splice(e,1),c.properties.origIndexPosition=u,s.remove(c,function(t,e){return t.properties.origIndexPosition===e.properties.origIndexPosition}),h=!0))}}),h){if(!c)continue;c.properties.origIndexPosition=u,s.insert(c),u--}}return i.forEach(function(t){delete t.properties.origIndexPosition,delete t.bbox}),r},t.hexGrid=Oo,t.mask=function(t,e){var n=function(t){return o(t&&t.geometry.coordinates||[[[180,90],[-180,90],[-180,-90],[180,-90],[180,90]]])}(e),r=function(t){var e=[],n=[];return F(t,function(t){var r=t.geometry.coordinates,i=r[0],s=r.slice(1);e.push(o([i])),s.forEach(function(t){n.push(o([t]))})}),[c(e),c(n)]}(t),i=r[0],s=r[1];return function(t,e,n){var r=[];return r.push(t.geometry.coordinates[0]),F(e,function(t){r.push(t.geometry.coordinates[0])}),F(n,function(t){r.push(t.geometry.coordinates[0])}),o(r)}(n,i=Ro(i),s=Ro(s))},t.squareGrid=Ao,t.triangleGrid=Do,t.interpolate=function(t,e,n){if("object"!=typeof(n=n||{}))throw new Error("options is invalid");var r=n.gridType,i=n.property,o=n.weight;if(!t)throw new Error("points is required");if(W(t,"Point","input must contain Points"),!e)throw new Error("cellSize is required");if(void 0!==o&&"number"!=typeof o)throw new Error("weight must be a number");i=i||"elevation",r=r||"square",o=o||1;var s,a=j(t);switch(r){case"point":case"points":s=Ln(a,e,n);break;case"square":case"squares":s=Ao(a,e,n);break;case"hex":case"hexes":s=Oo(a,e,n);break;case"triangle":case"triangles":s=Do(a,e,n);break;default:throw new Error("invalid gridType")}var u=[];return O(s,function(e){var s=0,a=0;O(t,function(t){var u,c=qt("point"===r?e:ye(e),t,n);if(void 0!==i&&(u=t.properties[i]),void 0===u&&(u=t.geometry.coordinates[2]),void 0===u)throw new Error("zValue is missing");0===c&&(s=u);var h=1/Math.pow(c,o);a+=h,s+=h*u});var c=Gt(e);c.properties[i]=s/a,u.push(c)}),c(u)},t.pointOnSurface=yn,t.polygonToLineString=kn,t.lineStringToPolygon=jn,t.inside=Pt,t.within=Rt,t.bezier=ue,t.nearest=Fe,t.pointOnLine=on,t.lineDistance=bn,t.radians2degrees=v,t.degrees2radians=x,t.distanceToDegrees=_,t.distanceToRadians=y,t.radiansToDistance=d,t.bearingToAngle=m,t.convertDistance=E,t.toMercator=cn,t.toWgs84=hn,t.randomPosition=_i,t.randomPoint=mi,t.randomPolygon=vi,t.randomLineString=xi,t.getCluster=wi,t.clusterEach=bi,t.clusterReduce=Ii,t.createBins=Ni,t.applyFilter=Ci,t.propertiesContainsFilter=Si,t.filterProperties=Mi,t.earthRadius=Fo,t.factors=qo,t.unitsFactors=Go,t.areaFactors=Bo,t.feature=e,t.geometry=n,t.point=r,t.points=i,t.polygon=o,t.polygons=s,t.lineString=a,t.lineStrings=u,t.featureCollection=c,t.multiLineString=h,t.multiPoint=l,t.multiPolygon=p,t.geometryCollection=f,t.round=g,t.radiansToLength=d,t.lengthToRadians=y,t.lengthToDegrees=_,t.bearingToAzimuth=m,t.radiansToDegrees=v,t.degreesToRadians=x,t.convertLength=E,t.convertArea=w,t.isNumber=b,t.isObject=I,t.validateBBox=N,t.validateId=C,t.getCoord=X,t.getCoords=U,t.containsNumber=Y,t.geojsonType=V,t.featureOf=H,t.collectionOf=W,t.getGeom=J,t.getGeomType=Z,t.getType=K,t.coordEach=S,t.coordReduce=M,t.propEach=L,t.propReduce=P,t.featureEach=O,t.featureReduce=R,t.coordAll=T,t.geomEach=A,t.geomReduce=D,t.flattenEach=F,t.flattenReduce=q,t.segmentEach=G,t.segmentReduce=B,t.lineEach=k,t.lineReduce=z,Object.defineProperty(t,"__esModule",{value:!0})});


/***/ }),
/* 67 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var flyManager = function flyManager(viewer) {
	    _classCallCheck(this, flyManager);

	    this.viewer = viewer;
	};

	exports.default = flyManager;

/***/ }),
/* 68 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/*
	 * 作者：zhuwz
	 * 描述:书签管理类
	 * 日期：2019.5.16
	 */
	var BookmarkManager = function () {
	    /**
	     * @param {viewer} viewer viewer对象
	     */
	    function BookmarkManager(viewer) {
	        _classCallCheck(this, BookmarkManager);

	        this.viewer = viewer;
	        this._itemList = [];
	        this._currentItems = [];
	        this._isFly = false;
	        this._relayTime = 1000;
	    }

	    _createClass(BookmarkManager, [{
	        key: "_playAnimation",
	        value: function _playAnimation(_complete, that) {
	            var bkItem = that._currentItems[that._currentIndex];
	            that._currentIndex++;
	            if (that._currentIndex > that._currentItems.length) {
	                that.stopPlay();
	                return;
	            }
	            var view = bkItem.view;
	            var destination = new Cesium.Cartesian3(view.position[0], view.position[1], view.position[2]);
	            that.viewer.camera.flyTo({
	                destination: destination,
	                orientation: {
	                    heading: view.orientation[0],
	                    pitch: view.orientation[1],
	                    roll: view.orientation[2]
	                },
	                duration: view.duration,
	                easingFunction: Cesium.EasingFunction.LINEAR_NONE,
	                complete: function complete() {
	                    if (that._isFly) _complete(_complete, that);
	                    //that._playTimer = setTimeout(complete(complete,that), that._relayTime)
	                }
	            });
	        }
	    }, {
	        key: "_getNewItem",
	        value: function _getNewItem(name) {
	            var view = this.viewer.viewPort.getCurrent();
	            return {
	                view: view,
	                id: Cesium.createGuid(),
	                name: name
	            };
	        }

	        /**
	         * 加载json对象
	         * @param {Object} config 书签对象
	         */

	    }, {
	        key: "fromJSON",
	        value: function fromJSON(config) {
	            this._itemList = config;
	        }

	        /**
	         * 导出json对象
	         * @return {string} 书签对象
	         */

	    }, {
	        key: "toJSON",
	        value: function toJSON() {
	            return this._itemList;
	        }

	        /**
	        * 添加书签组
	        * @param {string} name 书签名称
	        * @return {Object} 书签组对象
	        */

	    }, {
	        key: "addGroup",
	        value: function addGroup(name) {
	            if (this._isFly) return;
	            var bkItem = {
	                type: "gruop",
	                children: [],
	                id: Cesium.createGuid(),
	                name: name
	            };
	            this._itemList.push(bkItem);
	            return bkItem;
	        }

	        /**
	        * 删除书签组
	        * @param {string} id 书签组的id
	        * @return {Boolean} 删除成功返回true,否则返回false
	        */

	    }, {
	        key: "removeGroup",
	        value: function removeGroup(id) {
	            if (this._isFly) return false;
	            for (var i = 0; i < this._itemList.length; i++) {
	                if (this._itemList[i].id == id) {
	                    this._itemList.splice(i, 1);
	                    break;
	                }
	            }
	            return true;
	        }

	        /**
	        * 添加书签
	        * @param {string} groupid 组的ID
	        * @param {string} name 书签名称
	        * @return {Object} 书签对象
	        */

	    }, {
	        key: "addItem",
	        value: function addItem(groupid, name) {
	            if (this._isFly) return false;
	            var item = void 0;
	            for (var i = 0; i < this._itemList.length; i++) {
	                if (this._itemList[i].id == groupid) {
	                    item = this._getNewItem(name);
	                    this._itemList[i].children.push(item);
	                    break;
	                }
	            }
	            return item;
	        }

	        /**
	         * 删除书签
	         * @param {string} pid 组节点id
	         * @param {string} id 书签id
	         * @return {Boolean} 添加成功返回true,否则返回false
	         */

	    }, {
	        key: "removeItem",
	        value: function removeItem(pid, id) {
	            if (this._isFly) return false;
	            for (var i = 0; i < this._itemList.length; i++) {
	                if (this._itemList[i].id == pid) {
	                    var bkList = this._itemList[i].children;
	                    for (var j = 0; j < bkList.length; j++) {
	                        if (bkList[j].id == id) {
	                            bkList.splice(j, 1);
	                            break;
	                        }
	                    }
	                }
	            }
	            return true;
	        }
	        /**
	         * 清空书签
	         * @return {Boolean} 添加成功返回true,否则返回false
	         */

	    }, {
	        key: "removeAll",
	        value: function removeAll() {
	            if (this._isFly) return false;
	            this._itemList = [];
	            return true;
	        }

	        /**
	         * 定位书签
	         * @param {Object} item 书签对象
	         * @return {Boolean} 添加成功返回true,否则返回false
	         */

	    }, {
	        key: "flyToItem",
	        value: function flyToItem(item) {
	            if (!item) return;
	            this.viewer.viewPort.setCurrent(item.view);
	        }

	        /**
	         * 播放书签组
	         * @param {string} id 书签组对象的id
	         */

	    }, {
	        key: "playGroup",
	        value: function playGroup(id) {
	            for (var i = 0; i < this._itemList.length; i++) {
	                if (this._itemList[i].id == id) {
	                    var bkList = this._itemList[i].children;
	                    this.playItems(bkList);
	                    break;
	                }
	            }
	        }
	        /**
	         * 播放书签
	         * @param {Array} items 书签数组
	         */

	    }, {
	        key: "playItems",
	        value: function playItems(items) {
	            if (this._isFly) this.stopPlay();
	            this._isFly = true;
	            this._currentItems = items;
	            this._currentIndex = 0;
	            this._playAnimation(this._playAnimation, this);
	        }

	        /**
	        * 停止飞行
	        *
	        */

	    }, {
	        key: "stopPlay",
	        value: function stopPlay() {
	            if (this._playTimer) {
	                clearTimeout(this._playTimer);
	            }
	            this.viewer.camera.cancelFlight();
	            this._currentIndex = 0;
	            this._currentItems = [];
	            this._isFly = false;
	        }
	        /**
	        * 是否在飞行模式
	        * @return {Boolean} 是否处于飞行状态
	        * @readonly 
	        */

	    }, {
	        key: "isFly",
	        get: function get() {
	            return this._isFly;
	        }

	        /**
	         * 飞行间隔时间
	         * @return {number} 飞行间隔时间
	         */

	    }, {
	        key: "relayTime",
	        get: function get() {
	            return this._relayTime;
	        }

	        /**
	         * 飞行间隔时间
	         * @param {number} val 飞行间隔时间
	         */
	        ,
	        set: function set(val) {
	            this._relayTime = val;
	        }

	        /**
	         * 书签列表
	         * @return {Object}  书签列表
	         * @readonly
	         */

	    }, {
	        key: "itemList",
	        get: function get() {
	            return this._itemList;
	        }
	    }]);

	    return BookmarkManager;
	}();

	exports.default = BookmarkManager;

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _LayerType = __webpack_require__(30);

	var _LayerType2 = _interopRequireDefault(_LayerType);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	//提供公共影像资源，如ArcGIS 、天地图、google的影像底图
	var ImageResource = function () {
	    function ImageResource() {
	        _classCallCheck(this, ImageResource);
	    }

	    _createClass(ImageResource, [{
	        key: '_getTemplate',
	        value: function _getTemplate(name, type, options) {
	            return {
	                "id": Cesium.createGuid(),
	                "name": name,
	                "layerType": "Image",
	                "config": {
	                    "type": type,
	                    "options": options
	                }
	            };
	        }
	    }], [{
	        key: 'setTDTKey',
	        value: function setTDTKey(key) {
	            this.tdtKey = key;
	        }
	    }, {
	        key: 'setBingKey',
	        value: function setBingKey(key) {
	            this.bingKey = key;
	        }
	    }, {
	        key: 'arcgisImage',
	        value: function arcgisImage() {
	            return this._getTemplate('ArcGIS影像', _LayerType2.default.ArcGIS, {
	                "url": "https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer"
	            });
	        }
	    }, {
	        key: 'googleImage',
	        value: function googleImage() {
	            return this._getTemplate('Google影像', _LayerType2.default.Google, {
	                // "url": " http://mt0.google.cn/vt/lyrs=s&hl=zh-CN&x={x}&y={y}&z={z}",                      
	                "url": " http://www.google.cn/maps/vt?lyrs=s%2Ch&gl=cn&x={x}&y={y}&z={z}"
	            });
	        }
	    }, {
	        key: 'bingImage',
	        value: function bingImage() {
	            return this._getTemplate('Bing影像', _LayerType2.default.Bing, {
	                "url": "http://www.huaruiview.cn:3500/startlvlone/wmts"
	            });
	        }
	    }]);

	    return ImageResource;
	}();

	exports.default = ImageResource;

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _FlyAround = __webpack_require__(71);

	var _FlyAround2 = _interopRequireDefault(_FlyAround);

	var _ZoomControl = __webpack_require__(72);

	var _ZoomControl2 = _interopRequireDefault(_ZoomControl);

	var _MousePosition = __webpack_require__(73);

	var _MousePosition2 = _interopRequireDefault(_MousePosition);

	var _ViewPort = __webpack_require__(75);

	var _ViewPort2 = _interopRequireDefault(_ViewPort);

	var _ScenePick = __webpack_require__(74);

	var _ScenePick2 = _interopRequireDefault(_ScenePick);

	var _Config = __webpack_require__(26);

	var _Config2 = _interopRequireDefault(_Config);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Navigation = function () {

	    /**
	     * 三维视图导航类
	     *
	     * @alias Navigation
	     * @constructor
	     *
	     * @param {Object} viewer viewer对象
	     * 
	     *
	     */

	    function Navigation(viewer) {
	        _classCallCheck(this, Navigation);

	        this.viewer = viewer;
	        Cesium.Camera.DEFAULT_VIEW_RECTANGLE = Cesium.Rectangle.fromDegrees(73, 13, 135, 53);

	        this.FlyAround = new _FlyAround2.default(this.viewer);
	        this.ZoomControl = new _ZoomControl2.default(this.viewer);
	        this.ViewPort = new _ViewPort2.default(viewer);
	        this._mousePosition = new _MousePosition2.default(viewer);
	        this._cusorPosition = Cesium.Cartesian3.ZERO;
	        this.initMouseCursor();
	    }

	    _createClass(Navigation, [{
	        key: 'registHotKey',
	        value: function registHotKey() {
	            document.addEventListener('keyup', function (e) {
	                var flagName = getFlagForKeyCode(e.keyCode);
	                if (typeof flagName !== 'undefined') {
	                    flags[flagName] = false;
	                }
	            }, false);
	        }
	    }, {
	        key: 'initMouseCursor',
	        value: function initMouseCursor() {
	            var self = this;
	            var vec3 = Cesium.Cartesian3;
	            var imgCursor = _Config2.default.getResource("Assets/Images/naviCursor.png");
	            this._naviCursor = this.viewer.entities.add({
	                position: Cesium.Cartesian3.ZERO,
	                billboard: {
	                    image: imgCursor,
	                    //height:36,
	                    //width:36,
	                    disableDepthTestDistance: 6e7
	                },
	                show: false
	            });
	            var evtHander = new Cesium.ScreenSpaceEventHandler(this.viewer.canvas);
	            var evtType = Cesium.ScreenSpaceEventType;

	            evtHander.setInputAction(function (e) {
	                self._cusorPosition = _ScenePick2.default.pickPosition(self.viewer, e.endPosition);
	            }, evtType.MOUSE_MOVE);

	            evtHander.setInputAction(function (e) {
	                var pos = _ScenePick2.default.pickPosition(self.viewer, e.position);
	                if (pos) {
	                    self._naviCursor._position._value = vec3.clone(pos);
	                    self._naviCursor.show = true;
	                }
	                self._naviCursorShowTime = null;
	            }, evtType.MIDDLE_DOWN);

	            evtHander.setInputAction(function (e) {
	                var pos = _ScenePick2.default.pickPosition(self.viewer, e.position);
	                if (pos) {
	                    self._naviCursor._position._value = vec3.clone(pos), self._naviCursor.show = true;
	                }
	                self._naviCursorShowTime = null;
	            }, evtType.RIGHT_DOWN);

	            evtHander.setInputAction(function (e) {
	                self._naviCursor.show = false;
	            }, evtType.RIGHT_UP);
	            evtHander.setInputAction(function (e) {
	                self._naviCursor.show = false;
	            }, evtType.MIDDLE_UP);

	            evtHander.setInputAction(function (e) {
	                self._naviCursor._position._value = self._cusorPosition ? self._cusorPosition : Cesium.Cartesian3.ZERO;
	                self._naviCursor.show = true;
	                self._naviCursorShowTime = new Date().getTime();
	            }, evtType.WHEEL);

	            this.viewer.clock.onTick.addEventListener(function (e) {
	                if (Cesium.defined(self._naviCursor) && self._naviCursor.show && Cesium.defined(self._naviCursorShowTime)) {
	                    new Date().getTime() - self._naviCursorShowTime > 200 && (self._naviCursor.show = !1);
	                }
	            });
	        }
	    }, {
	        key: 'fullScreen',
	        value: function fullScreen() {
	            this.ViewPort.fullScreen();
	        }
	    }, {
	        key: 'exitFullScreen',
	        value: function exitFullScreen() {
	            this.ViewPort.exitFullScreen();
	        }
	    }, {
	        key: 'goto',

	        /**
	         * 飞行定位
	         * @param {number} lon 经度
	         * @param {number} lat 纬度
	         * @param {number} alt 高度
	         * @param {number} duration 动画时间
	         * 
	         */
	        value: function goto(lon, lat) {
	            var alt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10000;
	            var duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 3;

	            return this.viewer.camera.flyTo({
	                destination: Cesium.Cartesian3.fromDegrees(lon, lat, alt),
	                duration: duration
	            });
	        }
	        /**
	         * 缩放定位
	         * @param {number} lon 经度
	         * @param {number} lat 纬度
	         * @param {number} alt 高度
	         * 
	         */

	    }, {
	        key: 'zoomTo',
	        value: function zoomTo(lon, lat) {
	            var alt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10000;

	            this.viewer.scene.camera.setView({
	                destination: Cesium.Cartesian3.fromDegrees(lon, lat, alt)
	            });
	        }
	        /**
	         * 定位到默认视图 
	         */

	    }, {
	        key: 'home',
	        value: function home() {
	            return this.viewer.camera.flyTo({
	                destination: Cesium.Camera.DEFAULT_VIEW_RECTANGLE
	            });
	        }
	        /**
	         * 以镜头为中心点环视
	         * @param {Cartesian3} position 中心点坐标
	         * 
	         */

	    }, {
	        key: 'flyAround',
	        value: function flyAround(position) {
	            if (position) this.viewer.scene.camera.setView({
	                destination: position
	            });
	            var centerPos = this.ViewPort.getCenter();
	            return this.FlyAround.startFlyAround(centerPos);
	        }

	        /**
	         * 以场景为中心点环视
	         * @param {Cartesian3} position 中心点坐标
	         * 
	         */

	    }, {
	        key: 'flyCenter',
	        value: function flyCenter(position) {
	            if (position) this.viewer.scene.camera.setView({
	                destination: position
	            });
	            var centerPos = this.ViewPort.getCenter();
	            return this.FlyAround.startFlyCenter(centerPos);
	        }
	        /**
	         * 停止环视
	         */

	    }, {
	        key: 'stopFly',
	        value: function stopFly() {
	            return this.FlyAround.stopFly();
	        }
	    }, {
	        key: 'zoomIn',
	        value: function zoomIn() {
	            this.ZoomControl.zoomIn();
	        }
	    }, {
	        key: 'zoomOut',
	        value: function zoomOut() {
	            this.ZoomControl.zoomOut();
	        }
	    }, {
	        key: 'tiltUp',
	        value: function tiltUp() {}
	    }, {
	        key: 'tiltDown',
	        value: function tiltDown() {}
	    }, {
	        key: 'switch2D',
	        value: function switch2D() {
	            this.ZoomControl.resetView();
	        }
	    }, {
	        key: 'crossChar',
	        get: function get() {
	            return this.ViewPort.crosChar;
	        }
	    }, {
	        key: 'mousePosition',
	        get: function get() {
	            return this._mousePosition;
	        }
	    }, {
	        key: 'undergroud',
	        get: function get() {},
	        set: function set(val) {}
	    }, {
	        key: 'lockView',
	        get: function get() {},
	        set: function set(val) {}
	    }]);

	    return Navigation;
	}();

	exports.default = Navigation;

/***/ }),
/* 71 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var FlyAround = function () {

	    /**
	     * 飞行浏览类
	     *
	     * @alias FlyAround
	     * @constructor
	     *
	     * @param {Object} viewer viewer对象
	     * 
	     *
	     */
	    function FlyAround(viewer) {
	        _classCallCheck(this, FlyAround);

	        this.viewer = viewer;
	        this._shouldAnimate = this.viewer.clock.shouldAnimate;
	        this.isStart = false;
	        this.isFlyCenter = false;
	        this.viewer.clock.shouldAnimate = false;
	    }

	    _createClass(FlyAround, [{
	        key: "clock_onTickHandler",
	        value: function clock_onTickHandler(t) {
	            var timeDiff = Cesium.JulianDate.secondsDifference(this.viewer.clock.currentTime, this.time);
	            var cheading = Cesium.Math.toRadians(timeDiff * this.angle) + this.heading;

	            if (this.isFlyCenter) {
	                this.viewer.scene.camera.setView({
	                    destination: this.position,
	                    orientation: {
	                        heading: cheading,
	                        pitch: this.pitch
	                    }
	                });
	                this.viewer.scene.camera.moveBackward(this.distance);
	            } else {
	                this.viewer.scene.camera.setView({
	                    orientation: {
	                        heading: cheading,
	                        pitch: this.pitch
	                    }
	                });
	            }
	        }
	    }, {
	        key: "_setPosition",
	        value: function _setPosition(position) {
	            this.position = position;
	            this.distance = Cesium.Cartesian3.distance(this.position, this.viewer.camera.positionWC);
	            this.angle = 360 / 60;
	            this.time = this.viewer.clock.currentTime.clone();
	            this.heading = this.viewer.camera.heading;
	            this.pitch = this.viewer.camera.pitch;
	        }
	    }, {
	        key: "_startFly",
	        value: function _startFly(position) {
	            if (this.isStart) return;
	            this._setPosition(position);
	            this.viewer.clock.shouldAnimate = true;
	            this.viewer.clock.onTick.addEventListener(this.clock_onTickHandler, this);
	            this.isStart = true;
	        }

	        /**
	         * 开始环视
	         * @param  {Cartesian3} position  中心点位置
	         */

	    }, {
	        key: "startFlyAround",
	        value: function startFlyAround(position) {
	            this._startFly(position);
	            this.isFlyCenter = false;
	        }

	        /**
	          * 固定中心点浏览
	          * @param  {Cartesian3} position  中心点位置
	          */

	    }, {
	        key: "startFlyCenter",
	        value: function startFlyCenter(position) {
	            this._startFly(position);
	            this.isFlyCenter = true;
	        }

	        /**
	         * 停止浏览
	         */

	    }, {
	        key: "stopFly",
	        value: function stopFly() {
	            this.viewer.clock.onTick.removeEventListener(this.clock_onTickHandler, this), this.isStart = false;
	            this.viewer.clock.shouldAnimate = this._shouldAnimate;
	        }
	    }, {
	        key: "lookAt",
	        value: function lookAt() {

	            var init = false;
	            var center = Cesium.Cartesian3.fromDegrees(101.9915, 24.069534, 30);
	            var initpitch = Cesium.Math.toRadians(-28.0);
	            var initRange = 220.0;
	            var initHeading = 0;

	            var offsetPitch = 0.0005;
	            var offsetHeading = 0.02;

	            function initPos() {
	                viewer.camera.lookAt(center, new Cesium.HeadingPitchRange(Cesium.Math.toRadians(initHeading), initpitch, initRange));
	            }
	            function viewICRF() {
	                var heading = viewer.camera.heading + offsetHeading * Math.PI / 180;
	                heading = heading > 180 ? heading - 360 : heading;
	                var currentPitch = viewer.camera.pitch < initpitch ? viewer.camera.pitch + offsetPitch : viewer.camera.pitch;
	                var currentRange = viewer.camera.getMagnitude();
	                viewer.camera.lookAt(center, new Cesium.HeadingPitchRange(heading, currentPitch, currentRange));
	            }
	            viewer.clock.onTick.addEventListener(viewICRF);
	        }
	    }]);

	    return FlyAround;
	}();

	exports.default = FlyAround;

/***/ }),
/* 72 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var ZoomControl = function () {
	    /**
	     * 视角信息类
	     *
	     * @alias ViewPort
	     * @constructor
	     *
	     * @param {Object} viewer viewer对象
	     *
	     */
	    function ZoomControl(viewer) {
	        _classCallCheck(this, ZoomControl);

	        this.viewer = viewer;
	        this.relativeAmount = 2;
	        this.cartesian3Scratch = new Cesium.Cartesian3();
	    }

	    _createClass(ZoomControl, [{
	        key: "zoomIn",
	        value: function zoomIn() {
	            this._zoomFun2(0.5);
	        }
	    }, {
	        key: "zoomOut",
	        value: function zoomOut() {
	            this._zoomFun2(1.5);
	        }
	    }, {
	        key: "resetView",
	        value: function resetView() {

	            var scene = this.viewer.scene;
	            var camera = scene.camera;

	            var windowPosition = new Cesium.Cartesian2();
	            var centerScratch = new Cesium.Cartesian3();
	            windowPosition.x = scene.canvas.clientWidth / 2;
	            windowPosition.y = scene.canvas.clientHeight / 2;
	            var center = camera.pickEllipsoid(windowPosition, scene.globe.ellipsoid, centerScratch);
	            if (Cesium.defined(center)) {
	                var rotateFrame = Cesium.Transforms.eastNorthUpToFixedFrame(center, scene.globe.ellipsoid);
	                var cameraPosition = scene.globe.ellipsoid.cartographicToCartesian(camera.positionCartographic, new Cesium.Cartesian3());
	                var lookVector = Cesium.Cartesian3.subtract(center, cameraPosition, new Cesium.Cartesian3());
	                var destination = Cesium.Matrix4.multiplyByPoint(rotateFrame, new Cesium.Cartesian3(0, 0, Cesium.Cartesian3.magnitude(lookVector)), new Cesium.Cartesian3());
	                camera.flyTo({
	                    destination: destination,
	                    duration: 1
	                });
	            }
	        }
	    }, {
	        key: "_zoomFun2",
	        value: function _zoomFun2(relativeAmount) {

	            var scene = this.viewer.scene;

	            var sscc = scene.screenSpaceCameraController;
	            if (!sscc.enableInputs || !sscc.enableZoom) {
	                return;
	            }

	            var camera = scene.camera;
	            var orientation;

	            switch (scene.mode) {
	                case Cesium.SceneMode.MORPHING:
	                    break;
	                case Cesium.SceneMode.SCENE2D:
	                    camera.zoomIn(camera.positionCartographic.height * (1 - this.relativeAmount));
	                    break;
	                default:
	                    var focus;

	                    if (Cesium.defined(this.viewer.trackedEntity)) {
	                        focus = new Cesium.Cartesian3();
	                    } else {
	                        focus = this.getCameraFocus(this.viewer, false);
	                    }

	                    if (!Cesium.defined(focus)) {
	                        // Camera direction is not pointing at the globe, so use the ellipsoid horizon point as
	                        // the focal point.
	                        var ray = new Cesium.Ray(camera.worldToCameraCoordinatesPoint(scene.globe.ellipsoid.cartographicToCartesian(camera.positionCartographic)), camera.directionWC);
	                        focus = Cesium.IntersectionTests.grazingAltitudeLocation(ray, scene.globe.ellipsoid);

	                        orientation = {
	                            heading: camera.heading,
	                            pitch: camera.pitch,
	                            roll: camera.roll
	                        };
	                    } else {
	                        orientation = {
	                            direction: camera.direction,
	                            up: camera.up
	                        };
	                    }

	                    var direction = Cesium.Cartesian3.subtract(camera.position, focus, this.cartesian3Scratch);
	                    var movementVector = Cesium.Cartesian3.multiplyByScalar(direction, relativeAmount, direction);
	                    var endPosition = Cesium.Cartesian3.add(focus, movementVector, focus);

	                    if (Cesium.defined(this.viewer.trackedEntity) || scene.mode == Cesium.SceneMode.COLUMBUS_VIEW) {
	                        // sometimes flyTo does not work (jumps to wrong position) so just set the position without any animation
	                        // do not use flyTo when tracking an entity because during animatiuon the position of the entity may change
	                        camera.position = endPosition;
	                    } else {
	                        camera.flyTo({
	                            destination: endPosition,
	                            orientation: orientation,
	                            duration: 1,
	                            convert: false
	                        });
	                    }
	            }
	        }
	    }, {
	        key: "getCameraFocus",
	        value: function getCameraFocus(terria, inWorldCoordinates, result) {

	            var scene = terria.scene;
	            var camera = scene.camera;

	            var unprojectedScratch = new Cesium.Cartographic();
	            var rayScratch = new Cesium.Ray();

	            if (scene.mode == Cesium.SceneMode.MORPHING) {
	                return undefined;
	            }

	            if (!Cesium.defined(result)) {
	                result = new Cesium.Cartesian3();
	            }

	            // TODO bug when tracking: if entity moves the current position should be used and not only the one when starting orbiting/rotating
	            // TODO bug when tracking: reset should reset to default view of tracked entity

	            if (Cesium.defined(terria.trackedEntity)) {
	                result = terria.trackedEntity.position.getValue(terria.clock.currentTime, result);
	            } else {
	                rayScratch.origin = camera.positionWC;
	                rayScratch.direction = camera.directionWC;
	                result = scene.globe.pick(rayScratch, scene, result);
	            }

	            if (!Cesium.defined(result)) {
	                return undefined;
	            }

	            if (scene.mode == Cesium.SceneMode.SCENE2D || scene.mode == Cesium.SceneMode.COLUMBUS_VIEW) {
	                result = camera.worldToCameraCoordinatesPoint(result, result);

	                if (inWorldCoordinates) {
	                    result = scene.globe.ellipsoid.cartographicToCartesian(scene.mapProjection.unproject(result, unprojectedScratch), result);
	                }
	            } else {
	                if (!inWorldCoordinates) {
	                    result = camera.worldToCameraCoordinatesPoint(result, result);
	                }
	            }

	            return result;
	        }
	    }]);

	    return ZoomControl;
	}();

	exports.default = ZoomControl;

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _ScenePick = __webpack_require__(74);

	var _ScenePick2 = _interopRequireDefault(_ScenePick);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var MousePosition = function () {

	    /**
	     * 视角信息类
	     *
	     * @alias ViewPort
	     * @constructor
	     *
	     * @param {Object} viewer viewer对象
	     *
	     */
	    function MousePosition(viewer) {
	        _classCallCheck(this, MousePosition);

	        this.viewer = viewer;
	        this._show = false;
	        this._init();
	    }

	    _createClass(MousePosition, [{
	        key: "_init",
	        value: function _init() {
	            this._createUi();
	            this._initEvent();
	        }
	    }, {
	        key: "_initEvent",
	        value: function _initEvent() {
	            var scene = this.viewer.scene;
	            var camera = this.viewer.camera;
	            var self = this;

	            var handler = new Cesium.ScreenSpaceEventHandler(scene.canvas);
	            handler.setInputAction(function (movement) {
	                if (!self._show) return;
	                var lon, lat, alt, x, y;
	                //var cartesian = scene.pickPosition(movement.endPosition);   
	                var cartesian = _ScenePick2.default.pickPosition(self.viewer, movement.endPosition);
	                if (Cesium.defined(cartesian)) {
	                    var ellipsoid = scene.globe.ellipsoid;
	                    var cartographic = ellipsoid.cartesianToCartographic(cartesian);
	                    lon = Cesium.Math.toDegrees(cartographic.longitude).toFixed(7);
	                    lat = Cesium.Math.toDegrees(cartographic.latitude).toFixed(7);
	                    alt = cartographic.height.toFixed(4);
	                    var x = cartesian.x.toFixed(2);
	                    var y = cartesian.y.toFixed(2);
	                } else {
	                    lon = "";
	                    lat = "";
	                    alt = "";
	                    x = "";
	                    y = "";
	                }

	                var cameraHeight = Cesium.Cartographic.fromCartesian(camera.position).height.toFixed(4);
	                self.mousePosition.innerHTML = "\u7ECF\u5EA6: &nbsp;" + lon + " &nbsp; &nbsp; &nbsp; \u7EAC\u5EA6: &nbsp;" + lat + " &nbsp; &nbsp; &nbsp;  \u9AD8\u7A0B: &nbsp;" + alt + " &nbsp; &nbsp; &nbsp;\u6A2A\uFF1A&nbsp; " + x + " \u7EB5\uFF1A&nbsp; " + y + " &nbsp; &nbsp;\u955C\u5934\u9AD8\u5EA6: &nbsp;" + cameraHeight;
	            }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);
	        }
	    }, {
	        key: "_createUi",
	        value: function _createUi() {

	            this.posPanel = document.createElement('div');
	            this.posPanel.style.height = '26px';
	            this.posPanel.style.width = '100%';

	            this.posPanel.style.position = 'absolute';
	            this.posPanel.style.bottom = '0px';
	            this.posPanel.style.background = "#00000075";

	            this.mousePosition = document.createElement('div');
	            this.mousePosition.style.height = '26px';
	            this.mousePosition.style.lineHeight = '26px';
	            this.mousePosition.style.width = '800px';
	            this.mousePosition.style.position = 'absolute';
	            this.mousePosition.style.left = '10px';
	            this.mousePosition.style.color = '#e9e9e9';
	            this.mousePosition.style.textAlign = 'left';
	            this.mousePosition.style.fontSize = '13px';
	            this.mousePosition.style.fontFamily = '微软雅黑';
	            this.mousePosition.style.textShadow = '2px 2px 2px #000;';

	            this.posPanel.appendChild(this.mousePosition);
	            this.viewer.container.appendChild(this.posPanel);

	            this.posPanel.style.display = this._show ? "block" : "none";
	        }
	    }, {
	        key: "show",
	        get: function get() {
	            return this._show;
	        },
	        set: function set(val) {
	            this._show = val;
	            this.posPanel.style.display = val ? "block" : "none";
	        }
	    }]);

	    return MousePosition;
	}();

	exports.default = MousePosition;

/***/ }),
/* 74 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var ScenePick = function () {
	    function ScenePick() {
	        _classCallCheck(this, ScenePick);
	    }

	    _createClass(ScenePick, null, [{
	        key: "pickPosition",
	        value: function pickPosition(viewer, windowPosition) {
	            if (!Cesium.defined(windowPosition)) return null;
	            var pickedPosition;
	            var scene = viewer.scene;

	            var ray = viewer.camera.getPickRay(windowPosition);

	            if (scene.mode !== Cesium.SceneMode.MORPHING) {
	                var pickedObject = scene.pick(windowPosition);
	                if (ScenePick.isModel(scene, pickedObject)) {
	                    pickedPosition = scene.pickPosition(windowPosition);
	                } else {
	                    pickedPosition = viewer.scene.globe.pick(ray, scene);
	                    //viewer.camera.pickEllipsoid(windowPosition, scene.globe.ellipsoid);
	                }
	            }
	            return pickedPosition;
	        }
	    }, {
	        key: "isModel",
	        value: function isModel(scene, pickObj) {
	            if (Cesium.defined(pickObj) && scene.pickPositionSupported) {
	                if (pickObj.primitive && pickObj.primitive.asset || pickObj.id && pickObj.id.model) return true;
	            }
	            return false;
	        }
	    }]);

	    return ScenePick;
	}();

	exports.default = ScenePick;

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _canvas2image = __webpack_require__(76);

	var _canvas2image2 = _interopRequireDefault(_canvas2image);

	var _CrossChar = __webpack_require__(77);

	var _CrossChar2 = _interopRequireDefault(_CrossChar);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var ViewPort = function () {

	    /**
	     * 视角信息类
	     *
	     * @alias ViewPort
	     * @constructor
	     *
	     * @param {Object} viewer viewer对象
	     *
	     */
	    function ViewPort(viewer) {
	        _classCallCheck(this, ViewPort);

	        this.viewer = viewer;
	        this._defautduration = 3;
	        this.crosChar = new _CrossChar2.default(this.viewer.container);
	    }
	    /**
	     * 导出图片
	     * @param  {number} width   宽度
	     * @param  {number} height  高度
	     * @return {string}      返回导出结果，Base64格式
	     */


	    _createClass(ViewPort, [{
	        key: "exportImage",
	        value: function exportImage(width, height) {
	            this.viewer.render();
	            var canvas = this.viewer.canvas;
	            width = Cesium.defaultValue(width, canvas.width);
	            height = Cesium.defaultValue(height, canvas.height);

	            return _canvas2image2.default.convertToJPEG(canvas, width, height);
	        }

	        /**
	         * 定位到主视图
	         */

	    }, {
	        key: "gotoHome",
	        value: function gotoHome() {
	            var geoPos = Cesium.Rectangle.center(Cesium.Camera.DEFAULT_VIEW_RECTANGLE);
	            var position = Cesium.Cartesian3.fromDegrees(Cesium.Math.toDegrees(geoPos.longitude), Cesium.Math.toDegrees(geoPos.latitude), 8000000);
	            this.viewer.camera.flyTo({
	                destination: position
	            });
	        }
	        /**
	         * 获取默认视角飞行时间
	         * @return  {number}   默认视角飞行时间
	         */

	    }, {
	        key: "setCurrent",

	        /**
	         * 加载视角信息
	         * @param {Object} viewpoint 视角信息
	         */
	        value: function setCurrent(viewpoint) {
	            var position = new Cesium.Cartesian3(viewpoint.position[0], viewpoint.position[1], viewpoint.position[2]);
	            var orientation = viewpoint.orientation;
	            this.viewer.camera.flyTo({
	                destination: position,
	                duration: viewpoint.duration ? viewpoint.duration : 3,
	                orientation: {
	                    heading: orientation[0],
	                    pitch: orientation[1],
	                    roll: orientation[2]
	                }
	            });
	        }
	        /**
	         * 获取视角信息
	         * @return {Object} 返回结果
	         */

	    }, {
	        key: "getCurrent",
	        value: function getCurrent() {
	            var viewer = this.viewer;
	            var pos = viewer.camera.position;
	            var viewpoint = {
	                position: [pos.x, pos.y, pos.z],
	                duration: 3,
	                orientation: [viewer.camera.heading, viewer.camera.pitch, viewer.camera.roll]
	            };
	            return viewpoint;
	        }

	        /**
	         * 获取场景中心点坐标
	         *
	         * @return {Object} 返回结果
	         */

	    }, {
	        key: "getCenter",
	        value: function getCenter() {
	            var scene = this.viewer.scene;
	            var globe = scene.globe;
	            var point = this.pickCenterPoint();
	            if (!point) {
	                var s = scene.camera.positionCartographic.clone();
	                var l = globe.getHeight(s);
	                s.height = l || 0, point = Cesium.Ellipsoid.WGS84.cartographicToCartesian(s);
	            }
	            return point;
	        }
	    }, {
	        key: "pickCenterPoint",
	        value: function pickCenterPoint() {
	            var scene = this.viewer.scene;
	            var canvas = scene.canvas;
	            var globe = scene.globe;
	            var camera = scene.camera;
	            var center = new Cesium.Cartesian2(canvas.clientWidth / 2, canvas.clientHeight / 2);
	            var ray = camera.getPickRay(center);
	            return globe.pick(ray, scene) || camera.pickEllipsoid(center);
	        }
	    }, {
	        key: "fullScreen",
	        value: function fullScreen() {
	            Cesium.Fullscreen.requestFullscreen(this.viewer.scene.canvas);
	        }
	    }, {
	        key: "exitFullScreen",
	        value: function exitFullScreen() {
	            Cesium.Fullscreen.exitFullscreen();
	        }
	    }, {
	        key: "toJSON",
	        value: function toJSON() {
	            return this.getCurrent();
	        }
	    }, {
	        key: "fromJSON",
	        value: function fromJSON(json) {
	            var view = json;
	            this.setCurrent(view);
	        }
	    }, {
	        key: "defaultDuration",
	        get: function get() {
	            return this._defautduration;
	        }
	        /**
	         * 设置默认视角飞行时间
	         * @param  {number} val  默认视角飞行时间
	         */
	        ,
	        set: function set(val) {
	            this._defautduration = val;
	        }
	    }]);

	    return ViewPort;
	}();

	exports.default = ViewPort;

/***/ }),
/* 76 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	/**
	 * 将 canvas 转换为图片
	 */

	// check if support sth.
	var $support = function () {
		var canvas = document.createElement('canvas'),
		    ctx = canvas.getContext('2d');

		return {
			canvas: !!ctx,
			imageData: !!ctx.getImageData,
			dataURL: !!canvas.toDataURL,
			btoa: !!window.btoa
		};
	}();

	var downloadMime = 'image/octet-stream';

	function scaleCanvas(canvas, width, height) {
		var w = canvas.width,
		    h = canvas.height;
		if (width == undefined) {
			width = w;
		}
		if (height == undefined) {
			height = h;
		}

		var retCanvas = document.createElement('canvas');
		var retCtx = retCanvas.getContext('2d');
		retCanvas.width = width;
		retCanvas.height = height;
		retCtx.drawImage(canvas, 0, 0, w, h, 0, 0, width, height);
		return retCanvas;
	}

	function getDataURL(canvas, type, width, height) {
		canvas = scaleCanvas(canvas, width, height);
		return canvas.toDataURL(type);
	}

	function saveFile(strData) {
		document.location.href = strData;
	}

	function genImage(strData) {
		var img = document.createElement('img');
		img.src = strData;
		return img;
	}
	function fixType(type) {
		type = type.toLowerCase().replace(/jpg/i, 'jpeg');
		var r = type.match(/png|jpeg|bmp|gif/)[0];
		return 'image/' + r;
	}
	function encodeData(data) {
		if (!window.btoa) {
			throw 'btoa undefined';
		}
		var str = '';
		if (typeof data == 'string') {
			str = data;
		} else {
			for (var i = 0; i < data.length; i++) {
				str += String.fromCharCode(data[i]);
			}
		}

		return btoa(str);
	}
	function getImageData(canvas) {
		var w = canvas.width,
		    h = canvas.height;
		return canvas.getContext('2d').getImageData(0, 0, w, h);
	}
	function makeURI(strData, type) {
		return 'data:' + type + ';base64,' + strData;
	}

	/**
	 * create bitmap image
	 * 按照规则生成图片响应头和响应体
	 */
	var genBitmapImage = function genBitmapImage(oData) {

		//
		// BITMAPFILEHEADER: http://msdn.microsoft.com/en-us/library/windows/desktop/dd183374(v=vs.85).aspx
		// BITMAPINFOHEADER: http://msdn.microsoft.com/en-us/library/dd183376.aspx
		//

		var biWidth = oData.width;
		var biHeight = oData.height;
		var biSizeImage = biWidth * biHeight * 3;
		var bfSize = biSizeImage + 54; // total header size = 54 bytes

		//
		//  typedef struct tagBITMAPFILEHEADER {
		//  	WORD bfType;
		//  	DWORD bfSize;
		//  	WORD bfReserved1;
		//  	WORD bfReserved2;
		//  	DWORD bfOffBits;
		//  } BITMAPFILEHEADER;
		//
		var BITMAPFILEHEADER = [
		// WORD bfType -- The file type signature; must be "BM"
		0x42, 0x4D,
		// DWORD bfSize -- The size, in bytes, of the bitmap file
		bfSize & 0xff, bfSize >> 8 & 0xff, bfSize >> 16 & 0xff, bfSize >> 24 & 0xff,
		// WORD bfReserved1 -- Reserved; must be zero
		0, 0,
		// WORD bfReserved2 -- Reserved; must be zero
		0, 0,
		// DWORD bfOffBits -- The offset, in bytes, from the beginning of the BITMAPFILEHEADER structure to the bitmap bits.
		54, 0, 0, 0];

		//
		//  typedef struct tagBITMAPINFOHEADER {
		//  	DWORD biSize;
		//  	LONG  biWidth;
		//  	LONG  biHeight;
		//  	WORD  biPlanes;
		//  	WORD  biBitCount;
		//  	DWORD biCompression;
		//  	DWORD biSizeImage;
		//  	LONG  biXPelsPerMeter;
		//  	LONG  biYPelsPerMeter;
		//  	DWORD biClrUsed;
		//  	DWORD biClrImportant;
		//  } BITMAPINFOHEADER, *PBITMAPINFOHEADER;
		//
		var BITMAPINFOHEADER = [
		// DWORD biSize -- The number of bytes required by the structure
		40, 0, 0, 0,
		// LONG biWidth -- The width of the bitmap, in pixels
		biWidth & 0xff, biWidth >> 8 & 0xff, biWidth >> 16 & 0xff, biWidth >> 24 & 0xff,
		// LONG biHeight -- The height of the bitmap, in pixels
		biHeight & 0xff, biHeight >> 8 & 0xff, biHeight >> 16 & 0xff, biHeight >> 24 & 0xff,
		// WORD biPlanes -- The number of planes for the target device. This value must be set to 1
		1, 0,
		// WORD biBitCount -- The number of bits-per-pixel, 24 bits-per-pixel -- the bitmap
		// has a maximum of 2^24 colors (16777216, Truecolor)
		24, 0,
		// DWORD biCompression -- The type of compression, BI_RGB (code 0) -- uncompressed
		0, 0, 0, 0,
		// DWORD biSizeImage -- The size, in bytes, of the image. This may be set to zero for BI_RGB bitmaps
		biSizeImage & 0xff, biSizeImage >> 8 & 0xff, biSizeImage >> 16 & 0xff, biSizeImage >> 24 & 0xff,
		// LONG biXPelsPerMeter, unused
		0, 0, 0, 0,
		// LONG biYPelsPerMeter, unused
		0, 0, 0, 0,
		// DWORD biClrUsed, the number of color indexes of palette, unused
		0, 0, 0, 0,
		// DWORD biClrImportant, unused
		0, 0, 0, 0];

		var iPadding = (4 - biWidth * 3 % 4) % 4;

		var aImgData = oData.data;

		var strPixelData = '';
		var biWidth4 = biWidth << 2;
		var y = biHeight;
		var fromCharCode = String.fromCharCode;

		do {
			var iOffsetY = biWidth4 * (y - 1);
			var strPixelRow = '';
			for (var x = 0; x < biWidth; x++) {
				var iOffsetX = x << 2;
				strPixelRow += fromCharCode(aImgData[iOffsetY + iOffsetX + 2]) + fromCharCode(aImgData[iOffsetY + iOffsetX + 1]) + fromCharCode(aImgData[iOffsetY + iOffsetX]);
			}

			for (var c = 0; c < iPadding; c++) {
				strPixelRow += String.fromCharCode(0);
			}

			strPixelData += strPixelRow;
		} while (--y);

		var strEncoded = encodeData(BITMAPFILEHEADER.concat(BITMAPINFOHEADER)) + encodeData(strPixelData);

		return strEncoded;
	};

	/**
	 * saveAsImage
	 * @param canvasElement
	 * @param {String} image type
	 * @param {Number} [optional] png width
	 * @param {Number} [optional] png height
	 */
	var saveAsImage = function saveAsImage(canvas, width, height, type) {
		if ($support.canvas && $support.dataURL) {
			if (typeof canvas == "string") {
				canvas = document.getElementById(canvas);
			}
			if (type == undefined) {
				type = 'png';
			}
			type = fixType(type);
			if (/bmp/.test(type)) {
				var data = getImageData(scaleCanvas(canvas, width, height));
				var strData = genBitmapImage(data);
				saveFile(makeURI(strData, downloadMime));
			} else {
				var strData = getDataURL(canvas, type, width, height);
				saveFile(strData.replace(type, downloadMime));
			}
		}
	};

	var convertToImage = function convertToImage(canvas, width, height, type) {
		if ($support.canvas && $support.dataURL) {
			if (typeof canvas == "string") {
				canvas = document.getElementById(canvas);
			}
			if (type == undefined) {
				type = 'png';
			}
			type = fixType(type);

			if (/bmp/.test(type)) {
				var data = getImageData(scaleCanvas(canvas, width, height));
				var strData = genBitmapImage(data);
				return genImage(makeURI(strData, 'image/bmp'));
			} else {
				return getDataURL(canvas, type, width, height);
				//return genImage(strData);
			}
		}
	};

	exports.default = {
		saveAsImage: saveAsImage,
		saveAsPNG: function saveAsPNG(canvas, width, height) {
			return saveAsImage(canvas, width, height, 'png');
		},
		saveAsJPEG: function saveAsJPEG(canvas, width, height) {
			return saveAsImage(canvas, width, height, 'jpeg');
		},
		saveAsGIF: function saveAsGIF(canvas, width, height) {
			return saveAsImage(canvas, width, height, 'gif');
		},
		saveAsBMP: function saveAsBMP(canvas, width, height) {
			return saveAsImage(canvas, width, height, 'bmp');
		},

		convertToImage: convertToImage,
		convertToPNG: function convertToPNG(canvas, width, height) {
			return convertToImage(canvas, width, height, 'png');
		},
		convertToJPEG: function convertToJPEG(canvas, width, height) {
			return convertToImage(canvas, width, height, 'jpeg');
		},
		convertToGIF: function convertToGIF(canvas, width, height) {
			return convertToImage(canvas, width, height, 'gif');
		},
		convertToBMP: function convertToBMP(canvas, width, height) {
			return convertToImage(canvas, width, height, 'bmp');
		}
	};

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Config = __webpack_require__(26);

	var _Config2 = _interopRequireDefault(_Config);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var CrossChar = function () {

	    /**
	     * 三维视图导航类
	     *
	     * @alias CrossChar
	     * @constructor
	     *
	     * @param {Object} viewer viewer对象
	     * 
	     *
	     */

	    function CrossChar(container) {
	        _classCallCheck(this, CrossChar);

	        this.container = container;
	        this._show = false;
	        this._crossChairDiv = null;
	        this._init();
	    }

	    _createClass(CrossChar, [{
	        key: '_init',
	        value: function _init() {
	            this._crossChairDiv = document.createElement('div');
	            var style = this._crossChairDiv.style;
	            style.height = '25px';
	            style.width = '25px';
	            style.textAlign = 'center';
	            style.float = 'left';
	            style.position = 'absolute';
	            style.top = '49%';
	            style.left = '49%';
	            style.display = "none";
	            style.pointerEvents = "none";
	            var span = document.createElement('SPAN');
	            this._crossChairDiv.appendChild(span);
	            var image = document.createElement('IMG');
	            image.src = _Config2.default.getResource('Assets/Images/crosschair.png');
	            image.style.height = '30px';
	            image.style.width = '30px';
	            image.style.textAlign = 'center';
	            span.appendChild(image);

	            this.container.appendChild(this._crossChairDiv);
	        }
	    }, {
	        key: 'show',
	        get: function get() {
	            return this._show;
	        },
	        set: function set(val) {
	            this._show = val;
	            this._crossChairDiv.style.display = val ? "block" : "none";
	        }
	    }]);

	    return CrossChar;
	}();

	exports.default = CrossChar;

/***/ }),
/* 78 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var EventHelper = function () {

	    /**
	     * 视角信息类
	     *
	     * @alias EventHelper
	     * @constructor
	     *
	     * @param {Object} viewer viewer对象
	     *
	     */
	    function EventHelper(viewer) {
	        _classCallCheck(this, EventHelper);

	        this.viewer = viewer;
	        viewer.showRenderLoopErrors = false;
	        //三维场景导航快捷键修改
	        viewer.scene.screenSpaceCameraController.zoomEventTypes = [Cesium.CameraEventType.WHEEL, Cesium.CameraEventType.PINCH];
	        viewer.scene.screenSpaceCameraController.tiltEventTypes = [Cesium.CameraEventType.RIGHT_DRAG, Cesium.CameraEventType.PINCH];
	        //视野控制
	        viewer.scene.screenSpaceCameraController.minimumZoomDistance = 5;
	        viewer.scene.screenSpaceCameraController.maximumZoomDistance = 50000000;
	        viewer.scene.minimumDisableDepthTestDistance = 0;
	        viewer.scene.fxaa = false;
	    }

	    _createClass(EventHelper, [{
	        key: 'doKeyDown',
	        value: function doKeyDown(e) {
	            var keyID = e.keyCode ? e.keyCode : e.which;
	            if (keyID === 38 || keyID === 87) {
	                // up arrow and W
	                clearCanvas();
	                y = y - 10;
	                tempContext.fillRect(x, y, 80, 40);
	                e.preventDefault();
	            }
	            if (keyID === 39 || keyID === 68) {
	                // right arrow and D
	                clearCanvas();
	                x = x + 10;
	                tempContext.fillRect(x, y, 80, 40);
	                e.preventDefault();
	            }
	            if (keyID === 40 || keyID === 83) {
	                // down arrow and S
	                clearCanvas();
	                y = y + 10;
	                tempContext.fillRect(x, y, 80, 40);
	                e.preventDefault();
	            }
	            if (keyID === 37 || keyID === 65) {
	                // left arrow and A
	                clearCanvas();
	                x = x - 10;
	                tempContext.fillRect(x, y, 80, 40);
	                e.preventDefault();
	            }
	        }
	    }, {
	        key: 'registHotKey',
	        value: function registHotKey() {
	            var self = this;
	            document.addEventListener('keyup', function (e) {
	                //console.log(e.keyCode);
	                if (e.code == "Space") {
	                    //恢复视图

	                    return;
	                }
	                switch (e.key) {
	                    case 'p':
	                        {
	                            self.viewer.FPS = !self.viewer.FPS;
	                            break;
	                        }
	                    case 'r':
	                        {

	                            break;
	                        }
	                    case 'P':
	                        {

	                            break;
	                        }
	                    case 'P':
	                        {

	                            break;
	                        }
	                    case 'P':
	                        {

	                            break;
	                        }
	                }
	            }, false);
	        }
	    }]);

	    return EventHelper;
	}();

	exports.default = EventHelper;

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _ScenePick = __webpack_require__(74);

	var _ScenePick2 = _interopRequireDefault(_ScenePick);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var GraphicLayer = function () {
	    function GraphicLayer(viewer) {
	        _classCallCheck(this, GraphicLayer);

	        this.viewer = viewer;
	        var graphicDatasource = new Cesium.CustomDataSource('graphicDatasource');
	        this.viewer.dataSources.add(graphicDatasource);
	        this.entitycollection = graphicDatasource.entities;
	        this.retainEntity = true;
	        this.clickEvt = null;
	        this._lonlataltList = [];
	        this._pointList = [];
	        this.drawComplete = null;

	        this._polygonShow = false;
	        this._polylineShow = false;
	        this._rectangleShow = false;

	        this._initEvent();
	    }

	    _createClass(GraphicLayer, [{
	        key: 'trackPolygon',
	        value: function trackPolygon(drawComplete, clampToGround) {
	            this.drawComplete = drawComplete;
	            this._polygonShow = true;
	            this._polylineShow = false;
	            this._rectangleShow = false;
	            this._addEntity(clampToGround);
	            this._isTrack = true;
	            this.viewer.canvas.style.cursor = 'crosshair';
	        }
	    }, {
	        key: 'trackPolyline',
	        value: function trackPolyline(drawComplete, clampToGround) {
	            this.drawComplete = drawComplete;

	            this._polygonShow = false;
	            this._polylineShow = true;
	            this._rectangleShow = false;

	            this._addEntity(clampToGround);
	            this._isTrack = true;
	            this.earth.canvas.style.cursor = 'crosshair';
	        }
	    }, {
	        key: 'clear',
	        value: function clear() {
	            this.entitycollection.removeAll();
	            this._lonlataltList = [];
	            this._pointList = [];
	            this._isTrack = false;
	            this.viewer.canvas.style.cursor = 'default';
	        }
	    }, {
	        key: '_initEvent',
	        value: function _initEvent() {
	            var scene = this.viewer.scene;
	            var self = this;
	            var handler = new Cesium.ScreenSpaceEventHandler(scene.canvas);
	            this.clickEvt = handler.setInputAction(function (event) {
	                if (!self._isTrack) return;
	                //var CarPosition = scene.pickPosition(event.position);
	                var CarPosition = _ScenePick2.default.pickPosition(self.viewer, event.position);
	                if (CarPosition) {
	                    var cartographic = scene.globe.ellipsoid.cartesianToCartographic(CarPosition);
	                    var lat = Cesium.Math.toDegrees(cartographic.latitude);
	                    var lon = Cesium.Math.toDegrees(cartographic.longitude);
	                    var height = cartographic.height;
	                    self._pointList.push(CarPosition);
	                    self._lonlataltList.push(lon, lat, height);
	                    self.entitycollection.add({
	                        position: CarPosition, //Cesium.Cartesian3.fromDegrees(lon,lat,height),
	                        point: {
	                            color: Cesium.Color.YELLOW,
	                            heightReference: Cesium.HeightReference.CLAMP_TO_GROUND,
	                            pixelSize: 8,
	                            disableDepthTestDistance: Number.POSITIVE_INFINITY

	                        }
	                    });
	                }
	            }, Cesium.ScreenSpaceEventType.LEFT_CLICK);

	            //右键结束
	            handler.setInputAction(function (event) {
	                if (!self._isTrack) return;
	                self._isTrack = false;
	                if (!self.retainEntity) self.clear();
	                if (self.drawComplete) self.drawComplete(self._lonlataltList, self._pointList);
	            }, Cesium.ScreenSpaceEventType.RIGHT_CLICK);
	        }
	    }, {
	        key: '_addEntity',
	        value: function _addEntity() {
	            var _this = this;

	            var clampToGround = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

	            this.clear();
	            this.entitycollection.add({
	                polygon: {
	                    show: this._polygonShow,
	                    perPositionHeight: !clampToGround,
	                    hierarchy: new Cesium.CallbackProperty(function () {
	                        return new Cesium.PolygonHierarchy(_this._pointList);
	                    }, false),
	                    material: Cesium.Color.DEEPSKYBLUE.withAlpha(0.7)
	                },
	                polyline: {
	                    show: this._polylineShow,
	                    clampToGround: clampToGround,
	                    positions: new Cesium.CallbackProperty(function () {
	                        return _this._pointList;
	                    }, false),
	                    material: Cesium.Color.DEEPSKYBLUE, //Cesium.Color.DODGERBLUE
	                    width: 2.0
	                }
	            });
	        }
	    }]);

	    return GraphicLayer;
	}();

	exports.default = GraphicLayer;

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*
	作者：朱王璋
	部门：产品研发中心
	日期：2019.5.16
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */


	var _Slope = __webpack_require__(81);

	var _Slope2 = _interopRequireDefault(_Slope);

	var _Aspect = __webpack_require__(82);

	var _Aspect2 = _interopRequireDefault(_Aspect);

	var _Contour = __webpack_require__(83);

	var _Contour2 = _interopRequireDefault(_Contour);

	var _Elevation = __webpack_require__(84);

	var _Elevation2 = _interopRequireDefault(_Elevation);

	var _Profile = __webpack_require__(85);

	var _Profile2 = _interopRequireDefault(_Profile);

	var _ViewshedAnalyze = __webpack_require__(86);

	var _ViewshedAnalyze2 = _interopRequireDefault(_ViewshedAnalyze);

	var _FloodAnalyze = __webpack_require__(87);

	var _FloodAnalyze2 = _interopRequireDefault(_FloodAnalyze);

	var _HeightAnalyze = __webpack_require__(88);

	var _HeightAnalyze2 = _interopRequireDefault(_HeightAnalyze);

	var _ClipTool = __webpack_require__(89);

	var _ClipTool2 = _interopRequireDefault(_ClipTool);

	var _Measure = __webpack_require__(90);

	var _Measure2 = _interopRequireDefault(_Measure);

	var _Skyline = __webpack_require__(92);

	var _Skyline2 = _interopRequireDefault(_Skyline);

	var _Underground = __webpack_require__(101);

	var _Underground2 = _interopRequireDefault(_Underground);

	var _GroundClipping = __webpack_require__(102);

	var _GroundClipping2 = _interopRequireDefault(_GroundClipping);

	var _VisibilityAnalyze = __webpack_require__(104);

	var _VisibilityAnalyze2 = _interopRequireDefault(_VisibilityAnalyze);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * 分析工具类
	 * 包括地形分析、模型分析等分析工具
	 * @param {Vewer} viewer Viewer 对象
	 *  @example
	 * //初始化工具
	 *  let analysis = new Cesium.Analysis(viewer);
	 *  //坡向分析
	 *  let slope = analysis.slope;
	 */

	var Analysis = function () {

	  /**
	   * 通视分析构造函数
	   * @method constructor
	   * @param viewer Cesium.Viewer 对象
	   * 
	   */
	  function Analysis(viewer) {
	    _classCallCheck(this, Analysis);

	    this.viewer = viewer;
	    this.toolList = new Map();
	  }

	  /**
	   * 坡向分析 
	   * @type {Aspect}
	   * @returns {Aspect} 坡向分析工具
	   */


	  _createClass(Analysis, [{
	    key: "closeAll",


	    /**
	     * @method closeAll
	     * 关闭所有分析工具 
	     * 
	     */
	    value: function closeAll() {
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;

	      try {
	        for (var _iterator = this.toolList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var item = _step.value;

	          var tool = item[1];
	          if (item[0] == "measureTool") {
	            tool.clearMeasure();
	          } else {
	            tool.close();
	          }
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	    }

	    /**
	     * 坡度分析 
	     *  @type {Slope}
	     *  @returns {Slope} 坡度分析工具
	     */

	  }, {
	    key: "aspect",
	    get: function get() {
	      var tool = this.toolList.get("aspect");
	      if (!tool) {
	        tool = new _Aspect2.default(this.viewer);
	        this.toolList.set("aspect", tool);
	      }
	      return tool;
	    }
	  }, {
	    key: "slope",
	    get: function get() {
	      var tool = this.toolList.get("slope");
	      if (!tool) {
	        tool = new _Slope2.default(this.viewer);
	        this.toolList.set("slope", tool);
	      }
	      return tool;
	    }

	    /**
	     * 等高线分析
	     * @returns {Contour} 等高线分析工具
	     */

	  }, {
	    key: "contour",
	    get: function get() {
	      var tool = this.toolList.get("contour");
	      if (!tool) {
	        tool = new _Contour2.default(this.viewer);
	        this.toolList.set("contour", tool);
	      }
	      return tool;
	    }

	    /**
	     * 高程渲染工具
	     * @returns {Elevation} 高程渲染工具
	     */

	  }, {
	    key: "elevation",
	    get: function get() {
	      var tool = this.toolList.get("elevaton");
	      if (!tool) {
	        tool = new _Elevation2.default(this.viewer);
	        this.toolList.set("elevaton", tool);
	      }
	      return tool;
	    }

	    /**
	     * 剖面分析
	     * @returns {Profile} 剖面分析工具
	     */

	  }, {
	    key: "profile",
	    get: function get() {
	      var tool = this.toolList.get("profile");
	      if (!tool) {
	        tool = new _Profile2.default(this.viewer);
	        this.toolList.set("profile", tool);
	      }
	      return tool;
	    }

	    /**
	     * 淹没分析 
	     *  @returns {Flood} 淹没分析工具
	     */

	  }, {
	    key: "flood",
	    get: function get() {
	      var tool = this.toolList.get("floodAnalyze");
	      if (!tool) {
	        tool = new _FloodAnalyze2.default(this.viewer);
	        this.toolList.set("floodAnalyze", tool);
	      }
	      return tool;
	    }

	    /**
	     * 控高分析 
	     * @returns {HeightAnalyze} 控高分析工具
	     */

	  }, {
	    key: "heightAnalyze",
	    get: function get() {
	      var tool = this.toolList.get("heightAnalyze");
	      if (!tool) {
	        tool = new _HeightAnalyze2.default(this.viewer);
	        this.toolList.set("heightAnalyze", tool);
	      }
	      return tool;
	    }

	    /**
	     * 通视分析 
	     * @returns {ViewshedAnalyze} 通视分析工具
	     */

	  }, {
	    key: "viewshedAnalyze",
	    get: function get() {
	      var tool = this.toolList.get("viewshedAnalyze");
	      if (!tool) {
	        tool = new _ViewshedAnalyze2.default(this.viewer);
	        this.toolList.set("viewshedAnalyze", tool);
	      }
	      return tool;
	    }

	    /**
	     * 测量工具 
	     * @returns {MeasureTool} 测量工具
	     */

	  }, {
	    key: "measureTool",
	    get: function get() {
	      var tool = this.toolList.get("measureTool");
	      if (!tool) {
	        tool = new _Measure2.default(this.viewer);
	        this.toolList.set("measureTool", tool);
	      }
	      return tool;
	    }

	    /**
	     * 裁剪工具 
	     *  @returns {ClipTool} 裁剪工具
	     */

	  }, {
	    key: "clipTool",
	    get: function get() {
	      var tool = this.toolList.get("clipTool");
	      if (!tool) {
	        tool = new _ClipTool2.default(this.viewer);
	        this.toolList.set("clipTool", tool);
	      }
	      return tool;
	    }

	    /**
	     * 天际线分析 
	     *  @returns {Skyline} 天际线分析工具
	     */

	  }, {
	    key: "skyline",
	    get: function get() {
	      var tool = this.toolList.get("skyline");
	      if (!tool) {
	        tool = new _Skyline2.default(this.viewer);
	        this.toolList.set("skyline", tool);
	      }
	      return tool;
	    }

	    /**
	     * 地下模式 
	     * @returns {Underground} 地下模式
	     */

	  }, {
	    key: "underground",
	    get: function get() {
	      var tool = this.toolList.get("underground");
	      if (!tool) {
	        tool = new _Underground2.default(this.viewer);
	        this.toolList.set("underground", tool);
	      }
	      return tool;
	    }

	    /**
	     * 地形开挖
	     * @returns {GroundClipping} 地形开挖工具
	     */

	  }, {
	    key: "groundClip",
	    get: function get() {
	      var tool = this.toolList.get("groundClip");
	      if (!tool) {
	        tool = new _GroundClipping2.default(this.viewer);
	        this.toolList.set("groundClip", tool);
	      }
	      return tool;
	    }
	    /**
	     * 点面通视分析 
	     *  * @returns {VisibilityAnalyze} 点面通视分析
	     */

	  }, {
	    key: "visibilityAnalyze",
	    get: function get() {
	      var tool = this.toolList.get("visibilityAnalyze");
	      if (!tool) {
	        tool = new _VisibilityAnalyze2.default(this.viewer);
	        this.toolList.set("visibilityAnalyze", tool);
	      }
	      return tool;
	    }
	  }]);

	  return Analysis;
	}();

	exports.default = Analysis;

/***/ }),
/* 81 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/*
	 * 作者：朱王璋
	 * 部门：产品研发中心
	 * 日期：2019.5.16
	 */

	/**
	* 坡度分析工具类
	*/
	var Slope = function () {
	  /**
	  * 通视分析构造函数
	  * @method constructor
	  * @param viewer Cesium.Viewer 对象
	   * 
	  */
	  function Slope(viewer) {
	    _classCallCheck(this, Slope);

	    this.viewer = viewer;
	    this._colorRamp = new Map();
	  }

	  /**
	  * @method colorRamp
	  * 颜色值   
	  * @example 示例代码
	  * ```
	  *  var slopeAnalyze = viewer.analysis.Slope;
	  *  var colorRamp = slopeAnalyze.colorRamp;
	  *  colorRamp.set(0.0,'#000000');
	  *  colorRamp.set(0.2,'#2747E0');
	  *  colorRamp.set(0.25,'#D33B7D');
	  *  colorRamp.set(0.3,'#ffd700');
	  *  colorRamp.set(0.35,'#D33038');
	  *  colorRamp.set(0.9,'#ffffff');
	  * ```
	  * 
	  */


	  _createClass(Slope, [{
	    key: 'setPolygon',

	    /**
	     * 坐标点
	     * @method setPolygon 
	     * @param points 经纬度点坐标，格式:[经度,纬度,高度]
	     * @example 示例代码
	     * ```
	     *   var slopeAnalyze = viewer.analysis.Slope;
	     *   slopeAnalyze.setPolygon([         
	     *            109.0349381448271,34.31717633782572,386.9231637517154,109.03900961665003,
	     *            34.321847375754345,397.67154065059685,
	     *            109.03346632153671,34.326639657406226,395.4792360496345,
	     *            109.03144059631933,34.32489928901451,390.96019381390937,
	     *            109.0311066948082,34.323485025163286,388.67673695624234,
	     *            109.03229719685534,34.31991103654269,385.82666822350035,
	     *            109.03358048811168,34.31842706237503,386.4791369856086,
	     *            109.03433018158603,34.31771892610954,387.5863231772101
	     *        ]); 
	     *  slopeAnalyze.open();
	     * ```
	     * 
	     */
	    value: function setPolygon(points) {
	      if (points.length < 2) return;
	      this._points = Cesium.Cartesian3.fromDegreesArrayHeights(points);;
	    }

	    /**
	    * 开始分析
	    * @method open 
	    */

	  }, {
	    key: 'open',
	    value: function open() {

	      var material = Cesium.Material.fromType('SlopeRamp');
	      var shadingUniforms = material.uniforms;
	      shadingUniforms.image = this.getColorRamp();
	      if (Cesium.GlobeSurfaceOption) Cesium.GlobeSurfaceOption.setPolygon(this._points);
	      this.viewer.scene.globe.material = material;

	      // var material = Cesium.Material.fromType('SlopeRamp');
	      // var shadingUniforms = material.uniforms;
	      // shadingUniforms.image = this.getColorRamp();    
	      // Cesium.GlobeSurfaceOption.setPolygon(this._points);
	      // this.viewer.scene.globe.material = material;
	    }

	    /**
	    * 结束分析
	    * @method close 
	    */

	  }, {
	    key: 'close',
	    value: function close() {
	      this.viewer.scene.globe.material = undefined;
	    }
	  }, {
	    key: 'getColorRamp',
	    value: function getColorRamp() {
	      var ramp = document.createElement('canvas');
	      ramp.width = 100;
	      ramp.height = 1;
	      var ctx = ramp.getContext('2d');
	      var grd = ctx.createLinearGradient(0, 0, 100, 0);
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;

	      try {
	        for (var _iterator = this._colorRamp[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var item = _step.value;

	          grd.addColorStop(item[0], item[1]); //black
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }

	      ctx.fillStyle = grd;
	      ctx.fillRect(0, 0, 100, 1);
	      return ramp;
	    }
	  }, {
	    key: 'colorRamp',
	    get: function get() {
	      return this._colorRamp;
	    }
	  }]);

	  return Slope;
	}();

	exports.default = Slope;

/***/ }),
/* 82 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/*
	 * 作者：朱王璋
	 * 部门：产品研发中心
	 * 日期：2019.5.16
	 */

	/**
	 * 坡向分析工具
	 */
	var Aspect = function () {
	  /**
	  * 构造函数
	  * @method constructor
	  * @param viewer Cesium.Viewer 对象
	   * @example
	    * //初始化工具
	    *  let slope = new Cesium.Slope(viewer);
	     * 
	  */
	  function Aspect(viewer) {
	    _classCallCheck(this, Aspect);

	    this.viewer = viewer;
	    this._colorRamp = new Map();
	  }

	  /**
	  *  
	  * 颜色值
	  * @return {Map} 颜色对象数组  
	  * @example 示例代码
	  * ```
	  *  var slopeAnalyze = viewer.analysis.Slope;
	  *  var colorRamp = slopeAnalyze.colorRamp;
	  *  colorRamp.set(0.0,'#000000');
	  *  colorRamp.set(0.2,'#2747E0');
	  *  colorRamp.set(0.25,'#D33B7D');
	  *  colorRamp.set(0.3,'#ffd700');
	  *  colorRamp.set(0.35,'#D33038');
	  *  colorRamp.set(0.9,'#ffffff');
	  * ```
	  * 
	  */


	  _createClass(Aspect, [{
	    key: 'setPolygon',

	    /**
	     * 坐标点
	     * @method setPolygon 
	     * @param points 经纬度点坐标，格式:[经度,纬度,高度]
	     * @example 示例代码
	     * ```
	     *   var slopeAnalyze = viewer.analysis.Slope;
	     *   slopeAnalyze.setPolygon([         
	     *            109.0349381448271,34.31717633782572,386.9231637517154,109.03900961665003,
	     *            34.321847375754345,397.67154065059685,
	     *            109.03346632153671,34.326639657406226,395.4792360496345,
	     *            109.03144059631933,34.32489928901451,390.96019381390937,
	     *            109.0311066948082,34.323485025163286,388.67673695624234,
	     *            109.03229719685534,34.31991103654269,385.82666822350035,
	     *            109.03358048811168,34.31842706237503,386.4791369856086,
	     *            109.03433018158603,34.31771892610954,387.5863231772101
	     *        ]); 
	     *  slopeAnalyze.open();
	     * ```
	     * 
	     */
	    value: function setPolygon(points) {
	      if (points.length < 2) return;
	      this._points = Cesium.Cartesian3.fromDegreesArrayHeights(points);;
	    }

	    /**
	    * 开始分析
	    * @method open 
	    */

	  }, {
	    key: 'open',
	    value: function open() {
	      var material = Cesium.Material.fromType('AspectRamp');
	      var shadingUniforms = material.uniforms;
	      shadingUniforms.image = this.getColorRamp();
	      if (Cesium.GlobeSurfaceOption) Cesium.GlobeSurfaceOption.setPolygon(this._points);
	      this.viewer.scene.globe.material = material;
	    }

	    /**
	    * 结束分析
	    * @method close 
	    */

	  }, {
	    key: 'close',
	    value: function close() {
	      this.viewer.scene.globe.material = undefined;
	    }
	  }, {
	    key: 'getColorRamp',
	    value: function getColorRamp() {
	      var ramp = document.createElement('canvas');
	      ramp.width = 100;
	      ramp.height = 1;
	      var ctx = ramp.getContext('2d');
	      var grd = ctx.createLinearGradient(0, 0, 100, 0);
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;

	      try {
	        for (var _iterator = this._colorRamp[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var item = _step.value;

	          grd.addColorStop(item[0], item[1]); //black
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }

	      ctx.fillStyle = grd;
	      ctx.fillRect(0, 0, 100, 1);
	      return ramp;
	    }
	  }, {
	    key: 'colorRamp',
	    get: function get() {
	      return this._colorRamp;
	    }
	  }]);

	  return Aspect;
	}();

	exports.default = Aspect;

/***/ }),
/* 83 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/*
	 * 作者：朱王璋
	 * 部门：产品研发中心
	 * 日期：2019.5.16
	 */

	/**
	 * 等高线分析工具
	 */
	var Contour = function () {
	  /**
	  * 通视分析构造函数
	  * @method constructor
	  * @param viewer Cesium.Viewer 对象
	   * 
	  */
	  function Contour(viewer) {
	    _classCallCheck(this, Contour);

	    this.viewer = viewer;
	    this._color = Cesium.Color.clone(Cesium.Color.RED);
	    this._width = 2;
	    this._spacing = 10;
	    this._material = Cesium.Material.fromType('ElevationContour');
	  }

	  /**
	  * @method color
	  * 颜色值   
	  * @example 示例代码
	  * ```
	  *  var contourAnalyze = viewer.analysis.contour;
	  *  contourAnalyze.color = Cesium.Color.WHITE;
	  * ```
	  * 
	  */


	  _createClass(Contour, [{
	    key: 'setPolygon',


	    /**
	     * 坐标点
	     * @method setPolygon 
	     * @param points 经纬度点坐标，格式:[经度,纬度,高度]
	     * @example 示例代码
	     * ```
	     *   var slopeAnalyze = viewer.analysis.Slope;
	     *   slopeAnalyze.setPolygon([         
	     *            109.0349381448271,34.31717633782572,386.9231637517154,109.03900961665003,
	     *            34.321847375754345,397.67154065059685,
	     *            109.03346632153671,34.326639657406226,395.4792360496345,
	     *            109.03144059631933,34.32489928901451,390.96019381390937,
	     *            109.0311066948082,34.323485025163286,388.67673695624234,
	     *            109.03229719685534,34.31991103654269,385.82666822350035,
	     *            109.03358048811168,34.31842706237503,386.4791369856086,
	     *            109.03433018158603,34.31771892610954,387.5863231772101
	     *        ]); 
	     * ```
	     * 
	     */
	    value: function setPolygon(points) {
	      if (points.length < 2) return;
	      this._points = Cesium.Cartesian3.fromDegreesArrayHeights(points);;
	      this.open();
	    }

	    /**
	    * 开始分析
	    * @method open 
	    */

	  }, {
	    key: 'open',
	    value: function open() {
	      var contourUniforms = this._material.uniforms;
	      contourUniforms.width = this._width;
	      contourUniforms.spacing = this._spacing;
	      contourUniforms.color = this._color;
	      if (Cesium.GlobeSurfaceOption) Cesium.GlobeSurfaceOption.setPolygon(this._points);
	      this.viewer.scene.globe.material = this._material;
	    }

	    /**
	    * 结束分析
	    * @method close 
	    */

	  }, {
	    key: 'close',
	    value: function close() {
	      viewer.scene.globe.material = undefined;
	    }
	  }, {
	    key: 'color',
	    get: function get() {
	      return this._material.uniforms.color;
	    },
	    set: function set(val) {
	      this._material.uniforms.color = val;
	    }

	    /**
	    * @method width
	    * 宽度   
	    * @example 示例代码
	    * ```
	    *  var contourAnalyze = viewer.analysis.contour;
	    *  contourAnalyze.width = 4;
	    * ```
	    * 
	    */

	  }, {
	    key: 'width',
	    get: function get() {
	      return this._material.uniforms.width;
	    },
	    set: function set(val) {
	      this._material.uniforms.width = val;
	    }

	    /**
	    * @method spacing
	    * 等高距   
	    * @example 示例代码
	    * ```
	    *  var contourAnalyze = viewer.analysis.contour;
	    *  contourAnalyze.spacing = 4;
	    * ```
	    * 
	    */

	  }, {
	    key: 'spacing',
	    get: function get() {
	      return this._material.uniforms.spacing;
	    },
	    set: function set(val) {
	      this._material.uniforms.spacing = val;
	    }
	  }]);

	  return Contour;
	}();

	exports.default = Contour;

/***/ }),
/* 84 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/*
	 * 作者：朱王璋
	 * 部门：产品研发中心
	 * 日期：2019.5.16
	 */

	/**
	 * 高程着色工具
	 */
	var Elevation = function () {
	  /**
	  * 通视分析构造函数
	  * @method constructor
	  * @param viewer Cesium.Viewer 对象
	   * 
	  */
	  function Elevation(viewer) {
	    _classCallCheck(this, Elevation);

	    this.viewer = viewer;
	    this._colorRamp = new Map();
	    this._minimumHeight = -414.0;
	    this._maximumHeight = 8777.0;
	  }

	  _createClass(Elevation, [{
	    key: 'setPolygon',

	    /**
	     * 坐标点
	     * @method setPolygon 
	     * @param points 经纬度点坐标，格式:[经度,纬度,高度]
	     * @example 示例代码
	     * ```
	     *   var slopeAnalyze = viewer.analysis.Slope;
	     *   slopeAnalyze.setPolygon([         
	     *            109.0349381448271,34.31717633782572,386.9231637517154,109.03900961665003,
	     *            34.321847375754345,397.67154065059685,
	     *            109.03346632153671,34.326639657406226,395.4792360496345,
	     *            109.03144059631933,34.32489928901451,390.96019381390937,
	     *            109.0311066948082,34.323485025163286,388.67673695624234,
	     *            109.03229719685534,34.31991103654269,385.82666822350035,
	     *            109.03358048811168,34.31842706237503,386.4791369856086,
	     *            109.03433018158603,34.31771892610954,387.5863231772101
	     *        ]); 
	     *  slopeAnalyze.open();
	     * ```
	     * 
	     */
	    value: function setPolygon(points) {
	      if (points.length < 2) return;
	      this._points = Cesium.Cartesian3.fromDegreesArrayHeights(points);
	    }

	    /**
	    * 开始分析
	    * @method open 
	    */

	  }, {
	    key: 'open',
	    value: function open() {
	      var material = Cesium.Material.fromType('ElevationRamp');
	      var shadingUniforms = material.uniforms;
	      shadingUniforms.image = this.getColorRamp();
	      shadingUniforms.minimumHeight = this._minimumHeight;
	      shadingUniforms.maximumHeight = this._maximumHeight;
	      if (Cesium.GlobeSurfaceOption) Cesium.GlobeSurfaceOption.setPolygon(this._points);
	      this.viewer.scene.globe.material = material;
	    }

	    /**
	    * 结束分析
	    * @method close 
	    */

	  }, {
	    key: 'close',
	    value: function close() {
	      viewer.scene.globe.material = undefined;
	    }
	  }, {
	    key: 'getColorRamp',
	    value: function getColorRamp() {
	      var ramp = document.createElement('canvas');
	      ramp.width = 100;
	      ramp.height = 1;
	      var ctx = ramp.getContext('2d');
	      var grd = ctx.createLinearGradient(0, 0, 100, 0);
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;

	      try {
	        for (var _iterator = this._colorRamp[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var item = _step.value;

	          grd.addColorStop(item[0], item[1]); //black
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }

	      ctx.fillStyle = grd;
	      ctx.fillRect(0, 0, 100, 1);
	      return ramp;
	    }
	  }, {
	    key: 'minimumHeight',
	    get: function get() {
	      return this._minimumHeight;
	    },
	    set: function set(val) {
	      this._minimumHeight = val;
	    }
	  }, {
	    key: 'maximumHeight',
	    get: function get() {
	      return this._maximumHeight;
	    },
	    set: function set(val) {
	      this._maximumHeight = val;
	    }

	    /**
	    * @method colorRamp
	    * 颜色值   
	    * @example 示例代码
	    * ```
	    *  var slopeAnalyze = viewer.analysis.Slope;
	    *  var colorRamp = slopeAnalyze.colorRamp;
	    *  colorRamp.set(0.0,'#000000');
	    *  colorRamp.set(0.2,'#2747E0');
	    *  colorRamp.set(0.25,'#D33B7D');
	    *  colorRamp.set(0.3,'#ffd700');
	    *  colorRamp.set(0.35,'#D33038');
	    *  colorRamp.set(0.9,'#ffffff');
	    * ```
	    * 
	    */

	  }, {
	    key: 'colorRamp',
	    get: function get() {
	      return this._colorRamp;
	    }
	  }]);

	  return Elevation;
	}();

	exports.default = Elevation;

/***/ }),
/* 85 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/*
	 * 作者：朱王璋
	 * 部门：产品研发中心
	 * 日期：2019.5.16
	 */

	var Profile = function () {
	  /**
	  * 通视分析构造函数
	  * @method constructor
	  * @param viewer Cesium.Viewer 对象
	   * 
	  */
	  function Profile(viewer) {
	    _classCallCheck(this, Profile);

	    this.viewer = viewer;
	  }
	  /**
	   * 坐标点
	   * @method setPolyline 
	   * @param {Array} points 经纬度点坐标，格式:[经度,纬度,高度]
	   * @param {function} callback 经纬度点坐标，格式:[经度,纬度,高度]
	   * @example 示例代码
	   * ```
	   * var callBack = function(result){
	   *    console.log(result);
	   * }
	   *   var ProfileAnalyze = viewer.analysis.Profile;
	   *   ProfileAnalyze.setPolyline([         
	   *            109.03346632153671,34.326639657406226,395.4792360496345,
	   *            109.03144059631933,34.32489928901451,390.96019381390937,
	   *            109.0311066948082,34.323485025163286,388.67673695624234,
	   *            109.03229719685534,34.31991103654269,385.82666822350035,
	   *            109.03358048811168,34.31842706237503,386.4791369856086,
	   *            109.03433018158603,34.31771892610954,387.5863231772101
	   *        ],callBack); 
	   *  slopeAnalyze.open();
	   * ```
	   * 
	   */


	  _createClass(Profile, [{
	    key: "setPolyline",
	    value: function setPolyline(points, callback) {
	      if (points.length < 2) return;
	    }
	  }, {
	    key: "caculatePoint",
	    value: function caculatePoint() {}

	    /**
	    * 开始分析
	    * @method open 
	    */

	  }, {
	    key: "open",
	    value: function open() {}

	    /**
	    * 结束分析
	    * @method close 
	    */

	  }, {
	    key: "close",
	    value: function close() {
	      viewer.scene.globe.material = undefined;
	    }
	  }]);

	  return Profile;
	}();

	exports.default = Profile;

/***/ }),
/* 86 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var ViewshedAnalyze = function () {

	  /**
	   * 通视分析构造函数
	   * @method constructor
	   * @param viewer Cesium.Viewer 对象
	   * 
	   */
	  function ViewshedAnalyze(viewer) {
	    _classCallCheck(this, ViewshedAnalyze);

	    this._viewer = viewer;
	    this._scene = viewer.scene;
	    this._camera = this._scene.camera;
	    this.context = this._scene.context;

	    this._visibleColor = Cesium.Color.LIME;
	    this._inVisibleColor = Cesium.Color.RED;
	    this._offsetDist = 0.2;
	    this._viewPoint = null;
	    this.timeId;
	    //视点位置
	    this.cameraPosition = null;
	    //标识符
	    this.startAnalyze = false;
	    //阴影参数
	    this.shadowOptions;
	    this.handler;
	    //聚光灯光源
	    this.spotLightCamera;
	    //光源参数
	    this.radii;
	    this.heading;
	    this.roll;
	    this.pitch;
	    this.tempFrustum;
	    this.normalShaderFun = null;
	    this.normalShader;
	    this.lightSwitch = false;
	    this.testOn = false;

	    this.entities = [];
	    this.activeShapePoints = [];
	    this._showDistance = true;
	    this._showDome = true;

	    this.defaultOption = {
	      terrainShadows: this._viewer.terrainShadows,
	      depthTestAgainstTerrain: this._scene.globe.depthTestAgainstTerrain,
	      shadowMap: this._scene.shadowMap
	    };
	  }

	  /**
	   * 获取或设置可视部分的颜色
	   * @method visibleColor 
	   * 
	   */


	  _createClass(ViewshedAnalyze, [{
	    key: "open",


	    /**
	     * 开始视域分析
	     * @method open 
	     * 
	     */
	    value: function open() {
	      if (this.startAnalyze) return;
	      this.close();
	      this._viewer.terrainShadows = Cesium.ShadowMode.ENABLED;
	      this.testOn = this._scene.globe.depthTestAgainstTerrain;
	      if (!this.testOn) {
	        this._scene.globe.depthTestAgainstTerrain = true;
	      }

	      this._initialiseHandlers();
	      this.startAnalyze = true;
	    }
	    /**
	     * 结束视域分析
	     * @method close 
	     * 
	     */

	  }, {
	    key: "close",
	    value: function close() {
	      this.startAnalyze = false;
	      this.cameraPosition = null;

	      if (this.tempFrustum) this._scene.primitives.remove(this.tempFrustum);

	      if (this.handler) {
	        this.handler.destroy();
	        this.handler = null;
	      }

	      if (this._scene.shadowMap) this._scene.shadowMap.enabled = false;

	      //移除entity对象
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;

	      try {
	        for (var _iterator = this.entities[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var item = _step.value;

	          this._viewer.entities.remove(item);
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }

	      this.entities = [];
	      this.activeShapePoints = [];

	      this._viewer.terrainShadows = this.defaultOption.terrainShadows;
	      this._scene.globe.depthTestAgainstTerrain = this.defaultOption.depthTestAgainstTerrain;
	      this._scene.shadowMap = this.defaultOption.shadowMap;
	      this.spotLightCamera = null;
	    }

	    /**
	     * 设置相机位置
	     * @method setPosition 
	     * 
	     */

	  }, {
	    key: "setPosition",
	    value: function setPosition(p1, p2) {

	      //移除entity对象
	      var _iteratorNormalCompletion2 = true;
	      var _didIteratorError2 = false;
	      var _iteratorError2 = undefined;

	      try {
	        for (var _iterator2 = this.entities[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	          var item = _step2.value;

	          this._viewer.entities.remove(item);
	        }
	      } catch (err) {
	        _didIteratorError2 = true;
	        _iteratorError2 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion2 && _iterator2.return) {
	            _iterator2.return();
	          }
	        } finally {
	          if (_didIteratorError2) {
	            throw _iteratorError2;
	          }
	        }
	      }

	      this._updateCamera(p1);
	      this._updateTarget(p2);
	    }

	    /**
	    * 设置相机hpr参数
	    * @method hpr 
	    * 
	    */

	  }, {
	    key: "_updateTarget",


	    /**
	    * 设置相机位置
	    * @method setPosition 
	    * 
	    */
	    value: function _updateTarget(p2) {
	      if (p2) {
	        this._calculatePose(p2);
	        if (this.cameraPosition) {
	          this.activeShapePoints = [];
	          this.activeShapePoints.push(this.cameraPosition);
	          this.activeShapePoints.push(p2);
	        }
	      }
	      this._updateLightDirection();
	      this._creatFrustum();
	    }

	    /**
	     * 设置相机位置
	     * @method setPosition 
	     * 
	     */

	  }, {
	    key: "_updateCamera",
	    value: function _updateCamera(newPos) {
	      if (newPos) {
	        this.cameraPosition = newPos;
	        this._viewPoint = newPos;
	        this._createViewShad(newPos);
	        if (this.entities.length == 0) this._addEntity();
	        this.activeShapePoints.push(newPos);
	      }
	    }

	    //鼠标事件

	  }, {
	    key: "_initialiseHandlers",
	    value: function _initialiseHandlers() {
	      var _this = this;

	      var self = this;
	      this.handler = new Cesium.ScreenSpaceEventHandler(this._scene.canvas);
	      this.handler.setInputAction(function (movement) {
	        if (!self.startAnalyze) return;
	        if (self.cameraPosition == null) return;

	        var newPos = self._pickPosition(movement.endPosition);
	        _this._updateTarget(newPos);
	        // self._calculatePose(newPos);
	        // self._updateLightDirection();
	        // self._creatFrustum();
	        //更新位置
	        // if (Cesium.defined(newPos)) {
	        //   if (self.activeShapePoints.length != 1)
	        //     self.activeShapePoints.pop();
	        //   self.activeShapePoints.push(newPos);
	        // }
	      }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);

	      this.handler.setInputAction(function (movement) {
	        if (self.startAnalyze && self.cameraPosition == null) {
	          var pos = self._pickPosition(movement.position);
	          if (pos) {
	            //移除entity对象
	            var _iteratorNormalCompletion3 = true;
	            var _didIteratorError3 = false;
	            var _iteratorError3 = undefined;

	            try {
	              for (var _iterator3 = self.entities[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	                var item = _step3.value;

	                self._viewer.entities.remove(item);
	              }
	            } catch (err) {
	              _didIteratorError3 = true;
	              _iteratorError3 = err;
	            } finally {
	              try {
	                if (!_iteratorNormalCompletion3 && _iterator3.return) {
	                  _iterator3.return();
	                }
	              } finally {
	                if (_didIteratorError3) {
	                  throw _iteratorError3;
	                }
	              }
	            }

	            self.entities = [];
	            self.activeShapePoints = [];
	            var ellipsoid = self._viewer.scene.globe.ellipsoid;

	            var cartographic = ellipsoid.cartesianToCartographic(pos);
	            var lat = Cesium.Math.toDegrees(cartographic.latitude);
	            var lng = Cesium.Math.toDegrees(cartographic.longitude);
	            var alt = cartographic.height + _this._offsetDist;
	            var newPos = Cesium.Cartesian3.fromDegrees(lng, lat, alt);
	            _this._updateCamera(newPos);
	            // self.cameraPosition = newPos; 
	            // self._createViewShad(newPos);
	            // self._addEntity(newPos);
	            // self.activeShapePoints.push(newPos);

	          }
	        }
	      }, Cesium.ScreenSpaceEventType.LEFT_CLICK);

	      this.handler.setInputAction(function (movement) {
	        _this.startAnalyze = false;
	        _this.cameraPosition = null;
	      }, Cesium.ScreenSpaceEventType.RIGHT_CLICK);
	    }
	  }, {
	    key: "_addEntity",
	    value: function _addEntity(pos) {
	      var self = this;

	      var viewPoint = new Cesium.CallbackProperty(function () {
	        return self.viewPoint;
	      }, false);

	      var dynamicPositions = new Cesium.CallbackProperty(function () {
	        return self.activeShapePoints;
	      }, false);

	      var endPoint = new Cesium.CallbackProperty(function () {
	        return self.activeShapePoints[self.activeShapePoints.length - 1];
	      }, false);

	      var distanceLabel = new Cesium.CallbackProperty(function () {
	        var distance = "";
	        if (self.activeShapePoints.length > 1) {
	          var dist = Cesium.Cartesian3.distance(self.activeShapePoints[0], self.activeShapePoints[1]);
	          distance = "距离:" + dist.toFixed(2) + "米";
	        }
	        return distance;
	      }, false);

	      var showDist = new Cesium.CallbackProperty(function () {
	        return self._showDistance;
	      }, false);

	      //视点Entity
	      this.entities.push(this._viewer.entities.add({
	        position: viewPoint,
	        point: {
	          pixelSize: 12,
	          color: Cesium.Color.YELLOW,
	          disableDepthTestDistance: Number.POSITIVE_INFINITY
	        }
	      }));
	      //视距线entity
	      this.entities.push(this._viewer.entities.add({
	        polyline: {
	          positions: dynamicPositions,
	          show: showDist,
	          width: 2.0,
	          clampToGround: false,
	          material: Cesium.Color.LIME,
	          disableDepthTestDistance: Number.POSITIVE_INFINITY,
	          classificationType: Cesium.ClassificationType.NONE
	        }

	      }));

	      //距离label entity
	      this.entities.push(this._viewer.entities.add({
	        position: endPoint,
	        label: {
	          show: showDist,
	          text: distanceLabel,
	          pixelOffset: new Cesium.Cartesian2(30, -50),
	          scale: 0.5,
	          font: '32px 微软雅黑',
	          fillColor: Cesium.Color.DEEPSKYBLUE,
	          outlineColor: Cesium.Color.BLACK,
	          outlineWidth: 1.0,
	          showBackground: true,
	          backgroundColor: Cesium.Color.BLACK.withAlpha(0.9),
	          backgroundPadding: new Cesium.Cartesian2(10, 6),
	          disableDepthTestDistance: Number.POSITIVE_INFINITY
	        }

	      }));
	    }

	    //计算姿态

	  }, {
	    key: "_calculatePose",
	    value: function _calculatePose(pickingPos) {
	      var vectorR = new Cesium.Cartesian3();
	      Cesium.Cartesian3.subtract(pickingPos, this.cameraPosition, vectorR);
	      this.radii = Cesium.Cartesian3.magnitude(vectorR);
	      Cesium.Cartesian3.normalize(vectorR, vectorR);
	      var currentView = this._scene.frameState.camera;
	      var _heading = currentView.heading;
	      var _pitch = currentView.pitch;
	      var _roll = currentView.roll;
	      var cposition = new Cesium.Cartesian3();
	      Cesium.Cartesian3.clone(currentView.position, cposition);
	      var vectorr = vectorR.clone();
	      var vPoint = this.cameraPosition.clone();
	      var vPoint = Cesium.Cartesian3.normalize(vPoint, vPoint);
	      if (Math.abs(Cesium.Cartesian3.dot(vPoint, vectorr)) >= 1) {
	        if (Math.abs(Cesium.Cartesian3.dot(vectorr, Cesium.Cartesian3.UNIT_Y)) < 1) {
	          vPoint = Cesium.Cartesian3.clone(Cesium.Cartesian3.UNIT_Y, vPoint);
	        } else {
	          vPoint = Cesium.Cartesian3.clone(Cesium.Cartesian3.UNIT_Z, vPoint);
	        }
	      };
	      var vrCross = new Cesium.Cartesian3();
	      Cesium.Cartesian3.cross(vPoint, vectorr, vrCross);
	      vrCross = Cesium.Cartesian3.normalize(vrCross, vrCross);
	      Cesium.Cartesian3.cross(vectorr, vrCross, vPoint);
	      vPoint = Cesium.Cartesian3.normalize(vPoint, vPoint);
	      currentView.setView({
	        destination: this.cameraPosition,
	        orientation: {
	          direction: vectorr,
	          up: vPoint
	        }
	      });
	      this.heading = currentView.heading;
	      this.roll = currentView.roll;
	      this.pitch = currentView.pitch;
	      currentView.setView({
	        destination: cposition,
	        orientation: {
	          heading: _heading,
	          pitch: _pitch,
	          roll: _roll
	        }
	      });
	    }

	    //创建shadowmap

	  }, {
	    key: "_createViewShad",
	    value: function _createViewShad(pos) {
	      if (!this.spotLightCamera) {
	        this.spotLightCamera = new Cesium.Camera(this._scene);
	        this.spotLightCamera.position = pos;
	        this.spotLightCamera.frustum.fov = Cesium.Math.PI_OVER_THREE;
	        this.spotLightCamera.frustum.aspectRatio = 1.0;
	        this.spotLightCamera.frustum.near = 1.0;
	        this.spotLightCamera.frustum.far = 2.0;

	        this.shadowOptions = {
	          context: this.context,
	          enabled: true,
	          lightCamera: this.spotLightCamera,
	          maximumDistance: 500.0,
	          cascadesEnabled: false
	        };

	        var self = this;
	        this._scene.shadowMap = new Cesium.ShadowMap(this.shadowOptions);
	        if (this.normalShaderFun == null) this.normalShaderFun = Cesium.ShadowMapShader.createShadowReceiveFragmentShader;
	        Cesium.ShadowMapShader.createShadowReceiveFragmentShader = function (fs, shadowMap, castShadows, isTerrain, hasTerrainNormal) {
	          return self._getUIShader(self, fs, shadowMap, castShadows, isTerrain, hasTerrainNormal);
	        };
	      }
	      this.spotLightCamera.position = pos;
	    }

	    //更新shader

	  }, {
	    key: "_getUIShader",
	    value: function _getUIShader(self, fs, shadowMap, castShadows, isTerrain, hasTerrainNormal) {

	      var shader = self.normalShaderFun(fs, shadowMap, castShadows, isTerrain, hasTerrainNormal);
	      var red1 = self.visibleColor.red;
	      var green1 = self.visibleColor.green;
	      var blue1 = self.visibleColor.blue;

	      var red2 = self.inVisibleColor.red;
	      var green2 = self.inVisibleColor.green;
	      var blue2 = self.inVisibleColor.blue;

	      // var colorFs = ' if(visibility == 1.0){ \n' +
	      //   '  gl_FragColor.rgb *= vec3(0.0, 1, 0.0); \n' + 
	      //   '  } else { \n' +
	      //   '  gl_FragColor.rgb *= vec3(1, 0.1, 0.1); \n' +
	      //   '  } \n'


	      var colorFs = " if(visibility == 1.0){ \n          gl_FragColor.rgb *= vec3(" + red1 + "," + green1 + "," + blue1 + ");  \n        } else { \n          gl_FragColor.rgb *= vec3(" + red2 + "," + green2 + "," + blue2 + "); \n        }\n        ";
	      shader.sources[shader.sources.length - 1] = shader.sources[shader.sources.length - 1].replace('gl_FragColor.rgb *= visibility;', colorFs);
	      return shader;
	    }

	    //更新shadowmap

	  }, {
	    key: "_updateLightDirection",
	    value: function _updateLightDirection() {
	      if (this.radii <= 1) return;
	      this.spotLightCamera.frustum.far = this.radii;
	      this.shadowOptions.maximumDistance = this.radii;
	      this.spotLightCamera.setView({
	        orientation: {
	          heading: this.heading,
	          pitch: this.pitch,
	          roll: this.roll
	        }
	      });
	    }

	    //更新视锥体

	  }, {
	    key: "_creatFrustum",
	    value: function _creatFrustum() {
	      var qHeading = this.heading - (70 + 60 / 2) / 57.29578;
	      //adapt before V1.31
	      //var Qua = Cesium.Quaternion.fromHeadingPitchRoll(qHeading, this.pitch, this.roll);
	      var hpr = new Cesium.HeadingPitchRoll(qHeading, this.pitch, this.roll);
	      var Qua = Cesium.Quaternion.fromHeadingPitchRoll(hpr);
	      var rotMatrix = Cesium.Matrix3.fromQuaternion(Qua);
	      var modelMatrix = Cesium.Matrix4.multiply(Cesium.Transforms.eastNorthUpToFixedFrame(this.cameraPosition), Cesium.Matrix4.fromRotationTranslation(rotMatrix, new Cesium.Cartesian3(0.0, 0.0, 0.0)), new Cesium.Matrix4());

	      var frustum = this._getViewShadGeometry({
	        dist: this.radii
	      });

	      var instance = new Cesium.GeometryInstance({
	        geometry: frustum,
	        modelMatrix: modelMatrix,
	        attributes: {
	          color: Cesium.ColorGeometryInstanceAttribute.fromColor(Cesium.Color.WHITE)
	        }
	      });

	      var vsGeometry = new Cesium.Primitive({
	        geometryInstances: instance,
	        asynchronous: false,
	        appearance: new Cesium.PerInstanceColorAppearance({
	          flat: true,
	          translucent: false
	        })
	      });

	      if (this.tempFrustum) this._scene.primitives.remove(this.tempFrustum);
	      this._scene.primitives.add(vsGeometry);
	      this.tempFrustum = vsGeometry;
	      this.tempFrustum.show = this._showDome;
	    }

	    //拾取坐标

	  }, {
	    key: "_pickPosition",
	    value: function _pickPosition(winPosition) {
	      return this._scene.pickPosition(winPosition);
	    }

	    //创建视锥体对象

	  }, {
	    key: "_getViewShadGeometry",
	    value: function _getViewShadGeometry(frustumGeometry) {
	      frustumGeometry = Cesium.defaultValue(frustumGeometry, Cesium.defaultValue.EMPTY_OBJECT);
	      var dist = Cesium.defaultValue(frustumGeometry.dist, 200);
	      var phiStart = Cesium.defaultValue(frustumGeometry.phiStart, 75);
	      var phiLength = Cesium.defaultValue(frustumGeometry.phiLength, 30);
	      var thetaLength = Cesium.defaultValue(frustumGeometry.thetaLength, 60);
	      var thetaStart = Cesium.defaultValue(frustumGeometry.thetaStart, 320);

	      //BoundingSphere
	      var radii = new Cesium.Cartesian3(dist, dist, dist);
	      var ellipsoid = Cesium.Ellipsoid.fromCartesian3(radii);
	      //角度转弧度
	      var pStart = Cesium.Math.toRadians(phiStart);
	      var pLength = Cesium.Math.toRadians(phiLength);
	      var tStart = Cesium.Math.toRadians(thetaStart);
	      var tLength = Cesium.Math.toRadians(thetaLength);
	      //顶点缓存
	      var positions = new Float64Array(5 * 3);
	      //索引
	      var indices = Cesium.IndexDatatype.createTypedArray(5, 4 * 5);
	      var index = 0;

	      var distR = dist * 1.1547005;
	      positions[index++] = distR * Math.cos(tStart) * Math.sin(pStart);
	      positions[index++] = distR * Math.sin(tStart) * Math.sin(pStart);
	      positions[index++] = distR * Math.cos(pStart);

	      positions[index++] = distR * Math.cos(tStart + tLength) * Math.sin(pStart);
	      positions[index++] = distR * Math.sin(tStart + tLength) * Math.sin(pStart);
	      positions[index++] = distR * Math.cos(pStart);

	      positions[index++] = distR * Math.cos(tStart) * Math.sin(pStart + pLength);
	      positions[index++] = distR * Math.sin(tStart) * Math.sin(pStart + pLength);
	      positions[index++] = distR * Math.cos(pStart + pLength);

	      positions[index++] = distR * Math.cos(tStart + tLength) * Math.sin(pStart + pLength);
	      positions[index++] = distR * Math.sin(tStart + tLength) * Math.sin(pStart + pLength);
	      positions[index++] = distR * Math.cos(pStart + pLength);

	      //球心
	      positions[index++] = 0;
	      positions[index++] = 0;
	      positions[index++] = 0;

	      //索引
	      index = 0;
	      indices[index++] = 4;
	      indices[index++] = 0;
	      indices[index++] = 4;
	      indices[index++] = 1;
	      indices[index++] = 4;
	      indices[index++] = 2;
	      indices[index++] = 4;
	      indices[index++] = 3;

	      indices[index++] = 0;
	      indices[index++] = 1;
	      indices[index++] = 0;
	      indices[index++] = 2;
	      indices[index++] = 2;
	      indices[index++] = 3;
	      indices[index++] = 3;
	      indices[index++] = 1;

	      var attributes = new Cesium.GeometryAttributes({
	        position: new Cesium.GeometryAttribute({
	          componentDatatype: Cesium.ComponentDatatype.DOUBLE,
	          componentsPerAttribute: 3,
	          values: positions
	        })
	      });

	      return new Cesium.Geometry({
	        attributes: attributes,
	        indices: indices,
	        primitiveType: Cesium.PrimitiveType.LINES,
	        boundingSphere: Cesium.BoundingSphere.fromEllipsoid(ellipsoid)
	      });
	    }
	  }, {
	    key: "visibleColor",
	    get: function get() {
	      return this._visibleColor;
	    },
	    set: function set(color) {
	      if (color instanceof Cesium.Color) {
	        this._visibleColor = color;
	      }
	    }
	    /**
	     * 获取或设置不可视部分的颜色
	     * @method visibleColor 
	     * 
	     */

	  }, {
	    key: "inVisibleColor",
	    get: function get() {
	      return this._inVisibleColor;
	    },
	    set: function set(color) {
	      if (color instanceof Cesium.Color) {
	        this._inVisibleColor = color;
	      }
	    }

	    /**
	     * 是否显示视距 
	     * 
	     */

	  }, {
	    key: "showDistance",
	    get: function get() {
	      return this._showDistance;
	    },
	    set: function set(val) {
	      this._showDistance = val;
	    }

	    /**
	     * 高度偏移
	     * 
	     */

	  }, {
	    key: "offsetDist",
	    get: function get() {
	      return this._offsetDist;
	    },
	    set: function set(val) {
	      this._offsetDist = val;
	    }
	  }, {
	    key: "hpr",
	    get: function get() {
	      return new Cesium.HeadingPitchRoll(this.spotLightCamera.heading, this.spotLightCamera.pitch, this.spotLightCamera.roll);
	    },
	    set: function set(val) {
	      var camera = this.spotLightCamera;
	      camera.setView({
	        destination: camera.position,
	        orientation: {
	          heading: val.heading,
	          pitch: val.pitch,
	          roll: val.roll
	        }
	      });
	    }

	    /**
	     * 获取设置相机视场角fov
	     * @method fov 
	     * 
	     */

	  }, {
	    key: "fov",
	    get: function get() {
	      var frustum = this.spotLightCamera.frustum;
	      return Cesium.Math.toDegrees(frustum.fov);
	    }
	    /**
	      * 获取设置相机视场角fov
	      * @method fov 
	      * 
	      */
	    ,
	    set: function set(val) {
	      var frustum = this.spotLightCamera.frustum;
	      frustum.fov = Cesium.Math.toRadians(val);
	      this.spotLightCamera.frustum = frustum;
	    }

	    /**
	     * 获取设置相机near裁剪值
	     * @method near 
	     * 
	     */

	  }, {
	    key: "near",
	    get: function get() {
	      return this.spotLightCamera.frustum.near;
	    }
	    /**
	      * 获取设置相机near裁剪值
	      * @method near 
	      * 
	      */
	    ,
	    set: function set(val) {
	      this.spotLightCamera.frustum.near = val;
	    }

	    /**
	    * 获取设置相机far裁剪值
	    * @method far 
	    * 
	    */

	  }, {
	    key: "far",
	    get: function get() {
	      return this.spotLightCamera.frustum.far;
	    }
	    /**
	      * 获取设置相机far裁剪值
	      * @method far 
	      * 
	      */
	    ,
	    set: function set(val) {
	      this.spotLightCamera.frustum.far = val;
	    }

	    /**
	    * 是否显示包围盒 
	     * 
	    */

	  }, {
	    key: "showDome",
	    get: function get() {
	      return this._showDome;
	    },
	    set: function set(val) {
	      this._showDome = val;
	      if (this.tempFrustum) this.tempFrustum.show = this._showDome;
	    }
	  }]);

	  return ViewshedAnalyze;
	}();

	exports.default = ViewshedAnalyze;

/***/ }),
/* 87 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/*
	 * 作者：朱王璋
	 * 部门：产品研发中心
	 * 日期：2019.5.16
	 */

	/**
	* 淹没分析工具
	*/
	var FloodAnalyze = function () {

	  /**
	   * 通视分析构造函数
	   * @method constructor
	   * @param viewer Cesium.Viewer 对象
	   * 
	   */
	  function FloodAnalyze(viewer) {
	    var _this = this;

	    _classCallCheck(this, FloodAnalyze);

	    this._viewer = viewer;
	    this._scene = viewer.scene;
	    this._camera = this._scene.camera;
	    this._color = Cesium.Color.RED.withAlpha(0.4);
	    this._maxHeight = 3000;
	    this._minHeight = 0;
	    this._currentHeight = 0;
	    this._interpolation = 8;
	    this._tickEvent = function () {
	      _this.updateGeometry();
	    };
	    this.flayer = null;
	    this.pList = null;
	    this.step = 1;
	  }

	  /**
	    * 淹没速度
	    * 
	    */


	  _createClass(FloodAnalyze, [{
	    key: "setPolygon",


	    /**
	     * 设置淹没分析范围
	     * @method setPolygon 
	     * @param {array} ptList 点坐标数组,[经度,纬度,高度,.....]
	     * @param {function} callBack 该区域内最低点和最高点的回调函数
	     * 
	     */
	    value: function setPolygon(plist, callBack) {

	      var positions = [];
	      var lats = [];
	      var lons = [];
	      var alts = [];
	      for (var _i = 0; _i < plist.length; _i += 3) {
	        lats.push(plist[_i]);
	        lons.push(plist[_i + 1]);
	        alts.push(plist[_i + 2]);
	        positions.push(Cesium.Cartographic.fromDegrees(plist[_i], plist[_i + 1]));
	      }

	      //计算范围内的最大最小值
	      var xmax = Math.max.apply(null, lons);
	      var xmin = Math.min.apply(null, lons);
	      var ymax = Math.max.apply(null, lats);
	      var ymin = Math.min.apply(null, lats);

	      if (this._minHeight == 0) {
	        this._minHeight = Math.min.apply(null, alts);
	      }
	      //获取点坐标
	      var xstep = (xmax - xmin) / this._interpolation;
	      var ystep = (ymax - ymin) / this._interpolation;
	      for (var i = 0; i < this._interpolation; i++) {
	        for (var j = 0; j < this._interpolation; j++) {
	          var x = xmin + i * xstep;
	          var y = ymin + j * ystep;
	          positions.push(Cesium.Cartographic.fromDegrees(x, y));
	        }
	      }

	      var promise = Cesium.sampleTerrain(this._viewer.terrainProvider, 12, positions);
	      Cesium.when(promise, function (updatedPositions) {
	        if (callBack) callBack();
	      });

	      // var promise = Cesium.sampleTerrainMostDetailed(this._viewer.terrainProvider, positions);
	      //   Cesium.when(promise, function(updatedPositions) {
	      //     if(callBack)
	      //       callBack();
	      // }); 

	      // Cesium.when(promise, function(updatedPositions) {

	      // });
	      this.pList = Cesium.Cartesian3.fromDegreesArrayHeights(plist);
	    }

	    /**
	     * 开始视域分析
	     * @method start 
	     * 
	     */

	  }, {
	    key: "open",
	    value: function open() {

	      this.startAnalyze = true;
	      this._viewer.clock.onTick.removeEventListener(this._tickEvent);
	      this._viewer.clock.onTick.addEventListener(this._tickEvent);
	    }
	    /**
	     * 结束分析
	     * @method stop 
	     * 
	     */

	  }, {
	    key: "close",
	    value: function close() {
	      this.startAnalyze = false;
	      //Bug，无法移除
	      this._viewer.clock.onTick.removeEventListener(this._tickEvent);

	      this._viewer.scene.primitives.remove(this.flayer);
	      this._currentHeight = 0;
	    }
	  }, {
	    key: "updateGeometry",
	    value: function updateGeometry() {
	      var self = this;
	      if (!self.startAnalyze) return;

	      if (self._currentHeight < self._maxHeight) {
	        self._currentHeight += self.step;
	      } else {
	        self.startAnalyze = false;
	        return;
	      }

	      var maxHeight = self._minHeight + self._currentHeight;
	      self._viewer.scene.primitives.remove(self.flayer);
	      var geoInstance = self.creategeometry(self.pList, self._minHeight, maxHeight);
	      self.flayer = new Cesium.ClassificationPrimitive({
	        allowPicking: false,
	        geometryInstances: geoInstance,
	        asynchronous: false

	      });
	      self._viewer.scene.primitives.add(self.flayer);
	    }
	  }, {
	    key: "creategeometry",
	    value: function creategeometry(ptList, baseHeight, maxHeight) {
	      return new Cesium.GeometryInstance({
	        geometry: Cesium.PolygonGeometry.fromPositions({
	          positions: ptList,
	          height: baseHeight,
	          perPositionHeight: false,
	          extrudedHeight: maxHeight
	        }),
	        attributes: {
	          color: Cesium.ColorGeometryInstanceAttribute.fromColor(this._color)
	        }
	      });
	    }
	  }, {
	    key: "speed",
	    get: function get() {
	      return this.step;
	    },
	    set: function set(val) {
	      if (val <= 0) return;
	      this.step = val;
	    }

	    /**
	     * 颜色设置 
	     * 
	     */

	  }, {
	    key: "color",
	    get: function get() {
	      return this._color;
	    },
	    set: function set(val) {
	      this._color = val;
	    }

	    /**
	     * 最大高度 
	     * 
	     */

	  }, {
	    key: "maxHeight",
	    get: function get() {
	      return this._maxHeight;
	    },
	    set: function set(val) {
	      this._maxHeight = val;
	    }

	    /**
	     * 最小高度
	     * 
	     */

	  }, {
	    key: "minHeight",
	    get: function get() {
	      return this._minHeight;
	    },
	    set: function set(val) {
	      this._minHeight = val;
	    }
	  }]);

	  return FloodAnalyze;
	}();

	exports.default = FloodAnalyze;

/***/ }),
/* 88 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/*
	 * 作者：朱王璋
	 * 部门：产品研发中心
	 * 日期：2019.5.16
	 */

	/**
	* 控高分析工具
	*/
	var HeightAnalyze = function () {
	  /**
	  * 通视分析构造函数
	  * @method constructor
	  * @param viewer Cesium.Viewer 对象
	   * 
	  */
	  function HeightAnalyze(viewer) {
	    _classCallCheck(this, HeightAnalyze);

	    this.viewer = viewer;
	    this.config = {
	      color: Cesium.Color.RED.withAlpha(0.7),
	      height: 400
	    };
	  }

	  _createClass(HeightAnalyze, [{
	    key: "setPolygon",


	    /**
	     * 坐标点
	     * @method setPolygon 
	     * @param points 经纬度点坐标，格式:[经度,纬度,高度]
	     * @example 示例代码
	     * ```
	     *  var heightAnalyze = viewer.analysis.heightAnalyze;
	     *   heightAnalyze.height = 400;
	     *   heightAnalyze.setPolygon([         
	     *            109.0349381448271,34.31717633782572,386.9231637517154,109.03900961665003,
	     *            34.321847375754345,397.67154065059685,
	     *            109.03346632153671,34.326639657406226,395.4792360496345,
	     *            109.03144059631933,34.32489928901451,390.96019381390937,
	     *            109.0311066948082,34.323485025163286,388.67673695624234,
	     *            109.03229719685534,34.31991103654269,385.82666822350035,
	     *            109.03358048811168,34.31842706237503,386.4791369856086,
	     *            109.03433018158603,34.31771892610954,387.5863231772101
	     *        ]); 
	     *  heightAnalyze.open();
	     * ```
	     * 
	     */
	    value: function setPolygon(points) {
	      if (points.length < 2) return;
	      this._points = Cesium.Cartesian3.fromDegreesArrayHeights(points);;
	      this.updateLayer();
	    }

	    /**
	    * 开始分析
	    * @method open 
	    */

	  }, {
	    key: "open",
	    value: function open() {
	      this.updateLayer();
	    }

	    /**
	    * 结束视域分析
	    * @method close 
	    */

	  }, {
	    key: "close",
	    value: function close() {
	      this.viewer.scene.primitives.remove(this._layer);
	    }
	  }, {
	    key: "updateLayer",
	    value: function updateLayer() {
	      this.viewer.scene.primitives.remove(this._layer);
	      if (!this._points) return;
	      var geoInstance = this.creategeometry(this._points);
	      this._layer = new Cesium.ClassificationPrimitive({
	        allowPicking: false,
	        geometryInstances: geoInstance,
	        asynchronous: false

	      });
	      this.viewer.scene.primitives.add(this._layer);
	    }
	  }, {
	    key: "creategeometry",
	    value: function creategeometry(ptList) {
	      return new Cesium.GeometryInstance({
	        geometry: Cesium.PolygonGeometry.fromPositions({
	          positions: ptList,
	          height: this.config.height,
	          perPositionHeight: false,
	          extrudedHeight: 1000000
	        }),
	        attributes: {
	          color: Cesium.ColorGeometryInstanceAttribute.fromColor(this.config.color)
	        }
	      });
	    }
	  }, {
	    key: "color",
	    get: function get() {
	      return this.config.color;
	    },
	    set: function set(color) {
	      this.config.color = Cesium.Color.fromCssColorString(color);
	      this.updateLayer();
	    }

	    /**
	    * @method height
	    * 高度值   * 
	    * @example 示例代码
	    * ```
	    *  var heightAnalyze = viewer.analysis.heightAnalyze;
	    *  heightAnalyze.height = 400;
	    *  heightAnalyze.open();
	    * ```
	    * 
	    */

	  }, {
	    key: "height",
	    get: function get() {
	      return this.config.height;
	    },
	    set: function set(val) {
	      this.config.height = val;
	      this.updateLayer();
	    }
	  }]);

	  return HeightAnalyze;
	}();

	exports.default = HeightAnalyze;

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Config = __webpack_require__(26);

	var _Config2 = _interopRequireDefault(_Config);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * 挖地
	 */
	var ClipTool = function () {

	    /**
	     * 构造函数
	     * @param viewer 地理画布
	     */
	    function ClipTool(viewer) {
	        _classCallCheck(this, ClipTool);

	        this.viewer = viewer;
	        this._height = 100;
	        this.terrainClipPlan = null;
	        this._path = [];
	    }

	    /**
	     * 挖地路径（经纬高）
	     */


	    _createClass(ClipTool, [{
	        key: 'add',


	        /**
	         * 初始化挖地 
	         * @param path 路径数据
	         * @param height 挖坑深度
	         * @param wallImg 坑壁图片
	         * @param bottomImg 坑底图片
	         */
	        value: function add(path) {
	            var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;

	            if (!this.terrainClipPlan) {
	                this.terrainClipPlan = new TerrainClipPlane(this.viewer, {
	                    height: height,
	                    splitNum: 10000,
	                    wallImg: _Config2.default.getResource('Assets/Images/excavate_side_min.jpg'),
	                    bottomImg: _Config2.default.getResource('Assets/Images/excavate_side_min.jpg')
	                });
	            }
	            this._height = height;
	            this.terrainClipPlan._height = height;
	            this.path = path;
	        }

	        /**
	         * 获取挖坑路径数据
	         * @param path 挖坑路径
	         */

	    }, {
	        key: 'getPositionsData',
	        value: function getPositionsData(path) {
	            var array = [];
	            for (var i = 0; i < path.length; i++) {
	                var item = path[i];
	                var lon = item.lon;
	                var lat = item.lat;
	                var alt = item.alt;
	                var p = Cesium.Cartesian3.fromDegrees(lon, lat, alt);
	                array.push({
	                    x: p.x,
	                    y: p.y,
	                    z: p.z
	                });
	            }
	            return array;
	        }

	        /**
	         * 每次设置属性之后需要刷新
	         */

	    }, {
	        key: 'updateData',
	        value: function updateData() {
	            this.terrainClipPlan.updateData(this.path);
	        }

	        /**
	         * 清除
	         */

	    }, {
	        key: 'clear',
	        value: function clear() {
	            this.terrainClipPlan.clear();
	        }
	    }, {
	        key: 'polygon',
	        get: function get() {
	            return this._path;
	        },
	        set: function set(value) {
	            this._path = value;
	            this.updateData();
	        }

	        /**
	         * 高度
	         */

	    }, {
	        key: 'height',
	        get: function get() {
	            return this._height;
	        },
	        set: function set(value) {
	            this._height = value;
	            this.terrainClipPlan._height = value;
	            this.updateData();
	        }
	    }]);

	    return ClipTool;
	}();

	exports.default = ClipTool;

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Util = __webpack_require__(65);

	var _Util2 = _interopRequireDefault(_Util);

	var _DrawUtils = __webpack_require__(39);

	var _DrawUtils2 = _interopRequireDefault(_DrawUtils);

	var _LatLon = __webpack_require__(91);

	var _LatLon2 = _interopRequireDefault(_LatLon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 *空间测量类
	 */
	var Measure = function () {

	    /**
	     * 绘制类
	     *
	     * @alias Measure
	     * @constructor
	     *
	     * @param {Object} viewer viewer对象
	     * 
	     * @example
	     * 
	     * 初始化测量工具
	     * var tool = new Uninpho.Measure();
	     * 
	     *
	     */
	    function Measure(viewer) {
	        _classCallCheck(this, Measure);

	        this.mType = ""; //当前正在绘制的类别 
	        this.viewer = viewer;
	        this._font = "16px SimHei"; //显示测量结果文本的字体
	        var self = this;
	        this._defaultFaax = viewer.scene.postProcessStages.fxaa.enabled;
	        viewer.scene.postProcessStages.fxaa.enabled = false;
	        //初始化绘制类
	        this.drawControl = this.viewer.drawTool;
	        this.dataSource = this.drawControl.getDataSource();
	        this._initWorker(this.dataSource);

	        this.drawControl.onChangeDrawing = function (entity) {
	            switch (self.mType) {
	                case "length":
	                case "section":
	                    self.workLength.showAddPointLength(entity);
	                    break;
	                case "area":
	                    self.workArea.showAddPointLength(entity);
	                    break;
	                case "height":
	                    self.workHeight.showAddPointLength(entity);
	                    break;
	                case "super_height":
	                    self.workSuperHeight.showAddPointLength(entity);
	                    break;
	            }
	        };
	        this.drawControl.onMoveDrawing = function (entity) {
	            switch (self.mType) {
	                case "length":
	                case "section":
	                    self.workLength.showMoveDrawing(entity);
	                    break;
	                case "area":
	                    self.workArea.showMoveDrawing(entity);
	                    break;
	                case "height":
	                    self.workHeight.showMoveDrawing(entity);
	                    break;
	                case "super_height":
	                    self.workSuperHeight.showMoveDrawing(entity);
	                    break;
	            }
	        };
	        this.drawControl.onStopDrawing = function (entity) {
	            switch (self.mType) {
	                case "length":
	                case "section":
	                    self.workLength.showDrawEnd(entity);
	                    break;
	                case "area":
	                    self.workArea.showDrawEnd(entity);
	                    break;
	                case "height":
	                    self.workHeight.showDrawEnd(entity);
	                    break;
	                case "super_height":
	                    self.workSuperHeight.showDrawEnd(entity);
	                    break;
	            }
	        };
	    }

	    _createClass(Measure, [{
	        key: "_initWorker",
	        value: function _initWorker(dataSource) {
	            var measureCtrl = this;

	            this.workLength = {
	                options: null,
	                arrLables: [], //各线段label
	                totalLable: null, //总长label 
	                //清除未完成的数据
	                clearLastNoEnd: function clearLastNoEnd() {
	                    if (this.totalLable != null) dataSource.entities.remove(this.totalLable);
	                    if (this.arrLables && this.arrLables.length > 0) {
	                        var arrLables = this.arrLables;
	                        if (arrLables && arrLables.length > 0) {
	                            for (var i in arrLables) {
	                                dataSource.entities.remove(arrLables[i]);
	                            }
	                        }
	                    }
	                    this.totalLable = null;
	                    this.arrLables = [];
	                },
	                //开始绘制
	                start: function start(options) {
	                    this.options = options;

	                    //总长label 
	                    this.totalLable = dataSource.entities.add({
	                        label: {
	                            style: Cesium.LabelStyle.FILL_AND_OUTLINE,
	                            fillColor: Cesium.Color.AZURE,
	                            horizontalOrigin: Cesium.HorizontalOrigin.LEFT,
	                            verticalOrigin: Cesium.VerticalOrigin.BOTTOM,
	                            pixelOffset: new Cesium.Cartesian2(0, -15), //偏移量    
	                            outlineColor: Cesium.Color.BLACK,
	                            outlineWidth: 3,
	                            font: measureCtrl._font,
	                            show: false
	                        },
	                        isMarsMeasureLabel: true,
	                        attribute: {
	                            unit: this.options.unit,
	                            type: this.options.type
	                        }
	                    });
	                    this.arrLables = [];

	                    measureCtrl.drawControl.startDraw({
	                        type: "polyline",
	                        addHeight: options.addHeight,
	                        style: {
	                            color: "#00FF00",
	                            clampToGround: this.options.type == "section" || this.options.terrain, //是否贴地
	                            width: 3
	                        }
	                    });
	                },
	                //绘制增加一个点后，显示该分段的长度
	                showAddPointLength: function showAddPointLength(entity) {
	                    var positions = measureCtrl.drawControl.getPositions(entity);

	                    var tempSingleLabel = dataSource.entities.add({
	                        position: positions[positions.length - 1],
	                        label: {
	                            style: Cesium.LabelStyle.FILL_AND_OUTLINE,
	                            fillColor: Cesium.Color.AZURE,
	                            outlineColor: Cesium.Color.BLACK,
	                            outlineWidth: 3,
	                            horizontalOrigin: Cesium.HorizontalOrigin.LEFT,
	                            verticalOrigin: Cesium.VerticalOrigin.BOTTOM,
	                            pixelOffset: new Cesium.Cartesian2(0, -15), //偏移量  
	                            font: measureCtrl._font,
	                            show: true
	                        },
	                        isMarsMeasureLabel: true,
	                        attribute: {
	                            unit: this.options.unit,
	                            type: this.options.type
	                        }
	                    });

	                    if (positions.length == 1) {
	                        tempSingleLabel.label.text = "起点";
	                        //tempSingleLabel.attribute.value = 0;
	                    } else {
	                        var distance = this.getLength(positions);
	                        var distancestr = measureCtrl.formatLength(distance, this.options.unit);

	                        tempSingleLabel.label.text = distancestr;
	                        tempSingleLabel.attribute.value = distance;

	                        //屏蔽比较小的数值
	                        if (this.getLength([positions[positions.length - 2], positions[positions.length - 1]]) < 5) tempSingleLabel.show = false;
	                    }
	                    this.arrLables.push(tempSingleLabel);
	                },
	                //绘制过程移动中，动态显示长度信息
	                showMoveDrawing: function showMoveDrawing(entity) {
	                    var positions = measureCtrl.drawControl.getPositions(entity);
	                    if (positions.length < 2) return;

	                    var distance = this.getLength(positions);
	                    var distancestr = measureCtrl.formatLength(distance, this.options.unit);
	                    if (this.totalLable) {
	                        this.totalLable.position = positions[positions.length - 1];
	                        this.totalLable.label.text = "全长:" + distancestr;
	                        this.totalLable.label.show = true;
	                        this.totalLable.attribute.value = distance;
	                        this.totalLable.attribute.textEx = "全长:";
	                    }

	                    if (this.options.calback) this.options.calback(distancestr, distance);
	                },
	                //绘制完成后
	                showDrawEnd: function showDrawEnd(entity) {
	                    debugger;
	                    var positions = measureCtrl.drawControl.getPositions(entity);
	                    var count = this.arrLables.length - positions.length;
	                    if (count >= 0) {
	                        for (var i = this.arrLables.length - 1; i >= positions.length - 1; i--) {
	                            dataSource.entities.remove(this.arrLables[i]);
	                        }
	                        this.arrLables.splice(positions.length - 1, count + 1);
	                    }
	                    entity._totalLable = this.totalLable;
	                    entity._arrLables = this.arrLables;

	                    this.totalLable = null;
	                    this.arrLables = [];

	                    if (entity.polyline == null) return;

	                    if (this.options.type == "section") this.updateSectionForTerrain(entity);else if (this.options.terrain) this.updateLengthForTerrain(entity);
	                },
	                //计算贴地线
	                updateLengthForTerrain: function updateLengthForTerrain(entity) {
	                    var that = this;
	                    var positions = entity.polyline.positions.getValue();
	                    var arrLables = entity._arrLables;
	                    var totalLable = entity._totalLable;
	                    var unit = totalLable && totalLable.unit;

	                    var index = 0;
	                    var positionsNew = [];

	                    function getLineFD() {
	                        index++;

	                        var arr = [positions[index - 1], positions[index]];
	                        _Util2.default.terrainPolyline({
	                            viewer: measureCtrl.viewer,
	                            positions: arr,
	                            calback: function calback(raisedPositions, noHeight) {
	                                if (noHeight) {
	                                    if (index == 1) positionsNew = positionsNew.concat(arr);else positionsNew = positionsNew.concat([positions[index]]);
	                                } else {
	                                    positionsNew = positionsNew.concat(raisedPositions);
	                                }

	                                if (index >= positions.length - 1) {
	                                    entity.polyline.positions.setValue(positionsNew);
	                                    if (totalLable) {
	                                        var distance = that.getLength(positionsNew);
	                                        var distancestr = measureCtrl.formatLength(distance, unit);

	                                        totalLable.label.text = "全长:" + distancestr;
	                                        totalLable.attribute.value = distance;

	                                        if (that.options.calback) that.options.calback(distancestr, distance);
	                                    }
	                                } else {
	                                    var distance = that.getLength(raisedPositions);
	                                    var distancestr = measureCtrl.formatLength(distance, unit);

	                                    var thisLabel = arrLables[index];
	                                    thisLabel.label.text = distancestr;
	                                    thisLabel.attribute.value = distance;

	                                    getLineFD();
	                                }
	                            }
	                        });
	                    }
	                    getLineFD();
	                },

	                //计算剖面
	                updateSectionForTerrain: function updateSectionForTerrain(entity) {
	                    var positions = entity.polyline.positions.getValue();
	                    if (positions.length < 2) return;

	                    var arrLables = entity._arrLables;
	                    var totalLable = entity._totalLable;
	                    var unit = totalLable && totalLable.unit;

	                    var index = 0;
	                    var positionsNew = [];

	                    var alllen = 0;
	                    var arrLen = [];
	                    var arrHB = [];
	                    var arrLX = [];
	                    var arrPoint = [];

	                    var that = this;

	                    function getLineFD() {
	                        index++;

	                        var arr = [positions[index - 1], positions[index]];
	                        _Util2.default.terrainPolyline({
	                            viewer: measureCtrl.viewer,
	                            positions: arr,
	                            calback: function calback(raisedPositions, noHeight) {
	                                if (noHeight) {
	                                    if (index == 1) positionsNew = positionsNew.concat(arr);else positionsNew = positionsNew.concat([positions[index]]);
	                                } else {
	                                    positionsNew = positionsNew.concat(raisedPositions);
	                                }

	                                var h1 = Cesium.Cartographic.fromCartesian(positions[index - 1]).height;
	                                var h2 = Cesium.Cartographic.fromCartesian(positions[index]).height;
	                                var hstep = (h2 - h1) / raisedPositions.length;

	                                for (var i = 0; i < raisedPositions.length; i++) {
	                                    //长度
	                                    if (i != 0) {
	                                        alllen += Cesium.Cartesian3.distance(raisedPositions[i], raisedPositions[i - 1]);
	                                    }
	                                    arrLen.push(Number(alllen.toFixed(1)));

	                                    //海拔高度
	                                    var point = _LatLon2.default.formatPositon(raisedPositions[i]);
	                                    arrHB.push(point.z);
	                                    arrPoint.push(point);

	                                    //路线高度
	                                    var fxgd = Number((h1 + hstep * i).toFixed(1));
	                                    arrLX.push(fxgd);
	                                }

	                                if (index >= positions.length - 1) {
	                                    if (totalLable) {
	                                        var distance = that.getLength(positionsNew);
	                                        var distancestr = measureCtrl.formatLength(distance, unit);

	                                        totalLable.label.text = "全长:" + distancestr;
	                                        totalLable.attribute.value = distance;
	                                    }
	                                    if (that.options.calback) that.options.calback({
	                                        distancestr: distancestr,
	                                        distance: distance,
	                                        arrLen: arrLen,
	                                        arrLX: arrLX,
	                                        arrHB: arrHB,
	                                        arrPoint: arrPoint
	                                    });
	                                } else {
	                                    var distance = that.getLength(raisedPositions);
	                                    var distancestr = measureCtrl.formatLength(distance, unit);

	                                    var thisLabel = arrLables[index];
	                                    thisLabel.label.text = distancestr;
	                                    thisLabel.attribute.value = distance;

	                                    getLineFD();
	                                }
	                            }
	                        });
	                    }
	                    getLineFD();
	                },
	                //计算长度，单位：米
	                getLength: function getLength(positions) {
	                    var distance = 0;
	                    for (var i = 0, len = positions.length - 1; i < len; i++) {
	                        distance += Cesium.Cartesian3.distance(positions[i], positions[i + 1]);
	                    }
	                    return distance;
	                }
	            };

	            this.workArea = {
	                options: null,
	                totalLable: null, //面积label
	                //清除未完成的数据
	                clearLastNoEnd: function clearLastNoEnd() {
	                    if (this.totalLable != null) dataSource.entities.remove(this.totalLable);
	                    this.totalLable = null;
	                },
	                //开始绘制
	                start: function start(options) {
	                    this.options = options;

	                    this.totalLable = dataSource.entities.add({
	                        label: {
	                            style: Cesium.LabelStyle.FILL_AND_OUTLINE,
	                            fillColor: Cesium.Color.AZURE,
	                            outlineColor: Cesium.Color.BLACK,
	                            outlineWidth: 3,
	                            horizontalOrigin: Cesium.HorizontalOrigin.CENTER,
	                            verticalOrigin: Cesium.VerticalOrigin.BOTTOM,
	                            pixelOffset: new Cesium.Cartesian2(0, -15), //偏移量  
	                            font: measureCtrl._font,
	                            show: false
	                        },
	                        isMarsMeasureLabel: true,
	                        attribute: {
	                            unit: this.options.unit,
	                            type: this.options.type
	                        }
	                    });

	                    measureCtrl.drawControl.startDraw({
	                        type: "polygon",
	                        style: {
	                            color: "#ffff00",
	                            outline: true,
	                            outlineColor: "#ffff00",
	                            outlineWidth: 4,
	                            opacity: 0.4,
	                            perPositionHeight: false //贴地
	                        }
	                    });
	                },
	                //绘制增加一个点后，显示该分段的长度
	                showAddPointLength: function showAddPointLength(entity) {},
	                //绘制过程移动中，动态显示长度信息
	                showMoveDrawing: function showMoveDrawing(entity) {
	                    var positions = measureCtrl.drawControl.getPositions(entity);
	                    if (positions.length < 3) return;
	                    var area = _Util2.default.getArea(positions);
	                    var areastr = measureCtrl.formatArea(area, this.options.unit);

	                    //求中心点 
	                    // var center = turf.centerOfMass(polygon); 
	                    var maxHeight = _DrawUtils2.default.getMaxHeightForPositions(positions);
	                    var cartograhphic = Cesium.Cartographic.fromCartesian(positions[0]);

	                    var lat = Cesium.Math.toDegrees(cartograhphic.latitude);
	                    var lng = Cesium.Math.toDegrees(cartograhphic.longitude);
	                    var ptcenter = Cesium.Cartesian3.fromDegrees(lng, lat, maxHeight + 1);

	                    if (this.totalLable) {
	                        this.totalLable.position = ptcenter;
	                        this.totalLable.label.text = "面积:" + areastr;
	                        this.totalLable.label.show = true;
	                        this.totalLable.attribute.value = area;
	                        this.totalLable.attribute.textEx = "面积:";
	                    }

	                    if (this.options.calback) this.options.calback(areastr, area);
	                },
	                //绘制完成后
	                showDrawEnd: function showDrawEnd(entity) {
	                    if (entity.polygon == null) return;

	                    var polyPositions = entity.polygon.hierarchy.getValue();
	                    polyPositions.map(function (item) {
	                        item.z = item.z + 1;
	                    });

	                    entity._totalLable = this.totalLable;
	                    this.totalLable = null;
	                }
	            };

	            this.workHeight = {
	                options: null,
	                totalLable: null, //高度label  
	                //清除未完成的数据
	                clearLastNoEnd: function clearLastNoEnd() {
	                    if (this.totalLable != null) dataSource.entities.remove(this.totalLable);
	                    this.totalLable = null;
	                },
	                //开始绘制
	                start: function start(options) {
	                    this.options = options;

	                    this.totalLable = dataSource.entities.add({
	                        label: {
	                            style: Cesium.LabelStyle.FILL_AND_OUTLINE,
	                            fillColor: Cesium.Color.AZURE,
	                            outlineColor: Cesium.Color.BLACK,
	                            outlineWidth: 3,
	                            horizontalOrigin: Cesium.HorizontalOrigin.RIGHT,
	                            verticalOrigin: Cesium.VerticalOrigin.BOTTOM,
	                            pixelOffset: new Cesium.Cartesian2(0, -15), //偏移量  
	                            font: measureCtrl._font,
	                            show: false
	                        },
	                        isMarsMeasureLabel: true,
	                        attribute: {
	                            unit: this.options.unit,
	                            type: this.options.type
	                        }
	                    });

	                    measureCtrl.drawControl.startDraw({
	                        type: "polyline",
	                        minMaxPoints: {
	                            min: 2,
	                            max: 2,
	                            isSuper: false
	                        },
	                        style: {
	                            color: "#ffff00",
	                            width: 3
	                        }
	                    });
	                },
	                //绘制增加一个点后，显示该分段的长度
	                showAddPointLength: function showAddPointLength(entity) {},
	                //绘制过程移动中，动态显示长度信息
	                showMoveDrawing: function showMoveDrawing(entity) {
	                    var positions = measureCtrl.drawControl.getPositions(entity);
	                    if (positions.length < 2) return;

	                    var cartographic = Cesium.Cartographic.fromCartesian(positions[0]);
	                    var cartographic1 = Cesium.Cartographic.fromCartesian(positions[1]);
	                    var height = Math.abs(cartographic1.height - cartographic.height);
	                    var heightstr = measureCtrl.formatLength(height, this.options.unit);

	                    if (this.totalLable) {
	                        this.totalLable.position = _DrawUtils2.default.getMidPosition(positions[0], positions[1]);
	                        this.totalLable.label.text = "高度差:" + heightstr;
	                        this.totalLable.label.show = true;

	                        this.totalLable.attribute.value = height;
	                        this.totalLable.attribute.textEx = "高度差:";
	                    }

	                    if (this.options.calback) this.options.calback(heightstr, height);
	                },
	                //绘制完成后
	                showDrawEnd: function showDrawEnd(entity) {
	                    entity._totalLable = this.totalLable;
	                    this.totalLable = null;
	                }
	            };

	            this.workSuperHeight = {
	                options: null,
	                totalLable: null, //高度差label
	                xLable: null, //水平距离label
	                hLable: null, //水平距离label
	                //清除未完成的数据
	                clearLastNoEnd: function clearLastNoEnd() {
	                    if (this.totalLable != null) dataSource.entities.remove(this.totalLable);
	                    if (this.xLable != null) dataSource.entities.remove(this.xLable);
	                    if (this.hLable != null) dataSource.entities.remove(this.hLable);

	                    this.totalLable = null;
	                    this.xLable = null;
	                    this.hLable = null;
	                },
	                //开始绘制
	                start: function start(options) {
	                    var _label;

	                    this.options = options;

	                    this.totalLable = dataSource.entities.add({
	                        label: (_label = {
	                            style: Cesium.LabelStyle.FILL_AND_OUTLINE,
	                            outlineColor: Cesium.Color.BLACK,
	                            font: measureCtrl._font,
	                            show: false,
	                            horizontalOrigin: Cesium.HorizontalOrigin.LEFT,
	                            verticalOrigin: Cesium.VerticalOrigin.CENTER
	                        }, _defineProperty(_label, "font", "normal 32px MicroSoft YaHei"), _defineProperty(_label, "scale", 0.5), _defineProperty(_label, "fillColor", Cesium.Color.YELLOW), _defineProperty(_label, "outlineColor", Cesium.Color.BLACK), _defineProperty(_label, "outlineWidth", 2), _defineProperty(_label, "disableDepthTestDistance", Number.POSITIVE_INFINITY), _label),
	                        isMarsMeasureLabel: true,
	                        attribute: {
	                            unit: this.options.unit,
	                            type: this.options.type
	                        }
	                    });

	                    this.xLable = dataSource.entities.add({
	                        label: {
	                            style: Cesium.LabelStyle.FILL_AND_OUTLINE,
	                            fillColor: Cesium.Color.LIME,
	                            outlineColor: Cesium.Color.BLACK,
	                            outlineWidth: 3,
	                            font: measureCtrl._font,
	                            show: false,
	                            horizontalOrigin: Cesium.HorizontalOrigin.CENTER,
	                            verticalOrigin: Cesium.VerticalOrigin.BOTTOM
	                            //pixelOffset: new Cesium.Cartesian2(0, -15),   //偏移量   
	                        },
	                        isMarsMeasureLabel: true,
	                        attribute: {
	                            unit: this.options.unit,
	                            type: this.options.type
	                        }
	                    });

	                    this.hLable = dataSource.entities.add({
	                        label: {
	                            style: Cesium.LabelStyle.FILL_AND_OUTLINE,
	                            fillColor: Cesium.Color.RED,
	                            outlineColor: Cesium.Color.BLACK,
	                            outlineWidth: 3,
	                            font: measureCtrl._font,
	                            show: false,
	                            horizontalOrigin: Cesium.HorizontalOrigin.CENTER,
	                            verticalOrigin: Cesium.VerticalOrigin.BOTTOM
	                            //pixelOffset: new Cesium.Cartesian2(0, -15),   //偏移量  
	                        },
	                        isMarsMeasureLabel: true,
	                        attribute: {
	                            unit: this.options.unit,
	                            type: this.options.type
	                        }
	                    });

	                    measureCtrl.drawControl.startDraw({
	                        type: "polyline",
	                        minMaxPoints: {
	                            min: 2,
	                            max: 2,
	                            isSuper: true
	                        },
	                        style: {
	                            color: "#ffff00",
	                            width: 2
	                        }
	                    });
	                },
	                //绘制增加一个点后，显示该分段的长度
	                showAddPointLength: function showAddPointLength(entity) {
	                    var lonlats = measureCtrl.drawControl.getPositions(entity);
	                    if (lonlats.length == 4) {
	                        var mouseEndPosition = lonlats[3].clone();
	                        lonlats.pop();
	                        lonlats.pop();
	                        lonlats.pop();
	                        lonlats.push(mouseEndPosition);
	                    }

	                    if (lonlats.length == 2) {
	                        var zCartesian = _DrawUtils2.default.getZHeightPosition(lonlats[0], lonlats[1]);
	                        var hDistance = _DrawUtils2.default.getHDistance(lonlats[0], lonlats[1]);
	                        if (hDistance > 3.0) {
	                            lonlats.push(zCartesian);
	                            lonlats.push(lonlats[0]);
	                        }
	                    }

	                    this.showSuperHeight(lonlats);
	                },
	                //绘制过程移动中，动态显示长度信息
	                showMoveDrawing: function showMoveDrawing(entity) {
	                    var lonlats = measureCtrl.drawControl.getPositions(entity);
	                    if (lonlats.length == 4) {
	                        var mouseEndPosition = lonlats[3].clone();
	                        lonlats.pop();
	                        lonlats.pop();
	                        lonlats.pop();
	                        lonlats.push(mouseEndPosition);
	                    }

	                    if (lonlats.length == 2) {
	                        var zCartesian = _DrawUtils2.default.getZHeightPosition(lonlats[0], lonlats[1]);
	                        var hDistance = _DrawUtils2.default.getHDistance(lonlats[0], lonlats[1]);
	                        if (hDistance > 3.0) {
	                            lonlats.push(zCartesian);
	                            lonlats.push(lonlats[0]);
	                        }
	                    }
	                    this.showSuperHeight(lonlats);
	                },
	                //绘制完成后
	                showDrawEnd: function showDrawEnd(entity) {
	                    entity._arrLables = [this.totalLable, this.hLable, this.xLable];

	                    this.totalLable = null;
	                    this.hLable = null;
	                    this.xLable = null;
	                },

	                /**
	                 *  高程测量
	                 * 由4个点形成的三角形（首尾点相同），计算该三角形三条线段的长度
	                 * @param {Array} positions 4个点形成的点数组
	                 */
	                showSuperHeight: function showSuperHeight(positions) {
	                    var vLength; //垂直距离
	                    var hLength; //水平距离
	                    var lLength; //长度
	                    var height;
	                    if (positions.length == 4) {
	                        var midLPoint = _DrawUtils2.default.getMidPosition(positions[0], positions[1]);
	                        var midXPoint, midHPoint;
	                        var cartographic0 = Cesium.Cartographic.fromCartesian(positions[0]);
	                        var cartographic1 = Cesium.Cartographic.fromCartesian(positions[1]);
	                        var cartographic2 = Cesium.Cartographic.fromCartesian(positions[2]);
	                        var tempHeight = cartographic1.height - cartographic2.height;
	                        height = cartographic1.height - cartographic0.height;
	                        lLength = Cesium.Cartesian3.distance(positions[0], positions[1]);
	                        if (height > -1 && height < 1) {
	                            midHPoint = positions[1];
	                            this.updateSuperHeightLabel(this.totalLable, midHPoint, "高度差", height);
	                            this.updateSuperHeightLabel(this.hLable, midLPoint, "长度", lLength);
	                        } else {
	                            if (tempHeight > -0.1 && tempHeight < 0.1) {
	                                midXPoint = _DrawUtils2.default.getMidPosition(positions[2], positions[1]);
	                                midHPoint = _DrawUtils2.default.getMidPosition(positions[2], positions[3]);
	                                hLength = Cesium.Cartesian3.distance(positions[1], positions[2]);
	                                vLength = Cesium.Cartesian3.distance(positions[3], positions[2]);
	                            } else {
	                                midHPoint = _DrawUtils2.default.getMidPosition(positions[2], positions[1]);
	                                midXPoint = _DrawUtils2.default.getMidPosition(positions[2], positions[3]);
	                                hLength = Cesium.Cartesian3.distance(positions[3], positions[2]);
	                                vLength = Cesium.Cartesian3.distance(positions[1], positions[2]);
	                            }
	                            this.updateSuperHeightLabel(this.totalLable, midHPoint, "高度差", vLength);
	                            this.updateSuperHeightLabel(this.xLable, midXPoint, "水平距离", hLength);
	                            this.updateSuperHeightLabel(this.hLable, midLPoint, "长度", lLength);
	                        }
	                    } else if (positions.length == 2) {
	                        vLength = Cesium.Cartesian3.distance(positions[1], positions[0]);
	                        var midHPoint = _DrawUtils2.default.getMidPosition(positions[0], positions[1]);
	                        if (xLable.label.show) {
	                            xLable.label.show = false;
	                            hLable.label.show = false;
	                        }
	                        this.updateSuperHeightLabel(this.totalLable, midHPoint, "高度差", vLength);
	                    }

	                    var heightstr = measureCtrl.formatLength(vLength, this.options.unit);
	                    if (this.options.calback) this.options.calback(heightstr, vLength);
	                },
	                /**
	                 * 超级 高程测量 显示标签
	                 * @param {Cesium.Label} currentLabel 显示标签
	                 * @param {Cesium.Cartesian3} postion 坐标位置
	                 * @param {String} type 类型("高度差"，"水平距离"，"长度")
	                 * @param {Object} value 值
	                 */
	                updateSuperHeightLabel: function updateSuperHeightLabel(currentLabel, postion, type, value) {
	                    if (currentLabel == null) return;

	                    currentLabel.position = postion;
	                    currentLabel.label.text = type + ":" + measureCtrl.formatLength(value, this.options.unit);
	                    currentLabel.label.show = true;

	                    currentLabel.attribute.value = value;
	                    currentLabel.attribute.textEx = type + ":";
	                }

	            };
	        }

	        /**
	         * 长度测量.
	         * @param {Object} [options] 配置如下.
	         *
	         */

	    }, {
	        key: "measuerLength",
	        value: function measuerLength(options) {
	            this.endLastDraw();
	            this.mType = "length";
	            options = options || {};
	            options.type = this.mType;
	            if (!options.hasOwnProperty("terrain")) options.terrain = true;

	            this.workLength.start(options);
	        }

	        /**
	         * 坡度测量.
	         * @param {Object} [options] 配置如下.
	         *
	         */

	    }, {
	        key: "measureSection",
	        value: function measureSection(options) {
	            this.endLastDraw();

	            this.mType = "section";
	            options = options || {};
	            options.type = this.mType;
	            options.terrain = true;

	            this.workLength.start(options);
	        }

	        /**
	         * 面积测量.
	         * @param {Object} [options] 配置如下.
	         *
	         */

	    }, {
	        key: "measureArea",
	        value: function measureArea(options) {
	            this.endLastDraw();

	            this.mType = "area";
	            options = options || {};
	            options.type = this.mType;

	            this.workArea.start(options);
	        }
	    }, {
	        key: "measureHeight",


	        /**
	         * 高度测量.
	         * @param {Object} [options] 配置如下.
	         *
	         */
	        value: function measureHeight(options) {
	            this.endLastDraw();

	            options = options || {};
	            this.mType = "height";
	            options.type = this.mType;
	            this.workHeight.start(options);
	        }
	    }, {
	        key: "measureTriangle",


	        /**
	         * 三角测量.
	         * @param {Object} [options] 配置如下.
	         *
	         */
	        value: function measureTriangle(options) {
	            this.endLastDraw();
	            options = options || {};
	            this.mType = "super_height";
	            options.type = this.mType;
	            this.workSuperHeight.start(options);
	        }
	    }, {
	        key: "endLastDraw",


	        //如果上次未完成绘制就单击了新的，清除之前未完成的。
	        value: function endLastDraw() {
	            this.workLength.clearLastNoEnd();
	            this.workArea.clearLastNoEnd();
	            this.workHeight.clearLastNoEnd();
	            this.workSuperHeight.clearLastNoEnd();
	            this.drawControl.stopDraw();
	        }

	        /**
	         * 清除测量.
	         *
	         */

	    }, {
	        key: "clearMeasure",
	        value: function clearMeasure() {
	            this.mType = "";
	            this.endLastDraw();
	            this.drawControl.removeAll();
	        }
	    }, {
	        key: "updateUnit",


	        /** 更新量测结果的单位  */
	        value: function updateUnit(thisType, unit) {
	            var arr = this.dataSource.entities.values;
	            for (var i in arr) {
	                var entity = arr[i];
	                if (entity.label && entity.isMarsMeasureLabel && entity.attribute && entity.attribute.value) {
	                    if (entity.attribute.type != thisType) continue;
	                    if (thisType == "area") {
	                        entity.label.text._value = (entity.attribute.textEx || "") + this.formatArea(entity.attribute.value, unit);
	                    } else {
	                        entity._label.text._value = (entity.attribute.textEx || "") + this.formatLength(entity.attribute.value, unit);
	                    }
	                }
	            }
	        }

	        /**  进行单位换算，格式化显示面积    */

	    }, {
	        key: "formatArea",
	        value: function formatArea(val, unit) {
	            if (val == null) return "";

	            if (unit == null || unit == "auto") {
	                if (val < 1000000) unit = "m";else unit = "km";
	            }
	            val = parseFloat(val);

	            var valstr = "";
	            switch (unit) {
	                default:
	                case "m":
	                    valstr = val.toFixed(2) + ' 平方米';
	                    break;
	                case "km":
	                    valstr = (val / 1000000).toFixed(2) + ' 平方公里';
	                    break;
	                case "mu":
	                    valstr = (val * 0.0015).toFixed(2) + ' 亩';
	                    break;
	                case "ha":
	                    valstr = (val * 0.0001).toFixed(2) + ' 公顷';
	                    break;
	            }

	            return valstr;
	        }

	        /**  单位换算，格式化显示长度     */

	    }, {
	        key: "formatLength",
	        value: function formatLength(val, unit) {
	            if (val == null) return "";

	            if (unit == null || unit == "auto") {
	                if (val < 1000) unit = "m";else unit = "km";
	            }
	            val = parseFloat(val);
	            var valstr = "";
	            switch (unit) {
	                default:
	                case "m":
	                    valstr = val.toFixed(2) + ' 米';
	                    break;
	                case "km":
	                    valstr = (val * 0.001).toFixed(2) + ' 公里';
	                    break;
	                case "mile":
	                    valstr = (val * 0.00054).toFixed(2) + ' 海里';
	                    break;
	                case "zhang":
	                    valstr = (val * 0.3).toFixed(2) + ' 丈';
	                    break;
	            }
	            return valstr;
	        }
	    }]);

	    return Measure;
	}();

	exports.default = Measure;

/***/ }),
/* 91 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var LatLon = function LatLon() {
	    _classCallCheck(this, LatLon);
	};

	LatLon.formatPositon = function (position) {
	    var carto = Cesium.Cartographic.fromCartesian(position);
	    var result = {};
	    result.y = Number(Cesium.Math.toDegrees(carto.latitude).toFixed(6));
	    result.x = Number(Cesium.Math.toDegrees(carto.longitude).toFixed(6));
	    result.z = Number(carto.height.toFixed(1));
	    return result;
	};

	/**
	 * 获取鼠标当前的屏幕坐标位置的三维Cesium坐标
	 * @param {Cesium.Scene} scene 
	 * @param {Cesium.Cartesian2} position 二维屏幕坐标位置
	 */
	LatLon.getCurrentMousePosition = function (scene, position) {
	    var cartesian;
	    //在模型上提取坐标
	    var pickobject = scene.pick(position); //取模型
	    if (scene.pickPositionSupported && Cesium.defined(pickobject)) {
	        //!scene.pickPositionSupported : 不支持深度拾取,无法进行鼠标交互绘制
	        cartesian = scene.pickPosition(position);
	        if (cartesian) {
	            var pgeo = scene.globe.ellipsoid.cartesianToCartographic(cartesian);
	            if (pgeo.height > 0) return cartesian;
	        }
	    }

	    //提取鼠标点的地理坐标
	    var pickRay = scene.camera.getPickRay(position);
	    cartesian = scene.globe.pick(pickRay, scene);
	    return cartesian;
	};

	LatLon.getCenter = function (viewer, isToWgs) {
	    var scene = viewer.scene;
	    var target = pickCenterPoint(scene);
	    var bestTarget = target;
	    if (!bestTarget) {
	        var globe = scene.globe;
	        var carto = scene.camera.positionCartographic.clone();
	        var height = globe.getHeight(carto);
	        carto.height = height || 0;
	        bestTarget = Cesium.Ellipsoid.WGS84.cartographicToCartesian(carto);
	    }
	    var result = formatPositon(bestTarget);
	    if (isToWgs) result = viewer.mars.point2wgs(result); //坐标转换为wgs

	    return result;
	};

	LatLon.pickCenterPoint = function (scene) {
	    var canvas = scene.canvas;
	    var center = new Cesium.Cartesian2(canvas.clientWidth / 2, canvas.clientHeight / 2);

	    var ray = scene.camera.getPickRay(center);
	    var target = scene.globe.pick(ray, scene);
	    return target || scene.camera.pickEllipsoid(center);
	};

	//提取地球视域边界
	LatLon.getExtent = function (viewer, isToWgs) {
	    // 范围对象
	    var extent = { xmin: 70, xmax: 140, ymin: 0, ymax: 55 }; //默认值：中国区域

	    // 得到当前三维场景
	    var scene = viewer.scene;

	    // 得到当前三维场景的椭球体
	    var ellipsoid = scene.globe.ellipsoid;
	    var canvas = scene.canvas;

	    // canvas左上角
	    var car3_lt = viewer.camera.pickEllipsoid(new Cesium.Cartesian2(0, 0), ellipsoid);
	    if (car3_lt) {
	        // 在椭球体上
	        var carto_lt = ellipsoid.cartesianToCartographic(car3_lt);
	        extent.xmin = Cesium.Math.toDegrees(carto_lt.longitude);
	        extent.ymax = Cesium.Math.toDegrees(carto_lt.latitude);
	    } else {
	        // 不在椭球体上 
	        var xMax = canvas.width / 2;
	        var yMax = canvas.height / 2;

	        var car3_lt2;
	        // 这里每次10像素递加，一是10像素相差不大，二是为了提高程序运行效率
	        for (var yIdx = 0; yIdx <= yMax; yIdx += 10) {
	            var xIdx = yIdx <= xMax ? yIdx : xMax;
	            car3_lt2 = viewer.camera.pickEllipsoid(new Cesium.Cartesian2(xIdx, yIdx), ellipsoid);
	            if (car3_lt2) break;
	        }
	        if (car3_lt2) {
	            var carto_lt = ellipsoid.cartesianToCartographic(car3_lt2);
	            extent.xmin = Cesium.Math.toDegrees(carto_lt.longitude);
	            extent.ymax = Cesium.Math.toDegrees(carto_lt.latitude);
	        }
	    }

	    // canvas右下角
	    var car3_rb = viewer.camera.pickEllipsoid(new Cesium.Cartesian2(canvas.width, canvas.height), ellipsoid);
	    if (car3_rb) {
	        // 在椭球体上
	        var carto_rb = ellipsoid.cartesianToCartographic(car3_rb);
	        extent.xmax = Cesium.Math.toDegrees(carto_rb.longitude);
	        extent.ymin = Cesium.Math.toDegrees(carto_rb.latitude);
	    } else {
	        // 不在椭球体上
	        var xMax = canvas.width / 2;
	        var yMax = canvas.height / 2;

	        var car3_rb2;
	        // 这里每次10像素递减，一是10像素相差不大，二是为了提高程序运行效率
	        for (var yIdx = canvas.height; yIdx >= yMax; yIdx -= 10) {
	            var xIdx = yIdx >= xMax ? yIdx : xMax;
	            car3_rb2 = viewer.camera.pickEllipsoid(new Cesium.Cartesian2(xIdx, yIdx), ellipsoid);
	            if (car3_rb2) break;
	        }
	        if (car3_rb2) {
	            var carto_rb = ellipsoid.cartesianToCartographic(car3_rb2);
	            extent.xmax = Cesium.Math.toDegrees(carto_rb.longitude);
	            extent.ymin = Cesium.Math.toDegrees(carto_rb.latitude);
	        }
	    }

	    if (isToWgs) {
	        //坐标转换为wgs
	        var pt1 = viewer.mars.point2wgs({ x: extent.xmin, y: extent.ymin });
	        extent.xmin = pt1.x;
	        extent.ymin = pt1.y;

	        var pt2 = viewer.mars.point2wgs({ x: extent.xmax, y: extent.ymax });
	        extent.xmax = pt2.x;
	        extent.ymax = pt2.y;
	    }

	    return extent;
	};

	//提取相机视角范围参数 
	LatLon.getCameraView = function (viewer, isToWgs) {
	    var camera = viewer.camera;
	    var position = camera.positionCartographic;

	    var bookmark = {};
	    bookmark.y = Number(Cesium.Math.toDegrees(position.latitude).toFixed(6));
	    bookmark.x = Number(Cesium.Math.toDegrees(position.longitude).toFixed(6));
	    bookmark.z = Number(position.height.toFixed(1));
	    bookmark.heading = Number(Cesium.Math.toDegrees(camera.heading).toFixed(1));
	    bookmark.pitch = Number(Cesium.Math.toDegrees(camera.pitch).toFixed(1));
	    bookmark.roll = Number(Cesium.Math.toDegrees(camera.roll).toFixed(1));

	    if (isToWgs) bookmark = viewer.mars.point2wgs(bookmark); //坐标转换为wgs

	    return bookmark;
	};

	exports.default = LatLon;

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	/*
	 * 作者：朱王璋
	 * 部门：产品研发中心
	 * 日期：2019.5.16
	 */

	var _EnvEffects = __webpack_require__(93);

	var _EnvEffects2 = _interopRequireDefault(_EnvEffects);

	var _SkylineOption = __webpack_require__(100);

	var _SkylineOption2 = _interopRequireDefault(_SkylineOption);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Skyline = function () {
	  /**
	  * 天际线分析构造函数
	  * @method constructor
	  * @param viewer Cesium.Viewer 对象
	   * 
	  */
	  function Skyline(viewer) {
	    _classCallCheck(this, Skyline);

	    this.viewer = viewer;
	    this.skylineOption = new _SkylineOption2.default(viewer);
	    this.effects = new _EnvEffects2.default(viewer);
	  }

	  /**
	  * 开始分析
	  * @method open 
	  */


	  _createClass(Skyline, [{
	    key: "open",
	    value: function open() {
	      this.skylineEff = this.effects.addSkyline(this.skylineOption);
	    }

	    /**
	    * 结束分析
	    * @method close 
	    */

	  }, {
	    key: "close",
	    value: function close() {
	      if (this.skylineEff) this.effects.removeEffect(this.skylineEff);
	    }
	  }]);

	  return Skyline;
	}();

	exports.default = Skyline;

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _EffectSnow = __webpack_require__(94);

	var _EffectSnow2 = _interopRequireDefault(_EffectSnow);

	var _EffectRain = __webpack_require__(96);

	var _EffectRain2 = _interopRequireDefault(_EffectRain);

	var _EffectScan = __webpack_require__(97);

	var _EffectScan2 = _interopRequireDefault(_EffectScan);

	var _EffectRadar = __webpack_require__(98);

	var _EffectRadar2 = _interopRequireDefault(_EffectRadar);

	var _Skyline = __webpack_require__(99);

	var _Skyline2 = _interopRequireDefault(_Skyline);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * 对象绘制类
	 */

	var EnvEffects = function () {

	    /**
	     * 粒子系统类
	     *
	     * @alias EnvEffects
	     * @constructor
	     *
	     * @param {viewer}  viewer对象
	     *
	     */
	    function EnvEffects(viewer) {
	        _classCallCheck(this, EnvEffects);

	        this.viewer = viewer;
	        this._ParticleList = [];
	    }

	    /**
	    * 添加特效.
	    * @param {Object} effect 特效.
	    *
	    */


	    _createClass(EnvEffects, [{
	        key: "addEffect",
	        value: function addEffect(effect) {
	            var collection = this.viewer.scene.postProcessStages;
	            collection.add(effect);
	            if (effect instanceof _EffectSnow2.default || effect instanceof _EffectRain2.default) this._setFogAtmoshere();
	        }

	        /**
	        * 删除特效.
	        * @param {Object} effect 特效.
	        *
	        */

	    }, {
	        key: "removeEffect",
	        value: function removeEffect(effect) {
	            var collection = this.viewer.scene.postProcessStages;
	            collection.remove(effect);
	            if (effect instanceof _EffectSnow2.default || effect instanceof _EffectRain2.default) this._resetFogAtmoshere();
	        }

	        /**
	        * 添加下雨特效.
	        * @returns {Object} effect 下雨特效.
	        *
	        */

	    }, {
	        key: "addRain",
	        value: function addRain() {
	            var rainEffect = new _EffectRain2.default();
	            this.addEffect(rainEffect);
	            return rainEffect;
	        }
	        /**
	         * 添加下雪特效.
	         * @returns {Object} effect 下雪特效.
	         *
	         */

	    }, {
	        key: "addSnow",
	        value: function addSnow() {
	            var snowEffect = new _EffectSnow2.default();
	            this.addEffect(snowEffect);
	            return snowEffect;
	        }

	        /**
	        * 添加扫描特效.
	        * @returns {Object} effect 扫描特效..
	        *
	        */

	    }, {
	        key: "addScan",
	        value: function addScan(cartographicCenter, maxRadius, scanColor, duration) {
	            var Scan = new _EffectScan2.default(this.viewer, cartographicCenter, maxRadius, scanColor, duration);
	            this.addEffect(Scan);
	            return Scan;
	        }

	        /**
	          * 添加天际线特效.     
	          * @param {skylineOpt} 天际线选项.
	          * @returns {Object} effect天际线特效.
	          *
	          */

	    }, {
	        key: "addSkyline",
	        value: function addSkyline(skylineOpt) {
	            var Skyline = new _Skyline2.default(skylineOpt);
	            this.addEffect(Skyline);
	            return Skyline;
	        }

	        /**
	         * 添加雷达特效.
	         * @returns {Object} effect雷达特效..
	         *
	         */

	    }, {
	        key: "addRadar",
	        value: function addRadar(cartographicCenter, radius, scanColor, duration) {
	            var Radar = new _EffectRadar2.default(this.viewer, cartographicCenter, radius, scanColor, duration);
	            this.addEffect(Radar);
	            return Radar;
	        }

	        /**
	        * 移除所有特效.
	        *
	        */

	    }, {
	        key: "removeAll",
	        value: function removeAll() {
	            this.viewer.scene.postProcessStages.removeAll();
	        }
	    }, {
	        key: "_setFogAtmoshere",
	        value: function _setFogAtmoshere() {
	            this.viewer.scene.skyAtmosphere.hueShift = -0.8;
	            this.viewer.scene.skyAtmosphere.saturationShift = -0.7;
	            this.viewer.scene.skyAtmosphere.brightnessShift = -0.33;
	            this.viewer.scene.fog.density = 0.001;
	            this.viewer.scene.fog.minimumBrightness = 0.8;
	        }
	    }, {
	        key: "_resetFogAtmoshere",
	        value: function _resetFogAtmoshere() {
	            this.viewer.scene.skyAtmosphere.hueShift = 0;
	            this.viewer.scene.skyAtmosphere.saturationShift = 0;
	            this.viewer.scene.skyAtmosphere.brightnessShift = 0;

	            this.viewer.scene.fog.density = 2.0e-4;
	            this.viewer.scene.fog.minimumBrightness = 0.1;
	        }
	    }]);

	    return EnvEffects;
	}();

	exports.default = EnvEffects;

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _PostProcessEffects = __webpack_require__(95);

	var _PostProcessEffects2 = _interopRequireDefault(_PostProcessEffects);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var EffectSnow = function (_Cesium$PostProcessSt) {
	    _inherits(EffectSnow, _Cesium$PostProcessSt);

	    function EffectSnow(scale) {
	        _classCallCheck(this, EffectSnow);

	        var _scale = Cesium.defaultValue(scale, 1.0);
	        var snow = {
	            fragmentShader: _PostProcessEffects2.default.FS_SNOW,
	            uniforms: {
	                u_scale: _scale
	            }
	        };

	        var _this = _possibleConstructorReturn(this, (EffectSnow.__proto__ || Object.getPrototypeOf(EffectSnow)).call(this, snow));

	        _this._scale = _scale;
	        return _this;
	    }

	    _createClass(EffectSnow, [{
	        key: "scale",
	        get: function get() {
	            return this._scale;
	        },
	        set: function set(val) {
	            this._scale = val;
	        }
	    }]);

	    return EffectSnow;
	}(Cesium.PostProcessStage);

	exports.default = EffectSnow;

/***/ }),
/* 95 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var PostProcessEffects = function () {
	    function PostProcessEffects() {
	        _classCallCheck(this, PostProcessEffects);
	    }

	    _createClass(PostProcessEffects, null, [{
	        key: "FS_RAIN",
	        get: function get() {
	            return "uniform sampler2D colorTexture;\n\
	        varying vec2 v_textureCoordinates;\n\
	    \n\
	        float hash(float x){\n\
	            return fract(sin(x*133.3)*13.13);\n\
	    }\n\
	    \n\
	    void main(void){\n\
	    \n\
	        float time = czm_frameNumber / 60.0;\n\
	    vec2 resolution = czm_viewport.zw;\n\
	    \n\
	    vec2 uv=(gl_FragCoord.xy*2.-resolution.xy)/min(resolution.x,resolution.y);\n\
	    vec3 c=vec3(.6,.7,.8);\n\
	    \n\
	    float a=-.4;\n\
	    float si=sin(a),co=cos(a);\n\
	    uv*=mat2(co,-si,si,co);\n\
	    uv*=length(uv+vec2(0,4.9))*.3+1.;\n\
	    \n\
	    float v=1.-sin(hash(floor(uv.x*100.))*2.);\n\
	    float b=clamp(abs(sin(20.*time*v+uv.y*(5./(2.+v))))-.95,0.,1.)*20.;\n\
	    c*=v*b; \n\
	    \n\
	    gl_FragColor = mix(texture2D(colorTexture, v_textureCoordinates), vec4(c,1), 0.5);  \n\
	    }\n\
	    ";
	        }
	    }, {
	        key: "FS_SNOW",
	        get: function get() {
	            return "uniform sampler2D colorTexture;\n\
	        varying vec2 v_textureCoordinates;\n\
	    \n\
	        float snow(vec2 uv,float scale)\n\
	        {\n\
	            float time = czm_frameNumber / 60.0;\n\
	            float w=smoothstep(1.,0.,-uv.y*(scale/10.));if(w<.1)return 0.;\n\
	            uv+=time/scale;uv.y+=time*2./scale;uv.x+=sin(uv.y+time*.5)/scale;\n\
	            uv*=scale;vec2 s=floor(uv),f=fract(uv),p;float k=3.,d;\n\
	            p=.5+.35*sin(11.*fract(sin((s+p+scale)*mat2(7,3,6,5))*5.))-f;d=length(p);k=min(d,k);\n\
	            k=smoothstep(0.,k,sin(f.x+f.y)*0.01);\n\
	            return k*w;\n\
	        }\n\
	    \n\
	        void main(void){\n\
	            vec2 resolution = czm_viewport.zw;\n\
	            vec2 uv=(gl_FragCoord.xy*2.-resolution.xy)/min(resolution.x,resolution.y);\n\
	            vec3 finalColor=vec3(0);\n\
	            float c = 0.0;\n\
	            c+=snow(uv,30.)*.0;\n\
	            c+=snow(uv,20.)*.0;\n\
	            c+=snow(uv,15.)*.0;\n\
	            c+=snow(uv,10.);\n\
	            c+=snow(uv,8.);\n\
	            c+=snow(uv,6.);\n\
	            c+=snow(uv,5.);\n\
	            finalColor=(vec3(c)); \n\
	            gl_FragColor = mix(texture2D(colorTexture, v_textureCoordinates), vec4(finalColor,1), 0.5); \n\
	    \n\
	        }\n\
	    ";
	        }
	    }, {
	        key: "FS_SCAN",
	        get: function get() {
	            return "uniform sampler2D colorTexture;\n" + "uniform sampler2D depthTexture;\n" + "varying vec2 v_textureCoordinates;\n" + "uniform vec4 u_scanCenterEC;\n" + "uniform vec3 u_scanPlaneNormalEC;\n" + "uniform float u_radius;\n" + "uniform vec4 u_scanColor;\n" + "vec4 toEye(in vec2 uv, in float depth)\n" + " {\n" + " vec2 xy = vec2((uv.x * 2.0 - 1.0),(uv.y * 2.0 - 1.0));\n" + " vec4 posInCamera =czm_inverseProjection * vec4(xy, depth, 1.0);\n" + " posInCamera =posInCamera / posInCamera.w;\n" + " return posInCamera;\n" + " }\n" + "vec3 pointProjectOnPlane(in vec3 planeNormal, in vec3 planeOrigin, in vec3 point)\n" + "{\n" + "vec3 v01 = point -planeOrigin;\n" + "float d = dot(planeNormal, v01) ;\n" + "return (point - planeNormal * d);\n" + "}\n" + "float getDepth(in vec4 depth)\n" + "{\n" + "float z_window = czm_unpackDepth(depth);\n" + "z_window = czm_reverseLogDepth(z_window);\n" + "float n_range = czm_depthRange.near;\n" + "float f_range = czm_depthRange.far;\n" + "return (2.0 * z_window - n_range - f_range) / (f_range - n_range);\n" + "}\n" + "void main()\n" + "{\n" + "gl_FragColor = texture2D(colorTexture, v_textureCoordinates);\n" + "float depth = getDepth( texture2D(depthTexture, v_textureCoordinates));\n" + "vec4 viewPos = toEye(v_textureCoordinates, depth);\n" + "vec3 prjOnPlane = pointProjectOnPlane(u_scanPlaneNormalEC.xyz, u_scanCenterEC.xyz, viewPos.xyz);\n" + "float dis = length(prjOnPlane.xyz - u_scanCenterEC.xyz);\n" + "if(dis < u_radius)\n" + "{\n" + "float f = 1.0 -abs(u_radius - dis) / u_radius;\n" + "f = pow(f, 4.0);\n" + "gl_FragColor = mix(gl_FragColor, u_scanColor, f);\n" + "}\n" + "}\n";
	        }
	    }, {
	        key: "FS_RADAR",
	        get: function get() {
	            return "uniform sampler2D colorTexture;\n" + "uniform sampler2D depthTexture;\n" + "varying vec2 v_textureCoordinates;\n" + "uniform vec4 u_scanCenterEC;\n" + "uniform vec3 u_scanPlaneNormalEC;\n" + "uniform vec3 u_scanLineNormalEC;\n" + "uniform float u_radius;\n" + "uniform vec4 u_scanColor;\n" + "vec4 toEye(in vec2 uv, in float depth)\n" + " {\n" + " vec2 xy = vec2((uv.x * 2.0 - 1.0),(uv.y * 2.0 - 1.0));\n" + " vec4 posInCamera =czm_inverseProjection * vec4(xy, depth, 1.0);\n" + " posInCamera =posInCamera / posInCamera.w;\n" + " return posInCamera;\n" + " }\n" + "bool isPointOnLineRight(in vec3 ptOnLine, in vec3 lineNormal, in vec3 testPt)\n" + "{\n" + "vec3 v01 = testPt - ptOnLine;\n" + "normalize(v01);\n" + "vec3 temp = cross(v01, lineNormal);\n" + "float d = dot(temp, u_scanPlaneNormalEC);\n" + "return d > 0.5;\n" + "}\n" + "vec3 pointProjectOnPlane(in vec3 planeNormal, in vec3 planeOrigin, in vec3 point)\n" + "{\n" + "vec3 v01 = point -planeOrigin;\n" + "float d = dot(planeNormal, v01) ;\n" + "return (point - planeNormal * d);\n" + "}\n" + "float distancePointToLine(in vec3 ptOnLine, in vec3 lineNormal, in vec3 testPt)\n" + "{\n" + "vec3 tempPt = pointProjectOnPlane(lineNormal, ptOnLine, testPt);\n" + "return length(tempPt - ptOnLine);\n" + "}\n" + "float getDepth(in vec4 depth)\n" + "{\n" + "float z_window = czm_unpackDepth(depth);\n" + "z_window = czm_reverseLogDepth(z_window);\n" + "float n_range = czm_depthRange.near;\n" + "float f_range = czm_depthRange.far;\n" + "return (2.0 * z_window - n_range - f_range) / (f_range - n_range);\n" + "}\n" + "void main()\n" + "{\n" + "gl_FragColor = texture2D(colorTexture, v_textureCoordinates);\n" + "float depth = getDepth( texture2D(depthTexture, v_textureCoordinates));\n" + "vec4 viewPos = toEye(v_textureCoordinates, depth);\n" + "vec3 prjOnPlane = pointProjectOnPlane(u_scanPlaneNormalEC.xyz, u_scanCenterEC.xyz, viewPos.xyz);\n" + "float dis = length(prjOnPlane.xyz - u_scanCenterEC.xyz);\n" + "float twou_radius = u_radius * 2.0;\n" + "if(dis < u_radius)\n" + "{\n" + "float f0 = 1.0 -abs(u_radius - dis) / u_radius;\n" + "f0 = pow(f0, 64.0);\n" + "vec3 lineEndPt = vec3(u_scanCenterEC.xyz) + u_scanLineNormalEC * u_radius;\n" + "float f = 0.0;\n" + "if(isPointOnLineRight(u_scanCenterEC.xyz, u_scanLineNormalEC.xyz, prjOnPlane.xyz))\n" + "{\n" + "float dis1= length(prjOnPlane.xyz - lineEndPt);\n" + "f = abs(twou_radius -dis1) / twou_radius;\n" + "f = pow(f, 3.0);\n" + "}\n" + "gl_FragColor = mix(gl_FragColor, u_scanColor, f + f0);\n" + "}\n" + "}\n";
	        }
	    }, {
	        key: "FS_STROKE",
	        get: function get() {
	            return "#extension GL_OES_standard_derivatives : enable\n\
	        uniform sampler2D colorTexture;\n\
	        uniform sampler2D depthTexture;\n\
	        uniform float lineWidth;\n\
	        uniform float height;\n\
	        uniform bvec3 strokeType;\n\
	        uniform vec3 tjxColor;\n\
	        uniform vec3 bjColor;\n\
	        uniform vec3 cameraPos;\n\
	        uniform float mbDis;\n\
	        varying vec2 v_textureCoordinates;\n\
	        vec4 toEye(in vec2 uv, in float depth){\n\
	            vec2 xy = vec2((uv.x * 2.0 - 1.0),(uv.y * 2.0 - 1.0));\n\
	            vec4 posInCamera =czm_inverseProjection * vec4(xy, depth, 1.0);\n\
	            posInCamera =posInCamera / posInCamera.w;\n\
	            return posInCamera;\n\
	        }\n\
	        float getDepth(in vec4 depth){\n\
	            float z_window = czm_unpackDepth(depth);\n\
	            z_window = czm_reverseLogDepth(z_window);\n\
	            float n_range = czm_depthRange.near;\n\
	            float f_range = czm_depthRange.far;\n\
	            return (2.0 * z_window - n_range - f_range) / (f_range - n_range);\n\
	        }\n\
	        bool isTJX(vec2 uv,float lw){\n\
	            vec2 pixelSize = lw / czm_viewport.zw;\n\
	            float dx0 = -pixelSize.x;\n\
	            float dy0 = -pixelSize.y;\n\
	            float dx1 = pixelSize.x;\n\
	            float dy1 = pixelSize.y;\n\
	            \n\
	            vec2 currUV = uv + vec2(dx0, dy0);\n\
	            vec4 currDepth = texture2D(depthTexture, currUV);\n\
	            float depth = getDepth(currDepth);\n\
	            if(depth>=1.0)return true;\n\
	            \n\
	            currUV = uv + vec2(0.0, dy0);\n\
	            currDepth = texture2D(depthTexture, currUV);\n\
	            depth = getDepth(currDepth);\n\
	            if(depth>=1.0)return true;\n\
	            \n\
	            currUV = uv + vec2(dx1, dy0);\n\
	            currDepth = texture2D(depthTexture, currUV);\n\
	            depth = getDepth(currDepth);\n\
	            if(depth>=1.0)return true;\n\
	            \n\
	            currUV = uv + vec2(dx0, 0.0);\n\
	            currDepth = texture2D(depthTexture, currUV);\n\
	            depth = getDepth(currDepth);\n\
	            if(depth>=1.0)return true;\n\
	            \n\
	            currUV = uv + vec2(dx1, 0.0);\n\
	            currDepth = texture2D(depthTexture, currUV);\n\
	            depth = getDepth(currDepth);\n\
	            if(depth>=1.0)return true;\n\
	            \n\
	            currUV = uv + vec2(dx0, dy1);\n\
	            currDepth = texture2D(depthTexture, currUV);\n\
	            depth = getDepth(currDepth);\n\
	            if(depth>=1.0)return true;\n\
	            \n\
	            currUV = uv + vec2(0.0, dy1);\n\
	            currDepth = texture2D(depthTexture, currUV);\n\
	            depth = getDepth(currDepth);\n\
	            if(depth>=1.0)return true;\n\
	            \n\
	            currUV = uv + vec2(dx1, dy1);\n\
	            currDepth = texture2D(depthTexture, currUV);\n\
	            depth = getDepth(currDepth);\n\
	            if(depth>=1.0)return true;\n\
	            \n\
	            return false;\n\
	        }\n\
	        void main(){\n\
	            \n\
	            \n\
	            vec4 color = texture2D(colorTexture, v_textureCoordinates);\n\
	            if(height>14102.0){\n\
	                gl_FragColor = color;\n\
	                return;\n\
	            }\n\
	            vec4 currD = texture2D(depthTexture, v_textureCoordinates);\n\
	            if(currD.r>=1.0){\n\
	                gl_FragColor = color;\n\
	                return;\n\
	            }\n\
	            float depth = getDepth(currD);\n\
	            vec4 positionEC = toEye(v_textureCoordinates, depth);\n\
	            vec3 dx = dFdx(positionEC.xyz);\n\
	            vec3 dy = dFdy(positionEC.xyz);\n\
	            vec3 normal = normalize(cross(dx,dy));\n\
	            \n\
	            if(strokeType.y||strokeType.z){\n\
	                vec4 wp = czm_inverseView * positionEC;\n\
	                if(distance(wp.xyz,cameraPos)>mbDis){\n\
	                    gl_FragColor = color;\n\
	                }else{\n\
	                    float dotNum = abs(dot(normal,normalize(positionEC.xyz)));\n\
	                    if(dotNum<0.05){\n\
	                        gl_FragColor = vec4(bjColor,1.0);\n\
	                        return;\n\
	                    }\n\
	                }\n\
	            }\n\
	            if(strokeType.x||strokeType.z){\n\
	                bool tjx = isTJX(v_textureCoordinates,lineWidth);\n\
	                if(tjx){\n\
	                    gl_FragColor = vec4(tjxColor,1.0);\n\
	                    return;\n\
	                }\n\
	            }\n\
	            gl_FragColor = color;\n\
	        }\n\
	        ";
	        }
	    }]);

	    return PostProcessEffects;
	}();

	exports.default = PostProcessEffects;

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _PostProcessEffects = __webpack_require__(95);

	var _PostProcessEffects2 = _interopRequireDefault(_PostProcessEffects);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var EffectRain = function (_Cesium$PostProcessSt) {
	    _inherits(EffectRain, _Cesium$PostProcessSt);

	    function EffectRain(scale) {
	        _classCallCheck(this, EffectRain);

	        var _scale = Cesium.defaultValue(scale, 1.0);
	        var snow = {
	            fragmentShader: _PostProcessEffects2.default.FS_RAIN,
	            uniforms: {
	                u_scale: _scale
	            }
	        };

	        var _this = _possibleConstructorReturn(this, (EffectRain.__proto__ || Object.getPrototypeOf(EffectRain)).call(this, snow));

	        _this._scale = _scale;
	        return _this;
	    }

	    _createClass(EffectRain, [{
	        key: "scale",
	        get: function get() {
	            return this._scale;
	        },
	        set: function set(val) {
	            this._scale = val;
	        }
	    }]);

	    return EffectRain;
	}(Cesium.PostProcessStage);

	exports.default = EffectRain;

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _PostProcessEffects = __webpack_require__(95);

	var _PostProcessEffects2 = _interopRequireDefault(_PostProcessEffects);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var EffectScan = function (_Cesium$PostProcessSt) {
	    _inherits(EffectScan, _Cesium$PostProcessSt);

	    function EffectScan(viewer, center, maxRadius, scanColor, duration) {
	        _classCallCheck(this, EffectScan);

	        if (!Cesium.defined(viewer)) {
	            console.error("viewer 未定义");
	            return _possibleConstructorReturn(_this);
	        }
	        if (!Cesium.defined(center)) {
	            console.error("中心点未定义");
	            return _possibleConstructorReturn(_this);
	        }
	        var _viewer = viewer;

	        var _maxRadius = Cesium.defaultValue(maxRadius, 1500.0);

	        var _scanColor = Cesium.defaultValue(scanColor, Cesium.Color.RED);
	        var _duration = Cesium.defaultValue(duration, 4000.0);
	        var _time = new Date().getTime();

	        var _Cartesian4Center = new Cesium.Cartesian4(center.x, center.y, center.z, 1);

	        var _CartographicCenter1 = Cesium.Cartographic.fromCartesian(center);
	        _CartographicCenter1.height += 500;

	        var _Cartesian3Center1 = Cesium.Cartographic.toCartesian(_CartographicCenter1);
	        var _Cartesian4Center1 = new Cesium.Cartesian4(_Cartesian3Center1.x, _Cartesian3Center1.y, _Cartesian3Center1.z, 1);

	        var _scratchCartesian4Center = new Cesium.Cartesian4();
	        var _scratchCartesian4Center1 = new Cesium.Cartesian4();
	        var _scratchCartesian3Normal = new Cesium.Cartesian3();

	        var scan = {
	            fragmentShader: _PostProcessEffects2.default.FS_SCAN,
	            uniforms: {
	                u_scanCenterEC: function u_scanCenterEC() {
	                    return Cesium.Matrix4.multiplyByVector(_viewer.camera._viewMatrix, _Cartesian4Center, _scratchCartesian4Center);
	                },
	                u_scanPlaneNormalEC: function u_scanPlaneNormalEC() {
	                    var temp = Cesium.Matrix4.multiplyByVector(_viewer.camera._viewMatrix, _Cartesian4Center, _scratchCartesian4Center);
	                    var temp1 = Cesium.Matrix4.multiplyByVector(_viewer.camera._viewMatrix, _Cartesian4Center1, _scratchCartesian4Center1);
	                    _scratchCartesian3Normal.x = temp1.x - temp.x;
	                    _scratchCartesian3Normal.y = temp1.y - temp.y;
	                    _scratchCartesian3Normal.z = temp1.z - temp.z;

	                    Cesium.Cartesian3.normalize(_scratchCartesian3Normal, _scratchCartesian3Normal);
	                    return _scratchCartesian3Normal;
	                },
	                u_radius: function u_radius() {
	                    return _maxRadius * ((new Date().getTime() - _time) % _duration) / _duration;
	                },
	                u_scanColor: _scanColor

	            }
	        };

	        var _this = _possibleConstructorReturn(this, (EffectScan.__proto__ || Object.getPrototypeOf(EffectScan)).call(this, scan));

	        _this.center = center;

	        return _this;
	    }

	    _createClass(EffectScan, [{
	        key: "scanColor",
	        get: function get() {
	            return this._scanColor;
	        },
	        set: function set(val) {
	            this._scanColor = val;
	        }
	    }, {
	        key: "maxRadius",
	        get: function get() {},
	        set: function set(val) {}
	    }]);

	    return EffectScan;
	}(Cesium.PostProcessStage);

	exports.default = EffectScan;

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _PostProcessEffects = __webpack_require__(95);

	var _PostProcessEffects2 = _interopRequireDefault(_PostProcessEffects);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var EffectRadar = function (_Cesium$PostProcessSt) {
	    _inherits(EffectRadar, _Cesium$PostProcessSt);

	    function EffectRadar(viewer, center, radius, scanColor, duration) {
	        _classCallCheck(this, EffectRadar);

	        if (!Cesium.defined(viewer)) {
	            console.error("viewer 未定义");
	            return _possibleConstructorReturn(_this);
	        }
	        if (!Cesium.defined(center)) {
	            console.error("中心点未定义");
	            return _possibleConstructorReturn(_this);
	        }

	        var _radius = Cesium.defaultValue(radius, 1500.0);
	        var _scanColor = Cesium.defaultValue(scanColor, Cesium.Color.RED);
	        var _duration = Cesium.defaultValue(duration, 4000.0);

	        var _Cartesian4Center = new Cesium.Cartesian4(center.x, center.y, center.z, 1);
	        var _CartographicCenter1 = Cesium.Cartographic.fromCartesian(center);
	        _CartographicCenter1.height += 500;
	        var _Cartesian3Center1 = Cesium.Cartographic.toCartesian(_CartographicCenter1);
	        var _Cartesian4Center1 = new Cesium.Cartesian4(_Cartesian3Center1.x, _Cartesian3Center1.y, _Cartesian3Center1.z, 1);

	        var _CartographicCenter2 = Cesium.Cartographic.fromCartesian(center);
	        _CartographicCenter2.longitude += Cesium.Math.toRadians(0.001);
	        var c4 = Cesium.Cartographic.toCartesian(_CartographicCenter2);
	        var _Cartesian4Center2 = new Cesium.Cartesian4(c4.x, c4.y, c4.z, 1);

	        var _RotateQ = new Cesium.Quaternion();
	        var _RotateM = new Cesium.Matrix3();

	        var _time = new Date().getTime();

	        var _scratchCartesian4Center = new Cesium.Cartesian4();
	        var _scratchCartesian4Center1 = new Cesium.Cartesian4();
	        var _scratchCartesian4Center2 = new Cesium.Cartesian4();
	        var _scratchCartesian3Normal = new Cesium.Cartesian3();
	        var _scratchCartesian3Normal1 = new Cesium.Cartesian3();

	        var radarEffect = {
	            fragmentShader: _PostProcessEffects2.default.FS_RADAR,
	            uniforms: {
	                u_scanCenterEC: function u_scanCenterEC() {
	                    return Cesium.Matrix4.multiplyByVector(viewer.camera._viewMatrix, _Cartesian4Center, _scratchCartesian4Center);
	                },
	                u_scanPlaneNormalEC: function u_scanPlaneNormalEC() {
	                    var temp = Cesium.Matrix4.multiplyByVector(viewer.camera._viewMatrix, _Cartesian4Center, _scratchCartesian4Center);
	                    var temp1 = Cesium.Matrix4.multiplyByVector(viewer.camera._viewMatrix, _Cartesian4Center1, _scratchCartesian4Center1);
	                    _scratchCartesian3Normal.x = temp1.x - temp.x;
	                    _scratchCartesian3Normal.y = temp1.y - temp.y;
	                    _scratchCartesian3Normal.z = temp1.z - temp.z;

	                    Cesium.Cartesian3.normalize(_scratchCartesian3Normal, _scratchCartesian3Normal);
	                    return _scratchCartesian3Normal;
	                },
	                u_radius: _radius,
	                u_scanLineNormalEC: function u_scanLineNormalEC() {
	                    var temp = Cesium.Matrix4.multiplyByVector(viewer.camera._viewMatrix, _Cartesian4Center, _scratchCartesian4Center);
	                    var temp1 = Cesium.Matrix4.multiplyByVector(viewer.camera._viewMatrix, _Cartesian4Center1, _scratchCartesian4Center1);
	                    var temp2 = Cesium.Matrix4.multiplyByVector(viewer.camera._viewMatrix, _Cartesian4Center2, _scratchCartesian4Center2);

	                    _scratchCartesian3Normal.x = temp1.x - temp.x;
	                    _scratchCartesian3Normal.y = temp1.y - temp.y;
	                    _scratchCartesian3Normal.z = temp1.z - temp.z;

	                    Cesium.Cartesian3.normalize(_scratchCartesian3Normal, _scratchCartesian3Normal);

	                    _scratchCartesian3Normal1.x = temp2.x - temp.x;
	                    _scratchCartesian3Normal1.y = temp2.y - temp.y;
	                    _scratchCartesian3Normal1.z = temp2.z - temp.z;

	                    var tempTime = (new Date().getTime() - _time) % _duration / _duration;
	                    Cesium.Quaternion.fromAxisAngle(_scratchCartesian3Normal, tempTime * Cesium.Math.PI * 2, _RotateQ);
	                    Cesium.Matrix3.fromQuaternion(_RotateQ, _RotateM);
	                    Cesium.Matrix3.multiplyByVector(_RotateM, _scratchCartesian3Normal1, _scratchCartesian3Normal1);
	                    Cesium.Cartesian3.normalize(_scratchCartesian3Normal1, _scratchCartesian3Normal1);
	                    return _scratchCartesian3Normal1;
	                },
	                u_scanColor: _scanColor
	            }
	        };

	        return _possibleConstructorReturn(this, (EffectRadar.__proto__ || Object.getPrototypeOf(EffectRadar)).call(this, radarEffect));
	    }

	    _createClass(EffectRadar, [{
	        key: "scanColor",
	        get: function get() {
	            return this._scanColor;
	        },
	        set: function set(val) {
	            this._scanColor = val;
	        }
	    }, {
	        key: "maxRadius",
	        get: function get() {},
	        set: function set(val) {}
	    }]);

	    return EffectRadar;
	}(Cesium.PostProcessStage);

	exports.default = EffectRadar;

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _PostProcessEffects = __webpack_require__(95);

	var _PostProcessEffects2 = _interopRequireDefault(_PostProcessEffects);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Skyline = function (_Cesium$PostProcessSt) {
	    _inherits(Skyline, _Cesium$PostProcessSt);

	    function Skyline(skylineOption) {
	        _classCallCheck(this, Skyline);

	        if (!Cesium.defined(skylineOption)) {
	            console.error("skylineOption 未定义");
	            return _possibleConstructorReturn(_this);
	        }

	        var _cameraPos = skylineOption.viewer.scene.camera.position;

	        var skyline = {
	            fragmentShader: _PostProcessEffects2.default.FS_STROKE,
	            uniforms: {
	                height: function height() {
	                    return Cesium.Cartographic.fromCartesian(_cameraPos).height;
	                },
	                lineWidth: function lineWidth() {
	                    return skylineOption.width;
	                },
	                strokeType: function strokeType() {
	                    return skylineOption.strokeType;
	                },
	                tjxColor: function tjxColor() {
	                    return skylineOption.color;
	                },
	                bjColor: function bjColor() {
	                    return skylineOption.bjColor;
	                },
	                cameraPos: function cameraPos() {
	                    return _cameraPos;
	                },
	                mbDis: function mbDis() {
	                    return skylineOption.strokeDistance;
	                }
	            }
	        };

	        var _this = _possibleConstructorReturn(this, (Skyline.__proto__ || Object.getPrototypeOf(Skyline)).call(this, skyline));

	        _this.skylineOption = skylineOption;

	        return _this;
	    }

	    return Skyline;
	}(Cesium.PostProcessStage);

	exports.default = Skyline;

/***/ }),
/* 100 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var SkylineOption = function () {
	    function SkylineOption(viewer) {
	        _classCallCheck(this, SkylineOption);

	        this._viewer = viewer;
	        this._width = 2;
	        this._bjColor = Cesium.Color.RED;
	        this._strokeDistance = 500;
	        this._color = Cesium.Color.RED;
	        this._strokeType = new Cesium.Cartesian3(1, 0, 0);
	    }

	    _createClass(SkylineOption, [{
	        key: "viewer",
	        get: function get() {
	            return this._viewer;
	        }
	    }, {
	        key: "width",
	        get: function get() {
	            return this._width;
	        },
	        set: function set(val) {
	            this._width = val;
	        }
	    }, {
	        key: "strokeType",
	        get: function get() {
	            return this._strokeType;
	        }
	    }, {
	        key: "enabeEdge",
	        get: function get() {
	            return this._strokeType.x == 1 && this._strokeType.y == 1 && this._strokeType.z == 1 ? true : false;
	        },
	        set: function set(val) {
	            val ? this._strokeType = new Cesium.Cartesian3(1, 1, 1) : this._strokeType = new Cesium.Cartesian3(1, 0, 0);
	        }
	    }, {
	        key: "bjColor",
	        get: function get() {
	            return this._bjColor;
	        },
	        set: function set(val) {
	            this._bjColor = val;
	        }
	    }, {
	        key: "color",
	        get: function get() {
	            return this._color;
	        },
	        set: function set(val) {
	            this._color = val;
	        }
	    }, {
	        key: "strokeDistance",
	        get: function get() {
	            return this._strokeDistance;
	        },
	        set: function set(val) {
	            this._strokeDistance = val;
	        }
	    }]);

	    return SkylineOption;
	}();

	exports.default = SkylineOption;

/***/ }),
/* 101 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/*
	 * 作者：zhuwz
	 * 描述:地下模式
	 * 日期：2019.5.16
	 */
	var Underground = function () {
	    function Underground(viewer, option) {
	        _classCallCheck(this, Underground);

	        this._viewer = viewer;
	        var n = Cesium.defaultValue(option, {});
	        this._depth = Cesium.defaultValue(n.depth, 500);
	        this._alpha = Cesium.defaultValue(n.alpha, 0.5);
	        this.enable = Cesium.defaultValue(n.enable, false);
	        var GlobeSurfaceOption = Cesium.GlobeSurfaceOption;
	        this._underGroundOpt = GlobeSurfaceOption ? GlobeSurfaceOption.underGround : undefined;
	    }

	    /**
	     * 获取或设置地表透明度
	     * @type number
	     *
	     * @default 0.5
	     */


	    _createClass(Underground, [{
	        key: "_resetLayersAlpha",
	        value: function _resetLayersAlpha(alphas) {
	            for (var t = this._viewer.imageryLayers._layers, i = 0, a = t.length; i < a; i++) {
	                t[i].alpha = alphas[i];
	            }
	        }
	    }, {
	        key: "_updateImageryLayersAlpha",
	        value: function _updateImageryLayersAlpha(alpha) {
	            for (var t = this._viewer.imageryLayers._layers, i = 0, a = t.length; i < a; i++) {
	                t[i].alpha = alpha;
	            }
	        }
	    }, {
	        key: "_historyOpts",
	        value: function _historyOpts() {
	            var e = {};
	            e.alpha = [];
	            for (var t = this._viewer.imageryLayers._layers, i = 0, a = t.length; i < a; i++) {
	                e.alpha.push(t[i].alpha);
	            }
	            e.highDynamicRange = Cesium.clone(this._viewer.scene.highDynamicRange), e.skyShow = Cesium.clone(this._viewer.scene.skyAtmosphere.show), e.skyBoxShow = Cesium.clone(this._viewer.scene.skyBox.show), e.depthTest = Cesium.clone(this._viewer.scene.globe.depthTestAgainstTerrain), this._viewer.scene.globe._surface && this._viewer.scene.globe._surface._tileProvider && this._viewer.scene.globe._surface._tileProvider._renderState && (e.blending = Cesium.clone(this._viewer.scene.globe._surface._tileProvider._renderState.blending)), this._oldViewOpts = e;
	        }
	    }, {
	        key: "open",
	        value: function open() {
	            if (!this._underGroundOpt) {
	                return;
	            }

	            if (!this._enable) {
	                this._enable = true;
	                this._historyOpts();
	                this._updateImageryLayersAlpha(this._alpha);
	                var e = this._viewer;

	                this._underGroundOpt.enableSkirt = true;
	                this._underGroundOpt.enabled = true;
	                this._underGroundOpt.cullFace = null;
	                this._underGroundOpt.enableDepth = this._depth;
	                e.scene.globe.baseColor = new Cesium.Color(0, 0, 0, 0);
	                e.scene.globe.depthTestAgainstTerrain = true;
	                e.scene.highDynamicRange = false;
	                e.scene.skyAtmosphere.show = false;
	                e.scene.skyBox.show = false;
	            }
	        }
	    }, {
	        key: "close",
	        value: function close() {
	            if (this._enable) {
	                this._enable = false;
	                this._resetLayersAlpha(this._oldViewOpts.alpha);
	                var e = this._viewer;

	                this._underGroundOpt.enableSkirt = false;
	                this._underGroundOpt.enabled = false;
	                this._underGroundOpt.cullFace = undefined;

	                e.scene.globe.depthTestAgainstTerrain = this._oldViewOpts.depthTest;
	                e.scene.skyBox.show = this._oldViewOpts.skyBoxShow;
	                e.scene.highDynamicRange = this._oldViewOpts.highDynamicRange;
	                e.scene.skyAtmosphere.show = this._oldViewOpts.skyShow;
	            }
	        }
	    }, {
	        key: "destroy",
	        value: function destroy() {
	            delete this._viewer;
	            delete this._alpha;
	            delete this._depth;
	            delete this._enable;
	            delete this._oldViewOpts;
	        }
	    }, {
	        key: "alpha",
	        get: function get() {
	            return this._alpha;
	        },
	        set: function set(val) {
	            this._alpha = val;
	            this._updateImageryLayersAlpha(val);
	        }

	        /**
	         * 地表透明深度
	         * @type number
	         *
	         * @default 500
	         */

	    }, {
	        key: "depth",
	        get: function get() {
	            return this._depth;
	        },
	        set: function set(val) {
	            this._depth = val;
	            this._underGroundOpt.enableDepth = val;
	        }
	    }]);

	    return Underground;
	}();

	exports.default = Underground;

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _TerrainClipPlane = __webpack_require__(103);

	var _TerrainClipPlane2 = _interopRequireDefault(_TerrainClipPlane);

	var _Config = __webpack_require__(26);

	var _Config2 = _interopRequireDefault(_Config);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * 挖地
	 */
	var GroundClipping = function () {

	    /**
	     * 构造函数
	     * @param viewer 地理画布
	     */
	    function GroundClipping(viewer) {
	        _classCallCheck(this, GroundClipping);

	        this.viewer = viewer;
	        this._height = 100;
	        this.terrainClipPlan = null;
	        this._path = [];
	    }

	    /**
	     * 挖地路径（经纬高）
	     */


	    _createClass(GroundClipping, [{
	        key: "add",


	        /**
	         * 初始化挖地 
	         * @param path 路径数据
	         * @param height 挖坑深度
	         * @param wallImg 坑壁图片
	         * @param bottomImg 坑底图片
	         */
	        value: function add(path) {
	            var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;

	            if (!this.terrainClipPlan) {
	                this.terrainClipPlan = new _TerrainClipPlane2.default(this.viewer, {
	                    height: height,
	                    splitNum: 10000,
	                    wallImg: _Config2.default.getResource('Assets/Images/excavate_side_min.jpg'),
	                    bottomImg: _Config2.default.getResource('Assets/Images/excavate_side_min.jpg')
	                });
	            }
	            this._height = height;
	            this.terrainClipPlan._height = height;
	            this.polygon = path;
	        }

	        /**
	         * 获取挖坑路径数据
	         * @param path 挖坑路径
	         */

	    }, {
	        key: "getPositionsData",
	        value: function getPositionsData(path) {
	            var array = [];
	            for (var i = 0; i < path.length; i++) {
	                var item = path[i];
	                var lon = item.lon;
	                var lat = item.lat;
	                var alt = item.alt;
	                var p = Cesium.Cartesian3.fromDegrees(lon, lat, alt);
	                array.push({
	                    x: p.x,
	                    y: p.y,
	                    z: p.z
	                });
	            }
	            return array;
	        }

	        /**
	         * 每次设置属性之后需要刷新
	         */

	    }, {
	        key: "updateData",
	        value: function updateData() {
	            this.terrainClipPlan.updateData(this._path);
	        }

	        /**
	         * 清除
	         */

	    }, {
	        key: "open",
	        value: function open() {
	            this.updateData();
	        }
	        /**
	         * 清除
	         */

	    }, {
	        key: "close",
	        value: function close() {
	            this.terrainClipPlan.clear();
	        }
	    }, {
	        key: "polygon",
	        get: function get() {
	            return this._path;
	        },
	        set: function set(value) {
	            this._path = value;
	            this.updateData();
	        }

	        /**
	         * 高度
	         */

	    }, {
	        key: "height",
	        get: function get() {
	            return this._height;
	        },
	        set: function set(value) {
	            this._height = value;
	            this.terrainClipPlan._height = value;
	            this.updateData();
	        }
	    }]);

	    return GroundClipping;
	}();

	exports.default = GroundClipping;

/***/ }),
/* 103 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var TerrainClipPlane = function () {
	    function TerrainClipPlane(viewer, opt) {
	        _classCallCheck(this, TerrainClipPlane);

	        this.viewer = viewer;
	        this.options = opt || {};
	        this._positions = opt.positions;
	        this._height = this.options.height || 0;
	        this.bottomImg = opt.bottomImg;
	        this.wallImg = opt.wallImg;
	        this.splitNum = Cesium.defaultValue(opt.splitNum, 50);
	        this._positions && this._positions.length > 0 && this.updateData(this._positions);
	        this.excavateMinHeight = 99999;
	    }

	    _createClass(TerrainClipPlane, [{
	        key: "updateData",
	        value: function updateData(positions) {
	            this.clear();

	            var t = [],
	                i = positions.length,
	                a = new Cesium.Cartesian3(),
	                n = Cesium.Cartesian3.subtract(positions[0], positions[1], a);
	            n = n.x > 0;
	            this.excavateMinHeight = 9999;
	            for (var r = 0; r < i; ++r) {
	                var s = (r + 1) % i,
	                    l = Cesium.Cartesian3.midpoint(positions[r], positions[s], new Cesium.Cartesian3()),
	                    u = Cesium.Cartographic.fromCartesian(positions[r]),
	                    c = this.viewer.scene.globe.getHeight(u) || u.height;
	                c < this.excavateMinHeight && (this.excavateMinHeight = c);
	                var d,
	                    h = Cesium.Cartesian3.normalize(l, new Cesium.Cartesian3());
	                d = n ? Cesium.Cartesian3.subtract(positions[r], l, new Cesium.Cartesian3()) : Cesium.Cartesian3.subtract(positions[s], l, new Cesium.Cartesian3()), d = Cesium.Cartesian3.normalize(d, d);
	                var f = Cesium.Cartesian3.cross(d, h, new Cesium.Cartesian3());
	                f = Cesium.Cartesian3.normalize(f, f);
	                var p = new Cesium.Plane(f, 0),
	                    m = Cesium.Plane.getPointDistance(p, l);
	                t.push(new Cesium.ClippingPlane(f, m));
	            }
	            this.viewer.scene.globe.clippingPlanes = new Cesium.ClippingPlaneCollection({
	                modelMatrix: Cesium.Matrix4.IDENTITY,
	                planes: t,
	                edgeWidth: 1,
	                edgeColor: Cesium.Color.RED,
	                enabled: !0
	            });
	            this._prepareWell(positions);
	            this._createWell(this.wellData);
	        }
	    }, {
	        key: "_prepareWell",
	        value: function _prepareWell(e) {
	            var t = this.splitNum,
	                i = e.length;
	            if (0 != i) {
	                for (var a = this.excavateMinHeight - this.height, n = [], r = [], s = [], l = 0; l < i; l++) {
	                    var u = l == i - 1 ? 0 : l + 1,
	                        c = Cesium.Cartographic.fromCartesian(e[l]),
	                        d = Cesium.Cartographic.fromCartesian(e[u]),
	                        h = [c.longitude, c.latitude],
	                        f = [d.longitude, d.latitude];

	                    0 == l && (s.push(new Cesium.Cartographic(h[0], h[1])), r.push(Cesium.Cartesian3.fromRadians(h[0], h[1], a)), n.push(Cesium.Cartesian3.fromRadians(h[0], h[1], 0)));

	                    for (var p = 1; p <= t; p++) {
	                        var m = Cesium.Math.lerp(h[0], f[0], p / t),
	                            g = Cesium.Math.lerp(h[1], f[1], p / t);
	                        l == i - 1 && p == t || (s.push(new Cesium.Cartographic(m, g)), r.push(Cesium.Cartesian3.fromRadians(m, g, a)), n.push(Cesium.Cartesian3.fromRadians(m, g, 0)));
	                    }
	                }
	                this.wellData = {
	                    lerp_pos: s,
	                    bottom_pos: r,
	                    no_height_top: n
	                };
	            }
	        }
	    }, {
	        key: "_createWell",
	        value: function _createWell(e) {
	            if (Boolean(this.viewer.terrainProvider._layers)) {
	                var t = this;
	                this._createBottomSurface(e.bottom_pos);
	                var i = Cesium.sampleTerrainMostDetailed(this.viewer.terrainProvider, e.lerp_pos);
	                Cesium.when(i, function (i) {
	                    for (var a = i.length, n = [], r = 0; r < a; r++) {
	                        var s = Cesium.Cartesian3.fromRadians(i[r].longitude, i[r].latitude, i[r].height);
	                        n.push(s);
	                    }
	                    t._createWellWall(e.bottom_pos, n);
	                });
	            } else {
	                this._createBottomSurface(e.bottom_pos);
	                this._createWellWall(e.bottom_pos, e.no_height_top);
	            }
	        }
	    }, {
	        key: "_getMinHeight",
	        value: function _getMinHeight(e) {
	            var minHeight = 5000000;
	            var minPoint = null;
	            for (var i = 0; i < e.length; i++) {
	                var height = e[i]['z'];
	                if (height < minHeight) {
	                    minHeight = height;
	                    minPoint = this._ellipsoidToLonLat(e[i]);
	                }
	            }
	            return minPoint.altitude;
	        }
	    }, {
	        key: "_ellipsoidToLonLat",
	        value: function _ellipsoidToLonLat(c) {
	            var ellipsoid = this.viewer.scene.globe.ellipsoid;
	            var cartesian3 = new Cesium.Cartesian3(c.x, c.y, c.z);
	            var cartographic = ellipsoid.cartesianToCartographic(cartesian3);
	            var lat = Cesium.Math.toDegrees(cartographic.latitude);
	            var lng = Cesium.Math.toDegrees(cartographic.longitude);
	            var alt = cartographic.height;
	            return {
	                longitude: lng,
	                latitude: lat,
	                altitude: alt
	            };
	        }
	    }, {
	        key: "_createWellWall",
	        value: function _createWellWall(e, t) {
	            var minHeight = this._getMinHeight(e);
	            var maxHeights = [];
	            var minHeights = [];
	            for (var i = 0; i < t.length; i++) {
	                maxHeights.push(this._ellipsoidToLonLat(t[i]).altitude);
	                minHeights.push(minHeight);
	            }
	            var wall = new Cesium.WallGeometry({
	                positions: t,
	                maximumHeights: maxHeights,
	                minimumHeights: minHeights
	            });
	            var geometry = Cesium.WallGeometry.createGeometry(wall);
	            var a = new Cesium.Material({
	                fabric: {
	                    type: "Image",
	                    uniforms: {
	                        image: this.wallImg
	                    }
	                }
	            }),
	                n = new Cesium.MaterialAppearance({
	                translucent: !1,
	                flat: !0,
	                material: a
	            });
	            this.wellWall = new Cesium.Primitive({
	                geometryInstances: new Cesium.GeometryInstance({
	                    geometry: geometry,
	                    attributes: {
	                        color: Cesium.ColorGeometryInstanceAttribute.fromColor(Cesium.Color.GREY)
	                    },
	                    id: "PitWall"
	                }),
	                appearance: n,
	                asynchronous: !1
	            }), this.viewer.scene.primitives.add(this.wellWall);
	        }
	    }, {
	        key: "_createBottomSurface",
	        value: function _createBottomSurface(e) {
	            if (e.length) {
	                var minHeight = this._getMinHeight(e);
	                var positions = [];
	                for (var _i = 0; _i < e.length; _i++) {
	                    var p = this._ellipsoidToLonLat(e[_i]);
	                    positions.push(p.longitude);
	                    positions.push(p.latitude);
	                    positions.push(minHeight);
	                }

	                var polygon = new Cesium.PolygonGeometry({
	                    polygonHierarchy: new Cesium.PolygonHierarchy(Cesium.Cartesian3.fromDegreesArrayHeights(positions)),
	                    perPositionHeight: true
	                });
	                var geometry = Cesium.PolygonGeometry.createGeometry(polygon);

	                var i = new Cesium.Material({
	                    fabric: {
	                        type: "Image",
	                        uniforms: {
	                            image: this.bottomImg
	                        }
	                    }
	                }),
	                    a = new Cesium.MaterialAppearance({
	                    translucent: !1,
	                    flat: !0,
	                    material: i
	                });
	                this.bottomSurface = new Cesium.Primitive({
	                    geometryInstances: new Cesium.GeometryInstance({
	                        geometry: geometry
	                    }),
	                    appearance: a,
	                    asynchronous: !1
	                }), this.viewer.scene.primitives.add(this.bottomSurface);
	            }
	        }
	    }, {
	        key: "_switchExcavate",
	        value: function _switchExcavate(e) {
	            e ? (this.viewer.scene.globe.material = Cesium.Material.fromType("WaJue"), this.wellWall.show = !0, this.bottomSurface.show = !0) : (this.viewer.scene.globe.material = null, this.wellWall.show = !1, this.bottomSurface.show = !1);
	        }
	    }, {
	        key: "_updateExcavateDepth",
	        value: function _updateExcavateDepth(e) {
	            this.bottomSurface && this.viewer.scene.primitives.remove(this.bottomSurface), this.wellWall && this.viewer.scene.primitives.remove(this.wellWall);
	            for (var t = this.wellData.lerp_pos, i = [], a = t.length, n = 0; n < a; n++) {
	                i.push(Cesium.Cartesian3.fromRadians(t[n].longitude, t[n].latitude, this.excavateMinHeight - e));
	            }this.wellData.bottom_pos = i;
	            this._createWell(this.wellData);
	            this.viewer.scene.primitives.add(this.bottomSurface);
	            this.viewer.scene.primitives.add(this.wellWall);
	        }

	        /**
	         * 清除
	         */

	    }, {
	        key: "clear",
	        value: function clear() {
	            if (this.viewer.scene.globe.clippingPlanes) {
	                this.viewer.scene.globe.clippingPlanes.enabled = false;
	                this.viewer.scene.globe.clippingPlanes.removeAll();
	                this.viewer.scene.globe.clippingPlanes.isDestroyed() || this.viewer.scene.globe.clippingPlanes.destroy();
	                this.viewer.scene.globe.clippingPlanes = null;
	                this.viewer.scene.primitives.remove(this.bottomSurface);
	                this.viewer.scene.primitives.remove(this.wellWall);
	                this.bottomSurface = null;
	                this.wellWall = null;
	                this.viewer.scene.render();
	            }
	        }
	    }, {
	        key: "show",
	        get: function get() {
	            return this._show;
	        },
	        set: function set(val) {
	            this._show = val;
	            if (this.viewer.scene.globe.clippingPlanes) {
	                this.viewer.scene.globe.clippingPlanes.enabled = val;
	                this._switchExcavate(val);
	            }
	        }
	    }, {
	        key: "height",
	        get: function get() {
	            return this._height;
	        },
	        set: function set(val) {
	            this._height = val;
	            this._updateExcavateDepth(val);
	        }
	    }]);

	    return TerrainClipPlane;
	}();

	exports.default = TerrainClipPlane;

/***/ }),
/* 104 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var VisibilityAnalyze = function () {

	  /**
	  * 通视分析构造函数
	  * @method constructor
	  * @param viewer Cesium.Viewer 对象
	   * 
	  */
	  function VisibilityAnalyze(viewer) {
	    _classCallCheck(this, VisibilityAnalyze);

	    this._viewer = viewer;
	    this._scene = viewer.scene;
	    this._camera = this._scene.camera;
	    this.context = this._scene.context;
	    this.entities = [];
	    this.startAnalyze = false;
	    this._showDome = true;
	    this._offsetDist = 0.2;
	    this.activeShapePoints = [];
	    this.defaultOption = {
	      terrainShadows: this._viewer.terrainShadows,
	      depthTestAgainstTerrain: this._scene.globe.depthTestAgainstTerrain
	    };
	  }

	  /**
	  * 是否显示视距 
	    * 
	  */


	  _createClass(VisibilityAnalyze, [{
	    key: "reset",
	    value: function reset() {}

	    /**
	    * 开始视域分析
	    * @method open 
	      * 
	    */

	  }, {
	    key: "open",
	    value: function open() {
	      if (this.startAnalyze) return;
	      // this.close();
	      this._viewer.terrainShadows = Cesium.ShadowMode.ENABLED;
	      this.testOn = this._scene.globe.depthTestAgainstTerrain;
	      if (!this.testOn) {
	        this._scene.globe.depthTestAgainstTerrain = true;
	      }
	      this._initialiseHandlers();
	      this.startAnalyze = true;
	    }
	    /**
	    * 结束视域分析
	    * @method close 
	     * 
	    */

	  }, {
	    key: "close",
	    value: function close() {
	      this.startAnalyze = false;
	      this.cameraPosition = null;

	      if (this.handler) {
	        this.handler.destroy();
	        this.handler = null;
	      }

	      if (this._scene.shadowMap) this._scene.shadowMap.enabled = false;

	      //移除entity对象
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;

	      try {
	        for (var _iterator = this.entities[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var item = _step.value;

	          this._viewer.entities.remove(item);
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }

	      this.entities = [];
	      this.viewPoint = undefined;
	      this.pointLightCamera = undefined;

	      this._viewer.terrainShadows = this.defaultOption.terrainShadows;
	      this._scene.globe.depthTestAgainstTerrain = this.defaultOption.depthTestAgainstTerrain;
	    }

	    /**
	    * 设置中心点及半径
	    * @method setPosition 
	      * 
	    */

	  }, {
	    key: "setPosition",
	    value: function setPosition(point, distance) {
	      var self = this;
	      if (!this.viewPoint) {
	        this._scene.globe.depthTestAgainstTerrain = true;
	        var showDome = new Cesium.CallbackProperty(function () {
	          return self._showDome;
	        }, false);

	        var getPosition = new Cesium.CallbackProperty(function () {
	          return self.viewPoint ? self.viewPoint : new Cesium.Cartesian3();
	        }, false);

	        //视点Entity
	        this.entities.push(this._viewer.entities.add({
	          name: 'Dome',
	          position: getPosition,
	          ellipsoid: {
	            radii: new Cesium.Cartesian3(distance, distance, distance),
	            maximumCone: Cesium.Math.PI_OVER_TWO,
	            fill: false,
	            show: showDome,
	            outlineColor: Cesium.Color.WHITE.withAlpha(0.3),
	            outlineWidth: 4,
	            slicePartitions: 96,
	            stackPartitions: 96,
	            outline: true
	          }
	        }));
	      }
	      this.viewPoint = point;
	      this.distance = distance;
	      this._createViewShad(point);
	    }

	    //鼠标事件

	  }, {
	    key: "_initialiseHandlers",
	    value: function _initialiseHandlers() {
	      var _this = this;

	      this.handler = new Cesium.ScreenSpaceEventHandler(this._scene.canvas);
	      this.handler.setInputAction(function (movement) {
	        if (!_this.startAnalyze) return;
	        if (_this.cameraPosition == null) return;

	        var newPos = _this._scene.pickPosition(movement.endPosition);

	        //更新位置
	        if (Cesium.defined(newPos)) {
	          if (_this.activeShapePoints.length != 1) _this.activeShapePoints.pop();
	          _this.activeShapePoints.push(newPos);

	          var distance = Cesium.Cartesian3.distance(_this.activeShapePoints[0], _this.activeShapePoints[1]);
	          _this.shadowMap._pointLightRadius = distance;
	        }
	      }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);

	      this.handler.setInputAction(function (movement) {
	        if (_this.startAnalyze && _this.cameraPosition == null) {
	          var pos = _this._scene.pickPosition(movement.position);
	          if (pos) {
	            //移除entity对象
	            var _iteratorNormalCompletion2 = true;
	            var _didIteratorError2 = false;
	            var _iteratorError2 = undefined;

	            try {
	              for (var _iterator2 = _this.entities[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	                var item = _step2.value;

	                _this._viewer.entities.remove(item);
	              }
	            } catch (err) {
	              _didIteratorError2 = true;
	              _iteratorError2 = err;
	            } finally {
	              try {
	                if (!_iteratorNormalCompletion2 && _iterator2.return) {
	                  _iterator2.return();
	                }
	              } finally {
	                if (_didIteratorError2) {
	                  throw _iteratorError2;
	                }
	              }
	            }

	            _this.entities = [];
	            _this.activeShapePoints = [];

	            var ellipsoid = _this._viewer.scene.globe.ellipsoid;

	            var cartographic = ellipsoid.cartesianToCartographic(pos);
	            var lat = Cesium.Math.toDegrees(cartographic.latitude);
	            var lng = Cesium.Math.toDegrees(cartographic.longitude);
	            var alt = cartographic.height + _this._offsetDist;

	            var newpos = Cesium.Cartesian3.fromDegrees(lng, lat, alt);

	            _this.cameraPosition = newpos;
	            _this._createViewShad(newpos);
	            _this._addEntity(newpos);
	            _this.activeShapePoints.push(newpos);
	          }
	        }
	      }, Cesium.ScreenSpaceEventType.LEFT_CLICK);

	      this.handler.setInputAction(function (movement) {
	        _this.startAnalyze = false;
	        _this.cameraPosition = null;
	      }, Cesium.ScreenSpaceEventType.RIGHT_CLICK);
	    }
	  }, {
	    key: "_addEntity",
	    value: function _addEntity(pos) {
	      var self = this;

	      var dynamicPositions = new Cesium.CallbackProperty(function () {

	        return self.activeShapePoints;
	      }, false);

	      var endPoint = new Cesium.CallbackProperty(function () {
	        return self.activeShapePoints[self.activeShapePoints.length - 1];
	      }, false);

	      var distanceLabel = new Cesium.CallbackProperty(function () {
	        var distance = "";
	        if (self.activeShapePoints.length > 1) {
	          var dist = Cesium.Cartesian3.distance(self.activeShapePoints[0], self.activeShapePoints[1]);
	          distance = "距离:" + dist.toFixed(2) + "米";
	        }
	        return distance;
	      }, false);

	      var showDist = new Cesium.CallbackProperty(function () {
	        return self._showDistance;
	      }, false);

	      var radii = new Cesium.CallbackProperty(function () {
	        var distance = new Cesium.Cartesian3();
	        if (self.activeShapePoints.length > 1) {
	          var dist = Cesium.Cartesian3.distance(self.activeShapePoints[0], self.activeShapePoints[1]);
	          distance = new Cesium.Cartesian3(dist, dist, dist);
	        }
	        return distance;
	      }, false);

	      var showDome = new Cesium.CallbackProperty(function () {
	        return self._showDome;
	      }, false);

	      //视点Entity
	      this.entities.push(this._viewer.entities.add({
	        name: 'Dome',
	        position: pos,
	        ellipsoid: {
	          radii: radii,
	          maximumCone: Cesium.Math.PI_OVER_TWO,
	          fill: false,
	          show: showDome,
	          outlineColor: Cesium.Color.WHITE.withAlpha(0.3),
	          outlineWidth: 4,
	          slicePartitions: 96,
	          stackPartitions: 96,
	          outline: true
	        }
	      }));

	      //视点Entity
	      this.entities.push(this._viewer.entities.add({
	        position: pos,
	        point: {
	          pixelSize: 12,
	          color: Cesium.Color.YELLOW,
	          disableDepthTestDistance: Number.POSITIVE_INFINITY
	        }
	      }));
	      //视距线entity
	      this.entities.push(this._viewer.entities.add({
	        polyline: {
	          positions: dynamicPositions,
	          show: showDist,
	          width: 2.0,
	          clampToGround: false,
	          material: Cesium.Color.LIME,
	          disableDepthTestDistance: Number.POSITIVE_INFINITY,
	          classificationType: Cesium.ClassificationType.NONE
	        }

	      }));

	      //距离label entity
	      this.entities.push(this._viewer.entities.add({
	        position: endPoint,
	        label: {
	          show: showDist,
	          text: distanceLabel,
	          pixelOffset: new Cesium.Cartesian2(30, -50),
	          scale: 0.5,
	          font: '32px 微软雅黑',
	          fillColor: Cesium.Color.DEEPSKYBLUE,
	          outlineColor: Cesium.Color.BLACK,
	          outlineWidth: 1.0,
	          showBackground: true,
	          backgroundColor: Cesium.Color.BLACK.withAlpha(0.9),
	          backgroundPadding: new Cesium.Cartesian2(10, 6),
	          disableDepthTestDistance: Number.POSITIVE_INFINITY
	        }

	      }));
	    }

	    //创建shadowmap

	  }, {
	    key: "_createViewShad",
	    value: function _createViewShad(pos) {
	      var _this2 = this;

	      if (!this.pointLightCamera) {
	        this.pointLightCamera = new Cesium.Camera(this._scene);
	        this.pointLightCamera.position = pos;
	        this.shadowOptions = {
	          context: this.context,
	          enabled: true,
	          isPointLight: true,
	          lightCamera: this.pointLightCamera,
	          maximumDistance: 500.0,
	          cascadesEnabled: false
	        };

	        this._scene.shadowMap = new Cesium.ShadowMap(this.shadowOptions);
	        var shadowMap = this._scene.shadowMap;
	        shadowMap.enabled = true;
	        shadowMap.debugShow = true;
	        shadowMap.maximumDistance = 10000;
	        shadowMap._pointLightRadius = 1;
	        shadowMap._fitNearFar = true;
	        shadowMap.darkness = 0.3;
	        shadowMap.debugShow = false;
	        shadowMap.debugFreezeFrame = false;
	        shadowMap.enabled = true;
	        shadowMap.size = 1024;
	        shadowMap.debugCascadeColors = false;
	        shadowMap.softShadows = false;
	        this.shadowMap = shadowMap;

	        // Update render states for when polygon offset values change
	        shadowMap.debugCreateRenderStates();
	        // Force all derived commands to update
	        shadowMap.dirty = true;

	        if (this.normalShaderFun == null) this.normalShaderFun = Cesium.ShadowMapShader.createShadowReceiveFragmentShader;
	        Cesium.ShadowMapShader.createShadowReceiveFragmentShader = function (fs, shadowMap, castShadows, isTerrain, hasTerrainNormal) {
	          return _this2._getUIShader(fs, shadowMap, castShadows, isTerrain, hasTerrainNormal);
	        };
	      }

	      this.pointLightCamera.position = pos;

	      this.shadowMap._pointLightRadius = this.distance ? this.distance : 10;
	    }

	    //更新shader

	  }, {
	    key: "_getUIShader",
	    value: function _getUIShader(fs, shadowMap, castShadows, isTerrain, hasTerrainNormal) {
	      var shader = this.normalShaderFun(fs, shadowMap, castShadows, isTerrain, hasTerrainNormal);

	      var colorFs = "if(visibility == 1.0){ \n          gl_FragColor.rgb *= vec3(0,1,0);  \n        } else { \n          gl_FragColor.rgb *= vec3(1,0,0); ; \n        }\n        ";
	      shader.sources[shader.sources.length - 1] = shader.sources[shader.sources.length - 1].replace('gl_FragColor.rgb *= visibility;', colorFs);
	      return shader;
	    }
	  }, {
	    key: "showDistance",
	    get: function get() {
	      return this._showDistance;
	    },
	    set: function set(val) {
	      this._showDistance = val;
	    }

	    /**
	     * 高度偏移
	     * 
	     */

	  }, {
	    key: "offsetDist",
	    get: function get() {
	      return this._offsetDist;
	    },
	    set: function set(val) {
	      this._offsetDist = val;
	    }
	    /**
	    * 是否显示包围盒 
	      * 
	    */

	  }, {
	    key: "showDome",
	    get: function get() {
	      return this._showDome;
	    },
	    set: function set(val) {
	      this._showDome = val;
	    }
	  }]);

	  return VisibilityAnalyze;
	}();

	exports.default = VisibilityAnalyze;

/***/ }),
/* 105 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/*
	 * 作者：zhuwz
	 * 描述:场景录屏，将场景动画录制为视频导出
	 * 日期：2019.5.16
	 */

	var CanvasRecorder = function () {
	    function CanvasRecorder(canvas, mbps) {
	        _classCallCheck(this, CanvasRecorder);

	        this.recordedBlobs = [];
	        this._videoType = "video/webm";
	        this.mediaRecorder = null;

	        this.stream = canvas.captureStream();
	        if (_typeof(this.stream) == undefined || !this.stream) {
	            return;
	        }
	        this._mbps = mbps || 2.5;

	        this.video = document.createElement('video');
	        this.video.style.display = 'none';
	    }

	    /**
	    * 获取设置录制视频的码率
	    * @type number
	    *
	    * @default 2.5
	    */


	    _createClass(CanvasRecorder, [{
	        key: 'start',


	        /**
	        * 开始录制视频
	        * @type string
	        *
	        * @default video/webm
	        */
	        value: function start() {
	            var _this = this;

	            var types = ["video/webm", 'video/webm,codecs=vp9', 'video/vp8', "video/webm\;codecs=vp8", "video/webm\;codecs=daala", "video/webm\;codecs=h264", "video/mpeg", 'video/mp4'];
	            if (!MediaRecorder.isTypeSupported(this._videoType)) {
	                console.log("No supported type found for MediaRecorder");
	                for (var i in types) {
	                    if (MediaRecorder.isTypeSupported(types[i])) {
	                        this._videoType = types[i];
	                        break;
	                    }
	                }
	            }

	            var options = {
	                mimeType: this._videoType,
	                videoBitsPerSecond: this._mbps * 1000000 // 2.5Mbps
	            };

	            this.recordedBlobs = [];
	            try {
	                this.mediaRecorder = new MediaRecorder(this.stream, options);
	            } catch (e) {
	                alert('MediaRecorder is not supported by this browser.');
	                console.error('Exception while creating MediaRecorder:', e);
	                return;
	            }

	            console.log('Created MediaRecorder', this.mediaRecorder, 'with options', options);

	            this.mediaRecorder.onstop = function () {
	                var superBuffer = new Blob(_this.recordedBlobs, { type: _this.supportedType });
	                _this.video.src = window.URL.createObjectURL(superBuffer);
	            };
	            //this.handleStop;
	            this.mediaRecorder.ondataavailable = function (event) {
	                if (event.data && event.data.size > 0) {
	                    _this.recordedBlobs.push(event.data);
	                }
	            };
	            //this.handleDataAvailable;

	            this.mediaRecorder.start(100); // collect 100ms of data blobs
	            console.log('MediaRecorder started', this.mediaRecorder);
	        }

	        /**
	        * 停止录制视频
	        *
	        */

	    }, {
	        key: 'stop',
	        value: function stop() {
	            this.mediaRecorder.stop();
	            this.video.controls = true;
	        }

	        /**
	         * 保存录制的视频
	         * @param file_name 文件的名称
	         *
	         */

	    }, {
	        key: 'save',
	        value: function save(file_name) {
	            var name = file_name || 'recording.webm';
	            var blob = new Blob(this.recordedBlobs, { type: this.supportedType });
	            var url = window.URL.createObjectURL(blob);
	            var a = document.createElement('a');
	            a.style.display = 'none';
	            a.href = url;
	            a.download = name;
	            document.body.appendChild(a);
	            a.click();
	            setTimeout(function () {
	                document.body.removeChild(a);
	                window.URL.revokeObjectURL(url);
	            }, 100);
	        }
	    }, {
	        key: 'handleDataAvailable',
	        value: function handleDataAvailable(event) {
	            if (event.data && event.data.size > 0) {
	                this.recordedBlobs.push(event.data);
	            }
	        }
	    }, {
	        key: 'handleStop',
	        value: function handleStop(event) {
	            // console.log('Recorder stopped: ', event);
	            var superBuffer = new Blob(this.recordedBlobs, { type: this.supportedType });
	            this.video.src = window.URL.createObjectURL(superBuffer);
	        }
	    }, {
	        key: 'mbps',
	        get: function get() {
	            return this._mbps;
	        },
	        set: function set(val) {
	            this._mbps = val;
	        }

	        /**
	         * 获取设置录制视频的格式
	         * @type string
	         *
	         * @default video/webm
	         */

	    }, {
	        key: 'videoType',
	        get: function get() {
	            return this._videoType;
	        },
	        set: function set(val) {
	            this._videoType = val;
	        }
	    }]);

	    return CanvasRecorder;
	}();

	exports.default = CanvasRecorder;

/***/ }),
/* 106 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var LicManager = function () {
	    function LicManager(viewer) {
	        _classCallCheck(this, LicManager);
	    }

	    _createClass(LicManager, [{
	        key: "licSuccess",
	        value: function licSuccess() {}
	    }, {
	        key: "licFail",
	        value: function licFail() {}
	    }], [{
	        key: "checkLicense",
	        value: function checkLicense() {
	            return true;
	        }
	    }]);

	    return LicManager;
	}();

	exports.default = LicManager;

/***/ }),
/* 107 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	// 信息框
	var tooltip = function () {
	    function tooltip(viewer, className) {
	        _classCallCheck(this, tooltip);

	        this.viewer = viewer;
	        this.className = className || 'popupdialog';
	        this.id = 0;
	        this.ctnList = {};
	    }

	    _createClass(tooltip, [{
	        key: 'add',
	        value: function add(conf) {
	            var _this = this;
	            var geometry = conf.geometry; // 弹窗挂载的位置
	            var id = 'popup_' + ((1 + Math.random()) * 0x10000 | 0).toString(16) + _this.id++;
	            var ctn = document.createElement('div');
	            ctn.className = 'bx-popup-ctn' + (this.className ? ' ' + this.className : '');
	            ctn.id = id;
	            document.getElementById(_this.viewer.container.id).appendChild(ctn);
	            // 测试弹窗内容
	            var testConfig = conf.content;
	            ctn.innerHTML = _this.createHtml(testConfig.header, testConfig.content, testConfig.isclose);
	            _this.ctnList[id] = [geometry, ctn];
	            _this.render();
	            if (!_this.eventListener) {
	                _this.eventListener = function (clock) {
	                    _this.render();
	                };
	                _this.viewer.clock.onTick.addEventListener(_this.eventListener);
	            }

	            if (conf.isclose === false) {} else {
	                if (ctn.getElementsByClassName('bx-popup-close') && ctn.getElementsByClassName('bx-popup-close').length > 0) {
	                    ctn.getElementsByClassName('bx-popup-close')[0].onclick = function () {
	                        _this.close(ctn);
	                    };
	                }
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this = this;
	            for (var c in _this.ctnList) {
	                var position = Cesium.SceneTransforms.wgs84ToWindowCoordinates(_this.viewer.scene, _this.ctnList[c][0]);
	                if (position && position.x && position.y) {
	                    if (Math.abs(position.x) > window.innerWidth * 2 || Math.abs(position.y) > window.innerHeight * 2) {
	                        _this.ctnList[c][1].style.display = 'none';
	                    } else {
	                        _this.ctnList[c][1].style.display = '';
	                        _this.ctnList[c][1].style.left = position.x + 'px';
	                        _this.ctnList[c][1].style.top = position.y + 'px';
	                    }
	                }
	            }
	        }
	    }, {
	        key: 'createHtml',
	        value: function createHtml(header, content, isclose) {
	            if (this.html) {
	                return this.html(header, content);
	            } else {
	                var html = '\n      ' + (isclose === false ? '' : '<div class="bx-popup-close"><i class="iconfont icon-guanbi"></i></div>') + '\n            <div class="divpoint-wrap">\n            <div class="divpoint-border">\n            <div class="divpoint-center">\n            <div class="bx-popup-header-ctn">\n            ' + header + '\n            </div>\n            <div class="bx-popup-content-ctn" >\n            <div class="bx-popup-content" >\n            ' + content + '\n            </div>\n            </div>\n            </div>\n            </div>\n            </div>\n            <div class="directional"></div>\n            ';
	                return html;
	            }
	        }
	    }, {
	        key: 'close',
	        value: function close(e) {
	            e.remove();
	            delete this.ctnList[e.id];
	            if (Object.keys(this.ctnList).length === 0) {
	                this.viewer.clock.onTick.removeEventListener(this.eventListener);
	                this.eventListener = null;
	            }
	        }
	    }, {
	        key: 'closeAll',
	        value: function closeAll(e) {
	            for (var o in this.ctnList) {
	                this.ctnList[o][1].remove();
	            }
	            this.ctnList = {};
	            if (this.eventListener) {
	                this.viewer.clock.onTick.removeEventListener(this.eventListener);
	            }
	            this.eventListener = null;
	        }
	    }]);

	    return tooltip;
	}();

	exports.default = tooltip;

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Config = __webpack_require__(26);

	var _Config2 = _interopRequireDefault(_Config);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var transformEditor = function () {

	    /**
	    * 位置编辑器 构造函数
	    * @method constructor
	    * @param scene Cesium.scene 对象
	    * 
	    */
	    function transformEditor(scene) {
	        _classCallCheck(this, transformEditor);

	        this.scene = scene;
	        this._transformHandler = null;
	        this._starting = false;
	        this.axisModel = null;

	        this._isLeftDown = false;
	        this._meshName = null;
	        this._primitive = null;
	        this._tileset = null;
	        this._transformEditor_Axis = "transformEditor_Axis";
	    }

	    /**
	    * 开始编辑位置
	    * @method start 
	     * 
	    */


	    _createClass(transformEditor, [{
	        key: "start",
	        value: function start() {

	            if (!this._transformHandler) this._transformHandler = new Cesium.ScreenSpaceEventHandler(this.scene.canvas);
	            if (this._starting) return;
	            this._initialEvent();
	            this._starting = true;
	        }
	        /**
	        * 结束编辑
	        * @method stop 
	         * 
	        */

	    }, {
	        key: "stop",
	        value: function stop() {
	            this._starting = false;
	            //移除模型
	            if (this.axisModel) this.scene.primitives.remove(this.axisModel);
	            //销毁事件
	            if (!this._transformHandler) this._transformHandler.destroy();
	            this._ennableNavigation(true);
	        }
	    }, {
	        key: "_ennableNavigation",


	        //屏蔽场景控制器
	        value: function _ennableNavigation(enable) {
	            this.scene.screenSpaceCameraController.enableRotate = enable;
	            this.scene.screenSpaceCameraController.enableTranslate = enable;
	            this.scene.screenSpaceCameraController.enableZoom = enable;
	            this.scene.screenSpaceCameraController.enableTilt = enable;
	            this.scene.screenSpaceCameraController.enableLook = enable;
	        }
	    }, {
	        key: "_initialEvent",
	        value: function _initialEvent() {
	            var _this = this;

	            //鼠标点击事件
	            this._transformHandler.setInputAction(function (data) {
	                _this._handleClick(data);
	            }, Cesium.ScreenSpaceEventType.LEFT_CLICK);

	            //鼠标双击事件
	            this._transformHandler.setInputAction(function (data) {
	                _this._handledbClick(data);
	            }, Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK);

	            this._transformHandler.setInputAction(function (data) {
	                _this._handleleftDown(data);
	            }, Cesium.ScreenSpaceEventType.LEFT_DOWN);

	            this._transformHandler.setInputAction(function (data) {
	                _this._handleleftUp(data);
	            }, Cesium.ScreenSpaceEventType.LEFT_UP);

	            this._transformHandler.setInputAction(function (data) {
	                _this._handleMove(data);
	            }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);
	        }
	    }, {
	        key: "getOffSet",
	        value: function getOffSet(start, end, axis) {
	            var modelMatrix = this._tileset ? this.tileset._root.transform : this._primitive.modelMatrix;
	            var i = Cesium.Matrix4.inverseTransformation(modelMatrix, new Cesium.Matrix4()),
	                n = this.scene.camera.position,
	                r = Cesium.Matrix4.multiplyByPoint(i, n, new Cesium.Cartesian3()),
	                o = Cesium.Matrix4.multiplyByPoint(i, start, new Cesium.Cartesian3()),
	                a = Cesium.Matrix4.multiplyByPoint(i, end, new Cesium.Cartesian3()),
	                c = Cesium.Cartesian3.normalize(Cesium.Cartesian3.subtract(o, r, new Cesium.Cartesian3()), new Cesium.Cartesian3()),
	                d = Cesium.Cartesian3.normalize(Cesium.Cartesian3.subtract(a, r, new Cesium.Cartesian3()), new Cesium.Cartesian3()),
	                h = Cesium.Plane.fromPointNormal(Cesium.Cartesian3.ZERO, axis),
	                f = new Cesium.Ray(r, c),
	                p = new Cesium.Ray(r, d),
	                m = Cesium.IntersectionTests.rayPlane(f, h),
	                g = Cesium.IntersectionTests.rayPlane(p, h);
	            return {
	                start: m,
	                end: g
	            };
	        }
	    }, {
	        key: "_handleMove",
	        value: function _handleMove(a) {
	            if (!this._primitive && !this._tileset || !this._isLeftDown) return;
	            var start = this.scene.pickPosition(a.startPosition);
	            var end = this.scene.pickPosition(a.endPosition);
	            var u = this._tileset ? this.tileset._root.transform : this._primitive.modelMatrix;

	            var self = this;

	            var d = function d(e, n, r) {
	                var o = self.getOffSet(start, end, e),
	                    a = Cesium.Cartesian3.subtract(o.end, o.start, new Cesium.Cartesian3());
	                a[n] = 0, a[r] = 0;
	                var newMatrix = Cesium.Matrix4.multiplyByTranslation(u, a, new Cesium.Matrix4());
	                //console.log(self._primitive.modelMatrix);
	                if (self._tileset) {
	                    self.tileset._root.transform = newMatrix;
	                } else {
	                    self._primitive.modelMatrix = newMatrix;
	                }

	                self.axisModel.modelMatrix = newMatrix;

	                // console.log(self._primitive.modelMatrix);
	            };

	            var h = function h(e, n, r) {
	                var o = self.getOffSet(start, end, e),
	                    a = (o.start[n] * o.end[r] - o.start[r] * o.end[n]) / (o.start[n] * o.end[n] + o.start[r] * o.end[r]),
	                    s = Cesium.Quaternion.fromAxisAngle(e, Math.atan(a)),
	                    l = Cesium.Matrix3.fromQuaternion(s),
	                    d = Cesium.Matrix4.multiplyByMatrix3(u, l, new Cesium.Matrix4());
	                if (self._tileset) {
	                    self.tileset._root.transform = d;
	                } else {
	                    self._primitive.modelMatrix = d;
	                }
	                self.axisModel.modelMatrix = d;
	            };

	            if (this._meshName && end) this._ennableNavigation(false);
	            switch (this._meshName) {
	                case "YArrow_1":
	                    d(Cesium.Cartesian3.UNIT_Z, "y", "z");
	                    break;
	                case "XArrow_1":
	                    d(Cesium.Cartesian3.UNIT_X, "x", "z");
	                    break;
	                case "ZArrow_1":
	                    d(Cesium.Cartesian3.UNIT_Y, "x", "y");
	                    break;
	                case "YAxis_1":
	                    h(Cesium.Cartesian3.UNIT_X, "y", "z");
	                    break;
	                case "XAxis_1":
	                    h(Cesium.Cartesian3.UNIT_Y, "z", "x");
	                    break;
	                case "ZAxis_1":
	                    h(Cesium.Cartesian3.UNIT_Z, "x", "y");
	            }
	        }
	    }, {
	        key: "_handleleftDown",
	        value: function _handleleftDown(t) {
	            this.scene.pickPosition(t.position);
	            var i = this.scene.pick(t.position);
	            if (Cesium.defined(i) && Cesium.defined(i.mesh)) {
	                this._meshName = i.mesh.name, this._isLeftDown = true;
	                this._ennableNavigation(false);
	            }
	        }
	    }, {
	        key: "_handleleftUp",
	        value: function _handleleftUp(t) {
	            this._ennableNavigation(true);
	            this._isLeftDown = false;
	            this._meshName = null;
	        }
	    }, {
	        key: "_handleClick",
	        value: function _handleClick(e) {
	            if (!this._starting || this._tileset) return;
	            var pickedObj = this.scene.pick(e.position);
	            if (Cesium.defined(pickedObj) && pickedObj.primitive) {
	                if (pickedObj.id === this._transformEditor_Axis) return;

	                this._primitive = pickedObj.primitive;

	                var scale = this._primitive.boundingSphere.radius;
	                this._addAXIS(this._primitive.modelMatrix, scale);
	            }
	        }
	    }, {
	        key: "_addAXIS",
	        value: function _addAXIS(modelMatrix, scale) {
	            if (this.axisModel) this.scene.primitives.remove(this.axisModel);
	            this.axisModel = this.scene.primitives.add(Cesium.Model.fromGltf({
	                url: _Config2.default.getResource('Assets/models/AXIS.gltf'),
	                modelMatrix: modelMatrix,
	                scale: scale,
	                id: this._transformEditor_Axis,
	                colorBlendMode: Cesium.ColorBlendMode.HIGHLIGHT
	            }));
	        }
	    }, {
	        key: "_handledbClick",
	        value: function _handledbClick() {
	            this.stop();
	        }
	    }, {
	        key: "_translate",
	        value: function _translate(e, n, r) {
	            var o = c(e),
	                a = Cesium.Cartesian3.subtract(o.end, o.start, new Cesium.Cartesian3());
	            a[n] = 0, a[r] = 0;
	            var s = Cesium.Matrix4.multiplyByTranslation(u, a, new Cesium.Matrix4());
	            t.modelMatrix = s, i.modelMatrix = t.modelMatrix;
	        }
	    }, {
	        key: "tileset",
	        get: function get() {
	            return this._tileset;
	        },
	        set: function set(val) {
	            this._tileset = val;
	            var scale = this._tileset.boundingSphere.radius;
	            this._addAXIS(val._root.transform, scale / 8);
	        }
	    }]);

	    return transformEditor;
	}();

	exports.default = transformEditor;

/***/ }),
/* 109 */
/***/ (function(module, exports) {

	'use strict';

	var fixGltf = function fixGltf(gltf) {
	    if (!gltf.extensionsUsed) {
	        console.log("no use extensionsUsed");
	        return;
	    }

	    var v = gltf.extensionsUsed.indexOf('KHR_technique_webgl');
	    var t = gltf.extensionsRequired.indexOf('KHR_technique_webgl');
	    //console.log("v:"+v);
	    //console.log("t:"+v);
	    // 版本兼容
	    if (v !== -1) {
	        console.log("gltf 1.0版本,修正 KHR_techniques_webgl...");
	        gltf.extensionsRequired.splice(t, 1, 'KHR_techniques_webgl');
	        gltf.extensionsUsed.splice(v, 1, 'KHR_techniques_webgl');
	        gltf.extensions = gltf.extensions || {};
	        gltf.extensions['KHR_techniques_webgl'] = {};
	        gltf.extensions['KHR_techniques_webgl'].programs = gltf.programs;
	        gltf.extensions['KHR_techniques_webgl'].shaders = gltf.shaders;
	        gltf.extensions['KHR_techniques_webgl'].techniques = gltf.techniques;
	        var techniques = gltf.extensions['KHR_techniques_webgl'].techniques;

	        gltf.materials.forEach(function (mat, index) {
	            gltf.materials[index].extensions['KHR_technique_webgl'].values = gltf.materials[index].values;
	            gltf.materials[index].extensions['KHR_techniques_webgl'] = gltf.materials[index].extensions['KHR_technique_webgl'];

	            var vtxfMaterialExtension = gltf.materials[index].extensions['KHR_techniques_webgl'];

	            for (var value in vtxfMaterialExtension.values) {
	                var us = techniques[vtxfMaterialExtension.technique].uniforms;
	                for (var key in us) {
	                    if (us[key] === value) {
	                        vtxfMaterialExtension.values[key] = vtxfMaterialExtension.values[value];
	                        delete vtxfMaterialExtension.values[value];
	                        break;
	                    }
	                }
	            };
	        });

	        techniques.forEach(function (t) {
	            for (var attribute in t.attributes) {
	                var name = t.attributes[attribute];
	                t.attributes[attribute] = t.parameters[name];
	            };

	            for (var uniform in t.uniforms) {
	                var name = t.uniforms[uniform];
	                t.uniforms[uniform] = t.parameters[name];
	            };
	        });
	    }
	};

	// Object.defineProperties(Cesium.Model.prototype, {
	//     _cachedGltf: {
	//         set: function (value) {
	//             this._vtxf_cachedGltf = value;
	//             if (this._vtxf_cachedGltf && this._vtxf_cachedGltf._gltf) {
	//                 fixGltf(this._vtxf_cachedGltf._gltf);
	//             }
	//         },
	//         get: function () {
	//             return this._vtxf_cachedGltf;
	//         }
	//     }
	// });

	Cesium.Model.test = function () {
	    console.log("测试成");
	};

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _matrixEditor = __webpack_require__(111);

	var _matrixEditor2 = _interopRequireDefault(_matrixEditor);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var transformer = function () {
	    function transformer(tileset) {
	        _classCallCheck(this, transformer);

	        this.tileset = tileset;
	        this.tileset._matrixEditor = new _matrixEditor2.default(tileset);
	        this.matrixEditor = this.tileset._matrixEditor;
	    }

	    /**
	     * 获取或设置模型的位置，[经度,纬度,高度].
	     * @memberof transformer.position
	     * @type {Array}
	     */


	    _createClass(transformer, [{
	        key: "position",
	        get: function get() {
	            var pos = this.tileset._root.customTransform.position;
	            var lat = Cesium.Math.toDegrees(pos.latitude);
	            var lon = Cesium.Math.toDegrees(pos.longitude);
	            var alt = pos.height;
	            return [lat, lon, alt];
	        },
	        set: function set(val) {
	            this.matrixEditor.translateTo(val[0], val[1], val[2]);
	        }

	        /**
	         * 获取或设置模型的缩放比例
	         * @memberof transformer.scale
	         * @type {number}
	         */

	    }, {
	        key: "scale",
	        get: function get() {
	            return this.tileset._root.customTransform.scale;
	        },
	        set: function set(val) {
	            this.matrixEditor.scale(val);
	        }

	        /**
	         * 获取或设置模型的旋转参数
	         * @memberof transformer.rotate
	         * @type {Object}
	         */

	    }, {
	        key: "rotate",
	        get: function get() {
	            var rotation = this.tileset._root.customTransform.rotation;
	            return [rotation.x, rotation.y, rotation.z];
	        },
	        set: function set(val) {
	            this.matrixEditor.rotate(val[0], val[1], val[2]);
	        }

	        /**
	         * 获取或设置模型的高度
	         * @memberof transformer.height
	         * @type {Number}
	         */

	    }, {
	        key: "height",
	        get: function get() {
	            var pos = this.tileset._root.customTransform.position;
	            return pos.height;
	        },
	        set: function set(val) {
	            var pos = this.position;
	            this.position = [pos[0], pos[1], val];
	        }
	    }]);

	    return transformer;
	}();

	var clippingTool = function () {
	    function clippingTool(tileset) {
	        _classCallCheck(this, clippingTool);

	        this.tileset = tileset;
	        this.enabled = true;

	        this.edgeStylingEnabled = true;
	        this.edgeWidth = 2.0;
	        this.edgeColor = Cesium.Color.WHITE;
	        this._polygon = [];

	        this._heightPlane = [];
	        this._clipHeight = null;
	        this._rotateX = 0;
	        this._rotateY = 0;
	        this._rotateZ = 0;
	    }

	    _createClass(clippingTool, [{
	        key: "createHeightPlane",
	        value: function createHeightPlane(val) {
	            if (this.tileset.ready) {
	                var clippingPlanes = new Cesium.ClippingPlaneCollection({
	                    planes: [new Cesium.ClippingPlane(new Cesium.Cartesian3(0.0, 0.0, -1.0), val)],
	                    edgeWidth: this.edgeWidth,
	                    edgeColor: this.edgeColor,
	                    enabled: this.enabled
	                });

	                // if (!Cesium.Matrix4.equals(this.tileset.root.transform, Cesium.Matrix4.IDENTITY)) {
	                //     var transformCenter = Cesium.Matrix4.getTranslation(this.tileset.root.transform, new Cesium.Cartesian3());
	                //     var transformCartographic = Cesium.Cartographic.fromCartesian(transformCenter);
	                //     var boundingSphereCartographic = Cesium.Cartographic.fromCartesian(this.tileset.boundingSphere.center);
	                //     var height = boundingSphereCartographic.height - transformCartographic.height;
	                //     clippingPlanes.modelMatrix = Cesium.Matrix4.fromTranslation(new Cesium.Cartesian3(0.0, 0.0, height));
	                // }
	                this.tileset.clippingPlanes = clippingPlanes;
	                var matrix = this.tileset.clippingPlanes.modelMatrix;
	                var rotationx = Cesium.Matrix4.fromRotationTranslation(Cesium.Matrix3.fromRotationY(Cesium.Math.toRadians(this._rotateX)));
	                var rotationy = Cesium.Matrix4.fromRotationTranslation(Cesium.Matrix3.fromRotationX(Cesium.Math.toRadians(this._rotateY)));
	                var rotationz = Cesium.Matrix4.fromRotationTranslation(Cesium.Matrix3.fromRotationX(Cesium.Math.toRadians(this._rotateZ)));
	                Cesium.Matrix4.multiply(matrix, rotationx, matrix);
	                Cesium.Matrix4.multiply(matrix, rotationy, matrix);
	                Cesium.Matrix4.multiply(matrix, rotationz, matrix);
	                this.tileset.clippingPlanes.modelMatrix = matrix;
	            }
	        }
	    }, {
	        key: "createclippingPlanes",
	        value: function createclippingPlanes(points) {

	            var pointsLength = points.length;

	            var clippingPlanes = [];
	            for (var i = 0; i < pointsLength; ++i) {
	                var nextIndex = (i + 1) % pointsLength;
	                var midpoint = Cesium.Cartesian3.add(points[i], points[nextIndex], new Cesium.Cartesian3());
	                midpoint = Cesium.Cartesian3.multiplyByScalar(midpoint, 0.5, midpoint);

	                var up = Cesium.Cartesian3.normalize(midpoint, new Cesium.Cartesian3());
	                var right = Cesium.Cartesian3.subtract(points[nextIndex], midpoint, new Cesium.Cartesian3());
	                right = Cesium.Cartesian3.normalize(right, right);

	                var normal = Cesium.Cartesian3.cross(right, up, new Cesium.Cartesian3());
	                normal = Cesium.Cartesian3.normalize(normal, normal);

	                // Compute distance by pretending the plane is at the origin
	                var originCenteredPlane = new Cesium.Plane(normal, 0.0);
	                var distance = Cesium.Plane.getPointDistance(originCenteredPlane, midpoint);

	                clippingPlanes.push(new Cesium.ClippingPlane(normal, distance));
	            }
	            return clippingPlanes;
	        }

	        /**
	         * 获取或设置模型的裁剪多边形，[经度,纬度,高度].
	         * @memberof clippingTool.polygon
	         * @type {Array}
	         */

	    }, {
	        key: "clear",
	        value: function clear() {
	            this.tileset.clippingPlanes.removeAll();
	            this._polygon = [];
	        }
	    }, {
	        key: "polygon",
	        get: function get() {
	            return this._polygon;
	        },
	        set: function set(val) {
	            if (val.length > 0) {
	                var points = Cesium.Cartesian3.fromDegreesArrayHeights(val);
	                var clippingPlanes = this.createclippingPlanes(points);
	                this.tileset.clippingPlanes = new Cesium.ClippingPlaneCollection({
	                    planes: clippingPlanes,
	                    edgeWidth: this.edgeWidth,
	                    edgeColor: this.edgeColor,
	                    enabled: this.enabled
	                });
	                this._polygon = val;
	            }
	        }

	        /**
	         * 获取或设置模型的裁剪多边形，[经度,纬度,高度].
	         * @memberof clippingTool.polygon
	         * @type {Array}
	         */

	    }, {
	        key: "clipHeight",
	        get: function get() {
	            return this._clipHeight;
	        },
	        set: function set(val) {
	            if (this._heightPlane.length == 0) {
	                if (this.tileset.ready) {
	                    this.createHeightPlane(val);
	                } else {
	                    var that = this;
	                    this.tileset.readyPromise.then(function (tileset) {
	                        that.createHeightPlane(val);
	                    });
	                }
	                this._heightPlane = this.tileset.clippingPlanes;
	            } else {
	                for (var i = 0; i < this._heightPlane.length; ++i) {
	                    var plane = this._heightPlane.get(i);
	                    plane.distance = val;
	                }
	            }
	            this._clipHeight = val;
	        }

	        /**
	         * 获取或设置模型的裁剪面X轴的旋转角度
	         * @memberof clippingTool.rotateX
	         * @type {Number}
	         */

	    }, {
	        key: "rotateX",
	        get: function get() {
	            return this._rotateX;
	        },
	        set: function set(val) {
	            var clippingPlanes = this.tileset.clippingPlanes;
	            if (clippingPlanes) {
	                var matrix = clippingPlanes.modelMatrix;
	                var rotationx = Cesium.Matrix4.fromRotationTranslation(Cesium.Matrix3.fromRotationX(Cesium.Math.toRadians(val)));
	                Cesium.Matrix4.multiply(matrix, rotationx, matrix);
	                clippingPlanes.modelMatrix = matrix;
	            }

	            this._rotateX = val;
	        }

	        /**
	         * 获取或设置模型的裁剪面Y轴的旋转角度
	         * @memberof clippingTool.rotateX
	         * @type {Number}
	         */

	    }, {
	        key: "rotateY",
	        get: function get() {
	            return this._rotateY;
	        },
	        set: function set(val) {
	            var clippingPlanes = this.tileset.clippingPlanes;
	            if (clippingPlanes) {
	                var matrix = clippingPlanes.modelMatrix;
	                var rotationy = Cesium.Matrix4.fromRotationTranslation(Cesium.Matrix3.fromRotationY(Cesium.Math.toRadians(val)));
	                Cesium.Matrix4.multiply(matrix, rotationy, matrix);
	                clippingPlanes.modelMatrix = matrix;
	            }

	            this._rotateY = val;
	        }

	        /**
	        * 获取或设置模型的裁剪面Z轴的旋转角度
	        * @memberof clippingTool.rotateX
	        * @type {Number}
	        */

	    }, {
	        key: "rotateZ",
	        get: function get() {
	            return this._rotateZ;
	        },
	        set: function set(val) {
	            var clippingPlanes = this.tileset.clippingPlanes;
	            if (clippingPlanes) {
	                var matrix = clippingPlanes.modelMatrix;
	                var rotationz = Cesium.Matrix4.fromRotationTranslation(Cesium.Matrix3.fromRotationZ(Cesium.Math.toRadians(val)));
	                Cesium.Matrix4.multiply(matrix, rotationz, matrix);
	                clippingPlanes.modelMatrix = matrix;
	            }
	            this._rotateZ = val;
	        }
	    }]);

	    return clippingTool;
	}();

	Object.defineProperties(Cesium.Cesium3DTileset.prototype, {
	    showBound: {
	        get: function get() {
	            return this._showBound;
	        },
	        set: function set(value) {
	            if (value == this._showBound) return;
	            if (!this.ready && value) {
	                this.readyPromise.then(function (tileset) {
	                    tileset.createBound();
	                });
	                //throw new DeveloperError('The tileset is not loaded.  Use Cesium3DTileset.readyPromise or wait for Cesium3DTileset.ready to be true.');
	            } else {
	                this.setBoundVisible(value);
	            }
	            this._showBound = value;
	        }
	    },
	    boundColor: {
	        get: function get() {
	            return this._showBound;
	        },
	        set: function set(value) {
	            this._showBound = value;
	        }
	    },
	    transformer: {
	        get: function get() {
	            if (!this._transformer) this._transformer = new transformer(this);
	            return this._transformer;
	        }

	    },
	    clippingTool: {
	        get: function get() {
	            if (!this._clippingPolygon) this._clippingPolygon = new clippingTool(this);
	            return this._clippingPolygon;
	        }
	    },
	    maxVal: {
	        get: function get() {
	            return this._maxVal;
	        },
	        set: function set(val) {
	            this._maxVal = val;
	            var conditions = [];
	            var lv1 = this._maxVal - 10;
	            var lv2 = this._maxVal - 20;
	            conditions.push(['${z} >= ' + this._maxVal, "color('red')"]);
	            conditions.push(['${z} >= ' + lv1, "color('yellow')"]);
	            conditions.push(['${z} >= ' + lv2, "color('blue')"]);
	            conditions.push(['true', "color('green')"]);
	            this.style = new Cesium.Cesium3DTileStyle({
	                pointSize: 2.0,
	                color: {
	                    conditions: conditions
	                }
	            });
	        }
	    },
	    psize: {
	        get: function get() {
	            return this._psize;
	        },
	        set: function set(val) {
	            this._psize = val;
	            if (!this.style) {
	                this.style = new Cesium.Cesium3DTileStyle();
	            }
	            this.style.pointSize = val;
	        }
	    }

	});

/***/ }),
/* 111 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var matrixEditor = function () {

	    /**
	    * 位置编辑器 构造函数
	    * @method constructor
	    * @param scene Cesium.scene 对象
	    * 
	    */
	    function matrixEditor(tileset) {
	        _classCallCheck(this, matrixEditor);

	        this.tileset = tileset;
	        this._transformInitialize();
	    }

	    _createClass(matrixEditor, [{
	        key: "rotate",
	        value: function rotate(x, y, z) {
	            var customTransform = this.tileset._root.customTransform;
	            if (x === undefined) {
	                x = customTransform.rotation.x;
	            }

	            if (y === undefined) {
	                y = customTransform.rotation.y;
	            }

	            if (z === undefined) {
	                z = customTransform.rotation.z;
	            }

	            var rotMat3 = Cesium.Matrix3.fromHeadingPitchRoll(new Cesium.HeadingPitchRoll(Cesium.Math.toRadians(z), Cesium.Math.toRadians(y), Cesium.Math.toRadians(x)));
	            var rotMat4 = Cesium.Matrix4.fromRotationTranslation(rotMat3, undefined, undefined);

	            customTransform.matrix.rotation = rotMat4;
	            this._transform();
	            customTransform.rotation.x = x;
	            customTransform.rotation.y = y;
	            this.tileset._root.customTransform.rotation.z = z;
	        }
	    }, {
	        key: "resetRotation",
	        value: function resetRotation() {
	            this.tileset._root.customTransform.matrix.rotation = Cesium.Matrix4.IDENTITY;
	            this.tileset._root.customTransform.rotation = { x: 0, y: 0, z: 0 };
	            this._transform();
	        }
	    }, {
	        key: "scale",
	        value: function scale(s) {
	            var m = Cesium.Matrix4.fromScale(new Cesium.Cartesian3(s, s, s));
	            this.tileset._root.customTransform.matrix.scale = m;
	            this.tileset._root.customTransform.scale = s;
	            this._transform();
	        }
	    }, {
	        key: "resetScale",
	        value: function resetScale() {
	            this.tileset._root.customTransform.matrix.scale = Cesium.Matrix4.IDENTITY;
	            this.tileset._root.customTransform.scale = 1.0;
	            this._transform();
	        }
	    }, {
	        key: "translateTo",
	        value: function translateTo(latitude, longitude, height) {
	            var position = this.tileset._root.customTransform.position;

	            var oldPlace = Cesium.Cartesian3.fromRadians(position.originalLongitude, position.originalLatitude, position.originalHeight);
	            var newPlace = Cesium.Cartesian3.fromDegrees(longitude, latitude, height);
	            var translation = Cesium.Cartesian3.subtract(newPlace, oldPlace, new Cesium.Cartesian3());
	            this.tileset.modelMatrix = Cesium.Matrix4.fromTranslation(translation);
	            //viewer.zoomTo(tileset);

	            position.latitude = Cesium.Math.toRadians(latitude);
	            position.longitude = Cesium.Math.toRadians(longitude);
	            position.height = height;
	        }
	    }, {
	        key: "resetTranslation",
	        value: function resetTranslation() {
	            var pos = this.tileset._root.customTransform.position;
	            pos.latitude = pos.originalLatitude;
	            pos.longitude = pos.originalLongitude;
	            pos.height = pos.originalHeight;
	        }
	    }, {
	        key: "_translate",
	        value: function _translate(x, y, z) {

	            var cartographic = Cesium.Cartographic.fromCartesian(tileset.boundingSphere.center);
	            var surface = Cesium.Cartesian3.fromRadians(cartographic.longitude, cartographic.latitude, 0.0);
	            var offset = Cesium.Cartesian3.fromRadians(cartographic.longitude + y, cartographic.latitude + x, z);
	            var translation = Cesium.Cartesian3.subtract(offset, surface, new Cesium.Cartesian3());

	            Cesium.Matrix4.multiply(this.tileset.modelMatrix, Cesium.Matrix4.fromTranslation(translation), this.tileset.modelMatrix);
	        }
	    }, {
	        key: "_transform",
	        value: function _transform() {
	            var m = new Cesium.Matrix4();

	            Cesium.Matrix4.multiply(this.tileset._root.customTransform.matrix.origin, this.tileset._root.customTransform.matrix.rotation, m);
	            Cesium.Matrix4.multiply(m, this.tileset._root.customTransform.matrix.scale, m);
	            Cesium.Matrix4.multiply(m, this.tileset._root.customTransform.matrix.translation, this.tileset._root.transform);
	        }
	    }, {
	        key: "_transformInitialize",
	        value: function _transformInitialize() {
	            var cartographic = Cesium.Cartographic.fromCartesian(this.tileset.boundingSphere.center);
	            this.tileset._root.customTransform = {
	                matrix: {
	                    origin: this.tileset._root.transform.clone(),
	                    rotation: Cesium.Matrix4.IDENTITY,
	                    translation: Cesium.Matrix4.IDENTITY,
	                    scale: Cesium.Matrix4.IDENTITY
	                },
	                rotation: {
	                    x: 0,
	                    y: 0,
	                    z: 0
	                },
	                scale: 1.0,
	                position: {
	                    originalLatitude: cartographic.latitude,
	                    originalLongitude: cartographic.longitude,
	                    originalHeight: cartographic.height,
	                    height: cartographic.height,
	                    latitude: cartographic.latitude,
	                    longitude: cartographic.longitude
	                }
	            };
	        }
	    }]);

	    return matrixEditor;
	}();

	exports.default = matrixEditor;

/***/ }),
/* 112 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var Cartesian2 = Cesium.Cartesian2,
	    DeveloperError = Cesium.DeveloperError,
	    WebMercatorTilingScheme = Cesium.WebMercatorTilingScheme,
	    ImageryProvider = Cesium.ImageryProvider;

	function BaiDuImageryProvider(t) {

	    var e;
	    var r = 33746824,
	        a = 33554054;
	    switch (t.layer) {
	        case "vec":
	        default:
	            e = "http://online{s}.map.bdimg.com/onlinelabel/?qt=tile&x={x}&y={y}&z={z}&styles=" + (t.bigfont ? "ph" : "pl") + "&scaler = 1 & p = 1";
	            break;
	        case "img_d":
	            e = "http://shangetu{s}.map.bdimg.com/it/u=x={x};y={y};z={z};v=009;type=sate&fm=46";
	            break;
	        case "img_z":
	            e = "http://online{s}.map.bdimg.com/tile/?qt=tile&x={x}&y={y}&z={z}&styles=" + (t.bigfont ? "sh" : "sl") + "&v=020";
	            break;
	        case "custom":
	            t.customid = t.customid || "midnight", e = "http://api{s}.map.bdimg.com/customimage/tile?&x={x}&y={y}&z={z}&scale=1&customid=" + t.customid;
	            break;
	        case "time":
	            e = "http://its.map.baidu.com:8002/traffic/TrafficTileService?x={x}&y={y}&level={z}&time=" + new Date().getTime() + "&label=web2D&v=017";
	    }
	    this._url = e;
	    this._tileWidth = 256;
	    this._tileHeight = 256;
	    this._maximumLevel = 18;
	    var i = new Cartesian2(-a, -r),
	        n = new Cartesian2(a, r);
	    this._tilingScheme = new WebMercatorTilingScheme({
	        rectangleSouthwestInMeters: i,
	        rectangleNortheastInMeters: n
	    });
	    this._credit = void 0;
	    this._rectangle = this._tilingScheme.rectangle;
	    this._ready = !0;
	}

	Object.defineProperties(BaiDuImageryProvider.prototype, {
	    url: {
	        get: function get() {
	            return this._url;
	        }
	    },
	    token: {
	        get: function get() {
	            return this._token;
	        }
	    },
	    proxy: {
	        get: function get() {
	            return this._proxy;
	        }
	    },
	    tileWidth: {
	        get: function get() {
	            if (!this._ready) throw new DeveloperError("tileWidth must not be called before the imagery provider is ready.");
	            return this._tileWidth;
	        }
	    },
	    tileHeight: {
	        get: function get() {
	            if (!this._ready) throw new DeveloperError("tileHeight must not be called before the imagery provider is ready.");
	            return this._tileHeight;
	        }
	    },
	    maximumLevel: {
	        get: function get() {
	            if (!this._ready) throw new DeveloperError("maximumLevel must not be called before the imagery provider is ready.");
	            return this._maximumLevel;
	        }
	    },
	    minimumLevel: {
	        get: function get() {
	            if (!this._ready) throw new DeveloperError("minimumLevel must not be called before the imagery provider is ready.");
	            return 0;
	        }
	    },
	    tilingScheme: {
	        get: function get() {
	            if (!this._ready) throw new DeveloperError("tilingScheme must not be called before the imagery provider is ready.");
	            return this._tilingScheme;
	        }
	    },
	    rectangle: {
	        get: function get() {
	            if (!this._ready) throw new DeveloperError("rectangle must not be called before the imagery provider  is ready.");
	            return this._rectangle;
	        }
	    },
	    tileDiscardPolicy: {
	        get: function get() {
	            if (!this._ready) throw new DeveloperError("tileDiscardPolicy must not be called before the imagery provider is ready.");
	            return this._tileDiscardPolicy;
	        }
	    },
	    errorEvent: {
	        get: function get() {
	            return this._errorEvent;
	        }
	    },
	    ready: {
	        get: function get() {
	            return this._ready;
	        }
	    },
	    readyPromise: {
	        get: function get() {
	            return this._readyPromise.promise;
	        }
	    },
	    credit: {
	        get: function get() {
	            return this._credit;
	        }
	    },
	    usingPrecachedTiles: {
	        get: function get() {
	            return this._useTiles;
	        }
	    },
	    hasAlphaChannel: {
	        get: function get() {
	            return !0;
	        }
	    },
	    layers: {
	        get: function get() {
	            return this._layers;
	        }
	    }
	});

	BaiDuImageryProvider.prototype.getTileCredits = function (t, e, i) {};
	BaiDuImageryProvider.prototype.requestImage = function (t, e, i) {
	    if (!this._ready) throw new DeveloperError("requestImage must not be called before the imagery provider is ready.");
	    var n = this._tilingScheme.getNumberOfXTilesAtLevel(i),
	        r = this._tilingScheme.getNumberOfYTilesAtLevel(i),
	        a = this._url.replace("{x}", t - n / 2).replace("{y}", r / 2 - e - 1).replace("{z}", i).replace("{s}", Math.floor(10 * Math.random()));
	    return ImageryProvider.loadImage(this, a);
	};

	exports.default = BaiDuImageryProvider;

/***/ }),
/* 113 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var f = {
	    ENLARGE: 0,
	    NARROW: 1,
	    LEFT_ROTATE: 2,
	    RIGHT_ROTATE: 3,
	    TOP_ROTATE: 4,
	    BOTTOM_ROTATE: 5
	};

	var KeyboardNavigation = function () {
	    function KeyboardNavigation(viewer) {
	        var _this = this;

	        _classCallCheck(this, KeyboardNavigation);

	        this.viewer = viewer;
	        this.flags = {
	            moveForward: !1,
	            moveBackward: !1,
	            moveUp: !1,
	            moveDown: !1,
	            moveLeft: !1,
	            moveRight: !1
	        };
	        this._enable = false;

	        this.l = this.speedRatio = 150;
	        this.u = this.dirStep = 25;
	        this.c = this.rotateStep = 1;
	        this.h = this.minPitch = .1;
	        this.d = this.maxPitch = .95;

	        var canvas = viewer.scene.canvas;
	        canvas.setAttribute("tabindex", "0"), canvas.onclick = function () {
	            canvas.focus();
	        };

	        document.addEventListener("keydown", function (e) {
	            if (_this._enable) {
	                var t = _this.getFlagForKeyCode(e.keyCode);
	                void 0 !== t && (_this.flags[t] = !0);
	            }
	        }, !1), document.addEventListener("keyup", function (e) {
	            if (_this._enable) {
	                var t = _this.getFlagForKeyCode(e.keyCode);
	                void 0 !== t && (_this.flags[t] = !1);
	            }
	        }, !1), this.handler = new Cesium.ScreenSpaceEventHandler(viewer.scene.canvas), this.handler.setInputAction(function (e) {
	            _this._enable && (e > 0 ? (_this.speedRatio = l *= .9, _this.rotateStep = _this.c *= 1.1, _this.dirStep = _this.u *= .9) : (_this.speedRatio = _this.l *= 1.1, _this.rotateStep = _this.c *= .9, _this.dirStep = _this.u *= 1.1));
	        }, Cesium.ScreenSpaceEventType.WHEEL);
	    }

	    _createClass(KeyboardNavigation, [{
	        key: "bind",
	        value: function bind(e) {
	            this._enable || (this._enable = !0, Cesium.defined(e) && (t.speedRatio = l = e.speedRatio || l, t.dirStep = u = e.dirStep || u, t.rotateStep = c = e.rotateStep || c, t.minPitch = h = e.minPitch || h, t.maxPitch = d = e.maxPitch || d), this.viewer.clock.onTick.addEventListener(this.cameraFunc, this));
	        }
	    }, {
	        key: "unbind",
	        value: function unbind() {
	            this._enable && (this._enable = !1, this.viewer.clock.onTick.removeEventListener(this.cameraFunc, this));
	        }
	    }, {
	        key: "destroy",
	        value: function destroy() {
	            this.unbind(), this.handler.destroy();
	        }
	    }, {
	        key: "getFlagForKeyCode",
	        value: function getFlagForKeyCode(e) {
	            switch (e) {
	                case "W".charCodeAt(0):
	                    return "moveForward";
	                case "S".charCodeAt(0):
	                    return "moveBackward";
	                case "D".charCodeAt(0):
	                    return "moveRight";
	                case "A".charCodeAt(0):
	                    return "moveLeft";
	                case "Q".charCodeAt(0):
	                    return "moveUp";
	                case "E".charCodeAt(0):
	                    return "moveDown";
	                case 38:
	                    this.rotateCamera(f.TOP_ROTATE);
	                    break;
	                case 37:
	                    this.rotateCamera(f.LEFT_ROTATE);
	                    break;
	                case 39:
	                    this.rotateCamera(f.RIGHT_ROTATE);
	                    break;
	                case 40:
	                    this.rotateCamera(f.BOTTOM_ROTATE);
	                    break;
	                case "I".charCodeAt(0):
	                case 104:
	                    this.moveCamera(f.ENLARGE);
	                    break;
	                case "K".charCodeAt(0):
	                case 101:
	                    this.moveCamera(f.NARROW);
	                    break;
	                case "J".charCodeAt(0):
	                case 100:
	                    this.moveCamera(f.LEFT_ROTATE);
	                    break;
	                case "L".charCodeAt(0):
	                case 102:
	                    this.moveCamera(f.RIGHT_ROTATE);
	                    break;
	                case "U".charCodeAt(0):
	                case 103:
	                    this.moveCamera(f.TOP_ROTATE);
	                    break;
	                case "O".charCodeAt(0):
	                case 105:
	                    this.moveCamera(f.BOTTOM_ROTATE);
	            }
	        }
	    }, {
	        key: "moveForward",
	        value: function moveForward(e) {
	            var t = this.viewer.camera,
	                i = t.direction,
	                r = Cesium.Cartesian3.normalize(t.position, new Cesium.Cartesian3()),
	                n = Cesium.Cartesian3.cross(i, r, new Cesium.Cartesian3());
	            i = Cesium.Cartesian3.cross(r, n, new Cesium.Cartesian3()), i = Cesium.Cartesian3.normalize(i, i), i = Cesium.Cartesian3.multiplyByScalar(i, e, i), t.position = Cesium.Cartesian3.add(t.position, i, t.position);
	        }
	    }, {
	        key: "cameraFunc",
	        value: function cameraFunc(e) {
	            var t = this.viewer.camera,
	                i = this.viewer.scene.globe.ellipsoid.cartesianToCartographic(t.position).height,
	                r = i / this.l;
	            this.flags.moveForward && this.moveForward(r), this.flags.moveBackward && this.moveForward(-r), this.flags.moveUp && t.moveUp(r), this.flags.moveDown && t.moveDown(r), this.flags.moveLeft && t.moveLeft(r), this.flags.moveRight && t.moveRight(r);
	        }
	    }, {
	        key: "resetCameraPos",
	        value: function resetCameraPos(e) {
	            e && (this.viewer.scene.camera.position = e.position, this.viewer.scene.camera.direction = e.direction, this.viewer.scene.camera.right = e.right, this.viewer.scene.camera.up = e.up);
	        }
	    }, {
	        key: "limitAngle",
	        value: function limitAngle(e, t, i) {
	            var r = Cesium.Cartesian3.dot(e, Cesium.Cartesian3.normalize(t, new Cesium.Cartesian3()));
	            return !("up" == i && r < this.h) && !("down" == i && r > this.d);
	        }
	    }, {
	        key: "getCenter1",
	        value: function getCenter1() {
	            var scene = this.viewer.scene;
	            var camera = this.viewer.camera;
	            var windowPosition = new Cesium.Cartesian2();
	            var centerScratch = new Cesium.Cartesian3();
	            windowPosition.x = scene.canvas.clientWidth / 2;
	            windowPosition.y = scene.canvas.clientHeight / 2;
	            var center = camera.pickEllipsoid(windowPosition, scene.globe.ellipsoid, centerScratch);
	            return center;
	        }
	    }, {
	        key: "getCenter",
	        value: function getCenter(e, t) {
	            var i = e.scene,
	                r = this.m(i),
	                n = r;
	            if (!Cesium.defined(n)) {
	                var a = i.globe,
	                    s = i.camera.positionCartographic.clone(),
	                    l = a.getHeight(s);
	                s.height = l || 0, n = Cesium.Ellipsoid.WGS84.cartographicToCartesian(s);
	            }
	            var u = this.o(n);
	            return u;
	        }
	    }, {
	        key: "m",
	        value: function m(e) {
	            var t = e.canvas,
	                i = new Cesium.Cartesian2(t.clientWidth / 2, t.clientHeight / 2),
	                r = e.camera.getPickRay(i);
	            return e.globe.pick(r, e) || e.camera.pickEllipsoid(i);
	        }
	    }, {
	        key: "o",
	        value: function o(e) {
	            var t = Cesium.Cartographic.fromCartesian(e),
	                i = {};
	            return i.y = this.n(Cesium.Math.toDegrees(t.latitude), 6), i.x = this.n(Cesium.Math.toDegrees(t.longitude), 6), i.z = this.n(t.height, 2), i;
	        }
	    }, {
	        key: "n",
	        value: function n(e, t) {
	            return Number(e.toFixed(t || 0));
	        }
	    }, {
	        key: "computedNewPos",
	        value: function computedNewPos(e, t, i) {
	            var r = e.position,
	                n = this.getCenter(this.viewer);
	            if (n) {
	                var o = Cesium.Cartesian3.fromDegrees(n.x, n.y, n.z);

	                if (o) {
	                    var l = Cesium.Cartesian3.distance(o, r),
	                        u = l / 100;
	                    u = i ? u * this.c : u;
	                    var h = {},
	                        d = new Cesium.Ray(r, t);
	                    if (h.position = Cesium.Ray.getPoint(d, u), h.direction = e.direction, h.right = e.right, h.up = e.up, i) {
	                        var f = Cesium.Cartesian3.normalize(Cesium.Cartesian3.subtract(h.position, o, new Cesium.Cartesian3()), new Cesium.Cartesian3());
	                        d = new Cesium.Ray(o, f), h.position = Cesium.Ray.getPoint(d, l), h.direction = Cesium.Cartesian3.negate(f, new Cesium.Cartesian3()), h.up = Cesium.Cartesian3.normalize(h.position, new Cesium.Cartesian3()), h.right = Cesium.Cartesian3.cross(h.direction, h.up, new Cesium.Cartesian3());
	                    }
	                    return h;
	                }
	            }
	        }
	    }, {
	        key: "moveCamera",
	        value: function moveCamera(e) {
	            var t,
	                i = this.viewer.scene.camera;
	            switch (e) {
	                case f.ENLARGE:
	                    t = this.computedNewPos(i, i.direction);
	                    break;
	                case f.NARROW:
	                    t = this.computedNewPos(i, Cesium.Cartesian3.negate(i.direction, new Cesium.Cartesian3()));
	                    break;
	                case f.LEFT_ROTATE:
	                    t = this.computedNewPos(i, Cesium.Cartesian3.negate(i.right, new Cesium.Cartesian3()), !0);
	                    break;
	                case f.RIGHT_ROTATE:
	                    t = this.computedNewPos(i, i.right, !0);
	                    break;
	                case f.TOP_ROTATE:
	                    var r = this.limitAngle(Cesium.clone(i.up), Cesium.clone(i.position), "up");
	                    if (!r) return;
	                    t = this.computedNewPos(i, Cesium.clone(i.up), !0);
	                    break;
	                case f.BOTTOM_ROTATE:
	                    var r = this.limitAngle(Cesium.clone(i.up), Cesium.clone(i.position), "down");
	                    if (!r) return;
	                    t = this.computedNewPos(i, Cesium.Cartesian3.negate(i.up, new Cesium.Cartesian3()), !0);
	            }
	            t && this.resetCameraPos(t);
	        }
	    }, {
	        key: "rotateCamera",
	        value: function rotateCamera(e) {
	            var t = [0, 0],
	                i = this.viewer.scene.canvas.clientWidth,
	                r = this.viewer.scene.canvas.clientHeight,
	                n = (i + r) / this.u;
	            switch (e) {
	                case f.LEFT_ROTATE:
	                    t = [-n * i / r, 0];
	                    break;
	                case f.RIGHT_ROTATE:
	                    t = [n * i / r, 0];
	                    break;
	                case f.TOP_ROTATE:
	                    t = [0, n];
	                    break;
	                case f.BOTTOM_ROTATE:
	                    t = [0, -n];
	                    break;
	                default:
	                    return;
	            }
	            var o = t[0] / i,
	                s = t[1] / r,
	                l = this.viewer.camera;
	            l.lookRight(.05 * o), l.lookUp(.05 * s);
	            var c = l.direction,
	                h = Cesium.Cartesian3.normalize(l.position, new Cesium.Cartesian3()),
	                d = Cesium.Cartesian3.cross(c, h, new Cesium.Cartesian3());
	            h = Cesium.Cartesian3.cross(d, c, new Cesium.Cartesian3()), l.up = h, l.right = d;
	        }
	    }, {
	        key: "enable",
	        get: function get() {
	            return this._enable;
	        },
	        set: function set(e) {
	            e ? this.bind() : this.unbind();
	        }
	    }]);

	    return KeyboardNavigation;
	}();

	exports.default = KeyboardNavigation;

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.HeatMapOpt = exports.HeatMapLayer = undefined;

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _HeatMapImageryProvider = __webpack_require__(115);

	var _HeatMapImageryProvider2 = _interopRequireDefault(_HeatMapImageryProvider);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 *  需要用户创建的类</br>
	 *  热力图</br>
	 * @see <a href='../../../examples/gallery/editor.html#heatMap'>热力图</a>
	 */
	var HeatMapLayer = exports.HeatMapLayer = function () {
	    function HeatMapLayer(heatOpt) {
	        _classCallCheck(this, HeatMapLayer);

	        this._heatMapOption = heatOpt;
	        this._heatMapLayer = null;
	        this._zAxisHeight = null;
	        this._zoomLevel = [0, 25000, 50000, 100000, 225000, 300000, 500000, 750000, 1000000, 2500000, 3750000, 5000000, 7500000, 10000000, 20000000, 50000000, 100000000, 250000000, 500000000];
	        this._zoomRadius = [1, 1.25, 1.5, 2, 2.25, 3, 5, 7.5, 10, 12.5, 13.75, 15, 17.5, 20, 25, 27.5, 35, 50];
	    }

	    _createClass(HeatMapLayer, [{
	        key: "_calcBound",
	        value: function _calcBound(points) {
	            var longitude = [];
	            var latitude = [];
	            var west = void 0,
	                south = void 0,
	                east = void 0,
	                north = void 0;
	            for (var i = 0; i < points.length; i++) {
	                longitude.push(points[i].lon);
	                latitude.push(points[i].lat);
	            }
	            west = Math.min.apply(null, longitude);
	            south = Math.min.apply(null, latitude);
	            if (Math.max.apply(null, longitude) >= 178.5) {
	                east = 178.5;
	            } else {
	                east = Math.max.apply(null, longitude);
	            }
	            north = Math.max.apply(null, latitude);
	            return {
	                west: west,
	                south: south,
	                east: east,
	                north: north
	            };
	        }
	    }, {
	        key: "_formatPoints",
	        value: function _formatPoints(points) {
	            return points.map(function (item) {
	                return { x: item.lon, y: item.lat, value: item.value };
	            });
	        }
	    }, {
	        key: "_updateFllowCamera",
	        value: function _updateFllowCamera() {
	            var _this = this;

	            this.destroyItem();
	            var camera = this._viewer.camera;
	            var cameraPosition = camera.positionCartographic.height / 1;
	            var heatOptions = JSON.parse(JSON.stringify(this._heatMapParams));
	            this._zAxisHeight = cameraPosition;
	            for (var i = 0; i < this._zoomLevel.length; i++) {
	                if (this._zoomLevel[i] < cameraPosition && cameraPosition < this._zoomLevel[i + 1]) {
	                    heatOptions.heatmapoptions.radius = this._zoomRadius[i] * this._heatMapParams.heatmapoptions.radius / 1;
	                }
	            }
	            var heatMap = new _HeatMapImageryProvider2.default(heatOptions);
	            this._heatMapLayer = this._viewer.imageryLayers.addImageryProvider(heatMap);
	            this._heatMapLayer.show = true;
	            camera.moveEnd.addEventListener(this._moveEnd = function () {
	                var positionHigh = camera.positionCartographic.height / 1;
	                if (positionHigh > 16293756) {
	                    _this.destroyItem();
	                    _this._create();
	                    return;
	                }
	                for (var _i = 0; _i < _this._zoomLevel.length; _i++) {
	                    if (_this._zAxisHeight === null || _this._zAxisHeight === undefined || _this._zAxisHeight === 0) {
	                        _this._zAxisHeight = positionHigh;
	                        _this._updateFllowCamera();
	                    } else if (_this._zoomLevel[_i] < _this._zAxisHeight && _this._zAxisHeight < _this._zoomLevel[_i + 1] && (positionHigh < _this._zoomLevel[_i] || positionHigh > _this._zoomLevel[_i + 1])) {
	                        _this._zAxisHeight = positionHigh;
	                        _this._updateFllowCamera();
	                    }
	                }
	            });
	        }

	        /**
	         * 初始化
	         * @param viewer
	         */

	    }, {
	        key: "addToMap",
	        value: function addToMap(viewer) {
	            this._viewer = viewer;
	            this._create();
	        }

	        /**
	         * 获取热力图参数信息
	         */

	    }, {
	        key: "getHeatMapOpt",
	        value: function getHeatMapOpt() {
	            return this._heatMapOption;
	        }

	        /**
	         * 热力图更新
	         * @param opt 
	         */

	    }, {
	        key: "update",
	        value: function update(opt) {
	            this.destroyItem();
	            this._heatMapOption = opt;
	            this._create();
	        }
	        /**
	         * 创建热力图
	         * @param opt
	         */

	    }, {
	        key: "_create",
	        value: function _create() {
	            this.destroyItem();
	            var bound = this._calcBound(this._heatMapOption.points);
	            var heatPoints = {
	                min: this._heatMapOption.limitMin,
	                max: this._heatMapOption.limitMax,
	                points: this._formatPoints(this._heatMapOption.points)
	            };
	            this._heatMapParams = {
	                heatmapoptions: {
	                    backgroundColor: "rgba(0,0,0,0)",
	                    radius: this._heatMapOption.radius,
	                    blur: this._heatMapOption.blur,
	                    gradient: this._heatMapOption.gradient,
	                    maxOpacity: this._heatMapOption.opacity
	                },
	                bounds: bound,
	                data: heatPoints
	            };
	            this._updateFllowCamera();
	        }

	        /**
	         * 销毁热力图
	         */

	    }, {
	        key: "destroyItem",
	        value: function destroyItem() {
	            if (this._heatMapLayer !== null) {
	                this._heatMapLayer.show = false;
	                this._viewer.imageryLayers.remove(this._heatMapLayer);
	                this._viewer.camera.moveEnd.removeEventListener(this._moveEnd);
	                this._heatMapLayer = null;
	            }
	        }
	    }]);

	    return HeatMapLayer;
	}();

	/**
	 *  需要用户创建的类 </br>
	 *  热力图参数类 </br>
	 * @see <a href='../../../examples/gallery/editor.html#heatMap'>热力图</a>
	 */


	var HeatMapOpt =

	/**
	* 视角信息类
	*
	* @alias HeatMapOpt
	* @constructor
	*
	* @param {points} object  热力点数据集 </br>参数格式：[{经度：数字，纬度：数字，此位置上的数据值：数字}...] </br> 如：{lon:80,lat:40,value:90}
	* @param {radius} number  每个数据点将具有的半径 </br> 默认值：10 </br>范围：>0 && <=100
	* @param {limitMin} number  数据集下限
	* @param {limitMax} number  数据集上限
	* @param {gradient} object  表示渐变的对象（语法：数字字符串[0,1]：颜色字符串） </br>如：{ 0.25: "rgb(0,0,255)", 0.55: "rgb(0,255,0)", 0.85: "yellow", 1.0: "rgb(255,0,0)" }
	* @param {opacity} number  热图中最高值的最大不透明度。（如果设置了不透明度，将被覆盖） </br>范围：>=0 && <=1
	* @param {blur} number  将应用于所有数据点的模糊因子。模糊因子越高，渐变越平滑 </br>范围：>=0 && <= 1
	* @param {opacity} number  热图中最高值的最大不透明度。（如果设置了不透明度，将被覆盖） </br>范围：>=0 && <=1
	*
	*
	*/
	exports.HeatMapOpt = function HeatMapOpt(points) {
	    var radius = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;
	    var limitMin = arguments[2];
	    var limitMax = arguments[3];
	    var gradient = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : { 0.25: "rgb(0,0,255)", 0.55: "rgb(0,255,0)", 0.85: "yellow", 1.0: "rgb(255,0,0)" };
	    var opacity = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.8;
	    var blur = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0.85;

	    _classCallCheck(this, HeatMapOpt);

	    this.points = points;
	    this.radius = radius;
	    this.limitMin = limitMin;
	    this.limitMax = limitMax;
	    this.gradient = gradient;
	    this.opacity = opacity;
	    this.blur = blur;
	};

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _BaseHeatMap = __webpack_require__(116);

	var _BaseHeatMap2 = _interopRequireDefault(_BaseHeatMap);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/*global define*/
	var Credit = Cesium.Credit;
	var defaultValue = Cesium.defaultValue;
	var defined = Cesium.defined;
	var DeveloperError = Cesium.DeveloperError;

	var HeatmapImageryProvider = function () {
	    function HeatmapImageryProvider(options) {
	        _classCallCheck(this, HeatmapImageryProvider);

	        this.fun(options);
	    }

	    /**
	     * Provides a single, top-level imagery tile.  The single image is assumed to use a
	     * {@link GeographicTilingScheme}.
	         *
	     * @alias HeatmapImageryProvider
	     * @constructor
	     *
	     * @param {Object} options Object with the following properties:
	     * @param {Object} [options.heatmapoptions] Optional heatmap.js options to be used .
	     * @param {Object} [options.bounds] The bounding box for the heatmap in WGS84 coordinates.
	     * @param {Number} [options.bounds.north] The northernmost point of the heatmap.
	     * @param {Number} [options.bounds.south] The southernmost point of the heatmap.
	     * @param {Number} [options.bounds.west] The westernmost point of the heatmap.
	     * @param {Number} [options.bounds.east] The easternmost point of the heatmap.
	     * @param {Object} [options.data] Data to be used for the heatmap.
	     * @param {Object} [options.data.min] Minimum allowed point value.
	     * @param {Object} [options.data.max] Maximum allowed point value.
	     * @param {Array} [options.data.points] The data points for the heatmap containing x=lon, y=lat and value=number.
	     *
	     */


	    _createClass(HeatmapImageryProvider, [{
	        key: 'fun',
	        value: function fun(options) {
	            options = defaultValue(options, {});
	            var bounds = options.bounds;
	            var data = options.data;

	            if (!defined(bounds)) {
	                throw new DeveloperError('options.bounds is required.');
	            } else if (!defined(bounds.north) || !defined(bounds.south) || !defined(bounds.east) || !defined(bounds.west)) {
	                throw new DeveloperError('options.bounds.north, options.bounds.south, options.bounds.east and options.bounds.west are required.');
	            }

	            if (!defined(data)) {
	                throw new DeveloperError('data is required.');
	            } else if (!defined(data.min) || !defined(data.max) || !defined(data.points)) {
	                throw new DeveloperError('options.bounds.north, bounds.south, bounds.east and bounds.west are required.');
	            }

	            this._wmp = new Cesium.WebMercatorProjection();
	            this._mbounds = this.wgs84ToMercatorBB(bounds);
	            this._options = defaultValue(options.heatmapoptions, {});
	            this._options.gradient = defaultValue(this._options.gradient, { 0.25: "rgb(0,0,255)", 0.55: "rgb(0,255,0)", 0.85: "yellow", 1.0: "rgb(255,0,0)" });

	            this.setWidthAndHeight(this._mbounds);
	            this._options.radius = Math.round(defaultValue(this._options.radius, this.width > this.height ? this.width / 60 : this.height / 60));

	            this._spacing = this._options.radius * 1.5;
	            this._xoffset = this._mbounds.west;
	            this._yoffset = this._mbounds.south;

	            this.width = Math.round(this.width + this._spacing * 2);
	            this.height = Math.round(this.height + this._spacing * 2);

	            this._mbounds.west -= this._spacing * this._factor;
	            this._mbounds.east += this._spacing * this._factor;
	            this._mbounds.south -= this._spacing * this._factor;
	            this._mbounds.north += this._spacing * this._factor;

	            this.bounds = this.mercatorToWgs84BB(this._mbounds);

	            this._container = this.getContainer(this.width, this.height);
	            this._options.container = this._container;
	            this._heatmap = _BaseHeatMap2.default.create(this._options);
	            this._canvas = this._container.children[0];

	            this._tilingScheme = new Cesium.WebMercatorTilingScheme({
	                rectangleSouthwestInMeters: new Cesium.Cartesian2(this._mbounds.west, this._mbounds.south),
	                rectangleNortheastInMeters: new Cesium.Cartesian2(this._mbounds.east, this._mbounds.north)
	            });

	            var image = this._image = this._canvas;
	            this._originalImage = this._canvas;
	            this._texture = undefined;
	            this._tileWidth = this.width;
	            this._tileHeight = this.height;
	            this._ready = false;

	            if (options.data) {
	                this._ready = this.setWGS84Data(options.data.min, options.data.max, options.data.points);
	            }

	            var that = this;
	            var error;

	            function success(image) {
	                if (image instanceof HTMLVideoElement) {
	                    that._dynamic = true;
	                    that._dynamicTime = image.currentTime;
	                }
	                that._ready = true;
	                that._readyPromise.resolve(true);
	                Cesium.TileProviderError.handleSuccess(that._errorEvent);
	            }

	            function failure(e) {
	                var location = '';
	                if (typeof image === 'string') {
	                    location = ' ' + image;
	                }
	                var message = 'Failed to load image ' + location + '.';
	                error = Cesium.TileProviderError.handleError(error, that, that._errorEvent, message, 0, 0, 0, doRequest, e);
	                that._readyPromise.reject(new RuntimeError(message));
	            }

	            this.getImage(that, image).then(success).otherwise(failure);
	        }
	    }, {
	        key: 'getImage',
	        value: function getImage(that, image) {
	            function success(imageObj) {
	                that._image = imageObj;
	                that._tileWidth = imageObj.width;
	                that._tileHeight = imageObj.height;
	            }
	            success(image);
	            return Cesium.when(image);
	        }
	    }, {
	        key: 'setWidthAndHeight',
	        value: function setWidthAndHeight(mbb) {
	            var maxCanvasSize = 2000;
	            var minCanvasSize = 700;
	            this.width = mbb.east > 0 && mbb.west < 0 ? mbb.east + Math.abs(mbb.west) : Math.abs(mbb.east - mbb.west);
	            this.height = mbb.north > 0 && mbb.south < 0 ? mbb.north + Math.abs(mbb.south) : Math.abs(mbb.north - mbb.south);
	            this._factor = 1;

	            if (this.width > this.height && this.width > maxCanvasSize) {
	                this._factor = this.width / maxCanvasSize;

	                if (this.height / this._factor < minCanvasSize) {
	                    this._factor = this.height / minCanvasSize;
	                }
	            } else if (this.height > this.width && this.height > maxCanvasSize) {
	                this._factor = this.height / maxCanvasSize;

	                if (this.width / this._factor < minCanvasSize) {
	                    this._factor = this.width / minCanvasSize;
	                }
	            } else if (this.width < this.height && this.width < minCanvasSize) {
	                this._factor = this.width / minCanvasSize;

	                if (this.height / this._factor > maxCanvasSize) {
	                    this._factor = this.height / maxCanvasSize;
	                }
	            } else if (this.height < this.width && this.height < minCanvasSize) {
	                this._factor = this.height / minCanvasSize;

	                if (this.width / this._factor > maxCanvasSize) {
	                    this._factor = this.width / maxCanvasSize;
	                }
	            }

	            this.width = this.width / this._factor;
	            this.height = this.height / this._factor;
	        }
	    }, {
	        key: 'getContainer',
	        value: function getContainer(width, height, id) {
	            var c = document.createElement("div");
	            if (id) {
	                c.setAttribute("id", id);
	            }
	            c.setAttribute("style", "width: " + width + "px; height: " + height + "px; margin: 0px; display: none;");
	            document.body.appendChild(c);
	            return c;
	        }
	    }, {
	        key: 'wgs84ToMercator',


	        /**
	         * Convert a WGS84 location into a Mercator location.
	         *
	         * @param {Object} point The WGS84 location.
	         * @param {Number} [point.x] The longitude of the location.
	         * @param {Number} [point.y] The latitude of the location.
	         * @returns {Cesium.Cartesian3} The Mercator location.
	         */
	        value: function wgs84ToMercator(point) {
	            return this._wmp.project(Cesium.Cartographic.fromDegrees(point.x, point.y));
	        }
	    }, {
	        key: 'wgs84ToMercatorBB',


	        /**
	         * Convert a WGS84 bounding box into a Mercator bounding box.
	         *
	         * @param {Object} bounds The WGS84 bounding box.
	         * @param {Number} [bounds.north] The northernmost position.
	         * @param {Number} [bounds.south] The southrnmost position.
	         * @param {Number} [bounds.east] The easternmost position.
	         * @param {Number} [bounds.west] The westernmost position.
	         * @returns {Object} The Mercator bounding box containing north, south, east and west properties.
	         */
	        value: function wgs84ToMercatorBB(bounds) {
	            var ne = this._wmp.project(Cesium.Cartographic.fromDegrees(bounds.east, bounds.north));
	            var sw = this._wmp.project(Cesium.Cartographic.fromDegrees(bounds.west, bounds.south));
	            return {
	                north: ne.y,
	                south: sw.y,
	                east: ne.x,
	                west: sw.x
	            };
	        }
	    }, {
	        key: 'mercatorToWgs84',


	        /**
	         * Convert a mercator location into a WGS84 location.
	         *
	         * @param {Object} point The Mercator lcation.
	         * @param {Number} [point.x] The x of the location.
	         * @param {Number} [point.y] The y of the location.
	         * @returns {Object} The WGS84 location.
	         */
	        value: function mercatorToWgs84(p) {
	            var wp = this._wmp.unproject(new Cesium.Cartesian3(p.x, p.y));
	            return {
	                x: wp.longitude,
	                y: wp.latitude
	            };
	        }
	    }, {
	        key: 'mercatorToWgs84BB',


	        /**
	         * Convert a Mercator bounding box into a WGS84 bounding box.
	         *
	         * @param {Object} bounds The Mercator bounding box.
	         * @param {Number} [bounds.north] The northernmost position.
	         * @param {Number} [bounds.south] The southrnmost position.
	         * @param {Number} [bounds.east] The easternmost position.
	         * @param {Number} [bounds.west] The westernmost position.
	         * @returns {Object} The WGS84 bounding box containing north, south, east and west properties.
	         */
	        value: function mercatorToWgs84BB(bounds) {
	            var sw = this._wmp.unproject(new Cesium.Cartesian3(bounds.west, bounds.south));
	            var ne = this._wmp.unproject(new Cesium.Cartesian3(bounds.east, bounds.north));
	            return {
	                north: this.rad2deg(ne.latitude),
	                east: this.rad2deg(ne.longitude),
	                south: this.rad2deg(sw.latitude),
	                west: this.rad2deg(sw.longitude)
	            };
	        }
	    }, {
	        key: 'deg2rad',


	        /**
	         * Convert degrees into radians.
	         *
	         * @param {Number} degrees The degrees to be converted to radians.
	         * @returns {Number} The converted radians.
	         */
	        value: function deg2rad(degrees) {
	            return degrees * (Math.PI / 180.0);
	        }
	    }, {
	        key: 'rad2deg',


	        /**
	         * Convert radians into degrees.
	         *
	         * @param {Number} radians The radians to be converted to degrees.
	         * @returns {Number} The converted degrees.
	         */
	        value: function rad2deg(radians) {
	            return radians / (Math.PI / 180.0);
	        }
	    }, {
	        key: 'wgs84PointToHeatmapPoint',


	        /**
	         * Convert a WGS84 location to the corresponding heatmap location.
	         *
	         * @param {Object} point The WGS84 location.
	         * @param {Number} [point.x] The longitude of the location.
	         * @param {Number} [point.y] The latitude of the location.
	         * @returns {Object} The corresponding heatmap location.
	         */
	        value: function wgs84PointToHeatmapPoint(point) {
	            return this.mercatorPointToHeatmapPoint(this.wgs84ToMercator(point));
	        }
	    }, {
	        key: 'mercatorPointToHeatmapPoint',


	        /**
	         * Convert a mercator location to the corresponding heatmap location.
	         *
	         * @param {Object} point The Mercator lcation.
	         * @param {Number} [point.x] The x of the location.
	         * @param {Number} [point.y] The y of the location.
	         * @returns {Object} The corresponding heatmap location.
	         */
	        value: function mercatorPointToHeatmapPoint(point) {
	            var pn = {};

	            pn.x = Math.round((point.x - this._xoffset) / this._factor + this._spacing);
	            pn.y = Math.round((point.y - this._yoffset) / this._factor + this._spacing);
	            pn.y = this.height - pn.y;

	            return pn;
	        }
	    }, {
	        key: 'setData',


	        /**
	         * Set an array of heatmap locations.
	         *
	         * @param {Number} min The minimum allowed value for the data points.
	         * @param {Number} max The maximum allowed value for the data points.
	         * @param {Array} data An array of data points with heatmap coordinates(x, y) and value
	         * @returns {Boolean} Wheter or not the data was successfully added or failed.
	         */
	        value: function setData(min, max, data) {
	            if (data && data.length > 0 && min !== null && min !== false && max !== null && max !== false) {
	                this._heatmap.setData({
	                    min: min,
	                    max: max,
	                    data: data
	                });

	                return true;
	            }

	            return false;
	        }
	    }, {
	        key: 'setWGS84Data',


	        /**
	         * Set an array of WGS84 locations.
	         *
	         * @param {Number} min The minimum allowed value for the data points.
	         * @param {Number} max The maximum allowed value for the data points.
	         * @param {Array} data An array of data points with WGS84 coordinates(x=lon, y=lat) and value
	         * @returns {Boolean} Wheter or not the data was successfully added or failed.
	         */
	        value: function setWGS84Data(min, max, data) {
	            if (data && data.length > 0 && min !== null && min !== false && max !== null && max !== false) {
	                var convdata = [];

	                for (var i = 0; i < data.length; i++) {
	                    var gp = data[i];

	                    var hp = this.wgs84PointToHeatmapPoint(gp);
	                    if (gp.value || gp.value === 0) {
	                        hp.value = gp.value;
	                    }

	                    convdata.push(hp);
	                }
	                var result = this.setData(min, max, convdata);
	                this.reload();

	                return result;
	            }

	            return false;
	        }
	    }, {
	        key: 'reload',
	        value: function reload() {
	            if (defined(this._reload)) {
	                if (this._dynamic) {
	                    var currentTime = this._image.currentTime;
	                    if (Math.abs(this._dynamicTime - currentTime) < frameDiff) {
	                        return;
	                    }
	                    this._dynamicTime = currentTime;
	                }

	                this.getImage(this, this._originalImage).then(this._reload);
	            }
	        }
	        /**
	         * Gets the credits to be displayed when a given tile is displayed.
	         *
	         * @param {Number} x The tile X coordinate.
	         * @param {Number} y The tile Y coordinate.
	         * @param {Number} level The tile level;
	         * @returns {Credit[]} The credits to be displayed when the tile is displayed.
	         *
	         * @exception {DeveloperError} <code>getTileCredits</code> must not be called before the imagery provider is ready.
	         */

	    }, {
	        key: 'getTileCredits',
	        value: function getTileCredits(x, y, level) {
	            return undefined;
	        }
	    }, {
	        key: 'requestImage',


	        /**
	         * Requests the image for a given tile.  This function should
	         * not be called before {@link HeatmapImageryProvider#ready} returns true.
	         *
	         * @param {Number} x The tile X coordinate.
	         * @param {Number} y The tile Y coordinate.
	         * @param {Number} level The tile level.
	         * @returns {Promise} A promise for the image that will resolve when the image is available, or
	         *          undefined if there are too many active requests to the server, and the request
	         *          should be retried later.  The resolved image may be either an
	         *          Image or a Canvas DOM object.
	         *
	         * @exception {DeveloperError} <code>requestImage</code> must not be called before the imagery provider is ready.
	         */
	        value: function requestImage(x, y, level) {
	            if (!this._ready) {
	                throw new DeveloperError('requestImage must not be called before the imagery provider is ready.');
	            }

	            return this._image;
	        }
	    }, {
	        key: 'pickFeatures',


	        /**
	         * Picking features is not currently supported by this imagery provider, so this function simply returns
	         * undefined.
	         *
	         * @param {Number} x The tile X coordinate.
	         * @param {Number} y The tile Y coordinate.
	         * @param {Number} level The tile level.
	         * @param {Number} longitude The longitude at which to pick features.
	         * @param {Number} latitude  The latitude at which to pick features.
	         * @return {Promise} A promise for the picked features that will resolve when the asynchronous
	         *                   picking completes.  The resolved value is an array of {@link ImageryLayerFeatureInfo}
	         *                   instances.  The array may be empty if no features are found at the given location.
	         *                   It may also be undefined if picking is not supported.
	         */
	        value: function pickFeatures() {
	            return undefined;
	        }
	    }, {
	        key: 'url',
	        get: function get() {
	            return this._url;
	        }
	    }, {
	        key: 'tileWidth',
	        get: function get() {
	            if (!this._ready) {
	                throw new DeveloperError('tileWidth must not be called before the imagery provider is ready.');
	            }

	            return this._tileWidth;
	        }
	    }, {
	        key: 'tileHeight',
	        get: function get() {
	            if (!this._ready) {
	                throw new DeveloperError('tileHeight must not be called before the imagery provider is ready.');
	            }

	            return this._tileHeight;
	        }
	    }, {
	        key: 'maximumLevel',
	        get: function get() {
	            if (!this._ready) {
	                throw new DeveloperError('maximumLevel must not be called before the imagery provider is ready.');
	            }

	            return 0;
	        }
	    }, {
	        key: 'minimumLevel',
	        get: function get() {
	            if (!this._ready) {
	                throw new DeveloperError('minimumLevel must not be called before the imagery provider is ready.');
	            }

	            return 0;
	        }
	    }, {
	        key: 'tilingScheme',
	        get: function get() {
	            if (!this._ready) {
	                throw new DeveloperError('tilingScheme must not be called before the imagery provider is ready.');
	            }

	            return this._tilingScheme;
	        }
	    }, {
	        key: 'rectangle',
	        get: function get() {
	            return this._tilingScheme.rectangle; //TODO: change to custom rectangle?
	        }
	    }, {
	        key: 'tileDiscardPolicy',
	        get: function get() {
	            if (!this._ready) {
	                throw new DeveloperError('tileDiscardPolicy must not be called before the imagery provider is ready.');
	            }

	            return undefined;
	        }
	    }, {
	        key: 'errorEvent',
	        get: function get() {
	            return this._errorEvent;
	        }
	    }, {
	        key: 'ready',
	        get: function get() {
	            return this._ready;
	        }
	    }, {
	        key: 'credit',
	        get: function get() {
	            return this._credit;
	        }
	    }, {
	        key: 'hasAlphaChannel',
	        get: function get() {
	            return true;
	        }
	    }]);

	    return HeatmapImageryProvider;
	}();

	exports.default = HeatmapImageryProvider;

/***/ }),
/* 116 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	// Heatmap Config stores default values and will be merged with instance config
	var HeatmapConfig = {
	  defaultRadius: 40,
	  defaultRenderer: 'canvas2d',
	  defaultGradient: { 0.25: "rgb(0,0,255)", 0.55: "rgb(0,255,0)", 0.85: "yellow", 1.0: "rgb(255,0,0)" },
	  defaultMaxOpacity: 1,
	  defaultMinOpacity: 0,
	  defaultBlur: .85,
	  defaultXField: 'x',
	  defaultYField: 'y',
	  defaultValueField: 'value',
	  plugins: {}
	};
	var Store = function StoreClosure() {

	  var Store = function Store(config) {
	    this._coordinator = {};
	    this._data = [];
	    this._radi = [];
	    this._min = 10;
	    this._max = 1;
	    this._xField = config['xField'] || config.defaultXField;
	    this._yField = config['yField'] || config.defaultYField;
	    this._valueField = config['valueField'] || config.defaultValueField;

	    if (config["radius"]) {
	      this._cfgRadius = config["radius"];
	    }
	  };

	  var defaultRadius = HeatmapConfig.defaultRadius;

	  Store.prototype = {
	    // when forceRender = false -> called from setData, omits renderall event
	    _organiseData: function _organiseData(dataPoint, forceRender) {
	      var x = dataPoint[this._xField];
	      var y = dataPoint[this._yField];
	      var radi = this._radi;
	      var store = this._data;
	      var max = this._max;
	      var min = this._min;
	      var value = dataPoint[this._valueField] || 1;
	      var radius = dataPoint.radius || this._cfgRadius || defaultRadius;

	      if (!store[x]) {
	        store[x] = [];
	        radi[x] = [];
	      }

	      if (!store[x][y]) {
	        store[x][y] = value;
	        radi[x][y] = radius;
	      } else {
	        store[x][y] += value;
	      }
	      var storedVal = store[x][y];

	      if (storedVal > max) {
	        if (!forceRender) {
	          this._max = storedVal;
	        } else {
	          this.setDataMax(storedVal);
	        }
	        return false;
	      } else if (storedVal < min) {
	        if (!forceRender) {
	          this._min = storedVal;
	        } else {
	          this.setDataMin(storedVal);
	        }
	        return false;
	      } else {
	        return {
	          x: x,
	          y: y,
	          value: value,
	          radius: radius,
	          min: min,
	          max: max
	        };
	      }
	    },
	    _unOrganizeData: function _unOrganizeData() {
	      var unorganizedData = [];
	      var data = this._data;
	      var radi = this._radi;

	      for (var x in data) {
	        for (var y in data[x]) {

	          unorganizedData.push({
	            x: x,
	            y: y,
	            radius: radi[x][y],
	            value: data[x][y]
	          });
	        }
	      }
	      return {
	        min: this._min,
	        max: this._max,
	        data: unorganizedData
	      };
	    },
	    _onExtremaChange: function _onExtremaChange() {
	      this._coordinator.emit('extremachange', {
	        min: this._min,
	        max: this._max
	      });
	    },
	    addData: function addData() {
	      if (arguments[0].length > 0) {
	        var dataArr = arguments[0];
	        var dataLen = dataArr.length;
	        while (dataLen--) {
	          this.addData.call(this, dataArr[dataLen]);
	        }
	      } else {
	        // add to store  
	        var organisedEntry = this._organiseData(arguments[0], true);
	        if (organisedEntry) {
	          // if it's the first datapoint initialize the extremas with it
	          if (this._data.length === 0) {
	            this._min = this._max = organisedEntry.value;
	          }
	          this._coordinator.emit('renderpartial', {
	            min: this._min,
	            max: this._max,
	            data: [organisedEntry]
	          });
	        }
	      }
	      return this;
	    },
	    setData: function setData(data) {
	      var dataPoints = data.data;
	      var pointsLen = dataPoints.length;

	      // reset data arrays
	      this._data = [];
	      this._radi = [];

	      for (var i = 0; i < pointsLen; i++) {
	        this._organiseData(dataPoints[i], false);
	      }
	      this._max = data.max;
	      this._min = data.min || 0;

	      this._onExtremaChange();
	      this._coordinator.emit('renderall', this._getInternalData());
	      return this;
	    },
	    removeData: function removeData() {
	      // TODO: implement
	    },
	    setDataMax: function setDataMax(max) {
	      this._max = max;
	      this._onExtremaChange();
	      this._coordinator.emit('renderall', this._getInternalData());
	      return this;
	    },
	    setDataMin: function setDataMin(min) {
	      this._min = min;
	      this._onExtremaChange();
	      this._coordinator.emit('renderall', this._getInternalData());
	      return this;
	    },
	    setCoordinator: function setCoordinator(coordinator) {
	      this._coordinator = coordinator;
	    },
	    _getInternalData: function _getInternalData() {
	      return {
	        max: this._max,
	        min: this._min,
	        data: this._data,
	        radi: this._radi
	      };
	    },
	    getData: function getData() {
	      return this._unOrganizeData();
	    } /*,
	         TODO: rethink.
	       getValueAt: function(point) {
	       var value;
	       var radius = 100;
	       var x = point.x;
	       var y = point.y;
	       var data = this._data;
	         if (data[x] && data[x][y]) {
	         return data[x][y];
	       } else {
	         var values = [];
	         // radial search for datapoints based on default radius
	         for(var distance = 1; distance < radius; distance++) {
	           var neighbors = distance * 2 +1;
	           var startX = x - distance;
	           var startY = y - distance;
	             for(var i = 0; i < neighbors; i++) {
	             for (var o = 0; o < neighbors; o++) {
	               if ((i == 0 || i == neighbors-1) || (o == 0 || o == neighbors-1)) {
	                 if (data[startY+i] && data[startY+i][startX+o]) {
	                   values.push(data[startY+i][startX+o]);
	                 }
	               } else {
	                 continue;
	               } 
	             }
	           }
	         }
	         if (values.length > 0) {
	           return Math.max.apply(Math, values);
	         }
	       }
	       return false;
	      }*/
	  };

	  return Store;
	}();

	var Canvas2dRenderer = function Canvas2dRendererClosure() {

	  var _getColorPalette = function _getColorPalette(config) {
	    var gradientConfig = config.gradient || config.defaultGradient;
	    var paletteCanvas = document.createElement('canvas');
	    var paletteCtx = paletteCanvas.getContext('2d');

	    paletteCanvas.width = 256;
	    paletteCanvas.height = 1;

	    var gradient = paletteCtx.createLinearGradient(0, 0, 256, 1);
	    for (var key in gradientConfig) {
	      gradient.addColorStop(key, gradientConfig[key]);
	    }

	    paletteCtx.fillStyle = gradient;
	    paletteCtx.fillRect(0, 0, 256, 1);

	    return paletteCtx.getImageData(0, 0, 256, 1).data;
	  };

	  var _getPointTemplate = function _getPointTemplate(radius, blurFactor) {
	    var tplCanvas = document.createElement('canvas');
	    var tplCtx = tplCanvas.getContext('2d');
	    var x = radius;
	    var y = radius;
	    tplCanvas.width = tplCanvas.height = radius * 2;

	    if (blurFactor == 1) {
	      tplCtx.beginPath();
	      tplCtx.arc(x, y, radius, 0, 2 * Math.PI, false);
	      tplCtx.fillStyle = 'rgba(0,0,0,1)';
	      tplCtx.fill();
	    } else {
	      var gradient = tplCtx.createRadialGradient(x, y, radius * blurFactor, x, y, radius);
	      gradient.addColorStop(0, 'rgba(0,0,0,1)');
	      gradient.addColorStop(1, 'rgba(0,0,0,0)');
	      tplCtx.fillStyle = gradient;
	      tplCtx.fillRect(0, 0, 2 * radius, 2 * radius);
	    }

	    return tplCanvas;
	  };

	  var _prepareData = function _prepareData(data) {
	    var renderData = [];
	    var min = data.min;
	    var max = data.max;
	    var radi = data.radi;
	    var data = data.data;

	    var xValues = Object.keys(data);
	    var xValuesLen = xValues.length;

	    while (xValuesLen--) {
	      var xValue = xValues[xValuesLen];
	      var yValues = Object.keys(data[xValue]);
	      var yValuesLen = yValues.length;
	      while (yValuesLen--) {
	        var yValue = yValues[yValuesLen];
	        var value = data[xValue][yValue];
	        var radius = radi[xValue][yValue];
	        renderData.push({
	          x: xValue,
	          y: yValue,
	          value: value,
	          radius: radius
	        });
	      }
	    }

	    return {
	      min: min,
	      max: max,
	      data: renderData
	    };
	  };

	  function Canvas2dRenderer(config) {
	    var container = config.container;
	    var shadowCanvas = this.shadowCanvas = document.createElement('canvas');
	    var canvas = this.canvas = config.canvas || document.createElement('canvas');
	    var renderBoundaries = this._renderBoundaries = [10000, 10000, 0, 0];

	    var computed = getComputedStyle(config.container) || {};

	    canvas.className = 'heatmap-canvas';

	    this._width = canvas.width = shadowCanvas.width = config.width || +computed.width.replace(/px/, '');
	    this._height = canvas.height = shadowCanvas.height = config.height || +computed.height.replace(/px/, '');

	    this.shadowCtx = shadowCanvas.getContext('2d');
	    this.ctx = canvas.getContext('2d');

	    // @TODO:
	    // conditional wrapper

	    canvas.style.cssText = shadowCanvas.style.cssText = 'position:absolute;left:0;top:0;';

	    container.style.position = 'relative';
	    container.appendChild(canvas);

	    this._palette = _getColorPalette(config);
	    this._templates = {};

	    this._setStyles(config);
	  };

	  Canvas2dRenderer.prototype = {
	    renderPartial: function renderPartial(data) {
	      if (data.data.length > 0) {
	        this._drawAlpha(data);
	        this._colorize();
	      }
	    },
	    renderAll: function renderAll(data) {
	      // reset render boundaries
	      this._clear();
	      if (data.data.length > 0) {
	        this._drawAlpha(_prepareData(data));
	        this._colorize();
	      }
	    },
	    _updateGradient: function _updateGradient(config) {
	      this._palette = _getColorPalette(config);
	    },
	    updateConfig: function updateConfig(config) {
	      if (config['gradient']) {
	        this._updateGradient(config);
	      }
	      this._setStyles(config);
	    },
	    setDimensions: function setDimensions(width, height) {
	      this._width = width;
	      this._height = height;
	      this.canvas.width = this.shadowCanvas.width = width;
	      this.canvas.height = this.shadowCanvas.height = height;
	    },
	    _clear: function _clear() {
	      this.shadowCtx.clearRect(0, 0, this._width, this._height);
	      this.ctx.clearRect(0, 0, this._width, this._height);
	    },
	    _setStyles: function _setStyles(config) {
	      this._blur = config.blur == 0 ? 0 : config.blur || config.defaultBlur;

	      if (config.backgroundColor) {
	        this.canvas.style.backgroundColor = config.backgroundColor;
	      }

	      this._width = this.canvas.width = this.shadowCanvas.width = config.width || this._width;
	      this._height = this.canvas.height = this.shadowCanvas.height = config.height || this._height;

	      this._opacity = (config.opacity || 0) * 255;
	      this._maxOpacity = (config.maxOpacity || config.defaultMaxOpacity) * 255;
	      this._minOpacity = (config.minOpacity || config.defaultMinOpacity) * 255;
	      this._useGradientOpacity = !!config.useGradientOpacity;
	    },
	    _drawAlpha: function _drawAlpha(data) {
	      var min = this._min = data.min;
	      var max = this._max = data.max;
	      var data = data.data || [];
	      var dataLen = data.length;
	      // on a point basis?
	      var blur = 1 - this._blur;

	      while (dataLen--) {

	        var point = data[dataLen];

	        var x = point.x;
	        var y = point.y;
	        var radius = point.radius;
	        // if value is bigger than max
	        // use max as value
	        var value = Math.min(point.value, max);
	        var rectX = x - radius;
	        var rectY = y - radius;
	        var shadowCtx = this.shadowCtx;

	        var tpl;
	        if (!this._templates[radius]) {
	          this._templates[radius] = tpl = _getPointTemplate(radius, blur);
	        } else {
	          tpl = this._templates[radius];
	        }
	        // value from minimum / value range
	        // => [0, 1]
	        var templateAlpha = (value - min) / (max - min);
	        // this fixes #176: small values are not visible because globalAlpha < .01 cannot be read from imageData
	        shadowCtx.globalAlpha = templateAlpha < .01 ? .01 : templateAlpha;

	        shadowCtx.drawImage(tpl, rectX, rectY);

	        // update renderBoundaries
	        if (rectX < this._renderBoundaries[0]) {
	          this._renderBoundaries[0] = rectX;
	        }
	        if (rectY < this._renderBoundaries[1]) {
	          this._renderBoundaries[1] = rectY;
	        }
	        if (rectX + 2 * radius > this._renderBoundaries[2]) {
	          this._renderBoundaries[2] = rectX + 2 * radius;
	        }
	        if (rectY + 2 * radius > this._renderBoundaries[3]) {
	          this._renderBoundaries[3] = rectY + 2 * radius;
	        }
	      }
	    },
	    _colorize: function _colorize() {
	      var x = this._renderBoundaries[0];
	      var y = this._renderBoundaries[1];
	      var width = this._renderBoundaries[2] - x;
	      var height = this._renderBoundaries[3] - y;
	      var maxWidth = this._width;
	      var maxHeight = this._height;
	      var opacity = this._opacity;
	      var maxOpacity = this._maxOpacity;
	      var minOpacity = this._minOpacity;
	      var useGradientOpacity = this._useGradientOpacity;

	      if (x < 0) {
	        x = 0;
	      }
	      if (y < 0) {
	        y = 0;
	      }
	      if (x + width > maxWidth) {
	        width = maxWidth - x;
	      }
	      if (y + height > maxHeight) {
	        height = maxHeight - y;
	      }

	      var img = this.shadowCtx.getImageData(x, y, width, height);
	      var imgData = img.data;
	      var len = imgData.length;
	      var palette = this._palette;

	      for (var i = 3; i < len; i += 4) {
	        var alpha = imgData[i];
	        var offset = alpha * 4;

	        if (!offset) {
	          continue;
	        }

	        var finalAlpha;
	        if (opacity > 0) {
	          finalAlpha = opacity;
	        } else {
	          if (alpha < maxOpacity) {
	            if (alpha < minOpacity) {
	              finalAlpha = minOpacity;
	            } else {
	              finalAlpha = alpha;
	            }
	          } else {
	            finalAlpha = maxOpacity;
	          }
	        }

	        imgData[i - 3] = palette[offset];
	        imgData[i - 2] = palette[offset + 1];
	        imgData[i - 1] = palette[offset + 2];
	        imgData[i] = useGradientOpacity ? palette[offset + 3] : finalAlpha;
	      }

	      //img.data = imgData;
	      this.ctx.putImageData(img, x, y);

	      this._renderBoundaries = [1000, 1000, 0, 0];
	    },
	    getValueAt: function getValueAt(point) {
	      var value;
	      var shadowCtx = this.shadowCtx;
	      var img = shadowCtx.getImageData(point.x, point.y, 1, 1);
	      var data = img.data[3];
	      var max = this._max;
	      var min = this._min;

	      value = Math.abs(max - min) * (data / 255) >> 0;

	      return value;
	    },
	    getDataURL: function getDataURL() {
	      return this.canvas.toDataURL();
	    }
	  };

	  return Canvas2dRenderer;
	}();

	var Renderer = function RendererClosure() {

	  var rendererFn = false;

	  if (HeatmapConfig['defaultRenderer'] === 'canvas2d') {
	    rendererFn = Canvas2dRenderer;
	  }

	  return rendererFn;
	}();

	var Util = {
	  merge: function merge() {
	    var merged = {};
	    var argsLen = arguments.length;
	    for (var i = 0; i < argsLen; i++) {
	      var obj = arguments[i];
	      for (var key in obj) {
	        merged[key] = obj[key];
	      }
	    }
	    return merged;
	  }
	};
	// Heatmap Constructor
	var Heatmap = function HeatmapClosure() {

	  var Coordinator = function CoordinatorClosure() {

	    function Coordinator() {
	      this.cStore = {};
	    };

	    Coordinator.prototype = {
	      on: function on(evtName, callback, scope) {
	        var cStore = this.cStore;

	        if (!cStore[evtName]) {
	          cStore[evtName] = [];
	        }
	        cStore[evtName].push(function (data) {
	          return callback.call(scope, data);
	        });
	      },
	      emit: function emit(evtName, data) {
	        var cStore = this.cStore;
	        if (cStore[evtName]) {
	          var len = cStore[evtName].length;
	          for (var i = 0; i < len; i++) {
	            var callback = cStore[evtName][i];
	            callback(data);
	          }
	        }
	      }
	    };

	    return Coordinator;
	  }();

	  var _connect = function _connect(scope) {
	    var renderer = scope._renderer;
	    var coordinator = scope._coordinator;
	    var store = scope._store;

	    coordinator.on('renderpartial', renderer.renderPartial, renderer);
	    coordinator.on('renderall', renderer.renderAll, renderer);
	    coordinator.on('extremachange', function (data) {
	      scope._config.onExtremaChange && scope._config.onExtremaChange({
	        min: data.min,
	        max: data.max,
	        gradient: scope._config['gradient'] || scope._config['defaultGradient']
	      });
	    });
	    store.setCoordinator(coordinator);
	  };

	  function Heatmap() {
	    var config = this._config = Util.merge(HeatmapConfig, arguments[0] || {});
	    this._coordinator = new Coordinator();
	    if (config['plugin']) {
	      var pluginToLoad = config['plugin'];
	      if (!HeatmapConfig.plugins[pluginToLoad]) {
	        throw new Error('Plugin \'' + pluginToLoad + '\' not found. Maybe it was not registered.');
	      } else {
	        var plugin = HeatmapConfig.plugins[pluginToLoad];
	        // set plugin renderer and store
	        this._renderer = new plugin.renderer(config);
	        this._store = new plugin.store(config);
	      }
	    } else {
	      this._renderer = new Renderer(config);
	      this._store = new Store(config);
	    }
	    _connect(this);
	  };

	  // @TODO:
	  // add API documentation
	  Heatmap.prototype = {
	    addData: function addData() {
	      this._store.addData.apply(this._store, arguments);
	      return this;
	    },
	    removeData: function removeData() {
	      this._store.removeData && this._store.removeData.apply(this._store, arguments);
	      return this;
	    },
	    setData: function setData() {
	      this._store.setData.apply(this._store, arguments);
	      return this;
	    },
	    setDataMax: function setDataMax() {
	      this._store.setDataMax.apply(this._store, arguments);
	      return this;
	    },
	    setDataMin: function setDataMin() {
	      this._store.setDataMin.apply(this._store, arguments);
	      return this;
	    },
	    configure: function configure(config) {
	      this._config = Util.merge(this._config, config);
	      this._renderer.updateConfig(this._config);
	      this._coordinator.emit('renderall', this._store._getInternalData());
	      return this;
	    },
	    repaint: function repaint() {
	      this._coordinator.emit('renderall', this._store._getInternalData());
	      return this;
	    },
	    getData: function getData() {
	      return this._store.getData();
	    },
	    getDataURL: function getDataURL() {
	      return this._renderer.getDataURL();
	    },
	    getValueAt: function getValueAt(point) {

	      if (this._store.getValueAt) {
	        return this._store.getValueAt(point);
	      } else if (this._renderer.getValueAt) {
	        return this._renderer.getValueAt(point);
	      } else {
	        return null;
	      }
	    }
	  };

	  return Heatmap;
	}();

	// core
	var heatmapFactory = {
	  create: function create(config) {
	    return new Heatmap(config);
	  },
	  register: function register(pluginKey, plugin) {
	    HeatmapConfig.plugins[pluginKey] = plugin;
	  }
	};

	exports.default = heatmapFactory;

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.MapVOpt = exports.MapVLayer = undefined;

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _CombineMapV = __webpack_require__(118);

	var _CombineMapV2 = _interopRequireDefault(_CombineMapV);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var GeoMapV = __webpack_require__(119);
	/**
	 * 需要用户创建的类</br>
	 *  MapV复合可视化，搭建了球和MapV之间的桥梁，具体MapV应用请参见MapV官网（https://mapv.baidu.com/）</br>
	 * @see <a href='../../../examples/gallery/editor.html#honeyComb'>蜂巢网格</a> 
	 * @see <a href='../../../examples/gallery/editor.html#migrate'>迁徙图</a> 
	 * @see <a href='../../../examples/gallery/editor.html#weiboPoint'>微博点</a> 
	 * @see <a href='../../../examples/gallery/editor.html#migrateAll'>数据链路</a> 
	 * @see <a href='../../../examples/gallery/editor.html#square'>方形网格</a> 
	 */

	var MapVLayer = exports.MapVLayer = function () {
	    function MapVLayer(mapvOpt) {
	        _classCallCheck(this, MapVLayer);

	        this._id = Cesium.createGuid();;
	        this._MapV = null;
	        this._show = true;
	        this._MapVOptions = mapvOpt;
	    }

	    _createClass(MapVLayer, [{
	        key: 'addToMap',

	        /**
	         * 初始化mapv
	         * @param viewer 
	         */
	        value: function addToMap(viewer) {
	            this._viewer = viewer;
	            console.log(viewer);
	            this._initMapv();
	        }
	        /**
	         * 销毁mapv
	         */

	    }, {
	        key: 'destroyItem',
	        value: function destroyItem() {
	            this._MapV.destroy();
	        }
	        /**
	         * 获取mapv参数
	         */

	    }, {
	        key: 'getMapVOpt',
	        value: function getMapVOpt() {
	            return this._MapVOptions;
	        }

	        /**
	         * mpv更新
	         * @param mapvOpt 
	         */

	    }, {
	        key: 'update',
	        value: function update(mapvOpt) {
	            this._MapVOptions = mapvOpt;
	            if (this._MapV) {
	                this.destroyItem();
	            }
	            this._initMapv();
	        }

	        /**
	         * 通过数据创建Mapv
	         * @param options
	         */

	    }, {
	        key: 'create',
	        value: function create(options) {
	            this._MapVOptions = options;
	            var dataSet = this.createDataSet(this._MapVOptions.data);
	            return this._MapV = new _CombineMapV2.default(this._viewer, dataSet, this._MapVOptions.options);
	        }
	        /**
	         * 创建数据集
	         * @public
	         * @param [data] 包含初始数据的可选数组
	         */

	    }, {
	        key: 'createDataSet',
	        value: function createDataSet(data) {
	            return new GeoMapV.DataSet(data);
	        }
	    }, {
	        key: '_initMapv',
	        value: function _initMapv() {
	            if (!this._MapVOptions) return;
	            this.create(this._MapVOptions);
	        }
	    }, {
	        key: '_DataSetAdd',
	        value: function _DataSetAdd(data, senderId) {
	            return new GeoMapV.DataSet.add(data, senderId);
	        }
	    }, {
	        key: '_DataSetReset',
	        value: function _DataSetReset() {
	            return new GeoMapV.DataSet.reset();
	        }
	    }, {
	        key: '_DataSetGet',
	        value: function _DataSetGet(args) {
	            return new GeoMapV.DataSet.get(args);
	        }
	    }, {
	        key: '_DataSetSet',
	        value: function _DataSetSet(args) {
	            return new GeoMapV.DataSet.set(args);
	        }
	    }, {
	        key: '_DataSetClear',
	        value: function _DataSetClear(args) {
	            return new GeoMapV.DataSet.clear(args);
	        }
	    }, {
	        key: '_DataSetRemove',
	        value: function _DataSetRemove(args) {
	            return new GeoMapV.DataSet.remove(args);
	        }
	    }, {
	        key: '_DataSetUpdate',
	        value: function _DataSetUpdate(args, condition) {
	            return new GeoMapV.DataSet.update(args, condition);
	        }
	    }, {
	        key: '_DataSetTransferCoordinate',
	        value: function _DataSetTransferCoordinate(data, transferFn, fromColumn, toColumnName) {
	            return new GeoMapV.DataSet.transferCoordinate(data, transferFn, fromColumn, toColumnName);
	        }
	    }, {
	        key: '_DataSetinitGeometry',
	        value: function _DataSetinitGeometry(transferFn) {
	            return new GeoMapV.DataSet.initGeometry(transferFn);
	        }
	    }, {
	        key: '_DataSetGetMax',
	        value: function _DataSetGetMax(columnName) {
	            return new GeoMapV.DataSet.getMax(columnName);
	        }
	    }, {
	        key: '_DataSetGetSum',
	        value: function _DataSetGetSum(columnName) {
	            return new GeoMapV.DataSet.getSum(columnName);
	        }
	    }, {
	        key: '_DataSetGetMin',
	        value: function _DataSetGetMin(columnName) {
	            return new GeoMapV.DataSet.getMin(columnName);
	        }
	    }, {
	        key: '_DataSetUnique',
	        value: function _DataSetUnique(columnName) {
	            return new GeoMapV.DataSet.getUnique(columnName);
	        }
	        /**
	         * 获取   
	         * @param data 
	         */

	    }, {
	        key: '_getDataSet',
	        value: function _getDataSet(data) {
	            return new GeoMapV.geojson.getDataSet(data);
	        }
	        /**
	         * 根据弧线的坐标节点数组
	         * @param data 
	         */

	    }, {
	        key: '_getCurvePoints',
	        value: function _getCurvePoints(data) {
	            return new GeoMapV.utilCurve.getPoints(data);
	        }
	        /**
	         * 获取城市中心坐标点
	         * @param name 
	         */

	    }, {
	        key: '_getCenterByCityName',
	        value: function _getCenterByCityName(name) {
	            var coordinate = new GeoMapV.utilCityCenter.getCenterByCityName(name);
	            if (coordinate.lng === undefined) {
	                return undefined;
	            } else {
	                return coordinate;
	            }
	        }
	        /**
	         * 根据城市名获取省份
	         * @param name 
	         */

	    }, {
	        key: '_getProvinceNameByCityName',
	        value: function _getProvinceNameByCityName(name) {
	            return new GeoMapV.utilCityCenter.getProvinceNameByCityName(name);
	        }
	    }, {
	        key: 'show',
	        get: function get() {
	            return this._show;
	        },
	        set: function set(value) {
	            if (value) {
	                this._MapV.show();
	            } else {
	                this._MapV.hide();
	            }
	            this._show = value;
	        }
	    }, {
	        key: 'utilCurve',
	        get: function get() {
	            return {
	                getPoints: this._getCurvePoints
	            };
	        }
	    }, {
	        key: 'utilCityCenter',
	        get: function get() {
	            return {
	                getCenterByCityName: this._getCenterByCityName,
	                getProvinceNameByCityName: this._getProvinceNameByCityName
	            };
	        }
	    }, {
	        key: 'geojson',
	        get: function get() {
	            return {
	                getDataSet: this._getDataSet
	            };
	        }
	        /**
	         * 数据集操作方法
	         */

	    }, {
	        key: 'DataSet',
	        get: function get() {
	            return {
	                add: this._DataSetAdd,
	                Reset: this._DataSetReset,
	                get: this._DataSetGet,
	                set: this._DataSetSet,
	                clear: this._DataSetClear,
	                remove: this._DataSetRemove,
	                update: this._DataSetUpdate,
	                transferCoordinate: this._DataSetTransferCoordinate,
	                initGeometry: this._DataSetinitGeometry,
	                getMax: this._DataSetGetMax,
	                getSum: this._DataSetGetSum,
	                getMin: this._DataSetGetMin,
	                getUnique: this._DataSetUnique
	            };
	        }
	    }]);

	    return MapVLayer;
	}();
	/**
	 * 需要用户创建的类</br>
	 * MapV参数类</br>
	 * @see <a href='../../../examples/gallery/editor.html#honeyComb'>蜂巢网格</a> 
	 * @see <a href='../../../examples/gallery/editor.html#migrate'>迁徙图</a> 
	 * @see <a href='../../../examples/gallery/editor.html#weiboPoint'>微博点</a> 
	 * @see <a href='../../../examples/gallery/editor.html#migrateAll'>数据链路</a> 
	 * @see <a href='../../../examples/gallery/editor.html#square'>方形网格</a> 
	 */


	var MapVOpt = exports.MapVOpt = function MapVOpt(data, options) {
	    _classCallCheck(this, MapVOpt);

	    this.data = data;
	    this.options = options;
	};

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var MapV = __webpack_require__(119);
	var baiduMapLayer = MapV ? MapV.baiduMapLayer : null;
	var BaseLayer = baiduMapLayer ? baiduMapLayer.__proto__ : Function;
	var backAngle = Cesium.Math.toRadians(95);
	var divId = 0;

	var MapVRenderer = function (_BaseLayer) {
		_inherits(MapVRenderer, _BaseLayer);

		//========== 构造方法 ========== 
		function MapVRenderer(t, e, i, n) {
			_classCallCheck(this, MapVRenderer);

			var _this = _possibleConstructorReturn(this, (MapVRenderer.__proto__ || Object.getPrototypeOf(MapVRenderer)).call(this, t, e, i));

			if (!BaseLayer) {
				return _possibleConstructorReturn(_this);
			}

			_this.map = t, _this.scene = t.scene, _this.dataSet = e;
			i = i || {}, _this.init(i), _this.argCheck(i), _this.initDevicePixelRatio(), _this.canvasLayer = n, _this.stopAniamation = !1, _this.animation = i.animation, _this.clickEvent = _this.clickEvent.bind(_this), _this.mousemoveEvent = _this.mousemoveEvent.bind(_this), _this.bindEvent();

			return _this;
		}
		//========== 方法 ========== 


		_createClass(MapVRenderer, [{
			key: "initDevicePixelRatio",
			value: function initDevicePixelRatio() {
				this.devicePixelRatio = window.devicePixelRatio || 1;
			}
		}, {
			key: "clickEvent",
			value: function clickEvent(t) {
				var e = t.point;
				_get(MapVRenderer.prototype.__proto__ || Object.getPrototypeOf(MapVRenderer.prototype), "clickEvent", this).call(this, e, t);
			}
		}, {
			key: "mousemoveEvent",
			value: function mousemoveEvent(t) {
				var e = t.point;
				_get(MapVRenderer.prototype.__proto__ || Object.getPrototypeOf(MapVRenderer.prototype), "mousemoveEvent", this).call(this, e, t);
			}
		}, {
			key: "addAnimatorEvent",
			value: function addAnimatorEvent() {}
		}, {
			key: "animatorMovestartEvent",
			value: function animatorMovestartEvent() {
				var t = this.options.animation;
				this.isEnabledTime() && this.animator && (this.steps.step = t.stepsRange.start);
			}
		}, {
			key: "animatorMoveendEvent",
			value: function animatorMoveendEvent() {
				this.isEnabledTime() && this.animator;
			}
		}, {
			key: "bindEvent",
			value: function bindEvent() {
				this.map;
				this.options.methods && (this.options.methods.click, this.options.methods.mousemove);
			}
		}, {
			key: "unbindEvent",
			value: function unbindEvent() {
				var t = this.map;
				this.options.methods && (this.options.methods.click && t.off("click", this.clickEvent), this.options.methods.mousemove && t.off("mousemove", this.mousemoveEvent));
			}
		}, {
			key: "getContext",
			value: function getContext() {
				return this.canvasLayer.canvas.getContext(this.context);
			}
		}, {
			key: "init",
			value: function init(t) {
				this.options = t;
				this.initDataRange(t);
				this.context = this.options.context || "2d";

				if (this.options.zIndex && this.canvasLayer && this.canvasLayer.setZIndex) this.canvasLayer.setZIndex(this.options.zIndex);

				this.initAnimator();
			}
		}, {
			key: "_canvasUpdate",
			value: function _canvasUpdate(t) {
				this.map;
				var e = this.scene;
				if (this.canvasLayer && !this.stopAniamation) {
					var i = this.options.animation,
					    n = this.getContext();
					if (this.isEnabledTime()) {
						if (void 0 === t) return void this.clear(n);
						"2d" === this.context && (n.save(), n.globalCompositeOperation = "destination-out", n.fillStyle = "rgba(0, 0, 0, .1)", n.fillRect(0, 0, n.canvas.width, n.canvas.height), n.restore());
					} else this.clear(n);
					if ("2d" === this.context) for (var o in this.options) {
						n[o] = this.options[o];
					} else n.clear(n.COLOR_BUFFER_BIT);
					var canvasLayer = this.canvasLayer;
					var a = {
						transferCoordinate: function transferCoordinate(t) {
							var defVal = [99999, 99999];

							//坐标转换
							var position = Cesium.Cartesian3.fromDegrees(t[0], t[1]);
							if (!position) {
								return defVal;
							}
							var px = e.cartesianToCanvasCoordinates(position);
							if (!px) {
								return defVal;
							}

							//判断是否在球的背面  
							if (e.mode === Cesium.SceneMode.SCENE3D) {
								var angle = Cesium.Cartesian3.angleBetween(e.camera.position, position);
								if (angle > backAngle) {
									//canvasLayer.hide();
									return defVal;
								} else {
									//canvasLayer.show();
								}
							}
							//判断是否在球的背面

							return [px.x, px.y];
						}
					};
					void 0 !== t && (a.filter = function (e) {
						var n = i.trails || 10;
						return !!(t && e.time > t - n && e.time < t);
					});
					var c = this.dataSet.get(a);
					this.processData(c), "m" == this.options.unit && this.options.size, this.options._size = this.options.size;
					var h = Cesium.SceneTransforms.wgs84ToWindowCoordinates(e, Cesium.Cartesian3.fromDegrees(0, 0));

					this.drawContext(n, new MapV.DataSet(c), this.options, h), this.options.updateCallback && this.options.updateCallback(t);
				}
			}
		}, {
			key: "updateData",
			value: function updateData(t, e) {
				var i = t;
				i && i.get && (i = i.get()), void 0 != i && this.dataSet.set(i), _get(MapVRenderer.prototype.__proto__ || Object.getPrototypeOf(MapVRenderer.prototype), "update", this).call(this, {
					options: e
				});
			}
		}, {
			key: "addData",
			value: function addData(t, e) {
				var i = t;
				t && t.get && (i = t.get()), this.dataSet.add(i), this.update({
					options: e
				});
			}
		}, {
			key: "getData",
			value: function getData() {
				return this.dataSet;
			}
		}, {
			key: "removeData",
			value: function removeData(t) {
				if (this.dataSet) {
					var e = this.dataSet.get({
						filter: function filter(e) {
							return null == t || "function" != typeof t || !t(e);
						}
					});
					this.dataSet.set(e), this.update({
						options: null
					});
				}
			}
		}, {
			key: "clearData",
			value: function clearData() {
				this.dataSet && this.dataSet.clear(), this.update({
					options: null
				});
			}
		}, {
			key: "draw",
			value: function draw() {
				this.canvasLayer.draw();
			}
		}, {
			key: "clear",
			value: function clear(t) {
				t && t.clearRect && t.clearRect(0, 0, t.canvas.width, t.canvas.height);
			}
			/**
	   * @function MapVRenderer.prototype.destroy
	   * @description 释放资源。
	   */

		}, {
			key: "destroy",
			value: function destroy() {
				this.unbindEvent();
				this.clear(this.getContext());
				this.clearData();
				this.animator && this.animator.stop();
				this.animator = null;
				this.canvasLayer = null;
			}
		}]);

		return MapVRenderer;
	}(BaseLayer);

	/**
	 * @class MapVLayer
	 * @classdesc MapV 图层。
	 * @param {MapV.DataSet} dataSet - MapV 图层数据集。
	 * @param {Object} MapVOptions - MapV 图层参数。
	 * @param {Object} options - 参数。
	 * @param {string} [options.attributionPrefix] - 版权信息前缀。
	 * @param {string} [options.attribution='© 2018 百度 MapV'] - 版权信息。
	 * @fires MapVLayer#loaded
	 */


	var MapVLayer = function () {
		//========== 构造方法 ========== 
		function MapVLayer(t, e, i, n) {
			_classCallCheck(this, MapVLayer);

			this.map = t, this.scene = t.scene, this.MapVBaseLayer = new MapVRenderer(t, e, i, this), this.MapVOptions = i, this.initDevicePixelRatio(), this.canvas = this._createCanvas(), this.render = this.render.bind(this), void 0 != n ? (this.container = n, n.appendChild(this.canvas)) : (this.container = t.container, this.addInnerContainer()), this.bindEvent(), this._reset();
		}
		//========== 方法 ========== 


		_createClass(MapVLayer, [{
			key: "initDevicePixelRatio",
			value: function initDevicePixelRatio() {
				this.devicePixelRatio = window.devicePixelRatio || 1;
			}
		}, {
			key: "addInnerContainer",
			value: function addInnerContainer() {
				this.container.appendChild(this.canvas);
			}
		}, {
			key: "bindEvent",
			value: function bindEvent() {
				var _this2 = this;

				//绑定cesium事件与MapV联动
				this.innerMoveStart = this.moveStartEvent.bind(this), this.innerMoveEnd = this.moveEndEvent.bind(this);
				this.scene.camera.moveStart.addEventListener(this.innerMoveStart, this);
				this.scene.camera.moveEnd.addEventListener(this.innerMoveEnd, this);
				//解决cesium有时 moveStart 后没有触发 moveEnd
				var handler = new Cesium.ScreenSpaceEventHandler(this.canvas);
				handler.setInputAction(function (event) {
					_this2.innerMoveEnd();
				}, Cesium.ScreenSpaceEventType.LEFT_UP);
				handler.setInputAction(function (event) {
					_this2.innerMoveEnd();
				}, Cesium.ScreenSpaceEventType.MIDDLE_UP);
				this.handler = handler;
			}
		}, {
			key: "unbindEvent",
			value: function unbindEvent() {
				this.scene.camera.moveStart.removeEventListener(this.innerMoveStart, this);
				this.scene.camera.moveEnd.removeEventListener(this.innerMoveEnd, this);
				this.scene.postRender.removeEventListener(this._reset, this);
				if (this.handler) {
					this.handler.destroy();
					this.handler = null;
				}
			}
		}, {
			key: "moveStartEvent",
			value: function moveStartEvent() {
				this.MapVBaseLayer && this.MapVBaseLayer.animatorMovestartEvent();
				//this._unvisiable()
				this.scene.postRender.addEventListener(this._reset, this);
				// console.log('MapV moveStartEvent');
			}
		}, {
			key: "moveEndEvent",
			value: function moveEndEvent() {
				this.scene.postRender.removeEventListener(this._reset, this);
				this.MapVBaseLayer && this.MapVBaseLayer.animatorMoveendEvent();
				this._reset();
				//this._visiable() 
				// console.log('MapV moveEndEvent');
			}
		}, {
			key: "zoomStartEvent",
			value: function zoomStartEvent() {
				this._unvisiable();
			}
		}, {
			key: "zoomEndEvent",
			value: function zoomEndEvent() {
				this._unvisiable();
			}
		}, {
			key: "addData",
			value: function addData(t, e) {
				void 0 != this.MapVBaseLayer && this.MapVBaseLayer.addData(t, e);
			}
		}, {
			key: "updateData",
			value: function updateData(t, e) {
				void 0 != this.MapVBaseLayer && this.MapVBaseLayer.updateData(t, e);
			}
		}, {
			key: "getData",
			value: function getData() {
				return this.MapVBaseLayer && (this.dataSet = this.MapVBaseLayer.getData()), this.dataSet;
			}
		}, {
			key: "removeData",
			value: function removeData(t) {
				void 0 != this.MapVBaseLayer && this.MapVBaseLayer && this.MapVBaseLayer.removeData(t);
			}
		}, {
			key: "removeAllData",
			value: function removeAllData() {
				void 0 != this.MapVBaseLayer && this.MapVBaseLayer.clearData();
			}
		}, {
			key: "_visiable",
			value: function _visiable() {
				return this.canvas.style.display = "block";
			}
		}, {
			key: "_unvisiable",
			value: function _unvisiable() {
				return this.canvas.style.display = "none";
			}
		}, {
			key: "_createCanvas",
			value: function _createCanvas() {
				var t = document.createElement("canvas");
				t.id = this.MapVOptions.layerid || "MapV" + divId++, t.style.position = "absolute", t.style.top = "0px", t.style.left = "0px", t.style.pointerEvents = "none", t.style.zIndex = this.MapVOptions.zIndex || 100, t.width = parseInt(this.map.canvas.width), t.height = parseInt(this.map.canvas.height), t.style.width = this.map.canvas.style.width, t.style.height = this.map.canvas.style.height;
				var e = this.devicePixelRatio;
				return "2d" == this.MapVOptions.context && t.getContext(this.MapVOptions.context).scale(e, e), t;
			}
		}, {
			key: "_reset",
			value: function _reset() {
				this.resizeCanvas(), this.fixPosition(), this.onResize(), this.render();
			}
		}, {
			key: "draw",
			value: function draw() {
				this._reset();
			}
		}, {
			key: "show",
			value: function show() {
				this._visiable();
			}
		}, {
			key: "hide",
			value: function hide() {
				this._unvisiable();
			}
		}, {
			key: "destroy",
			value: function destroy() {
				//释放	
				this.unbindEvent();
				this.remove();
			}
		}, {
			key: "remove",
			value: function remove() {
				void 0 != this.MapVBaseLayer && (this.removeAllData(), this.MapVBaseLayer.destroy(), this.MapVBaseLayer = void 0, this.canvas.parentElement.removeChild(this.canvas));
			}
		}, {
			key: "update",
			value: function update(t) {
				void 0 != t && this.updateData(t.data, t.options);
			}
		}, {
			key: "resizeCanvas",
			value: function resizeCanvas() {
				if (void 0 != this.canvas && null != this.canvas) {
					var t = this.canvas;
					t.style.position = "absolute", t.style.top = "0px", t.style.left = "0px", t.width = parseInt(this.map.canvas.width), t.height = parseInt(this.map.canvas.height), t.style.width = this.map.canvas.style.width, t.style.height = this.map.canvas.style.height;
				}
			}
		}, {
			key: "fixPosition",
			value: function fixPosition() {}
		}, {
			key: "onResize",
			value: function onResize() {}
		}, {
			key: "render",
			value: function render() {
				void 0 != this.MapVBaseLayer && this.MapVBaseLayer._canvasUpdate();
			}
		}]);

		return MapVLayer;
	}();

	exports.default = MapVLayer;

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(process) {"use strict";

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	!function (t, e) {
	  "object" == ( false ? "undefined" : _typeof(exports)) && "undefined" != typeof module ? e(exports) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (e), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : e(t.mapv = t.mapv || {});
	}(undefined, function (t) {
	  "use strict";
	  function E(t) {
	    t && t.clearRect && t.clearRect(0, 0, t.canvas.width, t.canvas.height);
	  }function n() {
	    this._subscribers = {};
	  }n.prototype.on = function (t, e) {
	    var n = this._subscribers[t];n || (n = [], this._subscribers[t] = n), n.push({ callback: e });
	  }, n.prototype.off = function (t, e) {
	    var n = this._subscribers[t];if (n) for (var i = 0; i < n.length; i++) {
	      n[i].callback == e && (n.splice(i, 1), i--);
	    }
	  }, n.prototype._trigger = function (t, e, n) {
	    if ("*" == t) throw new Error("Cannot trigger event *");var i = [];t in this._subscribers && (i = i.concat(this._subscribers[t])), "*" in this._subscribers && (i = i.concat(this._subscribers["*"]));for (var o = 0, a = i.length; o < a; o++) {
	      var r = i[o];r.callback && r.callback(t, e, n || null);
	    }
	  };var r = { municipalities: [{ n: "北京", g: "116.395645,39.929986|12" }, { n: "上海", g: "121.487899,31.249162|12" }, { n: "天津", g: "117.210813,39.14393|12" }, { n: "重庆", g: "106.530635,29.544606|12" }], provinces: [{ n: "安徽", g: "117.216005,31.859252|8", cities: [{ n: "合肥", g: "117.282699,31.866942|12" }, { n: "安庆", g: "117.058739,30.537898|13" }, { n: "蚌埠", g: "117.35708,32.929499|13" }, { n: "亳州", g: "115.787928,33.871211|13" }, { n: "巢湖", g: "117.88049,31.608733|13" }, { n: "池州", g: "117.494477,30.660019|14" }, { n: "滁州", g: "118.32457,32.317351|13" }, { n: "阜阳", g: "115.820932,32.901211|13" }, { n: "淮北", g: "116.791447,33.960023|13" }, { n: "淮南", g: "117.018639,32.642812|13" }, { n: "黄山", g: "118.29357,29.734435|13" }, { n: "六安", g: "116.505253,31.755558|13" }, { n: "马鞍山", g: "118.515882,31.688528|13" }, { n: "宿州", g: "116.988692,33.636772|13" }, { n: "铜陵", g: "117.819429,30.94093|14" }, { n: "芜湖", g: "118.384108,31.36602|12" }, { n: "宣城", g: "118.752096,30.951642|13" }] }, { n: "福建", g: "117.984943,26.050118|8", cities: [{ n: "福州", g: "119.330221,26.047125|12" }, { n: "龙岩", g: "117.017997,25.078685|13" }, { n: "南平", g: "118.181883,26.643626|13" }, { n: "宁德", g: "119.542082,26.656527|14" }, { n: "莆田", g: "119.077731,25.44845|13" }, { n: "泉州", g: "118.600362,24.901652|12" }, { n: "三明", g: "117.642194,26.270835|14" }, { n: "厦门", g: "118.103886,24.489231|12" }, { n: "漳州", g: "117.676205,24.517065|12" }] }, { n: "甘肃", g: "102.457625,38.103267|6", cities: [{ n: "兰州", g: "103.823305,36.064226|12" }, { n: "白银", g: "104.171241,36.546682|13" }, { n: "定西", g: "104.626638,35.586056|13" }, { n: "甘南州", g: "102.917442,34.992211|14" }, { n: "嘉峪关", g: "98.281635,39.802397|13" }, { n: "金昌", g: "102.208126,38.516072|13" }, { n: "酒泉", g: "98.508415,39.741474|13" }, { n: "临夏州", g: "103.215249,35.598514|13" }, { n: "陇南", g: "104.934573,33.39448|14" }, { n: "平凉", g: "106.688911,35.55011|13" }, { n: "庆阳", g: "107.644227,35.726801|13" }, { n: "天水", g: "105.736932,34.584319|13" }, { n: "武威", g: "102.640147,37.933172|13" }, { n: "张掖", g: "100.459892,38.93932|13" }] }, { n: "广东", g: "113.394818,23.408004|8", cities: [{ n: "广州", g: "113.30765,23.120049|12" }, { n: "潮州", g: "116.630076,23.661812|13" }, { n: "东莞", g: "113.763434,23.043024|12" }, { n: "佛山", g: "113.134026,23.035095|13" }, { n: "河源", g: "114.713721,23.757251|12" }, { n: "惠州", g: "114.410658,23.11354|12" }, { n: "江门", g: "113.078125,22.575117|13" }, { n: "揭阳", g: "116.379501,23.547999|13" }, { n: "茂名", g: "110.931245,21.668226|13" }, { n: "梅州", g: "116.126403,24.304571|13" }, { n: "清远", g: "113.040773,23.698469|13" }, { n: "汕头", g: "116.72865,23.383908|13" }, { n: "汕尾", g: "115.372924,22.778731|14" }, { n: "韶关", g: "113.594461,24.80296|13" }, { n: "深圳", g: "114.025974,22.546054|12" }, { n: "阳江", g: "111.97701,21.871517|14" }, { n: "云浮", g: "112.050946,22.937976|13" }, { n: "湛江", g: "110.365067,21.257463|13" }, { n: "肇庆", g: "112.479653,23.078663|13" }, { n: "中山", g: "113.42206,22.545178|12" }, { n: "珠海", g: "113.562447,22.256915|13" }] }, { n: "广西", g: "108.924274,23.552255|7", cities: [{ n: "南宁", g: "108.297234,22.806493|12" }, { n: "百色", g: "106.631821,23.901512|13" }, { n: "北海", g: "109.122628,21.472718|13" }, { n: "崇左", g: "107.357322,22.415455|14" }, { n: "防城港", g: "108.351791,21.617398|15" }, { n: "桂林", g: "110.26092,25.262901|12" }, { n: "贵港", g: "109.613708,23.103373|13" }, { n: "河池", g: "108.069948,24.699521|14" }, { n: "贺州", g: "111.552594,24.411054|14" }, { n: "来宾", g: "109.231817,23.741166|14" }, { n: "柳州", g: "109.422402,24.329053|12" }, { n: "钦州", g: "108.638798,21.97335|13" }, { n: "梧州", g: "111.305472,23.485395|13" }, { n: "玉林", g: "110.151676,22.643974|14" }] }, { n: "贵州", g: "106.734996,26.902826|8", cities: [{ n: "贵阳", g: "106.709177,26.629907|12" }, { n: "安顺", g: "105.92827,26.228595|13" }, { n: "毕节地区", g: "105.300492,27.302612|14" }, { n: "六盘水", g: "104.852087,26.591866|13" }, { n: "铜仁地区", g: "109.196161,27.726271|14" }, { n: "遵义", g: "106.93126,27.699961|13" }, { n: "黔西南州", g: "104.900558,25.095148|11" }, { n: "黔东南州", g: "107.985353,26.583992|11" }, { n: "黔南州", g: "107.523205,26.264536|11" }] }, { n: "海南", g: "109.733755,19.180501|9", cities: [{ n: "海口", g: "110.330802,20.022071|13" }, { n: "白沙", g: "109.358586,19.216056|12" }, { n: "保亭", g: "109.656113,18.597592|12" }, { n: "昌江", g: "109.0113,19.222483|12" }, { n: "儋州", g: "109.413973,19.571153|13" }, { n: "澄迈", g: "109.996736,19.693135|13" }, { n: "东方", g: "108.85101,18.998161|13" }, { n: "定安", g: "110.32009,19.490991|13" }, { n: "琼海", g: "110.414359,19.21483|13" }, { n: "琼中", g: "109.861849,19.039771|12" }, { n: "乐东", g: "109.062698,18.658614|12" }, { n: "临高", g: "109.724101,19.805922|13" }, { n: "陵水", g: "109.948661,18.575985|12" }, { n: "三亚", g: "109.522771,18.257776|12" }, { n: "屯昌", g: "110.063364,19.347749|13" }, { n: "万宁", g: "110.292505,18.839886|13" }, { n: "文昌", g: "110.780909,19.750947|13" }, { n: "五指山", g: "109.51775,18.831306|13" }] }, { n: "河北", g: "115.661434,38.61384|7", cities: [{ n: "石家庄", g: "114.522082,38.048958|12" }, { n: "保定", g: "115.49481,38.886565|13" }, { n: "沧州", g: "116.863806,38.297615|13" }, { n: "承德", g: "117.933822,40.992521|14" }, { n: "邯郸", g: "114.482694,36.609308|13" }, { n: "衡水", g: "115.686229,37.746929|13" }, { n: "廊坊", g: "116.703602,39.518611|13" }, { n: "秦皇岛", g: "119.604368,39.945462|12" }, { n: "唐山", g: "118.183451,39.650531|13" }, { n: "邢台", g: "114.520487,37.069531|13" }, { n: "张家口", g: "114.893782,40.811188|13" }] }, { n: "河南", g: "113.486804,34.157184|7", cities: [{ n: "郑州", g: "113.649644,34.75661|12" }, { n: "安阳", g: "114.351807,36.110267|12" }, { n: "鹤壁", g: "114.29777,35.755426|13" }, { n: "焦作", g: "113.211836,35.234608|13" }, { n: "开封", g: "114.351642,34.801854|13" }, { n: "洛阳", g: "112.447525,34.657368|12" }, { n: "漯河", g: "114.046061,33.576279|13" }, { n: "南阳", g: "112.542842,33.01142|13" }, { n: "平顶山", g: "113.300849,33.745301|13" }, { n: "濮阳", g: "115.026627,35.753298|12" }, { n: "三门峡", g: "111.181262,34.78332|13" }, { n: "商丘", g: "115.641886,34.438589|13" }, { n: "新乡", g: "113.91269,35.307258|13" }, { n: "信阳", g: "114.085491,32.128582|13" }, { n: "许昌", g: "113.835312,34.02674|13" }, { n: "周口", g: "114.654102,33.623741|13" }, { n: "驻马店", g: "114.049154,32.983158|13" }] }, { n: "黑龙江", g: "128.047414,47.356592|6", cities: [{ n: "哈尔滨", g: "126.657717,45.773225|12" }, { n: "大庆", g: "125.02184,46.596709|12" }, { n: "大兴安岭地区", g: "124.196104,51.991789|10" }, { n: "鹤岗", g: "130.292472,47.338666|13" }, { n: "黑河", g: "127.50083,50.25069|14" }, { n: "鸡西", g: "130.941767,45.32154|13" }, { n: "佳木斯", g: "130.284735,46.81378|12" }, { n: "牡丹江", g: "129.608035,44.588521|13" }, { n: "七台河", g: "131.019048,45.775005|14" }, { n: "齐齐哈尔", g: "123.987289,47.3477|13" }, { n: "双鸭山", g: "131.171402,46.655102|13" }, { n: "绥化", g: "126.989095,46.646064|13" }, { n: "伊春", g: "128.910766,47.734685|14" }] }, { n: "湖北", g: "112.410562,31.209316|8", cities: [{ n: "武汉", g: "114.3162,30.581084|12" }, { n: "鄂州", g: "114.895594,30.384439|14" }, { n: "恩施", g: "109.517433,30.308978|14" }, { n: "黄冈", g: "114.906618,30.446109|14" }, { n: "黄石", g: "115.050683,30.216127|13" }, { n: "荆门", g: "112.21733,31.042611|13" }, { n: "荆州", g: "112.241866,30.332591|12" }, { n: "潜江", g: "112.768768,30.343116|13" }, { n: "神农架林区", g: "110.487231,31.595768|13" }, { n: "十堰", g: "110.801229,32.636994|13" }, { n: "随州", g: "113.379358,31.717858|13" }, { n: "天门", g: "113.12623,30.649047|13" }, { n: "仙桃", g: "113.387448,30.293966|13" }, { n: "咸宁", g: "114.300061,29.880657|13" }, { n: "襄阳", g: "112.176326,32.094934|12" }, { n: "孝感", g: "113.935734,30.927955|13" }, { n: "宜昌", g: "111.310981,30.732758|13" }] }, { n: "湖南", g: "111.720664,27.695864|7", cities: [{ n: "长沙", g: "112.979353,28.213478|12" }, { n: "常德", g: "111.653718,29.012149|12" }, { n: "郴州", g: "113.037704,25.782264|13" }, { n: "衡阳", g: "112.583819,26.898164|13" }, { n: "怀化", g: "109.986959,27.557483|13" }, { n: "娄底", g: "111.996396,27.741073|13" }, { n: "邵阳", g: "111.461525,27.236811|13" }, { n: "湘潭", g: "112.935556,27.835095|13" }, { n: "湘西州", g: "109.745746,28.317951|14" }, { n: "益阳", g: "112.366547,28.588088|13" }, { n: "永州", g: "111.614648,26.435972|13" }, { n: "岳阳", g: "113.146196,29.378007|13" }, { n: "张家界", g: "110.48162,29.124889|13" }, { n: "株洲", g: "113.131695,27.827433|13" }] }, { n: "江苏", g: "119.368489,33.013797|8", cities: [{ n: "南京", g: "118.778074,32.057236|12" }, { n: "常州", g: "119.981861,31.771397|12" }, { n: "淮安", g: "119.030186,33.606513|12" }, { n: "连云港", g: "119.173872,34.601549|12" }, { n: "南通", g: "120.873801,32.014665|12" }, { n: "苏州", g: "120.619907,31.317987|12" }, { n: "宿迁", g: "118.296893,33.95205|13" }, { n: "泰州", g: "119.919606,32.476053|13" }, { n: "无锡", g: "120.305456,31.570037|12" }, { n: "徐州", g: "117.188107,34.271553|12" }, { n: "盐城", g: "120.148872,33.379862|12" }, { n: "扬州", g: "119.427778,32.408505|13" }, { n: "镇江", g: "119.455835,32.204409|13" }] }, { n: "江西", g: "115.676082,27.757258|7", cities: [{ n: "南昌", g: "115.893528,28.689578|12" }, { n: "抚州", g: "116.360919,27.954545|13" }, { n: "赣州", g: "114.935909,25.845296|13" }, { n: "吉安", g: "114.992039,27.113848|13" }, { n: "景德镇", g: "117.186523,29.303563|12" }, { n: "九江", g: "115.999848,29.71964|13" }, { n: "萍乡", g: "113.859917,27.639544|13" }, { n: "上饶", g: "117.955464,28.457623|13" }, { n: "新余", g: "114.947117,27.822322|13" }, { n: "宜春", g: "114.400039,27.81113|13" }, { n: "鹰潭", g: "117.03545,28.24131|13" }] }, { n: "吉林", g: "126.262876,43.678846|7", cities: [{ n: "长春", g: "125.313642,43.898338|12" }, { n: "白城", g: "122.840777,45.621086|13" }, { n: "白山", g: "126.435798,41.945859|13" }, { n: "吉林", g: "126.564544,43.871988|12" }, { n: "辽源", g: "125.133686,42.923303|13" }, { n: "四平", g: "124.391382,43.175525|12" }, { n: "松原", g: "124.832995,45.136049|13" }, { n: "通化", g: "125.94265,41.736397|13" }, { n: "延边", g: "129.485902,42.896414|13" }] }, { n: "辽宁", g: "122.753592,41.6216|8", cities: [{ n: "沈阳", g: "123.432791,41.808645|12" }, { n: "鞍山", g: "123.007763,41.118744|13" }, { n: "本溪", g: "123.778062,41.325838|12" }, { n: "朝阳", g: "120.446163,41.571828|13" }, { n: "大连", g: "121.593478,38.94871|12" }, { n: "丹东", g: "124.338543,40.129023|12" }, { n: "抚顺", g: "123.92982,41.877304|12" }, { n: "阜新", g: "121.660822,42.01925|14" }, { n: "葫芦岛", g: "120.860758,40.74303|13" }, { n: "锦州", g: "121.147749,41.130879|13" }, { n: "辽阳", g: "123.172451,41.273339|14" }, { n: "盘锦", g: "122.073228,41.141248|13" }, { n: "铁岭", g: "123.85485,42.299757|13" }, { n: "营口", g: "122.233391,40.668651|13" }] }, { n: "内蒙古", g: "114.415868,43.468238|5", cities: [{ n: "呼和浩特", g: "111.660351,40.828319|12" }, { n: "阿拉善盟", g: "105.695683,38.843075|14" }, { n: "包头", g: "109.846239,40.647119|12" }, { n: "巴彦淖尔", g: "107.423807,40.76918|12" }, { n: "赤峰", g: "118.930761,42.297112|12" }, { n: "鄂尔多斯", g: "109.993706,39.81649|12" }, { n: "呼伦贝尔", g: "119.760822,49.201636|12" }, { n: "通辽", g: "122.260363,43.633756|12" }, { n: "乌海", g: "106.831999,39.683177|13" }, { n: "乌兰察布", g: "113.112846,41.022363|12" }, { n: "锡林郭勒盟", g: "116.02734,43.939705|11" }, { n: "兴安盟", g: "122.048167,46.083757|11" }] }, { n: "宁夏", g: "106.155481,37.321323|8", cities: [{ n: "银川", g: "106.206479,38.502621|12" }, { n: "固原", g: "106.285268,36.021523|13" }, { n: "石嘴山", g: "106.379337,39.020223|13" }, { n: "吴忠", g: "106.208254,37.993561|14" }, { n: "中卫", g: "105.196754,37.521124|14" }] }, { n: "青海", g: "96.202544,35.499761|7", cities: [{ n: "西宁", g: "101.767921,36.640739|12" }, { n: "果洛州", g: "100.223723,34.480485|11" }, { n: "海东地区", g: "102.085207,36.51761|11" }, { n: "海北州", g: "100.879802,36.960654|11" }, { n: "海南州", g: "100.624066,36.284364|11" }, { n: "海西州", g: "97.342625,37.373799|11" }, { n: "黄南州", g: "102.0076,35.522852|11" }, { n: "玉树州", g: "97.013316,33.00624|14" }] }, { n: "山东", g: "118.527663,36.09929|8", cities: [{ n: "济南", g: "117.024967,36.682785|12" }, { n: "滨州", g: "117.968292,37.405314|12" }, { n: "东营", g: "118.583926,37.487121|12" }, { n: "德州", g: "116.328161,37.460826|12" }, { n: "菏泽", g: "115.46336,35.26244|13" }, { n: "济宁", g: "116.600798,35.402122|13" }, { n: "莱芜", g: "117.684667,36.233654|13" }, { n: "聊城", g: "115.986869,36.455829|12" }, { n: "临沂", g: "118.340768,35.072409|12" }, { n: "青岛", g: "120.384428,36.105215|12" }, { n: "日照", g: "119.50718,35.420225|12" }, { n: "泰安", g: "117.089415,36.188078|13" }, { n: "威海", g: "122.093958,37.528787|13" }, { n: "潍坊", g: "119.142634,36.716115|12" }, { n: "烟台", g: "121.309555,37.536562|12" }, { n: "枣庄", g: "117.279305,34.807883|13" }, { n: "淄博", g: "118.059134,36.804685|12" }] }, { n: "山西", g: "112.515496,37.866566|7", cities: [{ n: "太原", g: "112.550864,37.890277|12" }, { n: "长治", g: "113.120292,36.201664|12" }, { n: "大同", g: "113.290509,40.113744|12" }, { n: "晋城", g: "112.867333,35.499834|13" }, { n: "晋中", g: "112.738514,37.693362|13" }, { n: "临汾", g: "111.538788,36.099745|13" }, { n: "吕梁", g: "111.143157,37.527316|14" }, { n: "朔州", g: "112.479928,39.337672|13" }, { n: "忻州", g: "112.727939,38.461031|12" }, { n: "阳泉", g: "113.569238,37.869529|13" }, { n: "运城", g: "111.006854,35.038859|13" }] }, { n: "陕西", g: "109.503789,35.860026|7", cities: [{ n: "西安", g: "108.953098,34.2778|12" }, { n: "安康", g: "109.038045,32.70437|13" }, { n: "宝鸡", g: "107.170645,34.364081|12" }, { n: "汉中", g: "107.045478,33.081569|13" }, { n: "商洛", g: "109.934208,33.873907|13" }, { n: "铜川", g: "108.968067,34.908368|13" }, { n: "渭南", g: "109.483933,34.502358|13" }, { n: "咸阳", g: "108.707509,34.345373|13" }, { n: "延安", g: "109.50051,36.60332|13" }, { n: "榆林", g: "109.745926,38.279439|12" }] }, { n: "四川", g: "102.89916,30.367481|7", cities: [{ n: "成都", g: "104.067923,30.679943|12" }, { n: "阿坝州", g: "102.228565,31.905763|15" }, { n: "巴中", g: "106.757916,31.869189|14" }, { n: "达州", g: "107.494973,31.214199|14" }, { n: "德阳", g: "104.402398,31.13114|13" }, { n: "甘孜州", g: "101.969232,30.055144|15" }, { n: "广安", g: "106.63572,30.463984|13" }, { n: "广元", g: "105.819687,32.44104|13" }, { n: "乐山", g: "103.760824,29.600958|13" }, { n: "凉山州", g: "102.259591,27.892393|14" }, { n: "泸州", g: "105.44397,28.89593|14" }, { n: "南充", g: "106.105554,30.800965|13" }, { n: "眉山", g: "103.84143,30.061115|13" }, { n: "绵阳", g: "104.705519,31.504701|12" }, { n: "内江", g: "105.073056,29.599462|13" }, { n: "攀枝花", g: "101.722423,26.587571|14" }, { n: "遂宁", g: "105.564888,30.557491|12" }, { n: "雅安", g: "103.009356,29.999716|13" }, { n: "宜宾", g: "104.633019,28.769675|13" }, { n: "资阳", g: "104.63593,30.132191|13" }, { n: "自贡", g: "104.776071,29.359157|13" }] }, { n: "西藏", g: "89.137982,31.367315|6", cities: [{ n: "拉萨", g: "91.111891,29.662557|13" }, { n: "阿里地区", g: "81.107669,30.404557|11" }, { n: "昌都地区", g: "97.185582,31.140576|15" }, { n: "林芝地区", g: "94.349985,29.666941|11" }, { n: "那曲地区", g: "92.067018,31.48068|14" }, { n: "日喀则地区", g: "88.891486,29.269023|14" }, { n: "山南地区", g: "91.750644,29.229027|11" }] }, { n: "新疆", g: "85.614899,42.127001|6", cities: [{ n: "乌鲁木齐", g: "87.564988,43.84038|12" }, { n: "阿拉尔", g: "81.291737,40.61568|13" }, { n: "阿克苏地区", g: "80.269846,41.171731|12" }, { n: "阿勒泰地区", g: "88.137915,47.839744|13" }, { n: "巴音郭楞", g: "86.121688,41.771362|12" }, { n: "博尔塔拉州", g: "82.052436,44.913651|11" }, { n: "昌吉州", g: "87.296038,44.007058|13" }, { n: "哈密地区", g: "93.528355,42.858596|13" }, { n: "和田地区", g: "79.930239,37.116774|13" }, { n: "喀什地区", g: "75.992973,39.470627|12" }, { n: "克拉玛依", g: "84.88118,45.594331|13" }, { n: "克孜勒苏州", g: "76.137564,39.750346|11" }, { n: "石河子", g: "86.041865,44.308259|13" }, { n: "塔城地区", g: "82.974881,46.758684|12" }, { n: "图木舒克", g: "79.198155,39.889223|13" }, { n: "吐鲁番地区", g: "89.181595,42.96047|13" }, { n: "五家渠", g: "87.565449,44.368899|13" }, { n: "伊犁州", g: "81.297854,43.922248|11" }] }, { n: "云南", g: "101.592952,24.864213|7", cities: [{ n: "昆明", g: "102.714601,25.049153|12" }, { n: "保山", g: "99.177996,25.120489|13" }, { n: "楚雄州", g: "101.529382,25.066356|13" }, { n: "大理州", g: "100.223675,25.5969|14" }, { n: "德宏州", g: "98.589434,24.44124|14" }, { n: "迪庆州", g: "99.713682,27.831029|14" }, { n: "红河州", g: "103.384065,23.367718|11" }, { n: "丽江", g: "100.229628,26.875351|13" }, { n: "临沧", g: "100.092613,23.887806|14" }, { n: "怒江州", g: "98.859932,25.860677|14" }, { n: "普洱", g: "100.980058,22.788778|14" }, { n: "曲靖", g: "103.782539,25.520758|12" }, { n: "昭通", g: "103.725021,27.340633|13" }, { n: "文山", g: "104.089112,23.401781|14" }, { n: "西双版纳", g: "100.803038,22.009433|13" }, { n: "玉溪", g: "102.545068,24.370447|13" }] }, { n: "浙江", g: "119.957202,29.159494|8", cities: [{ n: "杭州", g: "120.219375,30.259244|12" }, { n: "湖州", g: "120.137243,30.877925|12" }, { n: "嘉兴", g: "120.760428,30.773992|13" }, { n: "金华", g: "119.652576,29.102899|12" }, { n: "丽水", g: "119.929576,28.4563|13" }, { n: "宁波", g: "121.579006,29.885259|12" }, { n: "衢州", g: "118.875842,28.95691|12" }, { n: "绍兴", g: "120.592467,30.002365|13" }, { n: "台州", g: "121.440613,28.668283|13" }, { n: "温州", g: "120.690635,28.002838|12" }, { n: "舟山", g: "122.169872,30.03601|13" }] }], other: [{ n: "香港", g: "114.186124,22.293586|11" }, { n: "澳门", g: "113.557519,22.204118|13" }, { n: "台湾", g: "120.961454,23.80406|8" }] };function a(t) {
	    var e = t.split("|");return e[0] = e[0].split(","), { lng: parseFloat(e[0][0]), lat: parseFloat(e[0][1]) };
	  }function s(t, e) {
	    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
	  }var i = { getProvinceNameByCityName: function getProvinceNameByCityName(t) {
	      for (var e = r.provinces, n = 0; n < e.length; n++) {
	        for (var i = e[n].n, o = e[n].cities, a = 0; a < o.length; a++) {
	          if (o[a].n == t) return i;
	        }
	      }return null;
	    }, getCenterByCityName: function getCenterByCityName(t) {
	      t = t.replace("市", "");for (var e = 0; e < r.municipalities.length; e++) {
	        if (r.municipalities[e].n == t) return a(r.municipalities[e].g);
	      }for (e = 0; e < r.other.length; e++) {
	        if (r.other[e].n == t) return a(r.other[e].g);
	      }var n = r.provinces;for (e = 0; e < n.length; e++) {
	        if (n[e].n == t) return a(n[e].g);for (var i = n[e].cities, o = 0; o < i.length; o++) {
	          if (i[o].n == t) return a(i[o].g);
	        }
	      }return null;
	    } },
	      e = function e(t, _e2, n) {
	    return _e2 && o(t.prototype, _e2), n && o(t, n), t;
	  };function o(t, e) {
	    for (var n = 0; n < e.length; n++) {
	      var i = e[n];i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i);
	    }
	  }function h(t, e, n) {
	    null === t && (t = Function.prototype);var i = Object.getOwnPropertyDescriptor(t, e);if (void 0 === i) {
	      var o = Object.getPrototypeOf(t);return null === o ? void 0 : h(o, e, n);
	    }if ("value" in i) return i.value;var a = i.get;return void 0 !== a ? a.call(n) : void 0;
	  }function l(t, e) {
	    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + (typeof e === "undefined" ? "undefined" : _typeof(e)));t.prototype = Object.create(e && e.prototype, { constructor: { value: t, enumerable: !1, writable: !0, configurable: !0 } }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
	  }function u(t, e) {
	    if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return !e || "object" != (typeof e === "undefined" ? "undefined" : _typeof(e)) && "function" != typeof e ? t : e;
	  }var b = function b(t, e) {
	    if (Array.isArray(t)) return t;if (Symbol.iterator in Object(t)) return function (t, e) {
	      var n = [],
	          i = !0,
	          o = !1,
	          a = void 0;try {
	        for (var r, s = t[Symbol.iterator](); !(i = (r = s.next()).done) && (n.push(r.value), !e || n.length !== e); i = !0) {}
	      } catch (t) {
	        o = !0, a = t;
	      } finally {
	        try {
	          !i && s.return && s.return();
	        } finally {
	          if (o) throw a;
	        }
	      }return n;
	    }(t, e);throw new TypeError("Invalid attempt to destructure non-iterable instance");
	  };function T(t, e) {
	    n.bind(this)(), this._options = e || {}, this._data = [], t && this.add(t);
	  }(T.prototype = Object.create(n.prototype)).add = function (t, e) {
	    if (Array.isArray(t)) {
	      for (var n = 0, i = t.length; n < i; n++) {
	        if (t[n]) {
	          if (t[n].time && 14 == t[n].time.length && "20" == t[n].time.substr(0, 2)) {
	            var o = t[n].time;t[n].time = new Date(o.substr(0, 4) + "-" + o.substr(4, 2) + "-" + o.substr(6, 2) + " " + o.substr(8, 2) + ":" + o.substr(10, 2) + ":" + o.substr(12, 2)).getTime();
	          }this._data.push(t[n]);
	        }
	      }
	    } else {
	      if (!(t instanceof Object)) throw new Error("Unknown dataType");this._data.push(t);
	    }this._dataCache = JSON.parse(JSON.stringify(this._data));
	  }, T.prototype.reset = function () {
	    this._data = JSON.parse(JSON.stringify(this._dataCache));
	  }, T.prototype.get = function (t) {
	    t = t || {};new Date();var e = this._data;new Date();if (t.filter) {
	      for (var n = [], i = 0; i < e.length; i++) {
	        t.filter(e[i]) && n.push(e[i]);
	      }e = n;
	    }return t.transferCoordinate && (e = this.transferCoordinate(e, t.transferCoordinate, t.fromColumn, t.toColumn)), e;
	  }, T.prototype.set = function (t) {
	    this._set(t), this._trigger("change");
	  }, T.prototype._set = function (t) {
	    this.clear(), this.add(t);
	  }, T.prototype.clear = function (t) {
	    this._data = [];
	  }, T.prototype.remove = function (t) {}, T.prototype.update = function (t, e) {
	    for (var n = this._data, i = 0; i < n.length; i++) {
	      if (e) {
	        var o = !0;for (var a in e) {
	          n[i][a] != e[a] && (o = !1);
	        }o && t && t(n[i]);
	      } else t && t(n[i]);
	    }this._dataCache = JSON.parse(JSON.stringify(this._data)), this._trigger("change");
	  }, T.prototype.transferCoordinate = function (t, r, e, n) {
	    n = n || "_coordinates", e = e || "coordinates";for (var i = 0; i < t.length; i++) {
	      var o = t[i].geometry,
	          a = o[e];switch (o.type) {case "Point":
	          o[n] = r(a);break;case "LineString":
	          for (var s = [], h = 0; h < a.length; h++) {
	            s.push(r(a[h]));
	          }o[n] = s;break;case "MultiLineString":case "Polygon":
	          s = c(a);o[n] = s;break;case "MultiPolygon":
	          s = [];for (var l = 0; l < a.length; l++) {
	            var u = c(u = a[l]);s.push(u);
	          }o[n] = s;}
	    }function c(t) {
	      for (var e = [], n = 0; n < t.length; n++) {
	        for (var i = t[n], o = [], a = 0; a < i.length; a++) {
	          o.push(r(i[a]));
	        }e.push(o);
	      }return e;
	    }return t;
	  }, T.prototype.initGeometry = function (e) {
	    e ? this._data.forEach(function (t) {
	      t.geometry = e(t);
	    }) : this._data.forEach(function (t) {
	      if (!t.geometry) if (t.lng && t.lat) t.geometry = { type: "Point", coordinates: [t.lng, t.lat] };else if (t.city) {
	        var e = i.getCenterByCityName(t.city);e && (t.geometry = { type: "Point", coordinates: [e.lng, e.lat] });
	      }
	    });
	  }, T.prototype.getMax = function (t) {
	    var e = this._data;if (e && !(e.length <= 0)) {
	      for (var n = parseFloat(e[0][t]), i = 1; i < e.length; i++) {
	        var o = parseFloat(e[i][t]);n < o && (n = o);
	      }return n;
	    }
	  }, T.prototype.getSum = function (t) {
	    var e = this._data;if (e && !(e.length <= 0)) {
	      for (var n = 0, i = 0; i < e.length; i++) {
	        e[i][t] && (n += parseFloat(e[i][t]));
	      }return n;
	    }
	  }, T.prototype.getMin = function (t) {
	    var e = this._data;if (e && !(e.length <= 0)) {
	      for (var n = parseFloat(e[0][t]), i = 1; i < e.length; i++) {
	        var o = parseFloat(e[i][t]);o < n && (n = o);
	      }return n;
	    }
	  }, T.prototype.getUnique = function (t) {
	    if ((i = this._data) && !(i.length <= 0)) {
	      for (var e = {}, n = 1; n < i.length; n++) {
	        e[i[n][t]] = !0;
	      }var i = [];for (var o in e) {
	        i.push(o);
	      }return i;
	    }
	  };var x = { drawDataSet: function drawDataSet(t, e, n) {
	      for (var i = e instanceof T ? e.get() : e, o = 0, a = i.length; o < a; o++) {
	        var r = i[o];this.draw(t, r, n);
	      }
	    }, draw: function draw(t, e, n) {
	      var i = e.geometry.type,
	          o = e.geometry._coordinates || e.geometry.coordinates,
	          a = e.symbol || n.symbol || "circle";switch (i) {case "Point":
	          var r = e._size || e.size || n._size || n.size || 5;"circle" === a ? ("Point" === n.bigData && t.moveTo(o[0], o[1]), t.arc(o[0], o[1], r, 0, 2 * Math.PI)) : "rect" === a ? t.rect(o[0] - r / 2, o[1] - r / 2, r, r) : "honeycomb" === a && function (t, e, n, i) {
	            for (var o = 0; o < 6; o++) {
	              var a = (r = { x: e, y: n }, s = i, void 0, h = 60 * o + 30, l = Math.PI / 180 * h, [r.x + s * Math.cos(l), r.y + s * Math.sin(l)]);t.lineTo(a[0], a[1]);
	            }var r, s, h, l;
	          }(t, o[0], o[1], r);break;case "LineString":
	          this.drawLineString(t, o);break;case "MultiLineString":
	          for (var s = 0; s < o.length; s++) {
	            var h = o[s];this.drawLineString(t, h);
	          }break;case "Polygon":
	          this.drawPolygon(t, o);break;case "MultiPolygon":
	          for (s = 0; s < o.length; s++) {
	            var l = o[s];if (this.drawPolygon(t, l), n.multiPolygonDraw) {
	              var u = n.multiPolygonDraw();if (u) return u;
	            }
	          }break;default:
	          console.error("type" + i + "is not support now!");}
	    }, drawLineString: function drawLineString(t, e) {
	      for (var n = 0; n < e.length; n++) {
	        var i = e[n][0],
	            o = e[n][1];0 == n ? t.moveTo(i, o) : t.lineTo(i, o);
	      }
	    }, drawPolygon: function drawPolygon(t, e) {
	      t.beginPath();for (var n = 0; n < e.length; n++) {
	        var i = e[n];t.moveTo(i[0][0], i[0][1]);for (var o = 1; o < i.length; o++) {
	          t.lineTo(i[o][0], i[o][1]);
	        }t.lineTo(i[0][0], i[0][1]), t.closePath();
	      }
	    } },
	      c = { draw: function draw(t, e, n) {
	      var i = e instanceof T ? e.get() : e;for (var o in t.save(), n) {
	        t[o] = n[o];
	      }if (n.bigData) {
	        t.save(), t.beginPath();for (var a = 0, r = i.length; a < r; a++) {
	          var s = i[a];x.draw(t, s, n);
	        }"Point" == (h = n.bigData) || "Polygon" == h || "MultiPolygon" == h ? (t.fill(), t.lineDash && t.setLineDash(t.lineDash), s.lineDash && t.setLineDash(s.lineDash), (s.strokeStyle || n.strokeStyle) && n.lineWidth && t.stroke()) : "LineString" != h && "MultiLineString" != h || t.stroke(), t.restore();
	      } else for (a = 0, r = i.length; a < r; a++) {
	        s = i[a];t.save(), (s.fillStyle || s._fillStyle) && (t.fillStyle = s.fillStyle || s._fillStyle), (s.strokeStyle || s._strokeStyle) && (t.strokeStyle = s.strokeStyle || s._strokeStyle), t.lineDash && t.setLineDash(t.lineDash), s.lineDash && t.setLineDash(s.lineDash);var h = s.geometry.type;t.beginPath(), n.multiPolygonDraw = function () {
	          t.fill(), (s.strokeStyle || n.strokeStyle) && n.lineWidth && t.stroke();
	        }, x.draw(t, s, n), "Point" == h || "Polygon" == h || "MultiPolygon" == h ? (t.fill(), (s.strokeStyle || n.strokeStyle) && n.lineWidth && t.stroke()) : "LineString" != h && "MultiLineString" != h || ((s.lineWidth || s._lineWidth) && (t.lineWidth = s.lineWidth || s._lineWidth), t.stroke()), t.restore();
	      }t.restore();
	    } };function _(t, e) {
	    if ("undefined" != typeof document) {
	      var n = document.createElement("canvas");t && (n.width = t), e && (n.height = e);
	    }return n;
	  }function D(t) {
	    t = t || {}, this.gradient = t.gradient || { .25: "rgba(0, 0, 255, 1)", .55: "rgba(0, 255, 0, 1)", .85: "rgba(255, 255, 0, 1)", 1: "rgba(255, 0, 0, 1)" }, this.maxSize = t.maxSize || 35, this.minSize = t.minSize || 0, this.max = t.max || 100, this.min = t.min || 0, this.initPalette();
	  }D.prototype.setMax = function (t) {
	    this.max = t || 100;
	  }, D.prototype.setMin = function (t) {
	    this.min = t || 0;
	  }, D.prototype.setMaxSize = function (t) {
	    this.maxSize = t || 35;
	  }, D.prototype.setMinSize = function (t) {
	    this.minSize = t || 0;
	  }, D.prototype.initPalette = function () {
	    var t = this.gradient,
	        e = new _(256, 1),
	        n = this.paletteCtx = e.getContext("2d"),
	        i = n.createLinearGradient(0, 0, 256, 1);for (var o in t) {
	      i.addColorStop(parseFloat(o), t[o]);
	    }n.fillStyle = i, n.fillRect(0, 0, 256, 1);
	  }, D.prototype.getColor = function (t) {
	    var e = this.getImageData(t);return "rgba(" + e[0] + ", " + e[1] + ", " + e[2] + ", " + e[3] / 256 + ")";
	  }, D.prototype.getImageData = function (t) {
	    var e = this.paletteCtx.getImageData(0, 0, 256, 1).data;if (void 0 === t) return e;var n = this.max,
	        i = this.min;n < t && (t = n), t < i && (t = i);var o = 4 * Math.floor((t - i) / (n - i) * 255);return [e[o], e[1 + o], e[2 + o], e[3 + o]];
	  }, D.prototype.getSize = function (t) {
	    var e = this.max,
	        n = this.min,
	        i = this.maxSize,
	        o = this.minSize;return e < t && (t = e), t < n && (t = n), n < e ? o + (t - n) / (e - n) * (i - o) : i;
	  }, D.prototype.getLegend = function (t) {
	    var e = this.gradient,
	        n = t.width || 20,
	        i = t.height || 180,
	        o = new _(n, i),
	        a = o.getContext("2d"),
	        r = a.createLinearGradient(0, i, 0, 0);for (var s in e) {
	      r.addColorStop(parseFloat(s), e[s]);
	    }return a.fillStyle = r, a.fillRect(0, 0, n, i), o;
	  };var p = ("undefined" == typeof window ? {} : window).devicePixelRatio || 1;function w(t) {
	    return t.max || 100;
	  }function k(t) {
	    return t.min || 0;
	  }function v(a, t, r) {
	    var s = w(r),
	        e = k(r),
	        n = r._size;null == n && null == (n = r.size) && (n = 13);var i,
	        o,
	        h,
	        l,
	        u,
	        c = new D({ gradient: r.gradient, max: s, min: e }),
	        p = (l = new _(2 * (h = (i = n) + (o = i / 2)), 2 * h), (u = l.getContext("2d")).shadowBlur = o, u.shadowColor = "black", u.shadowOffsetX = u.shadowOffsetY = 1e4, u.beginPath(), u.arc(h - 1e4, h - 1e4, i, 0, 2 * Math.PI, !0), u.closePath(), u.fill(), l),
	        v = p.width / 2,
	        d = p.height / 2,
	        g = t,
	        f = {};for (var m in g.forEach(function (t, e) {
	      var n = void 0 === t.count ? 1 : t.count,
	          i = Math.min(1, n / s).toFixed(2);f[i] = f[i] || [], f[i].push(t);
	    }), f) {
	      if (!isNaN(m)) {
	        var y = f[m];a.beginPath(), r.withoutAlpha || (a.globalAlpha = m), a.strokeStyle = c.getColor(m * s), y.forEach(function (t, e) {
	          if (t.geometry) {
	            var n = t.geometry._coordinates || t.geometry.coordinates,
	                i = t.geometry.type;if ("Point" === i) {
	              var o = void 0 === t.count ? 1 : t.count;a.globalAlpha = o / s, a.drawImage(p, n[0] - v, n[1] - d);
	            } else if ("LineString" === i) {
	              o = void 0 === t.count ? 1 : t.count;a.globalAlpha = o / s, a.beginPath(), x.draw(a, t, r), a.stroke();
	            }
	          }
	        });
	      }
	    }
	  }var d = { draw: function draw(t, e, n) {
	      if (!(t.canvas.width <= 0 || t.canvas.height <= 0)) {
	        var i = n.strength || .3;t.strokeStyle = "rgba(0,0,0," + i + ")";var o = new _(t.canvas.width, t.canvas.height),
	            a = o.getContext("2d");a.scale(p, p), n = n || {};var r = e instanceof T ? e.get() : e;t.save();var s = new D({ gradient: n.gradient });if (v(a, r, n), !n.absolute) {
	          var h = a.getImageData(0, 0, t.canvas.width, t.canvas.height);!function (t, e, n) {
	            var i = w(n),
	                o = k(n),
	                a = i - o,
	                r = 0,
	                s = 1024;(c = n.range || null) && 2 === c.length && (r = (c[0] - o) / a * 1024), c && 2 === c.length && (s = (c[1] - o) / a * 1024);for (var h, l = n.maxOpacity || .8, u = n.minOpacity || 0, c = n.range, p = 3, v = t.length; p < v; p += 4) {
	              h = 4 * t[p], t[p] / 256 > l && (t[p] = 256 * l), t[p] / 256 < u && (t[p] = 256 * u), h && r <= h && h <= s ? (t[p - 3] = e[h], t[p - 2] = e[1 + h], t[p - 1] = e[2 + h]) : t[p] = 0;
	            }
	          }(h.data, s.getImageData(), n), t.putImageData(h, 0, 0), t.restore();
	        }o = s = null;
	      }
	    } },
	      g = { draw: function draw(t, e, n) {
	      t.save();var i = e instanceof T ? e.get() : e,
	          o = {},
	          a = n._size || n.size || 50,
	          r = !("enableCluster" in n) || n.enableCluster,
	          s = n.offset || { x: 0, y: 0 },
	          h = new D({ min: n.min || 0, max: n.max || 100, gradient: n.gradient });if (r) {
	        for (var l = 0; l < i.length; l++) {
	          p = i[l].geometry._coordinates || i[l].geometry.coordinates;o[d = Math.floor((p[0] - s.x) / a) + "," + Math.floor((p[1] - s.y) / a)] || (o[d] = 0), o[d] += ~~(i[l].count || 1);
	        }for (var u in o) {
	          u = u.split(","), t.beginPath(), t.rect(u[0] * a + .5 + s.x, u[1] * a + .5 + s.y, a, a), t.fillStyle = h.getColor(o[u]), t.fill(), n.strokeStyle && n.lineWidth && t.stroke();
	        }
	      } else {
	        for (var c = 0; c < i.length; c++) {
	          var p;o[d = (p = i[c].geometry._coordinates || i[c].geometry.coordinates).join(",")] = i[c].count || 1;
	        }for (var v in o) {
	          v = v.split(","), t.beginPath(), t.rect(v[0] - a / 2, v[1] - a / 2, a, a), t.fillStyle = h.getColor(o[v]), t.fill(), n.strokeStyle && n.lineWidth && t.stroke();
	        }
	      }if (n.label && !1 !== n.label.show) for (var d in t.fillStyle = n.label.fillStyle || "white", n.label.font && (t.font = n.label.font), n.label.shadowColor && (t.shadowColor = n.label.shadowColor), n.label.shadowBlur && (t.shadowBlur = n.label.shadowBlur), o) {
	        var g = o[d = d.split(",")],
	            f = t.measureText(g).width;r ? t.fillText(g, d[0] * a + .5 + s.x + a / 2 - f / 2, d[1] * a + .5 + s.y + a / 2 + 5) : t.fillText(g, d[0] - f / 2, +d[1] + 5);
	      }t.restore();
	    } };var f = { draw: function draw(t, e, n) {
	      t.save();var i = e instanceof T ? e.get() : e;for (var o in n) {
	        t[o] = n[o];
	      }for (var a = n.offset || { x: 10, y: 10 }, r = n._size || n.size || 40, s = 2 * (r = r / 2 / Math.sin(Math.PI / 3)) * Math.sin(Math.PI / 3), h = 1.5 * r, l = {}, u = 0; u < i.length; u++) {
	        var c = i[u].geometry._coordinates || i[u].geometry.coordinates,
	            p = (c[1] - a.y) / h,
	            v = Math.round(p),
	            d = (c[0] - a.x) / s - (1 & v ? .5 : 0),
	            g = Math.round(d),
	            f = p - v;if (1 < 3 * Math.abs(f)) {
	          var m = d - g,
	              y = g + (d < g ? -1 : 1) / 2,
	              x = v + (p < v ? -1 : 1),
	              _ = d - y,
	              w = p - x;_ * _ + w * w < m * m + f * f && (g = y + (1 & v ? 1 : -1) / 2, v = x);
	        }var b = g + "-" + v,
	            k = l[b];k ? k.push(i[u]) : ((k = l[b] = [i[u]]).i = g, k.j = v, k.x = (g + (1 & v ? .5 : 0)) * s, k.y = v * h);
	      }var E,
	          L,
	          C,
	          S,
	          M = new D({ max: n.max || 100, maxSize: r, gradient: n.gradient });for (var o in l) {
	        var P = l[o];t.beginPath();for (var z = 0; z < 6; z++) {
	          var R = (E = { x: P.x + a.x, y: P.y + a.y }, L = r, void 0, C = 60 * z + 30, S = Math.PI / 180 * C, [E.x + L * Math.cos(S), E.y + L * Math.sin(S)]);t.lineTo(R[0], R[1]);
	        }t.closePath();var A = 0;for (u = 0; u < P.length; u++) {
	          A += P[u].count || 1;
	        }P.count = A, t.fillStyle = M.getColor(A), t.fill(), n.strokeStyle && n.lineWidth && t.stroke();
	      }if (n.label && !1 !== n.label.show) for (var o in t.fillStyle = n.label.fillStyle || "white", n.label.font && (t.font = n.label.font), n.label.shadowColor && (t.shadowColor = n.label.shadowColor), n.label.shadowBlur && (t.shadowBlur = n.label.shadowBlur), l) {
	        var O = (P = l[o]).count;O = O < 0 ? O.toFixed(2) : ~~O;var I = t.measureText(O).width;t.fillText(O, P.x + a.x - I / 2, P.y + a.y + 5);
	      }t.restore();
	    } };function m(t, e, n) {
	    var i = t.createShader(n);return t.shaderSource(i, e), t.compileShader(i), i;
	  }function C(t, e, n) {
	    var i = m(t, e, t.VERTEX_SHADER),
	        o = m(t, n, t.FRAGMENT_SHADER),
	        a = t.createProgram();return t.attachShader(a, i), t.attachShader(a, o), t.linkProgram(a), t.useProgram(a), a;
	  }function S(t) {
	    var e = document.createElement("canvas"),
	        n = e.getContext("2d");return e.width = 1, e.height = 1, n.fillStyle = t, n.fillRect(0, 0, 1, 1), n.getImageData(0, 0, 1, 1).data;
	  }var M = ["attribute vec4 a_Position;", "void main() {", "gl_Position = a_Position;", "gl_PointSize = 30.0;", "}"].join(""),
	      z = ["precision mediump float;", "uniform vec4 u_FragColor;", "void main() {", "gl_FragColor = u_FragColor;", "}"].join("");var y = { draw: function draw(t, e, n) {
	      if (e) {
	        var i = C(t, M, z);t.enable(t.BLEND), t.blendFunc(t.SRC_ALPHA, t.ONE), t.clear(t.COLOR_BUFFER_BIT);var o = t.canvas.width / 2,
	            a = t.canvas.height / 2,
	            r = t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER, r);var s = t.getAttribLocation(i, "a_Position");t.vertexAttribPointer(s, 2, t.FLOAT, !1, 0, 0), t.enableVertexAttribArray(s);var h = t.getUniformLocation(i, "u_FragColor"),
	            l = S(n.strokeStyle || "red");t.uniform4f(h, l[0] / 255, l[1] / 255, l[2] / 255, l[3] / 255), t.lineWidth(n.lineWidth || 1);for (var u = 0, c = e.length; u < c; u++) {
	          for (var p = e[u].geometry._coordinates, v = [], d = 0; d < p.length; d++) {
	            var g = p[d],
	                f = (g[0] - o) / o,
	                m = (a - g[1]) / a;v.push(f, m);
	          }var y = new Float32Array(v);t.bufferData(t.ARRAY_BUFFER, y, t.STATIC_DRAW), t.drawArrays(t.LINE_STRIP, 0, p.length);
	        }
	      }
	    } },
	      R = ["attribute vec4 a_Position;", "attribute float a_PointSize;", "void main() {", "gl_Position = a_Position;", "gl_PointSize = a_PointSize;", "}"].join(""),
	      A = ["precision mediump float;", "uniform vec4 u_FragColor;", "void main() {", "gl_FragColor = u_FragColor;", "}"].join("");var O = { draw: function draw(t, e, n) {
	      if (e) {
	        var i = C(t, R, A),
	            o = t.getAttribLocation(i, "a_Position"),
	            a = t.getAttribLocation(i, "a_PointSize"),
	            r = t.getUniformLocation(i, "u_FragColor");t.clear(t.COLOR_BUFFER_BIT);for (var s = t.canvas.width / 2, h = t.canvas.height / 2, l = [], u = 0, c = 0; c < e.length; c++) {
	          var p = e[c].geometry._coordinates,
	              v = (p[0] - s) / s,
	              d = (h - p[1]) / h;v < -1 || 1 < v || d < -1 || 1 < d || (l.push(v, d), u++);
	        }var g = new Float32Array(l),
	            f = u,
	            m = t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER, m), t.bufferData(t.ARRAY_BUFFER, g, t.STATIC_DRAW), t.vertexAttribPointer(o, 2, t.FLOAT, !1, 0, 0), t.enableVertexAttribArray(o), t.vertexAttrib1f(a, n._size);var y = S(n.fillStyle || "red");t.uniform4f(r, y[0] / 255, y[1] / 255, y[2] / 255, y[3] / 255), t.drawArrays(t.POINTS, 0, f);
	      }
	    } };function I(t, e, n) {
	    n = n || 2;var i,
	        o,
	        a,
	        r,
	        s,
	        h,
	        l,
	        u = e && e.length,
	        c = u ? e[0] * n : t.length,
	        p = F(t, 0, c, n, !0),
	        v = [];if (!p) return v;if (u && (p = function (t, e, n, i) {
	      var o,
	          a,
	          r,
	          s,
	          h,
	          l = [];for (o = 0, a = e.length; o < a; o++) {
	        r = e[o] * i, s = o < a - 1 ? e[o + 1] * i : t.length, (h = F(t, r, s, i, !1)) === h.next && (h.steiner = !0), l.push(V(h));
	      }for (l.sort(H), o = 0; o < l.length; o++) {
	        q(l[o], n), n = B(n, n.next);
	      }return n;
	    }(t, e, p, n)), t.length > 80 * n) {
	      i = a = t[0], o = r = t[1];for (var d = n; d < c; d += n) {
	        (s = t[d]) < i && (i = s), (h = t[d + 1]) < o && (o = h), a < s && (a = s), r < h && (r = h);
	      }l = Math.max(a - i, r - o);
	    }return U(p, v, n, i, o, l), v;
	  }function F(t, e, n, i, o) {
	    var a, r;if (o === 0 < it(t, e, n, i)) for (a = e; a < n; a += i) {
	      r = tt(a, t[a], t[a + 1], r);
	    } else for (a = n - i; e <= a; a -= i) {
	      r = tt(a, t[a], t[a + 1], r);
	    }return r && J(r, r.next) && (et(r), r = r.next), r;
	  }function B(t, e) {
	    if (!t) return t;e = e || t;var n,
	        i = t;do {
	      if (n = !1, i.steiner || !J(i, i.next) && 0 !== G(i.prev, i, i.next)) i = i.next;else {
	        if (et(i), (i = e = i.prev) === i.next) return null;n = !0;
	      }
	    } while (n || i !== e);return e;
	  }function U(t, e, n, i, o, a, r) {
	    if (t) {
	      !r && a && function (t, e, n, i) {
	        var o = t;for (; null === o.z && (o.z = $(o.x, o.y, e, n, i)), o.prevZ = o.prev, o.nextZ = o.next, o = o.next, o !== t;) {}o.prevZ.nextZ = null, o.prevZ = null, function (t) {
	          var e,
	              n,
	              i,
	              o,
	              a,
	              r,
	              s,
	              h,
	              l = 1;do {
	            for (n = t, a = t = null, r = 0; n;) {
	              for (r++, i = n, e = s = 0; e < l && (s++, i = i.nextZ); e++) {}for (h = l; 0 < s || 0 < h && i;) {
	                0 === s ? (i = (o = i).nextZ, h--) : 0 !== h && i ? n.z <= i.z ? (n = (o = n).nextZ, s--) : (i = (o = i).nextZ, h--) : (n = (o = n).nextZ, s--), a ? a.nextZ = o : t = o, o.prevZ = a, a = o;
	              }n = i;
	            }a.nextZ = null, l *= 2;
	          } while (1 < r);
	        }(o);
	      }(t, i, o, a);for (var s, h, l = t; t.prev !== t.next;) {
	        if (s = t.prev, h = t.next, a ? j(t, i, o, a) : Z(t)) e.push(s.i / n), e.push(t.i / n), e.push(h.i / n), et(t), t = h.next, l = h.next;else if ((t = h) === l) {
	          r ? 1 === r ? U(t = N(t, e, n), e, n, i, o, a, 2) : 2 === r && W(t, e, n, i, o, a) : U(B(t), e, n, i, o, a, 1);break;
	        }
	      }
	    }
	  }function Z(t) {
	    var e = t.prev,
	        n = t,
	        i = t.next;if (0 <= G(e, n, i)) return !1;for (var o = t.next.next; o !== t.prev;) {
	      if (Y(e.x, e.y, n.x, n.y, i.x, i.y, o.x, o.y) && 0 <= G(o.prev, o, o.next)) return !1;o = o.next;
	    }return !0;
	  }function j(t, e, n, i) {
	    var o = t.prev,
	        a = t,
	        r = t.next;if (0 <= G(o, a, r)) return !1;for (var s = o.x < a.x ? o.x < r.x ? o.x : r.x : a.x < r.x ? a.x : r.x, h = o.y < a.y ? o.y < r.y ? o.y : r.y : a.y < r.y ? a.y : r.y, l = o.x > a.x ? o.x > r.x ? o.x : r.x : a.x > r.x ? a.x : r.x, u = o.y > a.y ? o.y > r.y ? o.y : r.y : a.y > r.y ? a.y : r.y, c = $(s, h, e, n, i), p = $(l, u, e, n, i), v = t.nextZ; v && v.z <= p;) {
	      if (v !== t.prev && v !== t.next && Y(o.x, o.y, a.x, a.y, r.x, r.y, v.x, v.y) && 0 <= G(v.prev, v, v.next)) return !1;v = v.nextZ;
	    }for (v = t.prevZ; v && v.z >= c;) {
	      if (v !== t.prev && v !== t.next && Y(o.x, o.y, a.x, a.y, r.x, r.y, v.x, v.y) && 0 <= G(v.prev, v, v.next)) return !1;v = v.prevZ;
	    }return !0;
	  }function N(t, e, n) {
	    var i = t;do {
	      var o = i.prev,
	          a = i.next.next;!J(o, a) && Q(o, i, i.next, a) && X(o, a) && X(a, o) && (e.push(o.i / n), e.push(i.i / n), e.push(a.i / n), et(i), et(i.next), i = t = a), i = i.next;
	    } while (i !== t);return i;
	  }function W(t, e, n, i, o, a) {
	    var r,
	        s,
	        h = t;do {
	      for (var l = h.next.next; l !== h.prev;) {
	        if (h.i !== l.i && (s = l, (r = h).next.i !== s.i && r.prev.i !== s.i && !function (t, e) {
	          var n = t;do {
	            if (n.i !== t.i && n.next.i !== t.i && n.i !== e.i && n.next.i !== e.i && Q(n, n.next, t, e)) return !0;n = n.next;
	          } while (n !== t);return !1;
	        }(r, s) && X(r, s) && X(s, r) && function (t, e) {
	          var n = t,
	              i = !1,
	              o = (t.x + e.x) / 2,
	              a = (t.y + e.y) / 2;for (; n.y > a != n.next.y > a && o < (n.next.x - n.x) * (a - n.y) / (n.next.y - n.y) + n.x && (i = !i), n = n.next, n !== t;) {}return i;
	        }(r, s))) {
	          var u = K(h, l);return h = B(h, h.next), u = B(u, u.next), U(h, e, n, i, o, a), void U(u, e, n, i, o, a);
	        }l = l.next;
	      }h = h.next;
	    } while (h !== t);
	  }function H(t, e) {
	    return t.x - e.x;
	  }function q(t, e) {
	    if (e = function (t, e) {
	      var n,
	          i = e,
	          o = t.x,
	          a = t.y,
	          r = -1 / 0;do {
	        if (a <= i.y && a >= i.next.y) {
	          var s = i.x + (a - i.y) * (i.next.x - i.x) / (i.next.y - i.y);if (s <= o && r < s) {
	            if ((r = s) === o) {
	              if (a === i.y) return i;if (a === i.next.y) return i.next;
	            }n = i.x < i.next.x ? i : i.next;
	          }
	        }i = i.next;
	      } while (i !== e);if (!n) return null;if (o === r) return n.prev;var h,
	          l = n,
	          u = n.x,
	          c = n.y,
	          p = 1 / 0;i = n.next;for (; i !== l;) {
	        o >= i.x && i.x >= u && Y(a < c ? o : r, a, u, c, a < c ? r : o, a, i.x, i.y) && ((h = Math.abs(a - i.y) / (o - i.x)) < p || h === p && i.x > n.x) && X(i, t) && (n = i, p = h), i = i.next;
	      }return n;
	    }(t, e)) {
	      var n = K(e, t);B(n, n.next);
	    }
	  }function $(t, e, n, i, o) {
	    return (t = 1431655765 & ((t = 858993459 & ((t = 252645135 & ((t = 16711935 & ((t = 32767 * (t - n) / o) | t << 8)) | t << 4)) | t << 2)) | t << 1)) | (e = 1431655765 & ((e = 858993459 & ((e = 252645135 & ((e = 16711935 & ((e = 32767 * (e - i) / o) | e << 8)) | e << 4)) | e << 2)) | e << 1)) << 1;
	  }function V(t) {
	    for (var e = t, n = t; e.x < n.x && (n = e), (e = e.next) !== t;) {}return n;
	  }function Y(t, e, n, i, o, a, r, s) {
	    return 0 <= (o - r) * (e - s) - (t - r) * (a - s) && 0 <= (t - r) * (i - s) - (n - r) * (e - s) && 0 <= (n - r) * (a - s) - (o - r) * (i - s);
	  }function G(t, e, n) {
	    return (e.y - t.y) * (n.x - e.x) - (e.x - t.x) * (n.y - e.y);
	  }function J(t, e) {
	    return t.x === e.x && t.y === e.y;
	  }function Q(t, e, n, i) {
	    return !!(J(t, e) && J(n, i) || J(t, i) && J(n, e)) || 0 < G(t, e, n) != 0 < G(t, e, i) && 0 < G(n, i, t) != 0 < G(n, i, e);
	  }function X(t, e) {
	    return G(t.prev, t, t.next) < 0 ? 0 <= G(t, e, t.next) && 0 <= G(t, t.prev, e) : G(t, e, t.prev) < 0 || G(t, t.next, e) < 0;
	  }function K(t, e) {
	    var n = new nt(t.i, t.x, t.y),
	        i = new nt(e.i, e.x, e.y),
	        o = t.next,
	        a = e.prev;return (t.next = e).prev = t, (n.next = o).prev = n, (i.next = n).prev = i, (a.next = i).prev = a, i;
	  }function tt(t, e, n, i) {
	    var o = new nt(t, e, n);return i ? (o.next = i.next, (o.prev = i).next.prev = o, i.next = o) : (o.prev = o).next = o, o;
	  }function et(t) {
	    t.next.prev = t.prev, t.prev.next = t.next, t.prevZ && (t.prevZ.nextZ = t.nextZ), t.nextZ && (t.nextZ.prevZ = t.prevZ);
	  }function nt(t, e, n) {
	    this.i = t, this.x = e, this.y = n, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = !1;
	  }function it(t, e, n, i) {
	    for (var o = 0, a = e, r = n - i; a < n; a += i) {
	      o += (t[r] - t[a]) * (t[a + 1] + t[r + 1]), r = a;
	    }return o;
	  }I.deviation = function (t, e, n, i) {
	    var o = e && e.length,
	        a = o ? e[0] * n : t.length,
	        r = Math.abs(it(t, 0, a, n));if (o) for (var s = 0, h = e.length; s < h; s++) {
	      var l = e[s] * n,
	          u = s < h - 1 ? e[s + 1] * n : t.length;r -= Math.abs(it(t, l, u, n));
	    }var c = 0;for (s = 0; s < i.length; s += 3) {
	      var p = i[s] * n,
	          v = i[s + 1] * n,
	          d = i[s + 2] * n;c += Math.abs((t[p] - t[d]) * (t[1 + v] - t[1 + p]) - (t[p] - t[v]) * (t[1 + d] - t[1 + p]));
	    }return 0 === r && 0 === c ? 0 : Math.abs((c - r) / r);
	  }, I.flatten = function (t) {
	    for (var e = t[0][0].length, n = { vertices: [], holes: [], dimensions: e }, i = 0, o = 0; o < t.length; o++) {
	      for (var a = 0; a < t[o].length; a++) {
	        for (var r = 0; r < e; r++) {
	          n.vertices.push(t[o][a][r]);
	        }
	      }0 < o && (i += t[o - 1].length, n.holes.push(i));
	    }return n;
	  };var ot = ["attribute vec4 a_Position;", "void main() {", "gl_Position = a_Position;", "gl_PointSize = 30.0;", "}"].join(""),
	      at = ["precision mediump float;", "uniform vec4 u_FragColor;", "void main() {", "gl_FragColor = u_FragColor;", "}"].join("");var rt = { draw: function draw(t, e, n) {
	      if (e) {
	        t.clear(t.COLOR_BUFFER_BIT), t.viewport(0, 0, t.canvas.width, t.canvas.height);var i = C(t, ot, at);t.enable(t.BLEND), t.blendFunc(t.SRC_ALPHA, t.ONE);var o = t.canvas.width / 2,
	            a = t.canvas.height / 2;t.bindBuffer(t.ARRAY_BUFFER, t.createBuffer()), t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, t.createBuffer());var r = t.getAttribLocation(i, "a_Position");t.vertexAttribPointer(r, 2, t.FLOAT, !1, 0, 0), t.enableVertexAttribArray(r);var s = t.getUniformLocation(i, "u_FragColor"),
	            h = S(n.fillStyle || "red");t.uniform4f(s, h[0] / 255, h[1] / 255, h[2] / 255, h[3] / 255), t.lineWidth(n.lineWidth || 1);for (var l = [], u = [], c = 0, p = 0, v = e.length; p < v; p++) {
	          var d = I.flatten(e[p].geometry._coordinates || e[p].geometry.coordinates),
	              g = d.vertices;c = l.length / 2;for (var f = 0; f < g.length; f += 2) {
	            g[f] = (g[f] - o) / o, g[f + 1] = (a - g[f + 1]) / a;
	          }65536 < (l.length + g.length) / 2 && (t.bufferData(t.ARRAY_BUFFER, new Float32Array(l), t.STATIC_DRAW), t.bufferData(t.ELEMENT_ARRAY_BUFFER, new Uint16Array(u), t.STATIC_DRAW), t.drawElements(t.TRIANGLES, u.length, t.UNSIGNED_SHORT, 0), l.length = 0, c = u.length = 0);for (f = 0; f < g.length; f++) {
	            l.push(g[f]);
	          }var m = I(g, d.holes, d.dimensions);for (f = 0; f < m.length; f++) {
	            u.push(m[f] + c);
	          }
	        }t.bufferData(t.ARRAY_BUFFER, new Float32Array(l), t.STATIC_DRAW), t.bufferData(t.ELEMENT_ARRAY_BUFFER, new Uint16Array(u), t.STATIC_DRAW), t.drawElements(t.TRIANGLES, u.length, t.UNSIGNED_SHORT, 0), t.bindBuffer(t.ARRAY_BUFFER, null), t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, null);
	      }
	    } },
	      st = { draw: function draw(t, e, n) {
	      var i = e instanceof T ? e.get() : e;0 < i.length && ("LineString" == i[0].geometry.type ? y.draw(t, i, n) : "Polygon" == i[0].geometry.type || "MultiPolygon" == i[0].geometry.type ? rt.draw(t, i, n) : O.draw(t, i, n));
	    } };function ht(t, e, n) {
	    if (!t || !e) return null;function i(t) {
	      return 1 - 2 * t + t * t;
	    }function o(t) {
	      return 2 * t - 2 * t * t;
	    }function a(t) {
	      return t * t;
	    }var r,
	        s,
	        h,
	        l,
	        u,
	        c,
	        p = [],
	        v = (n = n || 40, 0),
	        d = 0;if (void 0 !== e) {
	      var g = parseFloat(t.lat),
	          f = parseFloat(e.lat),
	          m = parseFloat(t.lng),
	          y = parseFloat(e.lng);for (m < y && 180 < parseFloat(y - m) && m < 0 && (m = parseFloat(360 + m), y = parseFloat(360 + y)), c = 0, s = f == g ? (r = 0, m - y) : y == m ? (r = Math.PI / 2, g - f) : (r = Math.atan((f - g) / (y - m)), (f - g) / Math.sin(r)), 0 == c && (c = r + Math.PI / 5), u = (h = s / 2) * Math.cos(c) + m, l = h * Math.sin(c) + g, v = 0; v < n + 1; v++) {
	        var x = m * i(d) + u * o(d) + y * a(d),
	            _ = g * i(d) + l * o(d) + f * a(d),
	            w = t.lng,
	            b = e.lng;p.push([w < 0 && 0 < b ? x - 360 : x, _]), d += 1 / n;
	      }return p;
	    }void 0 !== p && (p = []);
	  }var lt = { getPoints: function getPoints(t, e) {
	      e = e || {};for (var n = [], i = 0; i < t.length - 1; i++) {
	        var o = ht(t[i], t[i + 1], e.count);o && 0 < o.length && (n = n.concat(o));
	      }return n;
	    } };function ut(t) {
	    this.splitList = t || { other: 1 };
	  }function ct(t) {
	    this.splitList = t || [{ start: 0, value: "red" }];
	  }ut.prototype.get = function (t) {
	    var e = this.splitList,
	        n = e.other;for (var i in e) {
	      if (t == i) {
	        n = e[i];break;
	      }
	    }return n;
	  }, ut.prototype.generateByDataSet = function (t, e) {
	    var n = e || ["rgba(255, 255, 0, 0.8)", "rgba(253, 98, 104, 0.8)", "rgba(255, 146, 149, 0.8)", "rgba(255, 241, 193, 0.8)", "rgba(110, 176, 253, 0.8)", "rgba(52, 139, 251, 0.8)", "rgba(17, 102, 252, 0.8)"],
	        i = t.get();this.splitList = {};for (var o = 0, a = 0; a < i.length && (void 0 === this.splitList[i[a].count] && (this.splitList[i[a].count] = n[o], o++), !(n.length - 1 <= o)); a++) {}this.splitList.other = n[n.length - 1];
	  }, ut.prototype.getLegend = function (t) {
	    var e = this.splitList,
	        n = document.createElement("div");n.style.cssText = "background:#fff; padding: 5px; border: 1px solid #ccc;";var i = "";for (var o in e) {
	      i += '<div style="line-height: 19px;" value="' + o + '"><span style="vertical-align: -2px; display: inline-block; width: 30px;height: 19px;background:' + e[o] + ';"></span><span style="margin-left: 3px;">' + o + "<span></div>";
	    }return n.innerHTML = i, n;
	  }, ct.prototype.get = function (t) {
	    for (var e = this.splitList, n = !1, i = 0; i < e.length; i++) {
	      if ((void 0 === e[i].start || void 0 !== e[i].start && t >= e[i].start) && (void 0 === e[i].end || void 0 !== e[i].end && t < e[i].end)) {
	        n = e[i].value;break;
	      }
	    }return n;
	  }, ct.prototype.generateByDataSet = function (t) {
	    var e = t.getMin("count"),
	        n = t.getMax("count");this.generateByMinMax(e, n);
	  }, ct.prototype.generateByMinMax = function (t, e) {
	    var n = ["rgba(255, 255, 0, 0.8)", "rgba(253, 98, 104, 0.8)", "rgba(255, 146, 149, 0.8)", "rgba(255, 241, 193, 0.8)", "rgba(110, 176, 253, 0.8)", "rgba(52, 139, 251, 0.8)", "rgba(17, 102, 252, 0.8)"],
	        i = Number((e - t) / 7);e = Number(e);var o = Number(t);this.splitList = [];for (var a = 0; o < e;) {
	      this.splitList.push({ start: o, end: o + i, value: n[a] }), a++, o += i;
	    }
	  }, ct.prototype.getLegend = function (t) {
	    this.splitList;
	  };var pt = (e(vt, [{ key: "addLayer", value: function value(t, e) {
	      if ("baidu" == this.type) return new mapv.baiduMapLayer(this.map, dataSet, e);
	    } }, { key: "getMap", value: function value() {
	      return this.map;
	    } }]), vt);function vt(t, e, n) {
	    if (s(this, vt), !t || !e) return console.warn("id 和 type 为必填项"), !1;if ("baidu" == e) {
	      if (!BMap) return console.warn("请先引入百度地图JS API"), !1;
	    } else console.warn("暂不支持你的地图类型");this.type = e;var i = n && n.center ? n.center : [106.962497, 38.208726],
	        o = n && n.zoom ? n.zoom : 5,
	        a = this.map = new BMap.Map(t, { enableMapClick: !1 });a.centerAndZoom(new BMap.Point(i[0], i[1]), o), a.enableScrollWheelZoom(!0), a.setMapStyle({ style: "light" });
	  }function dt(t) {
	    this.options = t || {}, this.paneName = this.options.paneName || "mapPane", this.context = this.options.context || "2d", this.zIndex = this.options.zIndex || 0, this.mixBlendMode = this.options.mixBlendMode || null, this.enableMassClear = this.options.enableMassClear, this._map = t.map, this._lastDrawTime = null, this.show();
	  }var gt = "undefined" == typeof window ? {} : window,
	      ft = gt.BMap || gt.BMapGL;ft && ((dt.prototype = new ft.Overlay()).initialize = function (t) {
	    this._map = t;var e = this.canvas = document.createElement("canvas");e.style.cssText = "position:absolute;left:0;top:0;z-index:" + this.zIndex + ";user-select:none;", e.style.mixBlendMode = this.mixBlendMode, this.adjustSize();var n = t.getPanes()[this.paneName];(n = n || t.getPanes().floatShadow).appendChild(e);var i = this;return t.addEventListener("resize", function () {
	      i.adjustSize(), i._draw();
	    }), t.addEventListener("update", function () {
	      i._draw();
	    }), this.options.updateImmediate && setTimeout(function () {
	      i._draw();
	    }, 100), this.canvas;
	  }, dt.prototype.adjustSize = function () {
	    var t = this._map.getSize(),
	        e = this.canvas,
	        n = this.devicePixelRatio = gt.devicePixelRatio || 1;e.width = t.width * n, e.height = t.height * n, "2d" == this.context && e.getContext(this.context).scale(n, n), e.style.width = t.width + "px", e.style.height = t.height + "px";
	  }, dt.prototype.draw = function () {
	    var t = this;this.options.updateImmediate ? t._draw() : (clearTimeout(t.timeoutID), t.timeoutID = setTimeout(function () {
	      t._draw();
	    }, 15));
	  }, dt.prototype._draw = function () {
	    var t = this._map,
	        e = t.getSize(),
	        n = t.getCenter();if (n) {
	      var i = t.pointToOverlayPixel(n);this.canvas.style.left = i.x - e.width / 2 + "px", this.canvas.style.top = i.y - e.height / 2 + "px", this.dispatchEvent("draw"), this.options.update && this.options.update.call(this);
	    }
	  }, dt.prototype.getContainer = function () {
	    return this.canvas;
	  }, dt.prototype.show = function () {
	    this.canvas || this._map.addOverlay(this), this.canvas.style.display = "block";
	  }, dt.prototype.hide = function () {
	    this.canvas.style.display = "none";
	  }, dt.prototype.setZIndex = function (t) {
	    this.zIndex = t, this.canvas.style.zIndex = this.zIndex;
	  }, dt.prototype.getZIndex = function () {
	    return this.zIndex;
	  });var mt,
	      yt,
	      xt = xt || (mt = [], { getAll: function getAll() {
	      return mt;
	    }, removeAll: function removeAll() {
	      mt = [];
	    }, add: function add(t) {
	      mt.push(t);
	    }, remove: function remove(t) {
	      var e = mt.indexOf(t);-1 !== e && mt.splice(e, 1);
	    }, update: function update(t, e) {
	      if (0 === mt.length) return !1;var n = 0;for (t = void 0 !== t ? t : xt.now(); n < mt.length;) {
	        mt[n].update(t) || e ? n++ : mt.splice(n, 1);
	      }return !0;
	    } });"undefined" == typeof window && "undefined" != typeof process ? xt.now = function () {
	    var t = process.hrtime();return 1e3 * t[0] + t[1] / 1e6;
	  } : "undefined" != typeof window && void 0 !== window.performance && void 0 !== window.performance.now ? xt.now = window.performance.now.bind(window.performance) : void 0 !== Date.now ? xt.now = Date.now : xt.now = function () {
	    return new Date().getTime();
	  }, xt.Tween = function (t) {
	    var l,
	        u = t,
	        c = {},
	        p = {},
	        v = {},
	        d = 1e3,
	        g = 0,
	        f = !1,
	        n = !1,
	        m = !1,
	        y = 0,
	        x = null,
	        _ = xt.Easing.Linear.None,
	        w = xt.Interpolation.Linear,
	        b = [],
	        k = null,
	        E = !1,
	        L = null,
	        C = null,
	        e = null;this.to = function (t, e) {
	      return p = t, void 0 !== e && (d = e), this;
	    }, this.start = function (t) {
	      for (var e in xt.add(this), E = !(n = !0), x = void 0 !== t ? t : xt.now(), x += y, p) {
	        if (p[e] instanceof Array) {
	          if (0 === p[e].length) continue;p[e] = [u[e]].concat(p[e]);
	        }void 0 !== u[e] && (c[e] = u[e], c[e] instanceof Array == !1 && (c[e] *= 1), v[e] = c[e] || 0);
	      }return this;
	    }, this.stop = function () {
	      return n && (xt.remove(this), n = !1, null !== e && e.call(u, u), this.stopChainedTweens()), this;
	    }, this.end = function () {
	      return this.update(x + d), this;
	    }, this.stopChainedTweens = function () {
	      for (var t = 0, e = b.length; t < e; t++) {
	        b[t].stop();
	      }
	    }, this.delay = function (t) {
	      return y = t, this;
	    }, this.repeat = function (t) {
	      return g = t, this;
	    }, this.repeatDelay = function (t) {
	      return l = t, this;
	    }, this.yoyo = function (t) {
	      return f = t, this;
	    }, this.easing = function (t) {
	      return _ = t, this;
	    }, this.interpolation = function (t) {
	      return w = t, this;
	    }, this.chain = function () {
	      return b = arguments, this;
	    }, this.onStart = function (t) {
	      return k = t, this;
	    }, this.onUpdate = function (t) {
	      return L = t, this;
	    }, this.onComplete = function (t) {
	      return C = t, this;
	    }, this.onStop = function (t) {
	      return e = t, this;
	    }, this.update = function (t) {
	      var e, n, i;if (t < x) return !0;for (e in !1 === E && (null !== k && k.call(u, u), E = !0), i = _(n = 1 < (n = (t - x) / d) ? 1 : n), p) {
	        if (void 0 !== c[e]) {
	          var o = c[e] || 0,
	              a = p[e];a instanceof Array ? u[e] = w(a, i) : ("string" == typeof a && (a = "+" === a.charAt(0) || "-" === a.charAt(0) ? o + parseFloat(a) : parseFloat(a)), "number" == typeof a && (u[e] = o + (a - o) * i));
	        }
	      }if (null !== L && L.call(u, i), 1 !== n) return !0;if (0 < g) {
	        for (e in isFinite(g) && g--, v) {
	          if ("string" == typeof p[e] && (v[e] = v[e] + parseFloat(p[e])), f) {
	            var r = v[e];v[e] = p[e], p[e] = r;
	          }c[e] = v[e];
	        }return f && (m = !m), x = void 0 !== l ? t + l : t + y, !0;
	      }null !== C && C.call(u, u);for (var s = 0, h = b.length; s < h; s++) {
	        b[s].start(x + d);
	      }return !1;
	    };
	  }, xt.Easing = { Linear: { None: function None(t) {
	        return t;
	      } }, Quadratic: { In: function In(t) {
	        return t * t;
	      }, Out: function Out(t) {
	        return t * (2 - t);
	      }, InOut: function InOut(t) {
	        return (t *= 2) < 1 ? .5 * t * t : -.5 * (--t * (t - 2) - 1);
	      } }, Cubic: { In: function In(t) {
	        return t * t * t;
	      }, Out: function Out(t) {
	        return --t * t * t + 1;
	      }, InOut: function InOut(t) {
	        return (t *= 2) < 1 ? .5 * t * t * t : .5 * ((t -= 2) * t * t + 2);
	      } }, Quartic: { In: function In(t) {
	        return t * t * t * t;
	      }, Out: function Out(t) {
	        return 1 - --t * t * t * t;
	      }, InOut: function InOut(t) {
	        return (t *= 2) < 1 ? .5 * t * t * t * t : -.5 * ((t -= 2) * t * t * t - 2);
	      } }, Quintic: { In: function In(t) {
	        return t * t * t * t * t;
	      }, Out: function Out(t) {
	        return --t * t * t * t * t + 1;
	      }, InOut: function InOut(t) {
	        return (t *= 2) < 1 ? .5 * t * t * t * t * t : .5 * ((t -= 2) * t * t * t * t + 2);
	      } }, Sinusoidal: { In: function In(t) {
	        return 1 - Math.cos(t * Math.PI / 2);
	      }, Out: function Out(t) {
	        return Math.sin(t * Math.PI / 2);
	      }, InOut: function InOut(t) {
	        return .5 * (1 - Math.cos(Math.PI * t));
	      } }, Exponential: { In: function In(t) {
	        return 0 === t ? 0 : Math.pow(1024, t - 1);
	      }, Out: function Out(t) {
	        return 1 === t ? 1 : 1 - Math.pow(2, -10 * t);
	      }, InOut: function InOut(t) {
	        return 0 === t ? 0 : 1 === t ? 1 : (t *= 2) < 1 ? .5 * Math.pow(1024, t - 1) : .5 * (2 - Math.pow(2, -10 * (t - 1)));
	      } }, Circular: { In: function In(t) {
	        return 1 - Math.sqrt(1 - t * t);
	      }, Out: function Out(t) {
	        return Math.sqrt(1 - --t * t);
	      }, InOut: function InOut(t) {
	        return (t *= 2) < 1 ? -.5 * (Math.sqrt(1 - t * t) - 1) : .5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
	      } }, Elastic: { In: function In(t) {
	        return 0 === t ? 0 : 1 === t ? 1 : -Math.pow(2, 10 * (t - 1)) * Math.sin(5 * (t - 1.1) * Math.PI);
	      }, Out: function Out(t) {
	        return 0 === t ? 0 : 1 === t ? 1 : Math.pow(2, -10 * t) * Math.sin(5 * (t - .1) * Math.PI) + 1;
	      }, InOut: function InOut(t) {
	        return 0 === t ? 0 : 1 === t ? 1 : (t *= 2) < 1 ? -.5 * Math.pow(2, 10 * (t - 1)) * Math.sin(5 * (t - 1.1) * Math.PI) : .5 * Math.pow(2, -10 * (t - 1)) * Math.sin(5 * (t - 1.1) * Math.PI) + 1;
	      } }, Back: { In: function In(t) {
	        return t * t * (2.70158 * t - 1.70158);
	      }, Out: function Out(t) {
	        return --t * t * (2.70158 * t + 1.70158) + 1;
	      }, InOut: function InOut(t) {
	        var e = 2.5949095;return (t *= 2) < 1 ? t * t * ((1 + e) * t - e) * .5 : .5 * ((t -= 2) * t * ((1 + e) * t + e) + 2);
	      } }, Bounce: { In: function In(t) {
	        return 1 - xt.Easing.Bounce.Out(1 - t);
	      }, Out: function Out(t) {
	        return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
	      }, InOut: function InOut(t) {
	        return t < .5 ? .5 * xt.Easing.Bounce.In(2 * t) : .5 * xt.Easing.Bounce.Out(2 * t - 1) + .5;
	      } } }, xt.Interpolation = { Linear: function Linear(t, e) {
	      var n = t.length - 1,
	          i = n * e,
	          o = Math.floor(i),
	          a = xt.Interpolation.Utils.Linear;return e < 0 ? a(t[0], t[1], i) : 1 < e ? a(t[n], t[n - 1], n - i) : a(t[o], t[n < o + 1 ? n : o + 1], i - o);
	    }, Bezier: function Bezier(t, e) {
	      for (var n = 0, i = t.length - 1, o = Math.pow, a = xt.Interpolation.Utils.Bernstein, r = 0; r <= i; r++) {
	        n += o(1 - e, i - r) * o(e, r) * t[r] * a(i, r);
	      }return n;
	    }, CatmullRom: function CatmullRom(t, e) {
	      var n = t.length - 1,
	          i = n * e,
	          o = Math.floor(i),
	          a = xt.Interpolation.Utils.CatmullRom;return t[0] === t[n] ? (e < 0 && (o = Math.floor(i = n * (1 + e))), a(t[(o - 1 + n) % n], t[o], t[(o + 1) % n], t[(o + 2) % n], i - o)) : e < 0 ? t[0] - (a(t[0], t[0], t[1], t[1], -i) - t[0]) : 1 < e ? t[n] - (a(t[n], t[n], t[n - 1], t[n - 1], i - n) - t[n]) : a(t[o ? o - 1 : 0], t[o], t[n < o + 1 ? n : o + 1], t[n < o + 2 ? n : o + 2], i - o);
	    }, Utils: { Linear: function Linear(t, e, n) {
	        return (e - t) * n + t;
	      }, Bernstein: function Bernstein(t, e) {
	        var n = xt.Interpolation.Utils.Factorial;return n(t) / n(e) / n(t - e);
	      }, Factorial: (yt = [1], function (t) {
	        var e = 1;if (yt[t]) return yt[t];for (var n = t; 1 < n; n--) {
	          e *= n;
	        }return yt[t] = e;
	      }), CatmullRom: function CatmullRom(t, e, n, i, o) {
	        var a = .5 * (n - t),
	            r = .5 * (i - e),
	            s = o * o;return (2 * e - 2 * n + a + r) * (o * s) + (-3 * e + 3 * n - 2 * a - r) * s + a * o + e;
	      } } };var _t = {},
	      wt = { draw: function draw(t, e, n) {
	      var i = "http://huiyan.baidu.com/github/tools/gis-drawing/static/images/direction.png";n.arrow && n.arrow.url && (i = n.arrow.url), _t[i] || (_t[i] = null);var o = _t[i];if (!o) {
	        var a = Array.prototype.slice.call(arguments),
	            r = new Image();return r.onload = function () {
	          _t[i] = r, wt.draw.apply(null, a);
	        }, void (r.src = i);
	      }var s = e instanceof T ? e.get() : e;for (var h in t.save(), n) {
	        t[h] = n[h];
	      }for (var l, u, c, p, v, d, g, f = [], m = null, y = 0, x = s.length; y < x; y++) {
	        var _ = s[y];t.save(), (_.fillStyle || _._fillStyle) && (t.fillStyle = _.fillStyle || _._fillStyle), (_.strokeStyle || _._strokeStyle) && (t.strokeStyle = _.strokeStyle || _._strokeStyle);var w = _.geometry.type;if (t.beginPath(), "LineString" === w) for (var b = _.geometry._coordinates || _.geometry.coordinates, k = void 0 !== n.arrow.interval ? n.arrow.interval : 1, E = 0; E < b.length; E += k) {
	          if (b[E] && b[E + 1]) {
	            var L = b[E];if (m && (d = L, g = m, Math.sqrt(Math.pow(d[0] - g[0], 2) + Math.pow(d[1] - g[1], 2)) < 30)) continue;t.save();var C = (l = b[E], u = b[E + 1], v = void 0, c = u[0] - l[0], p = u[1] - l[1], v = 360 * Math.atan(p / c) / (2 * Math.PI), u[0] < l[0] && (v += 180), v);t.translate(L[0], L[1]), t.rotate(C * Math.PI / 180), t.drawImage(o, -o.width / 2 / 2, -o.height / 2 / 2, o.width / 2, o.height / 2), t.restore(), f.push(L), m = L;
	          }
	        }t.restore();
	      }t.restore();
	    } };var bt = function bt(t, e, n) {
	    var i = e instanceof T ? e.get() : e;t.save(), t.fillStyle = n.fillStyle || "rgba(0, 0, 0, 0.5)", t.fillRect(0, 0, t.canvas.width, t.canvas.height), n.multiPolygonDraw = function () {
	      t.save(), t.clip(), E(t), t.restore();
	    };for (var o = 0, a = i.length; o < a; o++) {
	      t.beginPath(), x.drawDataSet(t, [i[o]], n), t.save(), t.clip(), E(t), t.restore();
	    }t.restore();
	  },
	      kt = {},
	      Et = {},
	      Lt = { draw: function draw(t, e, n) {
	      t.save();for (var i = e instanceof T ? e.get() : e, o = 0; o < i.length; o++) {
	        var a = i[o],
	            r = a.geometry._coordinates || a.geometry.coordinates;if (t.beginPath(), a.properties && a.properties.cluster) {
	          if (t.arc(r[0], r[1], a.size, 0, 2 * Math.PI), t.fillStyle = a.fillStyle, t.fill(), n.label && !1 !== n.label.show) {
	            t.fillStyle = n.label.fillStyle || "white", n.label.font && (t.font = n.label.font), n.label.shadowColor && (t.shadowColor = n.label.shadowColor), n.label.shadowBlur && (t.shadowBlur = n.label.shadowBlur);var s = a.properties.point_count,
	                h = t.measureText(s).width;t.fillText(s, r[0] + .5 - h / 2, r[1] + .5 + 3);
	          }
	        } else this.drawIcon(a, n, t);
	      }t.restore();
	    }, drawIcon: function drawIcon(t, e, n) {
	      function i() {
	        n.beginPath(), n.arc(r, s, e.size || 5, 0, 2 * Math.PI), n.fillStyle = e.fillStyle || "red", n.fill();
	      }var o = t.geometry._coordinates || t.geometry.coordinates,
	          a = b(o, 2),
	          r = a[0],
	          s = a[1],
	          h = Object.assign({}, e.iconOptions, t.iconOptions);if (h.url) {
	        var l = h.width,
	            u = h.height,
	            c = h.offset || { x: 0, y: 0 };r = r - ~~l / 2 + c.x, s = s - ~~u / 2 + c.y;var p,
	            v,
	            d,
	            g,
	            f,
	            m,
	            y,
	            x,
	            _ = window.encodeURIComponent(h.url),
	            w = kt[_];w ? "error" === w ? i() : l && u ? n.drawImage(w, r, s, l, u) : n.drawImage(w, r, s) : (Et[_] || (Et[_] = [], f = _, m = function m(e, t) {
	          Et[t] && Et[t].forEach(function (t) {
	            return t(e);
	          }), Et[t] = null, kt[t] = e;
	        }, y = function y(e) {
	          Et[e] && Et[e].forEach(function (t) {
	            return t("error", e);
	          }), Et[e] = null, kt[e] = "error", i();
	        }, (x = new Image()).onload = function () {
	          m && m(x, f);
	        }, x.onerror = function () {
	          y && y(f);
	        }, x.src = window.decodeURIComponent(f)), Et[_].push((p = r, v = s, d = l, g = u, function (t) {
	          "error" === t ? i() : d && g ? n.drawImage(t, p, v, d, g) : n.drawImage(t, p, v);
	        })));
	      } else i();
	    } };var Ct = function Ct(t, e, n) {
	    var i = e instanceof T ? e.get() : e;for (var o in t.save(), n) {
	      t[o] = n[o];
	    }var a = [],
	        r = n._size || n.size;r ? t.font = "bold " + r + "px Arial" : r = 12;var s = n.textKey || "text";if (n.textAlign || (t.textAlign = "center"), n.textBaseline || (t.textBaseline = "middle"), n.avoid) for (var h = 0, l = i.length; h < l; h++) {
	      var u = i[h].offset || n.offset || { x: 0, y: 0 },
	          c = (y = i[h].geometry._coordinates || i[h].geometry.coordinates)[0] + u.x,
	          p = y[1] + u.y,
	          v = i[h][s],
	          d = t.measureText(v).width,
	          g = c - d / 2,
	          f = p - r / 2,
	          m = { sw: { x: g, y: f + r }, ne: { x: g + d, y: f } };St(a, m) || (a.push(m), g += d / 2, f += r / 2, t.fillText(v, g, f));
	    } else for (h = 0, l = i.length; h < l; h++) {
	      var y;u = i[h].offset || n.offset || { x: 0, y: 0 }, c = (y = i[h].geometry._coordinates || i[h].geometry.coordinates)[0] + u.x, p = y[1] + u.y, v = i[h][s];t.fillText(v, c, p);
	    }t.restore();
	  };function St(t, e) {
	    for (var n = 0; n < t.length; n++) {
	      if (Mt(t[n], e)) return !0;
	    }return !1;
	  }function Mt(t, e) {
	    var n = Math.min(t.ne.x, e.ne.x),
	        i = Math.min(t.sw.y, e.sw.y),
	        o = Math.max(t.sw.x, e.sw.x),
	        a = Math.max(t.ne.y, e.ne.y);return o < n && a < i;
	  }var Pt = {},
	      zt = {},
	      Rt = function Rt(s, t, h) {
	    for (var l = t instanceof T ? t.get() : t, e = function e() {
	      var t,
	          e,
	          n,
	          i,
	          o = l[u];if (o.geometry) if ("string" == typeof (c = o.icon || h.icon)) {
	        var a = window.encodeURIComponent(c),
	            r = Pt[a];r ? At(r, h, s, o) : (zt[a] || (zt[a] = [], t = a, e = function e(_e3, t) {
	          zt[t] && zt[t].forEach(function (t) {
	            return t(_e3);
	          }), zt[t] = null, Pt[t] = _e3;
	        }, n = function n(t) {
	          zt[t] && zt[t].forEach(function (t) {
	            return t("error");
	          }), zt[t] = null, Pt[t] = "error";
	        }, (i = new Image()).onload = function () {
	          e && e(i, t);
	        }, i.onerror = function () {
	          n && n(t);
	        }, i.src = window.decodeURIComponent(t)), zt[a].push(function (t) {
	          At(t, h, s, o);
	        }));
	      } else At(c, h, s, o);
	    }, u = 0, n = l.length; u < n; u++) {
	      var c;e();
	    }
	  };function At(t, e, n, i) {
	    n.save();var o = i.geometry._coordinates || i.geometry.coordinates,
	        a = o[0],
	        r = o[1],
	        s = e.offset || { x: 0, y: 0 },
	        h = i.width || e._width || e.width,
	        l = i.height || e._height || e.height;if (a = a - ~~h / 2 + s.x, r = r - ~~l / 2 + s.y, "string" == typeof t) return n.beginPath(), n.arc(a, r, e.size || 5, 0, 2 * Math.PI), n.fillStyle = e.fillStyle || "red", void n.fill();var u = i.deg || e.deg;u && (n.translate(a, r), n.rotate(u * Math.PI / 180), n.translate(-a, -r)), e.sx && e.sy && e.swidth && e.sheight && e.width && e.height ? n.drawImage(t, e.sx, e.sy, e.swidth, e.sheight, a, r, h, l) : h && l ? n.drawImage(t, a, r, h, l) : n.drawImage(t, a, r), n.restore();
	  }function Ot(t, e, n, i, o, a) {
	    if (!(o - i <= n)) {
	      var r = i + o >> 1;!function t(e, n, i, o, a, r) {
	        for (; o < a;) {
	          if (600 < a - o) {
	            var s = a - o + 1,
	                h = i - o + 1,
	                l = Math.log(s),
	                u = .5 * Math.exp(2 * l / 3),
	                c = .5 * Math.sqrt(l * u * (s - u) / s) * (h - s / 2 < 0 ? -1 : 1),
	                p = Math.max(o, Math.floor(i - h * u / s + c)),
	                v = Math.min(a, Math.floor(i + (s - h) * u / s + c));t(e, n, i, p, v, r);
	          }var d = n[2 * i + r],
	              g = o,
	              f = a;for (It(e, n, o, i), n[2 * a + r] > d && It(e, n, o, a); g < f;) {
	            for (It(e, n, g, f), g++, f--; n[2 * g + r] < d;) {
	              g++;
	            }for (; n[2 * f + r] > d;) {
	              f--;
	            }
	          }n[2 * o + r] === d ? It(e, n, o, f) : It(e, n, ++f, a), f <= i && (o = f + 1), i <= f && (a = f - 1);
	        }
	      }(t, e, r, i, o, a % 2), Ot(t, e, n, i, r - 1, a + 1), Ot(t, e, n, 1 + r, o, a + 1);
	    }
	  }function It(t, e, n, i) {
	    Tt(t, n, i), Tt(e, 2 * n, 2 * i), Tt(e, 2 * n + 1, 2 * i + 1);
	  }function Tt(t, e, n) {
	    var i = t[e];t[e] = t[n], t[n] = i;
	  }function Dt(t, e, n, i) {
	    var o = t - n,
	        a = e - i;return o * o + a * a;
	  }function Ft(t) {
	    return t[0];
	  }function Bt(t) {
	    return t[1];
	  }function Ut(t, e, n, i, o) {
	    void 0 === e && (e = Ft), void 0 === n && (n = Bt), void 0 === i && (i = 64), void 0 === o && (o = Float64Array), this.nodeSize = i;for (var a = (this.points = t).length < 65536 ? Uint16Array : Uint32Array, r = this.ids = new a(t.length), s = this.coords = new o(2 * t.length), h = 0; h < t.length; h++) {
	      s[2 * (r[h] = h)] = e(t[h]), s[2 * h + 1] = n(t[h]);
	    }Ot(r, s, i, 0, r.length - 1, 0);
	  }Ut.prototype.range = function (t, e, n, i) {
	    return function (t, e, n, i, o, a, r) {
	      for (var s, h, l = [0, t.length - 1, 0], u = []; l.length;) {
	        var c = l.pop(),
	            p = l.pop(),
	            v = l.pop();if (p - v <= r) for (var d = v; d <= p; d++) {
	          s = e[2 * d], h = e[2 * d + 1], n <= s && s <= o && i <= h && h <= a && u.push(t[d]);
	        } else {
	          var g = Math.floor((v + p) / 2);s = e[2 * g], h = e[2 * g + 1], n <= s && s <= o && i <= h && h <= a && u.push(t[g]);var f = (c + 1) % 2;(0 === c ? n <= s : i <= h) && (l.push(v), l.push(g - 1), l.push(f)), (0 === c ? s <= o : h <= a) && (l.push(g + 1), l.push(p), l.push(f));
	        }
	      }return u;
	    }(this.ids, this.coords, t, e, n, i, this.nodeSize);
	  };function Zt(t) {
	    this.options = $t(Object.create(jt), t), this.trees = new Array(this.options.maxZoom + 1);
	  }var jt = { minZoom: 0, maxZoom: 16, minPoints: 2, radius: 40, extent: 512, nodeSize: 64, log: !(Ut.prototype.within = function (t, e, n) {
	      return function (t, e, n, i, o, a) {
	        for (var r = [0, t.length - 1, 0], s = [], h = o * o; r.length;) {
	          var l = r.pop(),
	              u = r.pop(),
	              c = r.pop();if (u - c <= a) for (var p = c; p <= u; p++) {
	            Dt(e[2 * p], e[2 * p + 1], n, i) <= h && s.push(t[p]);
	          } else {
	            var v = Math.floor((c + u) / 2),
	                d = e[2 * v],
	                g = e[2 * v + 1];Dt(d, g, n, i) <= h && s.push(t[v]);var f = (l + 1) % 2;(0 === l ? n - o <= d : i - o <= g) && (r.push(c), r.push(v - 1), r.push(f)), (0 === l ? d <= n + o : g <= i + o) && (r.push(v + 1), r.push(u), r.push(f));
	          }
	        }return s;
	      }(this.ids, this.coords, t, e, n, this.nodeSize);
	    }), generateId: !1, reduce: null, map: function map(t) {
	      return t;
	    } };function Nt(t) {
	    return { type: "Feature", id: t.id, properties: Wt(t), geometry: { type: "Point", coordinates: [360 * (t.x - .5), (e = t.y, n = (180 - 360 * e) * Math.PI / 180, 360 * Math.atan(Math.exp(n)) / Math.PI - 90)] } };var e, n;
	  }function Wt(t) {
	    var e = t.numPoints,
	        n = 1e4 <= e ? Math.round(e / 1e3) + "k" : 1e3 <= e ? Math.round(e / 100) / 10 + "k" : e;return $t($t({}, t.properties), { cluster: !0, cluster_id: t.id, point_count: e, point_count_abbreviated: n });
	  }function Ht(t) {
	    return t / 360 + .5;
	  }function qt(t) {
	    var e = Math.sin(t * Math.PI / 180),
	        n = .5 - .25 * Math.log((1 + e) / (1 - e)) / Math.PI;return n < 0 ? 0 : 1 < n ? 1 : n;
	  }function $t(t, e) {
	    for (var n in e) {
	      t[n] = e[n];
	    }return t;
	  }function Vt(t) {
	    return t.x;
	  }function Yt(t) {
	    return t.y;
	  }Zt.prototype.load = function (t) {
	    var e = this.options,
	        n = (e.log, e.minZoom),
	        i = e.maxZoom,
	        o = e.nodeSize;t.length;this.points = t;for (var a, r, s, h, l, u = [], c = 0; c < t.length; c++) {
	      t[c].geometry && u.push((a = t[c], r = c, void 0, s = a.geometry.coordinates, h = s[0], l = s[1], { x: Ht(h), y: qt(l), zoom: 1 / 0, index: r, parentId: -1 }));
	    }this.trees[i + 1] = new Ut(u, Vt, Yt, o, Float32Array);for (var p = i; n <= p; p--) {
	      Date.now();u = this._cluster(u, p), this.trees[p] = new Ut(u, Vt, Yt, o, Float32Array);
	    }return this;
	  }, Zt.prototype.getClusters = function (t, e) {
	    var n = ((t[0] + 180) % 360 + 360) % 360 - 180,
	        i = Math.max(-90, Math.min(90, t[1])),
	        o = 180 === t[2] ? 180 : ((t[2] + 180) % 360 + 360) % 360 - 180,
	        a = Math.max(-90, Math.min(90, t[3]));if (360 <= t[2] - t[0]) n = -180, o = 180;else if (o < n) {
	      var r = this.getClusters([n, i, 180, a], e),
	          s = this.getClusters([-180, i, o, a], e);return r.concat(s);
	    }for (var h = this.trees[this._limitZoom(e)], l = [], u = 0, c = h.range(Ht(n), qt(a), Ht(o), qt(i)); u < c.length; u += 1) {
	      var p = c[u],
	          v = h.points[p];l.push(v.numPoints ? Nt(v) : this.points[v.index]);
	    }return l;
	  }, Zt.prototype.getChildren = function (t) {
	    var e = this._getOriginId(t),
	        n = this._getOriginZoom(t),
	        i = "No cluster with the specified id.",
	        o = this.trees[n];if (!o) throw new Error(i);var a = o.points[e];if (!a) throw new Error(i);for (var r = this.options.radius / (this.options.extent * Math.pow(2, n - 1)), s = [], h = 0, l = o.within(a.x, a.y, r); h < l.length; h += 1) {
	      var u = l[h],
	          c = o.points[u];c.parentId === t && s.push(c.numPoints ? Nt(c) : this.points[c.index]);
	    }if (0 === s.length) throw new Error(i);return s;
	  }, Zt.prototype.getLeaves = function (t, e, n) {
	    e = e || 10, n = n || 0;var i = [];return this._appendLeaves(i, t, e, n, 0), i;
	  }, Zt.prototype.getTile = function (t, e, n) {
	    var i = this.trees[this._limitZoom(t)],
	        o = Math.pow(2, t),
	        a = this.options,
	        r = a.extent,
	        s = a.radius / r,
	        h = (n - s) / o,
	        l = (n + 1 + s) / o,
	        u = { features: [] };return this._addTileFeatures(i.range((e - s) / o, h, (e + 1 + s) / o, l), i.points, e, n, o, u), 0 === e && this._addTileFeatures(i.range(1 - s / o, h, 1, l), i.points, o, n, o, u), e === o - 1 && this._addTileFeatures(i.range(0, h, s / o, l), i.points, -1, n, o, u), u.features.length ? u : null;
	  }, Zt.prototype.getClusterExpansionZoom = function (t) {
	    for (var e = this._getOriginZoom(t) - 1; e <= this.options.maxZoom;) {
	      var n = this.getChildren(t);if (e++, 1 !== n.length) break;t = n[0].properties.cluster_id;
	    }return e;
	  }, Zt.prototype._appendLeaves = function (t, e, n, i, o) {
	    for (var a = 0, r = this.getChildren(e); a < r.length; a += 1) {
	      var s = r[a],
	          h = s.properties;if (h && h.cluster ? o + h.point_count <= i ? o += h.point_count : o = this._appendLeaves(t, h.cluster_id, n, i, o) : o < i ? o++ : t.push(s), t.length === n) break;
	    }return o;
	  }, Zt.prototype._addTileFeatures = function (t, e, n, i, o, a) {
	    for (var r = 0, s = t; r < s.length; r += 1) {
	      var h = e[s[r]],
	          l = h.numPoints,
	          u = { type: 1, geometry: [[Math.round(this.options.extent * (h.x * o - n)), Math.round(this.options.extent * (h.y * o - i))]], tags: l ? Wt(h) : this.points[h.index].properties },
	          c = void 0;l ? c = h.id : this.options.generateId ? c = h.index : this.points[h.index].id && (c = this.points[h.index].id), void 0 !== c && (u.id = c), a.features.push(u);
	    }
	  }, Zt.prototype._limitZoom = function (t) {
	    return Math.max(this.options.minZoom, Math.min(+t, this.options.maxZoom + 1));
	  }, Zt.prototype._cluster = function (t, e) {
	    for (var n = [], i = this.options, o = i.radius, a = i.extent, r = i.reduce, s = i.minPoints, h = o / (a * Math.pow(2, e)), l = 0; l < t.length; l++) {
	      var u = t[l];if (!(u.zoom <= e)) {
	        u.zoom = e;for (var c = this.trees[e + 1], p = c.within(u.x, u.y, h), v = u.numPoints || 1, d = v, g = 0, f = p; g < f.length; g += 1) {
	          var m = f[g],
	              y = c.points[m];y.zoom > e && (d += y.numPoints || 1);
	        }if (s <= d) {
	          for (var x = u.x * v, _ = u.y * v, w = r && 1 < v ? this._map(u, !0) : null, b = (l << 5) + (e + 1) + this.points.length, k = 0, E = p; k < E.length; k += 1) {
	            var L = E[k],
	                C = c.points[L];if (!(C.zoom <= e)) {
	              C.zoom = e;var S = C.numPoints || 1;x += C.x * S, _ += C.y * S, C.parentId = b, r && r(w = w || this._map(u, !0), this._map(C));
	            }
	          }u.parentId = b, n.push({ x: x / d, y: _ / d, zoom: 1 / 0, id: b, parentId: -1, numPoints: d, properties: w });
	        } else if (n.push(u), 1 < d) for (var M = 0, P = p; M < P.length; M += 1) {
	          var z = P[M],
	              R = c.points[z];R.zoom <= e || (R.zoom = e, n.push(R));
	        }
	      }
	    }return n;
	  }, Zt.prototype._getOriginId = function (t) {
	    return t - this.points.length >> 5;
	  }, Zt.prototype._getOriginZoom = function (t) {
	    return (t - this.points.length) % 32;
	  }, Zt.prototype._map = function (t, e) {
	    if (t.numPoints) return e ? $t({}, t.properties) : t.properties;var n = this.points[t.index].properties,
	        i = this.options.map(n);return e && i === n ? $t({}, i) : i;
	  }, "undefined" != typeof window && requestAnimationFrame(function t(e) {
	    requestAnimationFrame(t);xt.update(e);
	  });var Gt = (e(Jt, [{ key: "refreshCluster", value: function value(t) {
	      t = t || this.options, this.supercluster = new Zt({ maxZoom: t.maxZoom || 19, radius: t.clusterRadius || 100, minPoints: t.minPoints || 2, extent: t.extent || 512 }), this.supercluster.load(this.dataSet.get()), this.supercluster.trees.forEach(function (t) {
	        var e = 0,
	            n = 1 / 0;t.points.forEach(function (t) {
	          e = Math.max(t.numPoints || 0, e), n = Math.min(t.numPoints || 1 / 0, n);
	        }), t.max = e, t.min = n;
	      }), this.clusterDataSet = new T();
	    } }, { key: "getDefaultContextConfig", value: function value() {
	      return { globalAlpha: 1, globalCompositeOperation: "source-over", imageSmoothingEnabled: !0, strokeStyle: "#000000", fillStyle: "#000000", shadowOffsetX: 0, shadowOffsetY: 0, shadowBlur: 0, shadowColor: "rgba(0, 0, 0, 0)", lineWidth: 1, lineCap: "butt", lineJoin: "miter", miterLimit: 10, lineDashOffset: 0, font: "10px sans-serif", textAlign: "start", textBaseline: "alphabetic" };
	    } }, { key: "initDataRange", value: function value() {
	      var t = this;if (t.intensity = new D({ maxSize: t.options.maxSize, minSize: t.options.minSize, gradient: t.options.gradient, max: t.options.max || this.dataSet.getMax("count") }), t.category = new ut(t.options.splitList), t.choropleth = new ct(t.options.splitList), void 0 === t.options.splitList && t.category.generateByDataSet(this.dataSet, t.options.color), void 0 === t.options.splitList) {
	        var e = t.options.min || this.dataSet.getMin("count"),
	            n = t.options.max || this.dataSet.getMax("count");t.choropleth.generateByMinMax(e, n);
	      }
	    } }, { key: "getLegend", value: function value(t) {
	      return this.options.draw, "intensity" == this.options.draw || "heatmap" == this.options.draw ? this.intensity.getLegend(t) : "category" == this.options.draw ? this.category.getLegend(t) : void 0;
	    } }, { key: "processData", value: function value(t) {
	      var e = this,
	          n = e.options.draw;if ("bubble" == n || "intensity" == n || "category" == n || "choropleth" == n || "simple" == n) for (var i = 0; i < t.length; i++) {
	        var o = t[i];"bubble" == e.options.draw ? t[i]._size = e.intensity.getSize(o.count) : t[i]._size = void 0;var a = "_fillStyle";"LineString" !== t[i].geometry.type && "stroke" !== e.options.styleType || (a = "_strokeStyle"), "intensity" == e.options.draw ? t[i][a] = e.intensity.getColor(o.count) : "category" == e.options.draw ? t[i][a] = e.category.get(o.count) : "choropleth" == e.options.draw && (t[i][a] = e.choropleth.get(o.count));
	      }
	    } }, { key: "isEnabledTime", value: function value() {
	      var t = this.options.animation;return t && !(!1 === t.enabled);
	    } }, { key: "argCheck", value: function value(t) {
	      "heatmap" == t.draw && t.strokeStyle && console.warn("[heatmap] options.strokeStyle is discard, pleause use options.strength [eg: options.strength = 0.1]");
	    } }, { key: "drawContext", value: function value(t, e, n, i) {
	      var o = this;switch (o.options.draw) {case "heatmap":
	          d.draw(t, e, o.options);break;case "grid":case "cluster":case "honeycomb":
	          o.options.offset = { x: i.x, y: i.y }, "grid" === o.options.draw ? g.draw(t, e, o.options) : "cluster" === o.options.draw ? Lt.draw(t, e, o.options) : f.draw(t, e, o.options);break;case "text":
	          Ct(t, e, o.options);break;case "icon":
	          Rt(t, e, o.options);break;case "clip":
	          bt(t, e, o.options);break;default:
	          "webgl" == o.options.context ? st.draw(o.canvasLayer.canvas.getContext("webgl"), e, o.options) : c.draw(t, e, o.options);}o.options.arrow && !1 !== o.options.arrow.show && wt.draw(t, e, o.options);
	    } }, { key: "isPointInPath", value: function value(t, e) {
	      var n;t = this.canvasLayer.canvas.getContext(this.context), n = "cluster" === this.options.draw && (!this.options.maxClusterZoom || this.options.maxClusterZoom >= this.getZoom()) ? this.clusterDataSet.get() : this.dataSet.get();for (var i = 0; i < n.length; i++) {
	        t.beginPath();var o = this.options,
	            a = e.x * this.canvasLayer.devicePixelRatio,
	            r = e.y * this.canvasLayer.devicePixelRatio;if (o.multiPolygonDraw = function () {
	          if (t.isPointInPath(a, r)) return n[i];
	        }, x.draw(t, n[i], o), -1 < (n[i].geometry && n[i].geometry.type).indexOf("LineString")) {
	          if (t.isPointInStroke && t.isPointInStroke(a, r)) return n[i];
	        } else if (t.isPointInPath(a, r)) return n[i];
	      }
	    } }, { key: "getClusterPoints", value: function value(t) {
	      var e = this;return "Feature" !== t.type ? [] : this.supercluster.getChildren(t.id).map(function (t) {
	        return "Feature" === t.type ? e.getClusterPoints(t) : t;
	      }).flat();
	    } }, { key: "clickEvent", value: function value(t, e) {
	      if (this.options.methods) {
	        var n = this.isPointInPath(this.getContext(), t);if (n) {
	          if ("cluster" === this.options.draw) {
	            var i = this.getClusterPoints(n);n.children = i;
	          }this.options.methods.click(n, e);
	        } else this.options.methods.click(null, e);
	      }
	    } }, { key: "mousemoveEvent", value: function value(t, e) {
	      if (this.options.methods) {
	        var n = this.isPointInPath(this.getContext(), t);if (n) {
	          if ("cluster" === this.options.draw) {
	            var i = this.getClusterPoints(n);n.children = i;
	          }this.options.methods.mousemove(n, e);
	        } else this.options.methods.mousemove(null, e);
	      }
	    } }, { key: "tapEvent", value: function value(t, e) {
	      if (this.options.methods) {
	        var n = this.isPointInPath(this.getContext(), t);if (n) {
	          if ("cluster" === this.options.draw) {
	            var i = this.getClusterPoints(n);n.children = i;
	          }this.options.methods.tap(n, e);
	        } else this.options.methods.tap(null, e);
	      }
	    } }, { key: "update", value: function value(t, e) {
	      var n = t.options,
	          i = this.options;for (var o in n) {
	        i[o] = n[o];
	      }this.init(i), !1 !== e && this.draw();
	    } }, { key: "setOptions", value: function value(t) {
	      this.dataSet.reset(), this.init(t), this.draw();
	    } }, { key: "set", value: function value(t) {
	      var e = this.getContext(),
	          n = this.getDefaultContextConfig();for (var i in n) {
	        e[i] = n[i];
	      }this.init(t.options), this.draw();
	    } }, { key: "destroy", value: function value() {
	      this.unbindEvent(), this.hide();
	    } }, { key: "initAnimator", value: function value() {
	      var t = this,
	          e = t.options.animation;if ("time" == t.options.draw || t.isEnabledTime()) {
	        e.stepsRange || (e.stepsRange = { start: this.dataSet.getMin("time") || 0, end: this.dataSet.getMax("time") || 0 }), this.steps = { step: e.stepsRange.start }, t.animator = new xt.Tween(this.steps).onUpdate(function () {
	          t._canvasUpdate(this.step);
	        }).repeat(1 / 0), this.addAnimatorEvent();var n = 1e3 * e.duration || 5e3;t.animator.to({ step: e.stepsRange.end }, n), t.animator.start();
	      } else t.animator && t.animator.stop();
	    } }, { key: "addAnimatorEvent", value: function value() {} }, { key: "animatorMovestartEvent", value: function value() {
	      var t = this.options.animation;this.isEnabledTime() && this.animator && (this.steps.step = t.stepsRange.start, this.animator.stop());
	    } }, { key: "animatorMoveendEvent", value: function value() {
	      this.isEnabledTime() && this.animator && this.animator.start();
	    } }]), Jt);function Jt(t, e, n) {
	    s(this, Jt), e instanceof T || (e = new T(e)), this.dataSet = e, this.map = t, "cluster" === n.draw && this.refreshCluster(n);
	  }var Qt = "undefined" == typeof window ? {} : window,
	      Xt = Qt.BMap || Qt.BMapGL,
	      Kt = (l(te, Gt), e(te, [{ key: "draw", value: function value() {
	      this.canvasLayer.draw();
	    } }, { key: "init", value: function value(t) {
	      var e = this;e.options = t, this.initDataRange(t), this.context = e.options.context || "2d", e.options.zIndex && this.canvasLayer && this.canvasLayer.setZIndex(e.options.zIndex), e.options.max && this.intensity.setMax(e.options.max), e.options.min && this.intensity.setMin(e.options.min), this.initAnimator();
	    } }, { key: "transferToMercator", value: function value() {
	      var n,
	          i = this.map,
	          t = i.getMapType();if (n = t.getProjection ? t.getProjection() : { lngLatToPoint: function lngLatToPoint(t) {
	          var e = i.lnglatToMercator(t.lng, t.lat);return { x: e[0], y: e[1] };
	        } }, "bd09mc" !== this.options.coordType) {
	        var e = this.dataSet.get();e = this.dataSet.transferCoordinate(e, function (t) {
	          var e = n.lngLatToPoint({ lng: t[0], lat: t[1] });return [e.x, e.y];
	        }, "coordinates", "coordinates_mercator"), this.dataSet._set(e);
	      }
	    } }, { key: "_canvasUpdate", value: function value() {
	      var t = this.ctx;if (t) {
	        var e,
	            n,
	            i,
	            o = this.map;o.getMapType().getProjection ? n = (e = o.getMapType().getProjection()).lngLatToPoint(o.getCenter()) : (-180 < (n = { x: o.getCenter().lng, y: o.getCenter().lat }).x && n.x < 180 && (n = { x: (n = o.lnglatToMercator(n.x, n.y))[0], y: n[1] }), e = { lngLatToPoint: function lngLatToPoint(t) {
	            var e = o.lnglatToMercator(t.lng, t.lat);return { x: e[0], y: e[1] };
	          } }), i = e.getZoomUnits ? e.getZoomUnits(o.getZoom()) : Math.pow(2, 18 - o.getZoom());var a = new Xt.Pixel(n.x - o.getSize().width / 2 * i, n.y + o.getSize().height / 2 * i);E(t);var r = { fromColumn: "bd09mc" == this.options.coordType ? "coordinates" : "coordinates_mercator", transferCoordinate: function transferCoordinate(t) {
	            if (t) return [(t[0] - a.x) / i, (a.y - t[1]) / i];
	          } };this.data = this.dataSet.get(r), this.processData(this.data), this.drawAnimation();
	      }
	    } }, { key: "drawAnimation", value: function value() {
	      var t = this.ctx,
	          e = this.data;if (e) {
	        t.save(), t.globalCompositeOperation = "destination-out", t.fillStyle = "rgba(0, 0, 0, .1)", t.fillRect(0, 0, t.canvas.width, t.canvas.height), t.restore(), t.save(), this.options.shadowColor && (t.shadowColor = this.options.shadowColor), this.options.shadowBlur && (t.shadowBlur = this.options.shadowBlur), this.options.globalAlpha && (t.globalAlpha = this.options.globalAlpha), this.options.globalCompositeOperation && (t.globalCompositeOperation = this.options.globalCompositeOperation);for (var n = this.options, i = 0; i < e.length; i++) {
	          if ("Point" === e[i].geometry.type) {
	            t.beginPath();var o = e[i].size || this.options.size,
	                a = e[i].minSize || this.options.minSize || 0;void 0 === e[i]._size && (e[i]._size = a), t.arc(e[i].geometry._coordinates[0], e[i].geometry._coordinates[1], e[i]._size, 0, 2 * Math.PI, !0), t.closePath(), e[i]._size++, e[i]._size > o && (e[i]._size = a), t.lineWidth = 1, t.strokeStyle = e[i].strokeStyle || e[i]._strokeStyle || n.strokeStyle || "yellow", t.stroke(), (l = e[i].fillStyle || e[i]._fillStyle || n.fillStyle) && (t.fillStyle = l, t.fill());
	          } else if ("LineString" === e[i].geometry.type) {
	            t.beginPath();var r = e[i].size || this.options.size || 5;a = e[i].minSize || this.options.minSize || 0, void 0 === e[i]._index && (e[i]._index = 0);var s = e[i]._index;t.arc(e[i].geometry._coordinates[s][0], e[i].geometry._coordinates[s][1], r, 0, 2 * Math.PI, !0), t.closePath(), e[i]._index++, e[i]._index >= e[i].geometry._coordinates.length && (e[i]._index = 0);var h = e[i].strokeStyle || n.strokeStyle,
	                l = e[i].fillStyle || n.fillStyle || "yellow";t.fillStyle = l, t.fill(), h && n.lineWidth && (t.lineWidth = n.lineWidth || 1, t.strokeStyle = h, t.stroke());
	          }
	        }t.restore();
	      }
	    } }, { key: "animate", value: function value() {
	      this.drawAnimation();var t = this.options.animateTime || 100;this.timeout = setTimeout(this.animate.bind(this), t);
	    } }, { key: "start", value: function value() {
	      this.stop(), this.animate();
	    } }, { key: "stop", value: function value() {
	      clearTimeout(this.timeout);
	    } }, { key: "unbindEvent", value: function value() {} }, { key: "hide", value: function value() {
	      this.canvasLayer.hide(), this.stop();
	    } }, { key: "show", value: function value() {
	      this.start();
	    } }, { key: "clearData", value: function value() {
	      this.dataSet && this.dataSet.clear(), this.update({ options: null });
	    } }, { key: "destroy", value: function value() {
	      this.stop(), this.unbindEvent(), this.clearData(), this.map.removeOverlay(this.canvasLayer), this.canvasLayer = null;
	    } }]), te);function te(t, e, n) {
	    s(this, te);var i = u(this, (te.__proto__ || Object.getPrototypeOf(te)).call(this, t, e, n));i.map = t, i.options = n || {}, i.dataSet = e;var o = new dt({ map: t, zIndex: i.options.zIndex, update: i._canvasUpdate.bind(i) });i.init(i.options), i.canvasLayer = o, i.transferToMercator();var a = i;return e.on("change", function () {
	      a.transferToMercator(), o.draw();
	    }), i.ctx = o.canvas.getContext("2d"), i.start(), i;
	  }var ee = "undefined" == typeof window ? {} : window,
	      ne = ee.BMap || ee.BMapGL,
	      ie = (l(oe, Gt), e(oe, [{ key: "clickEvent", value: function value(t) {
	      var e = t.pixel;h(oe.prototype.__proto__ || Object.getPrototypeOf(oe.prototype), "clickEvent", this).call(this, e, t);
	    } }, { key: "mousemoveEvent", value: function value(t) {
	      var e = t.pixel;h(oe.prototype.__proto__ || Object.getPrototypeOf(oe.prototype), "mousemoveEvent", this).call(this, e, t);
	    } }, { key: "tapEvent", value: function value(t) {
	      var e = t.pixel;h(oe.prototype.__proto__ || Object.getPrototypeOf(oe.prototype), "tapEvent", this).call(this, e, t);
	    } }, { key: "bindEvent", value: function value() {
	      this.unbindEvent();var t = this.map,
	          e = 0,
	          n = this;this.options.methods && (this.options.methods.click && (t.setDefaultCursor("default"), t.addEventListener("click", this.clickEvent)), this.options.methods.mousemove && t.addEventListener("mousemove", this.mousemoveEvent), "ontouchend" in window.document && this.options.methods.tap && (t.addEventListener("touchstart", function (t) {
	        e = new Date();
	      }), t.addEventListener("touchend", function (t) {
	        new Date() - e < 300 && n.tapEvent(t);
	      })));
	    } }, { key: "unbindEvent", value: function value() {
	      var t = this.map;this.options.methods && (this.options.methods.click && t.removeEventListener("click", this.clickEvent), this.options.methods.mousemove && t.removeEventListener("mousemove", this.mousemoveEvent));
	    } }, { key: "transferToMercator", value: function value(t) {
	      t = t || this.dataSet;var n,
	          i = this.map,
	          e = i.getMapType();if (n = e.getProjection ? e.getProjection() : { lngLatToPoint: function lngLatToPoint(t) {
	          var e = i.lnglatToMercator(t.lng, t.lat);return { x: e[0], y: e[1] };
	        } }, "bd09mc" !== this.options.coordType) {
	        var o = t.get();o = t.transferCoordinate(o, function (t) {
	          if (t[0] < -180 || 180 < t[0] || t[1] < -90 || 90 < t[1]) return t;var e = n.lngLatToPoint({ lng: t[0], lat: t[1] });return [e.x, e.y];
	        }, "coordinates", "coordinates_mercator"), t._set(o);
	      }
	    } }, { key: "getContext", value: function value() {
	      return this.canvasLayer.canvas.getContext(this.context);
	    } }, { key: "_canvasUpdate", value: function value(n) {
	      if (this.canvasLayer) {
	        var t,
	            e,
	            i,
	            o = this,
	            a = this.options.animation,
	            r = this.canvasLayer._map;r.getMapType().getProjection ? e = (t = r.getMapType().getProjection()).lngLatToPoint(r.getCenter()) : (-180 < (e = { x: r.getCenter().lng, y: r.getCenter().lat }).x && e.x < 180 && (e = { x: (e = r.lnglatToMercator(e.x, e.y))[0], y: e[1] }), t = { lngLatToPoint: function lngLatToPoint(t) {
	            var e = r.lnglatToMercator(t.lng, t.lat);return { x: e[0], y: e[1] };
	          } }), i = t.getZoomUnits ? t.getZoomUnits(r.getZoom()) : Math.pow(2, 18 - r.getZoom());var s = new ne.Pixel(e.x - r.getSize().width / 2 * i, e.y + r.getSize().height / 2 * i),
	            h = this.getContext();if (this.isEnabledTime()) {
	          if (void 0 === n) return void E(h);"2d" == this.context && (h.save(), h.globalCompositeOperation = "destination-out", h.fillStyle = "rgba(0, 0, 0, .1)", h.fillRect(0, 0, h.canvas.width, h.canvas.height), h.restore());
	        } else E(h);if ("2d" == this.context) for (var l in this.options) {
	          h[l] = this.options[l];
	        } else h.clear(h.COLOR_BUFFER_BIT);if (!(this.options.minZoom && r.getZoom() < this.options.minZoom || this.options.maxZoom && r.getZoom() > this.options.maxZoom)) {
	          var u = 1;"2d" != this.context && (u = this.canvasLayer.devicePixelRatio);var c,
	              p = { fromColumn: "bd09mc" == this.options.coordType ? "coordinates" : "coordinates_mercator", transferCoordinate: function transferCoordinate(t) {
	              return [(t[0] - s.x) / i * u, (s.y - t[1]) / i * u];
	            } };void 0 !== n && (p.filter = function (t) {
	            var e = a.trails || 10;return !!(n && t.time > n - e && t.time < n);
	          });var v = this.getZoom();if ("cluster" === this.options.draw && (!this.options.maxClusterZoom || this.options.maxClusterZoom >= v)) {
	            var d = this.map.getBounds(),
	                g = d.getNorthEast(),
	                f = d.getSouthWest(),
	                m = this.supercluster.getClusters([f.lng, f.lat, g.lng, g.lat], v);this.pointCountMax = this.supercluster.trees[v].max, this.pointCountMin = this.supercluster.trees[v].min;var y = {},
	                x = null,
	                _ = null;this.pointCountMax === this.pointCountMin ? (x = this.options.fillStyle, _ = this.options.minSize || 8) : y = new D({ min: this.pointCountMin, max: this.pointCountMax, minSize: this.options.minSize || 8, maxSize: this.options.maxSize || 30, gradient: this.options.gradient });for (var w = 0; w < m.length; w++) {
	              var b = m[w];b.properties && b.properties.cluster_id ? (m[w].size = _ || y.getSize(b.properties.point_count), m[w].fillStyle = x || y.getColor(b.properties.point_count)) : m[w].size = o.options.size;
	            }this.clusterDataSet.set(m), this.transferToMercator(this.clusterDataSet), c = o.clusterDataSet.get(p);
	          } else c = o.dataSet.get(p);this.processData(c);var k = r.pointToPixel(new ne.Point(0, 0));"m" == o.options.unit ? (o.options.size && (o.options._size = o.options.size / i), o.options.width && (o.options._width = o.options.width / i), o.options.height && (o.options._height = o.options.height / i)) : (o.options._size = o.options.size, o.options._height = o.options.height, o.options._width = o.options.width), this.drawContext(h, c, o.options, k), o.options.updateCallback && o.options.updateCallback(n);
	        }
	      }
	    } }, { key: "init", value: function value(t) {
	      var e = this;e.options = t, this.initDataRange(t), this.context = e.options.context || "2d", e.options.zIndex && this.canvasLayer && this.canvasLayer.setZIndex(e.options.zIndex), e.options.max && this.intensity.setMax(e.options.max), e.options.min && this.intensity.setMin(e.options.min), this.initAnimator(), this.bindEvent();
	    } }, { key: "getZoom", value: function value() {
	      return this.map.getZoom();
	    } }, { key: "addAnimatorEvent", value: function value() {
	      this.map.addEventListener("movestart", this.animatorMovestartEvent.bind(this)), this.map.addEventListener("moveend", this.animatorMoveendEvent.bind(this));
	    } }, { key: "show", value: function value() {
	      this.map.addOverlay(this.canvasLayer), this.bindEvent();
	    } }, { key: "hide", value: function value() {
	      this.unbindEvent(), this.map.removeOverlay(this.canvasLayer);
	    } }, { key: "draw", value: function value() {
	      this.canvasLayer && this.canvasLayer.draw();
	    } }, { key: "clearData", value: function value() {
	      this.dataSet && this.dataSet.clear(), this.update({ options: null });
	    } }, { key: "destroy", value: function value() {
	      this.unbindEvent(), this.clearData(), this.map.removeOverlay(this.canvasLayer), this.canvasLayer = null;
	    } }]), oe);function oe(t, e, n) {
	    s(this, oe);var i = u(this, (oe.__proto__ || Object.getPrototypeOf(oe)).call(this, t, e, n)),
	        o = i;n = n || {}, i.clickEvent = i.clickEvent.bind(i), i.mousemoveEvent = i.mousemoveEvent.bind(i), i.tapEvent = i.tapEvent.bind(i), o.init(n), o.argCheck(n), o.transferToMercator();var a = i.canvasLayer = new dt({ map: t, context: i.context, updateImmediate: n.updateImmediate, paneName: n.paneName, mixBlendMode: n.mixBlendMode, enableMassClear: n.enableMassClear, zIndex: n.zIndex, update: function update() {
	        o._canvasUpdate();
	      } });return e.on("change", function () {
	      o.transferToMercator(), "cluster" === n.draw && o.refreshCluster(), a.draw();
	    }), i;
	  }function ae(t) {
	    this.isAdded_ = !1, this.isAnimated_ = !1, this.paneName_ = ae.DEFAULT_PANE_NAME_, this.updateHandler_ = null, this.resizeHandler_ = null, this.topLeft_ = null, this.centerListener_ = null, this.resizeListener_ = null, this.needsResize_ = !0, this.requestAnimationFrameId_ = null;var e = document.createElement("canvas");function n(t, e) {
	      return function () {
	        e.apply(t);
	      };
	    }e.style.position = "absolute", e.style.top = 0, e.style.left = 0, e.style.pointerEvents = "none", this.canvas = e, this.canvasCssWidth_ = 300, this.canvasCssHeight_ = 150, this.resolutionScale_ = 1, this.repositionFunction_ = n(this, this.repositionCanvas_), this.resizeFunction_ = n(this, this.resize_), this.requestUpdateFunction_ = n(this, this.update_), t && this.setOptions(t);
	  }var re = "undefined" == typeof window ? {} : window;re.google && re.google.maps && (ae.prototype = new google.maps.OverlayView(), ae.DEFAULT_PANE_NAME_ = "overlayLayer", ae.CSS_TRANSFORM_ = function () {
	    for (var t = document.createElement("div"), e = ["transform", "WebkitTransform", "MozTransform", "OTransform", "msTransform"], n = 0; n < e.length; n++) {
	      var i = e[n];if (void 0 !== t.style[i]) return i;
	    }return e[0];
	  }(), ae.prototype.requestAnimFrame_ = re.requestAnimationFrame || re.webkitRequestAnimationFrame || re.mozRequestAnimationFrame || re.oRequestAnimationFrame || re.msRequestAnimationFrame || function (t) {
	    return re.setTimeout(t, 1e3 / 60);
	  }, ae.prototype.cancelAnimFrame_ = re.cancelAnimationFrame || re.webkitCancelAnimationFrame || re.mozCancelAnimationFrame || re.oCancelAnimationFrame || re.msCancelAnimationFrame || function (t) {}, ae.prototype.setOptions = function (t) {
	    void 0 !== t.animate && this.setAnimate(t.animate), void 0 !== t.paneName && this.setPaneName(t.paneName), void 0 !== t.updateHandler && this.setUpdateHandler(t.updateHandler), void 0 !== t.resizeHandler && this.setResizeHandler(t.resizeHandler), void 0 !== t.resolutionScale && this.setResolutionScale(t.resolutionScale), void 0 !== t.map && this.setMap(t.map);
	  }, ae.prototype.setAnimate = function (t) {
	    this.isAnimated_ = !!t, this.isAnimated_ && this.scheduleUpdate();
	  }, ae.prototype.isAnimated = function () {
	    return this.isAnimated_;
	  }, ae.prototype.setPaneName = function (t) {
	    this.paneName_ = t, this.setPane_();
	  }, ae.prototype.getPaneName = function () {
	    return this.paneName_;
	  }, ae.prototype.setPane_ = function () {
	    if (this.isAdded_) {
	      var t = this.getPanes();if (!t[this.paneName_]) throw new Error('"' + this.paneName_ + '" is not a valid MapPane name.');t[this.paneName_].appendChild(this.canvas);
	    }
	  }, ae.prototype.setResizeHandler = function (t) {
	    this.resizeHandler_ = t;
	  }, ae.prototype.setResolutionScale = function (t) {
	    "number" == typeof t && (this.resolutionScale_ = t, this.resize_());
	  }, ae.prototype.setUpdateHandler = function (t) {
	    this.updateHandler_ = t;
	  }, ae.prototype.onAdd = function () {
	    this.isAdded_ || (this.isAdded_ = !0, this.setPane_(), this.resizeListener_ = google.maps.event.addListener(this.getMap(), "resize", this.resizeFunction_), this.centerListener_ = google.maps.event.addListener(this.getMap(), "center_changed", this.repositionFunction_), this.resize_(), this.repositionCanvas_());
	  }, ae.prototype.onRemove = function () {
	    this.isAdded_ && (this.isAdded_ = !1, this.topLeft_ = null, this.canvas.parentElement.removeChild(this.canvas), this.centerListener_ && (google.maps.event.removeListener(this.centerListener_), this.centerListener_ = null), this.resizeListener_ && (google.maps.event.removeListener(this.resizeListener_), this.resizeListener_ = null), this.requestAnimationFrameId_ && (this.cancelAnimFrame_.call(re, this.requestAnimationFrameId_), this.requestAnimationFrameId_ = null));
	  }, ae.prototype.resize_ = function () {
	    if (this.isAdded_) {
	      var t = this.getMap(),
	          e = t.getDiv().offsetWidth,
	          n = t.getDiv().offsetHeight,
	          i = e * this.resolutionScale_,
	          o = n * this.resolutionScale_,
	          a = this.canvas.width,
	          r = this.canvas.height;a === i && r === o || (this.canvas.width = i, this.canvas.height = o, this.needsResize_ = !0, this.scheduleUpdate()), this.canvasCssWidth_ === e && this.canvasCssHeight_ === n || (this.canvasCssWidth_ = e, this.canvasCssHeight_ = n, this.canvas.style.width = e + "px", this.canvas.style.height = n + "px");
	    }
	  }, ae.prototype.draw = function () {
	    this.repositionCanvas_();
	  }, ae.prototype.repositionCanvas_ = function () {
	    var t = this.getMap(),
	        e = t.getBounds().getNorthEast().lat(),
	        n = t.getCenter(),
	        i = Math.pow(2, t.getZoom()),
	        o = n.lng() - 180 * this.canvasCssWidth_ / (256 * i);this.topLeft_ = new google.maps.LatLng(e, o);var a = this.getProjection().fromLatLngToDivPixel(n),
	        r = -Math.round(this.canvasCssWidth_ / 2 - a.x),
	        s = -Math.round(this.canvasCssHeight_ / 2 - a.y);this.canvas.style[ae.CSS_TRANSFORM_] = "translate(" + r + "px," + s + "px)", this.scheduleUpdate();
	  }, ae.prototype.update_ = function () {
	    this.requestAnimationFrameId_ = null, this.isAdded_ && (this.isAnimated_ && this.scheduleUpdate(), this.needsResize_ && this.resizeHandler_ && (this.needsResize_ = !1, this.resizeHandler_()), this.updateHandler_ && this.updateHandler_());
	  }, ae.prototype.getTopLeft = function () {
	    return this.topLeft_;
	  }, ae.prototype.scheduleUpdate = function () {
	    this.isAdded_ && !this.requestAnimationFrameId_ && (this.requestAnimationFrameId_ = this.requestAnimFrame_.call(re, this.requestUpdateFunction_));
	  });var se = (l(he, Gt), e(he, [{ key: "clickEvent", value: function value(t) {
	      var e = t.pixel;h(he.prototype.__proto__ || Object.getPrototypeOf(he.prototype), "clickEvent", this).call(this, e, t);
	    } }, { key: "mousemoveEvent", value: function value(t) {
	      var e = t.pixel;h(he.prototype.__proto__ || Object.getPrototypeOf(he.prototype), "mousemoveEvent", this).call(this, e, t);
	    } }, { key: "bindEvent", value: function value() {
	      var t = this.map;this.options.methods && (this.options.methods.click && (t.setDefaultCursor("default"), t.addListener("click", this.clickEvent)), this.options.methods.mousemove && t.addListener("mousemove", this.mousemoveEvent));
	    } }, { key: "unbindEvent", value: function value() {
	      var t = this.map;this.options.methods && (this.options.methods.click && t.removeListener("click", this.clickEvent), this.options.methods.mousemove && t.removeListener("mousemove", this.mousemoveEvent));
	    } }, { key: "getContext", value: function value() {
	      return this.canvasLayer.canvas.getContext(this.context);
	    } }, { key: "_canvasUpdate", value: function value(n) {
	      if (this.canvasLayer) {
	        var t = this,
	            i = t.options.animation,
	            e = this.getContext();if (t.isEnabledTime()) {
	          if (void 0 === n) return void E(e);"2d" == this.context && (e.save(), e.globalCompositeOperation = "destination-out", e.fillStyle = "rgba(0, 0, 0, .1)", e.fillRect(0, 0, e.canvas.width, e.canvas.height), e.restore());
	        } else E(e);if ("2d" == this.context) for (var o in t.options) {
	          e[o] = t.options[o];
	        } else e.clear(e.COLOR_BUFFER_BIT);if (!(t.options.minZoom && r.getZoom() < t.options.minZoom || t.options.maxZoom && r.getZoom() > t.options.maxZoom)) {
	          var a = 1;"2d" != this.context && (a = this.canvasLayer.devicePixelRatio);var r = this.map,
	              s = r.getProjection(),
	              h = (a = Math.pow(2, r.zoom) * resolutionScale, s.fromLatLngToPoint(this.canvasLayer.getTopLeft())),
	              l = { transferCoordinate: function transferCoordinate(t) {
	              var e = new google.maps.LatLng(t[1], t[0]),
	                  n = s.fromLatLngToPoint(e),
	                  i = { x: (n.x - h.x) * a, y: (n.y - h.y) * a };return [i.x, i.y];
	            } };void 0 !== n && (l.filter = function (t) {
	            var e = i.trails || 10;return !!(n && t.time > n - e && t.time < n);
	          });var u = t.dataSet.get(l);this.processData(u);var c = new google.maps.LatLng(0, 0),
	              p = s.fromLatLngToPoint(c),
	              v = { x: (p.x - h.x) * a, y: (p.y - h.y) * a };"m" == t.options.unit && t.options.size ? t.options._size = t.options.size / zoomUnit : t.options._size = t.options.size, this.drawContext(e, new T(u), t.options, v), t.options.updateCallback && t.options.updateCallback(n);
	        }
	      }
	    } }, { key: "init", value: function value(t) {
	      this.options = t, this.initDataRange(t), this.context = this.options.context || "2d", this.options.zIndex && this.canvasLayer && this.canvasLayer.setZIndex(this.options.zIndex), this.initAnimator();
	    } }, { key: "addAnimatorEvent", value: function value() {
	      this.map.addListener("movestart", this.animatorMovestartEvent.bind(this)), this.map.addListener("moveend", this.animatorMoveendEvent.bind(this));
	    } }, { key: "show", value: function value() {
	      this.map.addOverlay(this.canvasLayer);
	    } }, { key: "hide", value: function value() {
	      this.map.removeOverlay(this.canvasLayer);
	    } }, { key: "draw", value: function value() {
	      self.canvasLayer.draw();
	    } }]), he);function he(t, e, n) {
	    s(this, he);var i = u(this, (he.__proto__ || Object.getPrototypeOf(he)).call(this, t, e, n)),
	        o = i;n = n || {}, o.init(n), o.argCheck(n);var a = { map: t, animate: !1, updateHandler: function updateHandler() {
	        o._canvasUpdate();
	      }, resolutionScale: resolutionScale };i.canvasLayer = new ae(a);return i.clickEvent = i.clickEvent.bind(i), i.mousemoveEvent = i.mousemoveEvent.bind(i), i.bindEvent(), i;
	  }var le,
	      ue,
	      ce = void 0;if ("undefined" != typeof maptalks) {
	    ue = maptalks.Layer, l(de, ue), e(de, [{ key: "_initBaseLayer", value: function value(t) {
	        var e = this.baseLayer = new Gt(null, this.dataSet, t);this.init(t), e.argCheck(t);
	      } }, { key: "clickEvent", value: function value(t) {
	        if (this.baseLayer) {
	          var e = t.containerPoint;this.baseLayer.clickEvent(e, t.domEvent);
	        }
	      } }, { key: "mousemoveEvent", value: function value(t) {
	        if (this.baseLayer) {
	          var e = t.containerPoint;this.baseLayer.mousemoveEvent(e, t.domEvent);
	        }
	      } }, { key: "getEvents", value: function value() {
	        return { click: this.clickEvent, mousemove: this.mousemoveEvent };
	      } }, { key: "init", value: function value(t) {
	        var e = this.baseLayer;e.options = t, e.initDataRange(t), e.context = e.options.context || "2d", e.initAnimator();
	      } }, { key: "addAnimatorEvent", value: function value() {
	        this.map.addListener("movestart", this.animatorMovestartEvent.bind(this)), this.map.addListener("moveend", this.animatorMoveendEvent.bind(this));
	      } }]), ce = de;var pe = (le = maptalks.renderer.CanvasRenderer, l(ve, le), e(ve, [{ key: "needToRedraw", value: function value() {
	        return !!this.layer.baseLayer.isEnabledTime() || h(ve.prototype.__proto__ || Object.getPrototypeOf(ve.prototype), "needToRedraw", this).call(this);
	      } }, { key: "draw", value: function value() {
	        var t = this.layer.baseLayer;this.canvas && t.isEnabledTime() && !this._shouldClear || (this.prepareCanvas(), this._shouldClear = !1), this._update(this.gl || this.context, this._mapvFrameTime), delete this._mapvFrameTime, this.completeRender();
	      } }, { key: "drawOnInteracting", value: function value() {
	        this.draw(), this._shouldClear = !1;
	      } }, { key: "onSkipDrawOnInteracting", value: function value() {
	        this._shouldClear = !0;
	      } }, { key: "_canvasUpdate", value: function value(t) {
	        this.setToRedraw(), this._mapvFrameTime = t;
	      } }, { key: "_update", value: function value(t, n) {
	        if (this.canvas) {
	          var e = this.layer.baseLayer,
	              i = e.options.animation,
	              o = this.getMap();if (e.isEnabledTime()) {
	            if (void 0 === n) return void E(t);"2d" == e.context && (t.save(), t.globalCompositeOperation = "destination-out", t.fillStyle = "rgba(0, 0, 0, .1)", t.fillRect(0, 0, t.canvas.width, t.canvas.height), t.restore());
	          } else E(t);if ("2d" == e.context) for (var a in e.options) {
	            t[a] = e.options[a];
	          } else t.clear(t.COLOR_BUFFER_BIT);var r = new maptalks.Coordinate(0, 0),
	              s = { fromColumn: "bd09mc" === e.options.coordType ? "coordinates_mercator" : "coordinates", transferCoordinate: function transferCoordinate(t) {
	              return r.x = t[0], r.y = t[1], o.coordToContainerPoint(r)._multi(1).toArray();
	            } };void 0 !== n && (s.filter = function (t) {
	            var e = i.trails || 10;return !!(n && t.time > n - e && t.time < n);
	          });var h = e.dataSet.get(s);e.processData(h), "m" == e.options.unit ? (e.options.size && (e.options._size = e.options.size / zoomUnit), e.options.width && (e.options._width = e.options.width / zoomUnit), e.options.height && (e.options._height = e.options.height / zoomUnit)) : (e.options._size = e.options.size, e.options._height = e.options.height, e.options._width = e.options.width);var l = new maptalks.Point(0, 0),
	              u = o._pointToContainerPoint(l)._multi(1);e.drawContext(t, h, e.options, u), e.options.updateCallback && e.options.updateCallback(n);
	        }
	      } }, { key: "createCanvas", value: function value() {
	        if (!this.canvas) {
	          var t = this.getMap(),
	              e = t.getSize(),
	              n = t.getDevicePixelRatio ? t.getDevicePixelRatio() : maptalks.Browser.retina ? 2 : 1,
	              i = n * e.width,
	              o = n * e.height;this.canvas = maptalks.Canvas.createCanvas(i, o, t.CanvasClass), "2d" === this.layer.baseLayer.context ? (this.context = this.canvas.getContext("2d"), this.layer.options.globalCompositeOperation && (this.context.globalCompositeOperation = this.layer.options.globalCompositeOperation), "heatmap" !== this.layer.baseLayer.options.draw && 1 !== n && this.context.scale(n, n)) : this.gl = this.canvas.getContext("webgl", { alpha: !0, preserveDrawingBuffer: !0, antialias: !1 }), this.onCanvasCreate(), this._bindToMapv(), this.layer.fire("canvascreate", { context: this.context, gl: this.gl });
	        }
	      } }, { key: "_bindToMapv", value: function value() {
	        var t = this.layer.baseLayer,
	            e = this.getMap();this.devicePixelRatio = e.getDevicePixelRatio ? e.getDevicePixelRatio() : maptalks.Browser.retina ? 2 : 1, t.canvasLayer = this, t._canvasUpdate = this._canvasUpdate.bind(this), t.getContext = function () {
	          var t = self.getRenderer();return t.gl || t.context;
	        };
	      } }]), ve);ce.registerRenderer("canvas", pe);
	  }function ve() {
	    return s(this, ve), u(this, (ve.__proto__ || Object.getPrototypeOf(ve)).apply(this, arguments));
	  }function de(t, e, n) {
	    s(this, de);var i = u(this, (de.__proto__ || Object.getPrototypeOf(de)).call(this, t, n));return i.options_ = n, i.dataSet = e, i._initBaseLayer(n), i;
	  }var ge = ce,
	      fe = (l(me, Gt), e(me, [{ key: "init", value: function value(t) {
	      if (!t) throw new Error("not map object");this.map = t, this.context = this.options.context || "2d", this.getCanvasLayer();
	    } }, { key: "_canvasUpdate", value: function value(t) {
	      this.render(this.canvasLayer.canvas, t);
	    } }, { key: "render", value: function value(t, n) {
	      if (t) {
	        var i = this.map,
	            e = t.getContext(this.context),
	            o = this.options.animation;if (this.isEnabledTime()) {
	          if (void 0 === n) return E(e), this;"2d" === this.context && (e.save(), e.globalCompositeOperation = "destination-out", e.fillStyle = "rgba(0, 0, 0, .1)", e.fillRect(0, 0, e.canvas.width, e.canvas.height), e.restore());
	        } else E(e);if ("2d" === this.context) for (var a in this.options) {
	          e[a] = this.options[a];
	        } else e.clear(e.COLOR_BUFFER_BIT);var r = { transferCoordinate: function transferCoordinate(t) {
	            var e = i.lngLatToContainer(new AMap.LngLat(t[0], t[1]));return [e.x, e.y];
	          } };void 0 !== n && (r.filter = function (t) {
	          var e = o.trails || 10;return !!(n && t.time > n - e && t.time < n);
	        });var s = this.dataSet.get(r);return this.processData(s), "m" === this.options.unit ? (this.options.size && (this.options._size = this.options.size / zoomUnit), this.options.width && (this.options._width = this.options.width / zoomUnit), this.options.height && (this.options._height = this.options.height / zoomUnit)) : (this.options._size = this.options.size, this.options._height = this.options.height, this.options._width = this.options.width), this.drawContext(e, new T(s), this.options, { x: 0, y: 0 }), this.options.updateCallback && this.options.updateCallback(n), this;
	      }
	    } }, { key: "getCanvasLayer", value: function value() {
	      if (!this.canvasLayer.canvas && !this.layer_) {
	        var t = this.canvasFunction(),
	            e = this.map.getBounds();this.layer_ = new AMap.CanvasLayer({ canvas: t, bounds: this.options.bounds || e, zooms: this.options.zooms || [0, 22] }), this.layer_.setMap(this.map), this.map.on("mapmove", this.canvasFunction, this), this.map.on("zoomchange", this.canvasFunction, this);
	      }
	    } }, { key: "canvasFunction", value: function value() {
	      var t = [this.map.getSize().width, this.map.getSize().height],
	          e = t[0],
	          n = t[1];if (this.canvasLayer.canvas) {
	        this.canvasLayer.canvas.width = e, this.canvasLayer.canvas.height = n;var i = this.map.getBounds();this.layer_ && this.layer_.setBounds(this.options.bounds || i);
	      } else this.canvasLayer.canvas = function (t, e, n) {
	        if ("undefined" == typeof document) return new n(t, e);var i = document.createElement("canvas");return i.width = t, i.height = e, i;
	      }(e, n);return this.render(this.canvasLayer.canvas), this.canvasLayer.canvas;
	    } }, { key: "removeLayer", value: function value() {
	      this.map && (this.unEvents(), this.map.removeLayer(this.layer_), delete this.map, delete this.layer_, delete this.canvasLayer.canvas);
	    } }, { key: "getContext", value: function value() {
	      return this.canvasLayer.canvas.getContext(this.context);
	    } }, { key: "clickEvent", value: function value(t) {
	      var e = t.pixel;h(me.prototype.__proto__ || Object.getPrototypeOf(me.prototype), "clickEvent", this).call(this, e, t);
	    } }, { key: "mousemoveEvent", value: function value(t) {
	      var e = t.pixel;h(me.prototype.__proto__ || Object.getPrototypeOf(me.prototype), "mousemoveEvent", this).call(this, e, t);
	    } }, { key: "addAnimatorEvent", value: function value() {
	      this.map.on("movestart", this.animatorMovestartEvent, this), this.map.on("moveend", this.animatorMoveendEvent, this);
	    } }, { key: "onEvents", value: function value() {
	      var t = this.map;this.unEvents(), this.options.methods && (this.options.methods.click && t.on("click", this.clickEvent, this), this.options.methods.mousemove && t.on("mousemove", this.mousemoveEvent, this));
	    } }, { key: "unEvents", value: function value() {
	      var t = this.map;this.options.methods && (this.options.methods.click && t.off("click", this.clickEvent, this), this.options.methods.mousemove && t.off("mousemove", this.mousemoveEvent, this));
	    } }]), me);function me() {
	    var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : null,
	        e = arguments[1],
	        n = arguments[2];s(this, me);var i = u(this, (me.__proto__ || Object.getPrototypeOf(me)).call(this, t, e, n));return i.options = n, i.canvasLayer = { canvas: null, devicePixelRatio: window.devicePixelRatio }, i.layer_ = null, i.initDataRange(n), i.initAnimator(), i.onEvents(), t.on("complete", function () {
	      this.init(t, n), this.argCheck(n);
	    }, i), i;
	  }var ye = (l(xe, Gt), e(xe, [{ key: "init", value: function value(t, e) {
	      if (!(t && t instanceof ol.Map)) throw new Error("not map object");this.$Map = t, this.context = this.options.context || "2d", this.getCanvasLayer(), this.initDataRange(e), this.initAnimator(), this.onEvents();
	    } }, { key: "_canvasUpdate", value: function value(t) {
	      this.render(this.canvasLayer.canvas, t);
	    } }, { key: "render", value: function value(t, n) {
	      var e = this.$Map,
	          i = t.getContext(this.context),
	          o = this.options.animation,
	          a = this.options.hasOwnProperty("projection") ? this.options.projection : "EPSG:4326",
	          r = this.$Map.getView().getProjection().getCode();if (this.isEnabledTime()) {
	        if (void 0 === n) return E(i), this;"2d" === this.context && (i.save(), i.globalCompositeOperation = "destination-out", i.fillStyle = "rgba(0, 0, 0, .1)", i.fillRect(0, 0, i.canvas.width, i.canvas.height), i.restore());
	      } else E(i);if ("2d" === this.context) for (var s in this.options) {
	        i[s] = this.options[s];
	      } else i.clear(i.COLOR_BUFFER_BIT);var h = {};h.transferCoordinate = a === r ? function (t) {
	        return e.getPixelFromCoordinate(t);
	      } : function (t) {
	        return e.getPixelFromCoordinate(ol.proj.transform(t, a, r));
	      }, void 0 !== n && (h.filter = function (t) {
	        var e = o.trails || 10;return !!(n && t.time > n - e && t.time < n);
	      });var l = this.dataSet.get(h);return this.processData(l), "m" === this.options.unit ? (this.options.size && (this.options._size = this.options.size / zoomUnit), this.options.width && (this.options._width = this.options.width / zoomUnit), this.options.height && (this.options._height = this.options.height / zoomUnit)) : (this.options._size = this.options.size, this.options._height = this.options.height, this.options._width = this.options.width), this.drawContext(i, new T(l), this.options, { x: 0, y: 0 }), this.options.updateCallback && this.options.updateCallback(n), this;
	    } }, { key: "getCanvasLayer", value: function value() {
	      if (!this.canvasLayer.canvas && !this.layer_) {
	        var t = this.getMapExtent();this.layer_ = new ol.layer.Image({ layerName: this.options.layerName, minResolution: this.options.minResolution, maxResolution: this.options.maxResolution, zIndex: this.options.zIndex, extent: t, source: new ol.source.ImageCanvas({ canvasFunction: this.canvasFunction.bind(this), projection: this.$Map.getView().getProjection().getCode(), ratio: this.options.hasOwnProperty("ratio") ? this.options.ratio : 1 }) }), this.$Map.addLayer(this.layer_), this.$Map.un("precompose", this.reRender, this), this.$Map.on("precompose", this.reRender, this);
	      }
	    } }, { key: "reRender", value: function value() {
	      if (this.layer_) {
	        var t = this.getMapExtent();this.layer_.setExtent(t);
	      }
	    } }, { key: "canvasFunction", value: function value(t, e, n, i) {
	      return this.canvasLayer.canvas ? (this.canvasLayer.canvas.width = i[0], this.canvasLayer.canvas.height = i[1]) : this.canvasLayer.canvas = function (t, e) {
	        if ("undefined" != typeof document) {
	          var n = document.createElement("canvas");return n.width = t, n.height = e, n;
	        }
	      }(i[0], i[1]), this.render(this.canvasLayer.canvas), this.canvasLayer.canvas;
	    } }, { key: "getMapExtent", value: function value() {
	      var t = this.$Map.getSize();return this.$Map.getView().calculateExtent(t);
	    } }, { key: "addTo", value: function value(t) {
	      this.init(t, this.options);
	    } }, { key: "removeLayer", value: function value() {
	      this.$Map && (this.unEvents(), this.$Map.un("precompose", this.reRender, this), this.$Map.removeLayer(this.layer_), delete this.$Map, delete this.layer_, delete this.canvasLayer.canvas);
	    } }, { key: "getContext", value: function value() {
	      return this.canvasLayer.canvas.getContext(this.context);
	    } }, { key: "clickEvent", value: function value(t) {
	      var e = t.pixel;h(xe.prototype.__proto__ || Object.getPrototypeOf(xe.prototype), "clickEvent", this).call(this, { x: e[0], y: e[1] }, t);
	    } }, { key: "mousemoveEvent", value: function value(t) {
	      var e = t.pixel;h(xe.prototype.__proto__ || Object.getPrototypeOf(xe.prototype), "mousemoveEvent", this).call(this, { x: e[0], y: e[1] }, t);
	    } }, { key: "addAnimatorEvent", value: function value() {
	      this.$Map.on("movestart", this.animatorMovestartEvent, this), this.$Map.on("moveend", this.animatorMoveendEvent, this);
	    } }, { key: "onEvents", value: function value() {
	      var t = this.$Map;this.unEvents(), this.options.methods && (this.options.methods.click && t.on("click", this.clickEvent, this), this.options.methods.mousemove && t.on("pointermove", this.mousemoveEvent, this));
	    } }, { key: "unEvents", value: function value() {
	      var t = this.$Map;this.options.methods && (this.options.methods.click && t.un("click", this.clickEvent, this), this.options.methods.pointermove && t.un("pointermove", this.mousemoveEvent, this));
	    } }, { key: "setDefaultCursor", value: function value(t, e) {
	      if (this.$Map) {
	        var n = this.$Map.getTargetElement();e ? n.style.cursor !== t && (this.previousCursor_ = n.style.cursor, n.style.cursor = t) : void 0 !== this.previousCursor_ && (n.style.cursor = this.previousCursor_, this.previousCursor_ = void 0);
	      }
	    } }, { key: "show", value: function value() {
	      this.$Map.addLayer(this.layer_);
	    } }, { key: "hide", value: function value() {
	      this.$Map.removeLayer(this.layer_);
	    } }]), xe);function xe() {
	    var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : null,
	        e = arguments[1],
	        n = arguments[2];s(this, xe);var i = u(this, (xe.__proto__ || Object.getPrototypeOf(xe)).call(this, t, e, n));return i.options = n, i.canvasLayer = { canvas: null, devicePixelRatio: window.devicePixelRatio }, i.layer_ = null, i.previousCursor_ = void 0, i.init(t, n), i.argCheck(n), i;
	  }var _e,
	      we = (l(be, Gt), e(be, [{ key: "clickEvent", value: function value(t) {
	      var e = this.map.containerPointToLayerPoint([0, 0]),
	          n = this.devicePixelRatio = this.canvasLayer.devicePixelRatio = window.devicePixelRatio,
	          i = t.layerPoint;h(be.prototype.__proto__ || Object.getPrototypeOf(be.prototype), "clickEvent", this).call(this, L.point((i.x - e.x) / n, (i.y - e.y) / n), t);
	    } }, { key: "mousemoveEvent", value: function value(t) {
	      var e = t.layerPoint;h(be.prototype.__proto__ || Object.getPrototypeOf(be.prototype), "mousemoveEvent", this).call(this, e, t);
	    } }, { key: "bindEvent", value: function value() {
	      var t = this.map;this.options.methods && (this.options.methods.click && t.on("click", this.clickEvent), this.options.methods.mousemove && t.on("mousemove", this.mousemoveEvent)), this.map.on("movestart", this._moveStartEvent), this.map.on("moveend", this._moveEndEvent), this.map.on("zoomstart", this._zoomStartEvent);
	    } }, { key: "destroy", value: function value() {
	      this.unbindEvent(), this.clearData(), this.animator && this.animator.stop(), this.animator = null, this.canvasLayer = null;
	    } }, { key: "unbindEvent", value: function value() {
	      var t = this.map;this.options.methods && (this.options.methods.click && t.off("click", this.clickEvent), this.options.methods.mousemove && t.off("mousemove", this.mousemoveEvent)), this.map.off("movestart", this._moveStartEvent), this.map.off("moveend", this._moveEndEvent), this.map.off("zoomstart", this._zoomStartEvent);
	    } }, { key: "getContext", value: function value() {
	      return this.canvasLayer.getCanvas().getContext(this.context);
	    } }, { key: "addData", value: function value(t, e) {
	      var n = t;t && t.get && (n = t.get()), this.dataSet.add(n), this.update({ options: e });
	    } }, { key: "update", value: function value(t) {
	      var e = t || {},
	          n = e.data;n && n.get && (n = n.get()), null != n && this.dataSet.set(n), h(be.prototype.__proto__ || Object.getPrototypeOf(be.prototype), "update", this).call(this, { options: e.options });
	    } }, { key: "getData", value: function value() {
	      return this.dataSet;
	    } }, { key: "removeData", value: function value(e) {
	      if (this.dataSet) {
	        var t = this.dataSet.get({ filter: function filter(t) {
	            return null == e || "function" != typeof e || !e(t);
	          } });this.dataSet.set(t), this.update({ options: null });
	      }
	    } }, { key: "clearData", value: function value() {
	      this.dataSet && this.dataSet.clear(), this.update({ options: null });
	    } }, { key: "_canvasUpdate", value: function value(n) {
	      if (this.canvasLayer) {
	        var i = this,
	            o = i.options.animation,
	            t = this.getContext(),
	            a = this.map;if (i.isEnabledTime()) {
	          if (void 0 === n) return void this.clear(t);"2d" === this.context && (t.save(), t.globalCompositeOperation = "destination-out", t.fillStyle = "rgba(0, 0, 0, .1)", t.fillRect(0, 0, t.canvas.width, t.canvas.height), t.restore());
	        } else this.clear(t);if ("2d" === this.context) for (var e in i.options) {
	          t[e] = i.options[e];
	        } else t.clear(t.COLOR_BUFFER_BIT);if (!(i.options.minZoom && a.getZoom() < i.options.minZoom || i.options.maxZoom && a.getZoom() > i.options.maxZoom)) {
	          var r = a.getBounds(),
	              s = r.getEast() - r.getWest(),
	              h = r.getNorth() - r.getSouth(),
	              l = a.getSize(),
	              u = s / l.x,
	              c = h / l.y,
	              p = this.canvasLayer.getTopLeft(),
	              v = a.latLngToContainerPoint(p),
	              d = { transferCoordinate: function transferCoordinate(t) {
	              var e,
	                  n = { x: (e = "2d" === i.context ? a.latLngToContainerPoint(L.latLng(t[1], t[0])) : { x: (t[0] - p.lng) / u, y: (p.lat - t[1]) / c }).x - v.x, y: e.y - v.y };return [n.x, n.y];
	            } };void 0 !== n && (d.filter = function (t) {
	            var e = o.trails || 10;return n && t.time > n - e && t.time < n;
	          });var g = i.dataSet.get(d);this.processData(g), i.options._size = i.options.size;var f = a.latLngToContainerPoint(L.latLng(0, 0)),
	              m = { x: f.x - v.x, y: f.y - v.y };this.drawContext(t, g, i.options, m), i.options.updateCallback && i.options.updateCallback(n);
	        }
	      }
	    } }, { key: "init", value: function value(t) {
	      this.options = t, this.initDataRange(t), this.context = this.options.context || "2d", this.options.zIndex && this.canvasLayer && this.canvasLayer.setZIndex(this.options.zIndex), this.initAnimator();
	    } }, { key: "addAnimatorEvent", value: function value() {} }, { key: "moveStartEvent", value: function value() {
	      var t = this.options.animation;this.isEnabledTime() && this.animator && (this.steps.step = t.stepsRange.start, this._hide());
	    } }, { key: "moveEndEvent", value: function value() {
	      this.canvasLayer.draw(), this._show();
	    } }, { key: "zoomStartEvent", value: function value() {
	      this._hide();
	    } }, { key: "clear", value: function value(t) {
	      t && t.clearRect && t.clearRect(0, 0, t.canvas.width, t.canvas.height);
	    } }, { key: "_hide", value: function value() {
	      this.canvasLayer.canvas.style.display = "none";
	    } }, { key: "_show", value: function value() {
	      this.canvasLayer.canvas.style.display = "block";
	    } }, { key: "draw", value: function value() {
	      this.canvasLayer.draw();
	    } }]), be);function be(t, e, n, i) {
	    s(this, be);var o = u(this, (be.__proto__ || Object.getPrototypeOf(be)).call(this, t, n, i));if (!Gt) return u(o);var a = o;return i = i || {}, a.init(i), a.argCheck(i), o.canvasLayer = e, o.clickEvent = o.clickEvent.bind(o), o.mousemoveEvent = o.mousemoveEvent.bind(o), o._moveStartEvent = o.moveStartEvent.bind(o), o._moveEndEvent = o.moveEndEvent.bind(o), o._zoomStartEvent = o.zoomStartEvent.bind(o), o.bindEvent(), o;
	  }if ("undefined" != typeof L) {
	    var ke = L.Layer.extend({ options: { attributionPrefix: null, attribution: "" }, initialize: function initialize(t, e, n) {
	        n = n || {}, this.dataSet = t || {}, this.mapVOptions = e || {}, this.render = this.render.bind(this), L.Util.setOptions(this, n), this.options.attributionPrefix && (this.options.attribution = this.options.attributionPrefix + this.options.attribution), this.canvas = this._createCanvas(), L.stamp(this);
	      }, onAdd: function onAdd(t) {
	        this._map = t;var e = this.getPane(),
	            n = this.container = L.DomUtil.create("div", "leaflet-layer leaflet-zoom-animated", e);n.appendChild(this.canvas);var i = t.getSize();n.style.width = i.x + "px", n.style.height = i.y + "px", this.renderer = new we(t, this, this.dataSet, this.mapVOptions), this.draw(), this.fire("loaded");
	      }, onRemove: function onRemove() {
	        L.DomUtil.remove(this.container), this.renderer.destroy();
	      }, addData: function addData(t, e) {
	        this.renderer.addData(t, e);
	      }, update: function update(t) {
	        this.renderer.update(t);
	      }, getData: function getData() {
	        return this.renderer && (this.dataSet = this.renderer.getData()), this.dataSet;
	      }, removeData: function removeData(t) {
	        this.renderer && this.renderer.removeData(t);
	      }, clearData: function clearData() {
	        this.renderer.clearData();
	      }, draw: function draw() {
	        return this._reset();
	      }, setZIndex: function setZIndex(t) {
	        this.canvas.style.zIndex = t;
	      }, render: function render() {
	        this.renderer._canvasUpdate();
	      }, getCanvas: function getCanvas() {
	        return this.canvas;
	      }, getContainer: function getContainer() {
	        return this.container;
	      }, getTopLeft: function getTopLeft() {
	        var t,
	            e = this._map;e && (t = e.getBounds().getNorthWest());return t;
	      }, _createCanvas: function _createCanvas() {
	        var t = document.createElement("canvas");t.style.position = "absolute", t.style.top = "0px", t.style.left = "0px", t.style.pointerEvents = "none", t.style.zIndex = this.options.zIndex || 600;var e = "undefined" == typeof window ? {} : window,
	            n = this.devicePixelRatio = e.devicePixelRatio;return this.mapVOptions.context && "2d" !== this.mapVOptions.context || t.getContext("2d").scale(n, n), t;
	      }, _resize: function _resize() {
	        var t = this.canvas;if (t) {
	          var e = this._map,
	              n = e.getSize();t.width = n.x, t.height = n.y, t.style.width = n.x + "px", t.style.height = n.y + "px";var i = e.getBounds(),
	              o = e.latLngToLayerPoint(i.getNorthWest());L.DomUtil.setPosition(t, o);
	        }
	      }, _reset: function _reset() {
	        this._resize(), this._render();
	      }, redraw: function redraw() {
	        this._resize(), this._render();
	      }, _render: function _render() {
	        this.render();
	      } });_e = function _e(t, e, n) {
	      return new ke(t, e, n);
	    };
	  }var Ee,
	      Le = _e,
	      Ce = (l(Se, Gt), e(Se, [{ key: "initDevicePixelRatio", value: function value() {
	      this.devicePixelRatio = window.devicePixelRatio || 1;
	    } }, { key: "clickEvent", value: function value(t) {
	      var e = t.point;h(Se.prototype.__proto__ || Object.getPrototypeOf(Se.prototype), "clickEvent", this).call(this, e, t);
	    } }, { key: "mousemoveEvent", value: function value(t) {
	      var e = t.point;h(Se.prototype.__proto__ || Object.getPrototypeOf(Se.prototype), "mousemoveEvent", this).call(this, e, t);
	    } }, { key: "addAnimatorEvent", value: function value() {} }, { key: "animatorMovestartEvent", value: function value() {
	      var t = this.options.animation;this.isEnabledTime() && this.animator && (this.steps.step = t.stepsRange.start);
	    } }, { key: "animatorMoveendEvent", value: function value() {
	      this.isEnabledTime() && this.animator;
	    } }, { key: "bindEvent", value: function value() {
	      this.map, this.options.methods && (this.options.methods.click, this.options.methods.mousemove);
	    } }, { key: "unbindEvent", value: function value() {
	      var t = this.map;this.options.methods && (this.options.methods.click && t.off("click", this.clickEvent), this.options.methods.mousemove && t.off("mousemove", this.mousemoveEvent));
	    } }, { key: "getContext", value: function value() {
	      return this.canvasLayer.canvas.getContext(this.context);
	    } }, { key: "init", value: function value(t) {
	      this.options = t, this.initDataRange(t), this.context = this.options.context || "2d", this.options.zIndex && this.canvasLayer && this.canvasLayer.setZIndex(this.options.zIndex), this.initAnimator();
	    } }, { key: "_canvasUpdate", value: function value(n) {
	      this.map;var i = this.scene;if (this.canvasLayer && !this.stopAniamation) {
	        var o = this.options.animation,
	            t = this.getContext();if (this.isEnabledTime()) {
	          if (void 0 === n) return void this.clear(t);"2d" === this.context && (t.save(), t.globalCompositeOperation = "destination-out", t.fillStyle = "rgba(0, 0, 0, .1)", t.fillRect(0, 0, t.canvas.width, t.canvas.height), t.restore());
	        } else this.clear(t);if ("2d" === this.context) for (var e in this.options) {
	          t[e] = this.options[e];
	        } else t.clear(t.COLOR_BUFFER_BIT);var a = { transferCoordinate: function transferCoordinate(t) {
	            var e = Cesium.Cartesian3.fromDegrees(t[0], t[1]),
	                n = Cesium.SceneTransforms.wgs84ToWindowCoordinates(i, e);return null == n ? [-1, -1] : [n.x, n.y];
	          } };void 0 !== n && (a.filter = function (t) {
	          var e = o.trails || 10;return !!(n && t.time > n - e && t.time < n);
	        });var r = this.dataSet.get(a);this.processData(r), "m" == this.options.unit && this.options.size, this.options._size = this.options.size;var s = Cesium.SceneTransforms.wgs84ToWindowCoordinates(i, Cesium.Cartesian3.fromDegrees(0, 0));this.drawContext(t, new T(r), this.options, s), this.options.updateCallback && this.options.updateCallback(n);
	      }
	    } }, { key: "updateData", value: function value(t, e) {
	      var n = t;n && n.get && (n = n.get()), null != n && this.dataSet.set(n), h(Se.prototype.__proto__ || Object.getPrototypeOf(Se.prototype), "update", this).call(this, { options: e });
	    } }, { key: "addData", value: function value(t, e) {
	      var n = t;t && t.get && (n = t.get()), this.dataSet.add(n), this.update({ options: e });
	    } }, { key: "getData", value: function value() {
	      return this.dataSet;
	    } }, { key: "removeData", value: function value(e) {
	      if (this.dataSet) {
	        var t = this.dataSet.get({ filter: function filter(t) {
	            return null == e || "function" != typeof e || !e(t);
	          } });this.dataSet.set(t), this.update({ options: null });
	      }
	    } }, { key: "clearData", value: function value() {
	      this.dataSet && this.dataSet.clear(), this.update({ options: null });
	    } }, { key: "draw", value: function value() {
	      this.canvasLayer.draw();
	    } }, { key: "clear", value: function value(t) {
	      t && t.clearRect && t.clearRect(0, 0, t.canvas.width, t.canvas.height);
	    } }]), Se);function Se(t, e, n, i) {
	    s(this, Se);var o = u(this, (Se.__proto__ || Object.getPrototypeOf(Se)).call(this, t, e, n));return Gt ? (o.map = t, o.scene = t.scene, o.dataSet = e, n = n || {}, o.init(n), o.argCheck(n), o.initDevicePixelRatio(), o.canvasLayer = i, o.stopAniamation = !1, o.animation = n.animation, o.clickEvent = o.clickEvent.bind(o), o.mousemoveEvent = o.mousemoveEvent.bind(o), o.bindEvent(), o) : u(o);
	  }if ("undefined" != typeof Cesium) {
	    var Me = 0,
	        Pe = (e(ze, [{ key: "initDevicePixelRatio", value: function value() {
	        this.devicePixelRatio = window.devicePixelRatio || 1;
	      } }, { key: "addInnerContainer", value: function value() {
	        this.container.appendChild(this.canvas);
	      } }, { key: "bindEvent", value: function value() {
	        var e = this;this.innerMoveStart = this.moveStartEvent.bind(this), this.innerMoveEnd = this.moveEndEvent.bind(this), this.scene.camera.moveStart.addEventListener(this.innerMoveStart, this), this.scene.camera.moveEnd.addEventListener(this.innerMoveEnd, this);var t = new Cesium.ScreenSpaceEventHandler(this.scene.canvas);t.setInputAction(function (t) {
	          e.innerMoveEnd();
	        }, Cesium.ScreenSpaceEventType.LEFT_UP), t.setInputAction(function (t) {
	          e.innerMoveEnd();
	        }, Cesium.ScreenSpaceEventType.MIDDLE_UP), this.handler = t;
	      } }, { key: "unbindEvent", value: function value() {
	        this.scene.camera.moveStart.removeEventListener(this.innerMoveStart, this), this.scene.camera.moveEnd.removeEventListener(this.innerMoveEnd, this), this.scene.postRender.removeEventListener(this._reset, this), this.handler && (this.handler.destroy(), this.handler = null);
	      } }, { key: "moveStartEvent", value: function value() {
	        this.mapvBaseLayer && (this.mapvBaseLayer.animatorMovestartEvent(), this.scene.postRender.addEventListener(this._reset, this));
	      } }, { key: "moveEndEvent", value: function value() {
	        this.mapvBaseLayer && (this.scene.postRender.removeEventListener(this._reset, this), this.mapvBaseLayer.animatorMoveendEvent(), this._reset());
	      } }, { key: "zoomStartEvent", value: function value() {
	        this._unvisiable();
	      } }, { key: "zoomEndEvent", value: function value() {
	        this._unvisiable();
	      } }, { key: "addData", value: function value(t, e) {
	        null != this.mapvBaseLayer && this.mapvBaseLayer.addData(t, e);
	      } }, { key: "updateData", value: function value(t, e) {
	        null != this.mapvBaseLayer && this.mapvBaseLayer.updateData(t, e);
	      } }, { key: "getData", value: function value() {
	        return this.mapvBaseLayer && (this.dataSet = this.mapvBaseLayer.getData()), this.dataSet;
	      } }, { key: "removeData", value: function value(t) {
	        null != this.mapvBaseLayer && this.mapvBaseLayer && this.mapvBaseLayer.removeData(t);
	      } }, { key: "removeAllData", value: function value() {
	        null != this.mapvBaseLayer && this.mapvBaseLayer.clearData();
	      } }, { key: "_visiable", value: function value() {
	        return this.canvas.style.display = "block", this;
	      } }, { key: "_unvisiable", value: function value() {
	        return this.canvas.style.display = "none", this;
	      } }, { key: "_createCanvas", value: function value() {
	        var t = document.createElement("canvas");t.id = this.mapVOptions.layerid || "mapv" + Me++, t.style.position = "absolute", t.style.top = "0px", t.style.left = "0px", t.style.pointerEvents = "none", t.style.zIndex = this.mapVOptions.zIndex || 0, t.width = parseInt(this.map.canvas.width), t.height = parseInt(this.map.canvas.height), t.style.width = this.map.canvas.style.width, t.style.height = this.map.canvas.style.height;var e = this.devicePixelRatio;return "2d" == this.mapVOptions.context && t.getContext(this.mapVOptions.context).scale(e, e), t;
	      } }, { key: "_reset", value: function value() {
	        this.resizeCanvas(), this.fixPosition(), this.onResize(), this.render();
	      } }, { key: "draw", value: function value() {
	        this._reset();
	      } }, { key: "show", value: function value() {
	        this._visiable();
	      } }, { key: "hide", value: function value() {
	        this._unvisiable();
	      } }, { key: "destroy", value: function value() {
	        this.remove();
	      } }, { key: "remove", value: function value() {
	        null != this.mapvBaseLayer && (this.removeAllData(), this.mapvBaseLayer.clear(this.mapvBaseLayer.getContext()), this.mapvBaseLayer = void 0, this.canvas.parentElement.removeChild(this.canvas));
	      } }, { key: "update", value: function value(t) {
	        null != t && this.updateData(t.data, t.options);
	      } }, { key: "resizeCanvas", value: function value() {
	        if (null != this.canvas && null != this.canvas) {
	          var t = this.canvas;t.style.position = "absolute", t.style.top = "0px", t.style.left = "0px", t.width = parseInt(this.map.canvas.width), t.height = parseInt(this.map.canvas.height), t.style.width = this.map.canvas.style.width, t.style.height = this.map.canvas.style.height;
	        }
	      } }, { key: "fixPosition", value: function value() {} }, { key: "onResize", value: function value() {} }, { key: "render", value: function value() {
	        null != this.mapvBaseLayer && this.mapvBaseLayer._canvasUpdate();
	      } }]), ze);Ee = function Ee(t, e, n, i) {
	      return new Pe(t, e, n, i);
	    };
	  }function ze(t, e, n, i) {
	    if (s(this, ze), this.map = t, this.scene = t.scene, this.mapvBaseLayer = new Ce(t, e, n, this), this.mapVOptions = n, this.initDevicePixelRatio(), this.canvas = this._createCanvas(), this.render = this.render.bind(this), i) this.container = i;else {
	      var o = t.container.querySelector(".cesium-viewer-cesiumWidgetContainer");this.container = o || t.container;
	    }this.addInnerContainer(), this.bindEvent(), this._reset();
	  }var Re = Ee,
	      Ae = { getDataSet: function getDataSet(t) {
	      var e = [],
	          n = t.features;if (n) for (var i = 0; i < n.length; i++) {
	        var o = n[i],
	            a = o.geometry,
	            r = o.properties,
	            s = {};for (var h in r) {
	          s[h] = r[h];
	        }s.geometry = a, e.push(s);
	      }return new T(e);
	    } },
	      Oe = { CSVToArray: function CSVToArray(t, e) {
	      e = e || ",";for (var n = new RegExp("(\\" + e + '|\\r?\\n|\\r|^)(?:"([^"]*(?:""[^"]*)*)"|([^"\\' + e + "\\r\\n]*))", "gi"), i = [[]], o = null; o = n.exec(t);) {
	        var a,
	            r = o[1];r.length && r !== e && i.push([]), a = o[2] ? o[2].replace(new RegExp('""', "g"), '"') : o[3], i[i.length - 1].push(a);
	      }return i;
	    }, getDataSet: function getDataSet(t, e) {
	      for (var n = this.CSVToArray(t, e || ","), i = [], o = n[0], a = 1; a < n.length - 1; a++) {
	        for (var r = n[a], s = {}, h = 0; h < r.length; h++) {
	          var l = r[h];"geometry" == o[h] && (l = JSON.parse(l)), s[o[h]] = l;
	        }i.push(s);
	      }return new T(i);
	    } };t.version = "2.0.62", t.canvasClear = E, t.canvasResolutionScale = function (t) {
	    var e = window.devicePixelRatio || 1;t.canvas.width = t.canvas.width * e, t.canvas.height = t.canvas.height * e, t.canvas.style.width = t.canvas.width / e + "px", t.canvas.style.height = t.canvas.height / e + "px", t.scale(e, e);
	  }, t.canvasDrawSimple = c, t.canvasDrawHeatmap = d, t.canvasDrawGrid = g, t.canvasDrawHoneycomb = f, t.webglDrawSimple = st, t.webglDrawPoint = O, t.webglDrawLine = y, t.webglDrawPolygon = rt, t.utilCityCenter = i, t.utilCurve = lt, t.utilForceEdgeBundling = function () {
	    var d = {},
	        m = [],
	        l = [],
	        y = [],
	        x = .1,
	        u = .1,
	        e = 2,
	        c = 6,
	        p = 70,
	        v = .6666667,
	        g = .6,
	        h = 1e-8;function f(t) {
	      return { x: d[t.target].x - d[t.source].x, y: d[t.target].y - d[t.source].y };
	    }function _(t) {
	      return Math.sqrt(Math.pow(d[t.source].x - d[t.target].x, 2) + Math.pow(d[t.source].y - d[t.target].y, 2));
	    }function w(t) {
	      for (var e = 0, n = 1; n < y[t].length; n++) {
	        e += b(y[t][n], y[t][n - 1]);
	      }return e;
	    }function b(t, e) {
	      return Math.sqrt(Math.pow(t.x - e.x, 2) + Math.pow(t.y - e.y, 2));
	    }function r(t, e) {
	      var n = Math.sqrt((e.target.x - e.source.x) * (e.target.x - e.source.x) + (e.target.y - e.source.y) * (e.target.y - e.source.y)),
	          i = ((e.source.y - t.y) * (e.source.y - e.target.y) - (e.source.x - t.x) * (e.target.x - e.source.x)) / (n * n);return { x: e.source.x + i * (e.target.x - e.source.x), y: e.source.y + i * (e.target.y - e.source.y) };
	    }function k(t, e) {
	      for (var n, i = { x: 0, y: 0 }, o = l[t], a = 0; a < o.length; a++) {
	        var r = { x: y[o[a]][e].x - y[t][e].x, y: y[o[a]][e].y - y[t][e].y };if (Math.abs(r.x) > h || Math.abs(r.y) > h) {
	          var s = 1 / Math.pow((n = { source: y[o[a]][e], target: y[t][e] }, Math.sqrt(Math.pow(n.source.x - n.target.x, 2) + Math.pow(n.source.y - n.target.y, 2))), 1);i.x += r.x * s, i.y += r.y * s;
	        }
	      }return i;
	    }function E(t, e, n) {
	      for (var i, o, a, r, s, h, l, u, c = x / (_(m[t]) * (e + 1)), p = [{ x: 0, y: 0 }], v = 1; v < e + 1; v++) {
	        var d = { x: 0, y: 0 },
	            g = (o = v, a = c, u = l = void 0, r = y[i = t][o - 1], s = y[i][o + 1], h = y[i][o], l = r.x - h.x + s.x - h.x, u = r.y - h.y + s.y - h.y, { x: l *= a, y: u *= a }),
	            f = k(t, v);d.x = n * (g.x + f.x), d.y = n * (g.y + f.y), p.push(d);
	      }return p.push({ x: 0, y: 0 }), p;
	    }function L(t) {
	      for (var e = 0; e < m.length; e++) {
	        if (1 == t) y[e].push(d[m[e].source]), y[e].push((u = m[e], { x: (d[u.source].x + d[u.target].x) / 2, y: (d[u.source].y + d[u.target].y) / 2 })), y[e].push(d[m[e].target]);else {
	          var n = w(e) / (t + 1),
	              i = n,
	              o = [];o.push(d[m[e].source]);for (var a = 1; a < y[e].length; a++) {
	            for (var r = b(y[e][a], y[e][a - 1]); i < r;) {
	              var s = i / r,
	                  h = y[e][a - 1].x,
	                  l = y[e][a - 1].y;h += s * (y[e][a].x - y[e][a - 1].x), l += s * (y[e][a].y - y[e][a - 1].y), o.push({ x: h, y: l }), r -= i, i = n;
	            }i -= r;
	          }o.push(d[m[e].target]), y[e] = o;
	        }
	      }var u;
	    }function C(t, e) {
	      var n = r(d[e.source], { source: d[t.source], target: d[t.target] }),
	          i = r(d[e.target], { source: d[t.source], target: d[t.target] }),
	          o = { x: (n.x + i.x) / 2, y: (n.y + i.y) / 2 },
	          a = { x: (d[t.source].x + d[t.target].x) / 2, y: (d[t.source].y + d[t.target].y) / 2 };return Math.max(0, 1 - 2 * b(a, o) / b(n, i));
	    }function S(t, e) {
	      var n, i, o, a, r, s, h, l, u, c, p, v;return u = t, c = e, Math.abs((p = f(u), v = f(c), (p.x * v.x + p.y * v.y) / (_(u) * _(c)))) * (h = e, 2 / ((l = (_(s = t) + _(h)) / 2) / Math.min(_(s), _(h)) + Math.max(_(s), _(h)) / l)) * (a = e, (r = (_(o = t) + _(a)) / 2) / (r + b({ x: (d[o.source].x + d[o.target].x) / 2, y: (d[o.source].y + d[o.target].y) / 2 }, { x: (d[a.source].x + d[a.target].x) / 2, y: (d[a.source].y + d[a.target].y) / 2 }))) * (n = t, i = e, Math.min(C(n, i), C(i, n)));
	    }function n() {
	      var t = u,
	          e = p,
	          n = 1;!function () {
	        for (var t = 0; t < m.length; t++) {
	          y[t] = [];
	        }
	      }(), function () {
	        for (var t = 0; t < m.length; t++) {
	          l[t] = [];
	        }
	      }(), L(n), function () {
	        for (var t = 0; t < m.length - 1; t++) {
	          for (var e = t + 1; e < m.length; e++) {
	            t != e && (n = m[t], i = m[e], S(n, i) >= g && (l[t].push(e), l[e].push(t)));
	          }
	        }var n, i;
	      }();for (var i = 0; i < c; i++) {
	        for (var o = 0; o < e; o++) {
	          for (var a = [], r = 0; r < m.length; r++) {
	            a[r] = E(r, n, t);
	          }for (var s = 0; s < m.length; s++) {
	            for (var h = 0; h < n + 1; h++) {
	              y[s][h].x += a[s][h].x, y[s][h].y += a[s][h].y;
	            }
	          }
	        }t /= 2, e *= v, L(n *= 2);
	      }return y;
	    }return n.nodes = function (t) {
	      return 0 == arguments.length ? d : (d = t, n);
	    }, n.edges = function (t) {
	      return 0 == arguments.length ? m : (m = function (t) {
	        for (var e = [], n = 0; n < t.length; n++) {
	          d[t[n].source].x != d[t[n].target].x && d[t[n].source].y != d[t[n].target].y && e.push(t[n]);
	        }return e;
	      }(t), n);
	    }, n.bundling_stiffness = function (t) {
	      return 0 == arguments.length ? x : (x = t, n);
	    }, n.step_size = function (t) {
	      return 0 == arguments.length ? u : (u = t, n);
	    }, n.cycles = function (t) {
	      return 0 == arguments.length ? c : (c = t, n);
	    }, n.iterations = function (t) {
	      return 0 == arguments.length ? p : (p = t, n);
	    }, n.iterations_rate = function (t) {
	      return 0 == arguments.length ? v : (v = t, n);
	    }, n.subdivision_points_seed = function (t) {
	      return 0 == arguments.length ? P : (P = t, n);
	    }, n.subdivision_rate = function (t) {
	      return 0 == arguments.length ? e : (e = t, n);
	    }, n.compatbility_threshold = function (t) {
	      return 0 == arguments.length ? compatbility_threshold : (g = t, n);
	    }, n;
	  }, t.utilDataRangeIntensity = D, t.utilDataRangeCategory = ut, t.utilDataRangeChoropleth = ct, t.Map = pt, t.baiduMapCanvasLayer = dt, t.baiduMapAnimationLayer = Kt, t.baiduMapLayer = ie, t.googleMapCanvasLayer = ae, t.googleMapLayer = se, t.MaptalksLayer = ge, t.AMapLayer = fe, t.OpenlayersLayer = ye, t.leafletMapLayer = Le, t.cesiumMapLayer = Re, t.DataSet = T, t.geojson = Ae, t.csv = Oe, Object.defineProperty(t, "__esModule", { value: !0 });
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(120)))

/***/ }),
/* 120 */
/***/ (function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	process.prependListener = noop;
	process.prependOnceListener = noop;

	process.listeners = function (name) { return [] }

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ }),
/* 121 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * 聚合
	 * @param {viewer} viewer对象
	 * @param {Object} options - 参数。
	 * @param {string/geojson} options.dataOrUrl -  数据url/geojson数据
	 * @param {Number} options.pixelRange -  聚合像素范围
	 * @param {Array} options.style -  聚合时显示样式
	 * @param {string} options.img -  未配置聚合时显示图片
	 */
	var Clusterpoint = function () {
	    function Clusterpoint(opt) {
	        _classCallCheck(this, Clusterpoint);

	        this.options = {
	            dataOrUrl: '',
	            pixelRange: 15,
	            enabled: true,
	            style: [{
	                num: 1,
	                size: 48,
	                color: "#e6a23cbb"
	            }],
	            img: ""
	        };
	        this.options = Object.assign(this.options, opt);
	        this.viewer = opt.viewer;
	        this.dataSources = null;
	        this.clustericon = {};
	        if (this.options.dataOrUrl && this.options.dataOrUrl != "") {
	            this.loadjson();
	        }
	    }

	    _createClass(Clusterpoint, [{
	        key: "loadjson",
	        value: function loadjson() {
	            var this_ = this;
	            new Cesium.GeoJsonDataSource().load(this_.options.dataOrUrl).then(function (geoJsonDataSource) {
	                this_.showcluster(geoJsonDataSource);
	            });
	        }
	    }, {
	        key: "showcluster",
	        value: function showcluster(geoJsonDataSource) {
	            var this_ = this;
	            this.dataSources = geoJsonDataSource;
	            this.viewer.dataSources.add(this.dataSources);

	            var pixelRange = this.options.pixelRange;
	            var minimumClusterSize = 1;
	            var enabled = this.options.enabled;
	            //开启聚合
	            this.dataSources.clustering.enabled = enabled;
	            this.dataSources.clustering.pixelRange = pixelRange;
	            this.dataSources.clustering.minimumClusterSize = minimumClusterSize;

	            var removeListener;
	            //聚合
	            function customStyle() {
	                if (Cesium.defined(removeListener)) {
	                    removeListener();
	                    removeListener = undefined;
	                } else {
	                    removeListener = this_.dataSources.clustering.clusterEvent.addEventListener(function (clusteredEntities, cluster) {

	                        cluster.billboard.show = true;
	                        cluster.billboard.id = cluster.label.id;
	                        cluster.billboard.eyeOffset = new Cesium.Cartesian3(0, 0, -10);
	                        cluster.billboard.disableDepthTestDistance = Number.POSITIVE_INFINITY;
	                        cluster.billboard.verticalOrigin = Cesium.VerticalOrigin.CENTER;

	                        var xx = -1;
	                        for (var i = 0; i < this_.options.style.length; i++) {
	                            if (clusteredEntities.length > this_.options.style[i].num) {
	                                xx = i;
	                            }
	                        }
	                        if (xx == -1) {
	                            cluster.billboard.image = this_.options.img;
	                        } else {
	                            cluster.billboard.image = this_.drawImage(this_.options.style[xx].size, this_.options.style[xx].color);
	                        }

	                        if (xx !== -1) {
	                            cluster.label.show = true;
	                            cluster.label.style = Cesium.LabelStyle.FILL;
	                            cluster.label.fillColor = Cesium.Color.WHITE;
	                            cluster.label.font = "normal 16px MicroSoft YaHei";
	                            cluster.label.outlineWidth = 4;
	                            cluster.label.horizontalOrigin = Cesium.HorizontalOrigin.CENTER;
	                            cluster.label.verticalOrigin = Cesium.VerticalOrigin.CENTER;
	                            cluster.label.disableDepthTestDistance = Number.POSITIVE_INFINITY;
	                            cluster.label.pixelOffset = new Cesium.Cartesian2(0, 0);
	                            cluster.label.eyeOffset = new Cesium.Cartesian3(0, 0, -10);

	                            if (this_.options.style[xx].textstyle) {
	                                for (var t in this_.options.style[xx].textstyle) {
	                                    cluster.label[t] = this_.options.style[xx].textstyle[t];
	                                }
	                            }
	                        } else {
	                            cluster.label.show = false;
	                        }
	                    });
	                }

	                // force a re-cluster with the new styling
	                var pixelRange = this_.dataSources.clustering.pixelRange;
	                this_.dataSources.clustering.pixelRange = 0;
	                this_.dataSources.clustering.pixelRange = pixelRange;
	            }
	            customStyle();
	        }
	    }, {
	        key: "drawImage",
	        value: function drawImage(size, color) {
	            if (this.clustericon[size + "_" + color]) {
	                return this.clustericon[size + "_" + color];
	            }
	            var canvas = document.createElement("canvas");
	            canvas.height = size;
	            canvas.width = size;
	            var ctx = canvas.getContext('2d');
	            //画圈
	            ctx.beginPath();
	            ctx.arc(size / 2, size / 2, size / 2, 0, Math.PI * 2, true);
	            ctx.fillStyle = color;
	            ctx.closePath();
	            ctx.fill();

	            var canvasdataurl = canvas.toDataURL();
	            this.clustericon[size + "_" + color] = canvasdataurl;
	            return canvasdataurl;
	        }
	    }, {
	        key: "remove",
	        value: function remove() {
	            this.viewer.dataSources.remove(this.dataSources);
	            this.dataSources = null;
	            this.clustericon = {};
	        }
	    }]);

	    return Clusterpoint;
	}();

	exports.default = Clusterpoint;

/***/ }),
/* 122 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	        value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var WelcomAPI = function () {
	        function WelcomAPI() {
	                _classCallCheck(this, WelcomAPI);
	        }

	        _createClass(WelcomAPI, null, [{
	                key: "greeting",
	                value: function greeting() {
	                        var e = "%c";
	                        var format1 = "color:#00a1ff;font-weight:bolder;font-size:22px;font-family:'Microsoft YaHei',微软雅黑,'MicrosoftJhengHei',华文细黑,STHeiti,MingLiu ";

	                        var format2 = "color:#00a1ff;font-size:8px;font-family:'Microsoft YaHei',微软雅黑,'MicrosoftJhengHei',华文细黑,STHeiti,MingLiu ";

	                        var welCom = "欢迎使用CTMap SDK";
	                        var versionInfo = "版本号：1.1.0414";
	                        var buildInfo = "编译日期：2020-4-14 16:39:53";
	                        var authInfo = "授权信息：授权-永久使用此软件当前版本。";

	                        console.info(e + welCom, format1);

	                        console.info(e + versionInfo, format2);
	                        console.info(e + buildInfo, format2);
	                        console.info(e + authInfo, format2);
	                }
	        }]);

	        return WelcomAPI;
	}();

	exports.default = WelcomAPI;

/***/ }),
/* 123 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	function LatLonGridLayer(description, scene) {

	    description = description || {};

	    this._tilingScheme = description.tilingScheme || new Cesium.GeographicTilingScheme();

	    this._color = description.color || new Cesium.Color(1.0, 1.0, 1.0, 0.4);

	    this._tileWidth = description.tileWidth || 256;
	    this._tileHeight = description.tileHeight || 256;

	    this._ready = true;

	    // default to decimal intervals
	    this._sexagesimal = description.sexagesimal || false;
	    this._numLines = description.numLines || 50;

	    this._scene = scene;
	    this._labels = new Cesium.LabelCollection();
	    scene.primitives.add(this._labels);
	    this._polylines = new Cesium.PolylineCollection();
	    scene.primitives.add(this._polylines);
	    this._ellipsoid = scene.globe.ellipsoid;

	    var canvas = document.createElement('canvas');
	    canvas.width = 256;
	    canvas.height = 256;
	    this._canvas = canvas;

	    var that = this;
	    scene.camera.moveEnd.addEventListener(function () {
	        if (!that._show) return;

	        that._polylines.removeAll();
	        that._labels.removeAll();
	        that._currentExtent = null;
	        that._drawGrid(that._getExtentView());
	    });
	    scene.imageryLayers.addImageryProvider(this);
	};

	var definePropertyWorks = function () {
	    try {
	        return 'x' in Object.defineProperty({}, 'x', {});
	    } catch (e) {
	        return false;
	    }
	}();

	/**
	 * Defines properties on an object, using Object.defineProperties if available,
	 * otherwise returns the object unchanged.  This function should be used in
	 * setup code to prevent errors from completely halting JavaScript execution
	 * in legacy browsers.
	 *
	 * @private
	 *
	 * @exports defineProperties
	 */
	var defineProperties = Object.defineProperties;
	if (!definePropertyWorks || !defineProperties) {
	    defineProperties = function defineProperties(o) {
	        return o;
	    };
	}

	defineProperties(LatLonGridLayer.prototype, {
	    url: {
	        get: function get() {
	            return undefined;
	        }
	    },

	    proxy: {
	        get: function get() {
	            return undefined;
	        }
	    },

	    tileWidth: {
	        get: function get() {
	            return this._tileWidth;
	        }
	    },

	    tileHeight: {
	        get: function get() {
	            return this._tileHeight;
	        }
	    },

	    maximumLevel: {
	        get: function get() {
	            return 18;
	        }
	    },

	    minimumLevel: {
	        get: function get() {
	            return 0;
	        }
	    },
	    tilingScheme: {
	        get: function get() {
	            return this._tilingScheme;
	        }
	    },
	    rectangle: {
	        get: function get() {
	            return this._tilingScheme.rectangle;
	        }
	    },
	    tileDiscardPolicy: {
	        get: function get() {
	            return undefined;
	        }
	    },
	    errorEvent: {
	        get: function get() {
	            return this._errorEvent;
	        }
	    },
	    ready: {
	        get: function get() {
	            return this._ready;
	        }
	    },
	    credit: {
	        get: function get() {
	            return this._credit;
	        }
	    },
	    hasAlphaChannel: {
	        get: function get() {
	            return true;
	        }
	    }
	});

	LatLonGridLayer.prototype.makeLabel = function (lng, lat, text, top, color) {
	    this._labels.add({
	        position: this._ellipsoid.cartographicToCartesian(new Cesium.Cartographic(lng, lat, 10.0)),
	        text: text,
	        //font: 'normal',
	        //style: Cesium.LabelStyle.FILL,
	        //fillColor: 'white',
	        //outlineColor: 'white',
	        font: '16px Helvetica',
	        style: Cesium.LabelStyle.FILL_AND_OUTLINE,
	        fillColor: Cesium.Color.AZURE,
	        outlineColor: Cesium.Color.BLACK,
	        outlineWidth: 2,

	        pixelOffset: new Cesium.Cartesian2(5, top ? 18 : -18),
	        eyeOffset: Cesium.Cartesian3.ZERO,
	        horizontalOrigin: Cesium.HorizontalOrigin.LEFT,
	        verticalOrigin: top ? Cesium.VerticalOrigin.BOTTOM : Cesium.VerticalOrigin.TOP,
	        scale: 1.0
	    });
	};

	LatLonGridLayer.prototype._drawGrid = function (extent) {

	    if (this._currentExtent && this._currentExtent.equals(extent)) {
	        return;
	    }
	    this._currentExtent = extent;

	    this._polylines.removeAll();
	    this._labels.removeAll();

	    var minPixel = 0;
	    var maxPixel = this._canvasSize;

	    var dLat = 0,
	        dLng = 0,
	        index;
	    // get the nearest to the calculated value
	    for (index = 0; index < mins.length && dLat < (extent.north - extent.south) / 10; index++) {
	        dLat = mins[index];
	    }
	    for (index = 0; index < mins.length && dLng < (extent.east - extent.west) / 10; index++) {
	        dLng = mins[index];
	    }

	    // round iteration limits to the computed grid interval
	    var minLng = (extent.west < 0 ? Math.ceil(extent.west / dLng) : Math.floor(extent.west / dLng)) * dLng;
	    var minLat = (extent.south < 0 ? Math.ceil(extent.south / dLat) : Math.floor(extent.south / dLat)) * dLat;
	    var maxLng = (extent.east < 0 ? Math.ceil(extent.east / dLat) : Math.floor(extent.east / dLat)) * dLat;
	    var maxLat = (extent.north < 0 ? Math.ceil(extent.north / dLng) : Math.floor(extent.north / dLng)) * dLng;

	    // extend to make sure we cover for non refresh of tiles
	    minLng = Math.max(minLng - 2 * dLng, -Math.PI);
	    maxLng = Math.min(maxLng + 2 * dLng, Math.PI);
	    minLat = Math.max(minLat - 2 * dLat, -Math.PI / 2);
	    maxLat = Math.min(maxLat + 2 * dLng, Math.PI / 2);

	    var ellipsoid = this._ellipsoid;
	    var lat,
	        lng,
	        granularity = Cesium.Math.toRadians(1);

	    // labels positions
	    var latitudeText = minLat + Math.floor((maxLat - minLat) / dLat / 2) * dLat;
	    for (lng = minLng; lng < maxLng; lng += dLng) {
	        // draw meridian
	        var path = [];
	        for (lat = minLat; lat < maxLat; lat += granularity) {
	            path.push(new Cesium.Cartographic(lng, lat));
	        }
	        path.push(new Cesium.Cartographic(lng, maxLat));
	        this._polylines.add({
	            positions: ellipsoid.cartographicArrayToCartesianArray(path),
	            width: 1
	        });
	        var degLng = Cesium.Math.toDegrees(lng);
	        this.makeLabel(lng, latitudeText, this._sexagesimal ? this._decToSex(degLng) : degLng.toFixed(gridPrecision(dLng)), false);
	    }

	    // lats
	    var longitudeText = minLng + Math.floor((maxLng - minLng) / dLng / 2) * dLng;
	    for (lat = minLat; lat < maxLat; lat += dLat) {
	        // draw parallels
	        var path = [];
	        for (lng = minLng; lng < maxLng; lng += granularity) {
	            path.push(new Cesium.Cartographic(lng, lat));
	        }
	        path.push(new Cesium.Cartographic(maxLng, lat));
	        this._polylines.add({
	            positions: ellipsoid.cartographicArrayToCartesianArray(path),
	            width: 1
	        });
	        var degLat = Cesium.Math.toDegrees(lat);
	        this.makeLabel(longitudeText, lat, this._sexagesimal ? this._decToSex(degLat) : degLat.toFixed(gridPrecision(dLat)), true);
	    }
	};

	LatLonGridLayer.prototype.requestImage = function (x, y, level) {

	    if (this._show) {
	        this._drawGrid(this._getExtentView());
	    }

	    return this._canvas;
	};

	LatLonGridLayer.prototype.setVisible = function (visible) {
	    this._show = visible;
	    if (!visible) {
	        this._polylines.removeAll();
	        this._labels.removeAll();
	    } else {
	        this._currentExtent = null;
	        this._drawGrid(this._getExtentView());
	    }
	};

	LatLonGridLayer.prototype.isVisible = function () {
	    return this._show;
	};

	LatLonGridLayer.prototype._decToSex = function (d) {
	    var degs = Math.floor(d);
	    var mins = ((Math.abs(d) - degs) * 60.0).toFixed(2);
	    if (mins == "60.00") {
	        degs += 1.0;
	        mins = "0.00";
	    }
	    return [degs, ":", mins].join('');
	};

	LatLonGridLayer.prototype._getExtentView = function () {
	    var camera = this._scene.camera;
	    var canvas = this._scene.canvas;
	    var corners = [camera.pickEllipsoid(new Cesium.Cartesian2(0, 0), this._ellipsoid), camera.pickEllipsoid(new Cesium.Cartesian2(canvas.width, 0), this._ellipsoid), camera.pickEllipsoid(new Cesium.Cartesian2(0, canvas.height), this._ellipsoid), camera.pickEllipsoid(new Cesium.Cartesian2(canvas.width, canvas.height), this._ellipsoid)];
	    for (var index = 0; index < 4; index++) {
	        if (corners[index] === undefined) {
	            return Cesium.Rectangle.MAX_VALUE;
	        }
	    }
	    return Cesium.Rectangle.fromCartographicArray(this._ellipsoid.cartesianArrayToCartographicArray(corners));
	};

	function gridPrecision(dDeg) {
	    if (dDeg < 0.01) return 2;
	    if (dDeg < 0.1) return 1;
	    if (dDeg < 1) return 0;
	    return 0;
	}

	var mins = [Cesium.Math.toRadians(0.05), Cesium.Math.toRadians(0.1), Cesium.Math.toRadians(0.2), Cesium.Math.toRadians(0.5), Cesium.Math.toRadians(1.0), Cesium.Math.toRadians(2.0), Cesium.Math.toRadians(5.0), Cesium.Math.toRadians(10.0)];

	function loggingMessage(message) {
	    // var logging = document.getElementById('logging');
	    // logging.innerHTML += message;
	}
	exports.default = LatLonGridLayer;

/***/ }),
/* 124 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var PrimitiveWaterFace = function () {
	    var degreesArrayHeights;
	    var fragmentShader;
	    var normalMapUrl;
	    var geometry;
	    var appearance = null;
	    var viewer;
	    function _(options) {
	        viewer = options.viewer;
	        fragmentShader = FSWaterFace();
	        normalMapUrl = options.normalMapUrl;
	        if (options.DegreesArrayHeights && options.DegreesArrayHeights.length >= 3) {
	            degreesArrayHeights = options.DegreesArrayHeights;
	        } else {
	            degreesArrayHeights = [116.04437, 30.10932, -100, 116.04537, 30.10932, -120, 116.04537, 30.11032, -100, 116.04437, 30.11032, -120, 116.04437, 30.10932, -100];
	        }
	        if (options.extrudedHeight) {
	            geometry = CreateGeometry(degreesArrayHeights, options.startH || 0, options.extrudedHeight);
	        } else {
	            geometry = CreateGeometry(degreesArrayHeights, options.startH || 0);
	        }

	        if (!options.fillcolor) {
	            appearance = CreateAppearence(fragmentShader, normalMapUrl, options);
	        }
	        if (options.ClassificationPrimitive) {
	            // this.primitive = viewer.scene.primitives.add(new Cesium.Primitive(
	            var cfp = new Cesium.ClassificationPrimitive({
	                // allowPicking: false,
	                geometryInstances: new Cesium.GeometryInstance({
	                    geometry: geometry,
	                    attributes: {
	                        color: Cesium.ColorGeometryInstanceAttribute.fromColor(options.fillcolor || Cesium.Color.WHITE.withAlpha(1)),
	                        show: new Cesium.ShowGeometryInstanceAttribute(true)
	                    }
	                }),

	                classificationType: Cesium.ClassificationType.CESIUM_3D_TILE,
	                appearance: appearance
	                // asynchronous: false
	            });
	            if (!appearance) {
	                console.log(appearance);
	                this.primitive = new Cesium.PrimitiveCollection();
	                viewer.scene.primitives.add(this.primitive);
	                this.primitive.add(cfp);
	            } else {
	                this.primitive = viewer.scene.primitives.add(new Cesium.Primitive(cfp));
	            }
	            // ));
	        } else {
	            this.primitive = viewer.scene.primitives.add(new Cesium.Primitive({
	                allowPicking: false,
	                geometryInstances: new Cesium.GeometryInstance({
	                    geometry: geometry
	                }),
	                // classificationType: Cesium.ClassificationType.CESIUM_3D_TILE,
	                appearance: appearance,
	                asynchronous: false
	            }));
	        }
	    }
	    //_degreesArrayHeights是一个组成多边形顶点数组[lon,lat,alt]
	    function CreateGeometry(_degreesArrayHeights, startH, _extrudedHeight) {
	        if (_extrudedHeight || startH) {
	            return new Cesium.PolygonGeometry({
	                polygonHierarchy: new Cesium.PolygonHierarchy(Cesium.Cartesian3.fromDegreesArrayHeights(_degreesArrayHeights)),
	                height: startH || 0,
	                extrudedHeight: _extrudedHeight ? _extrudedHeight : 0
	                // perPositionHeight: true
	            });
	        } else {
	            return new Cesium.PolygonGeometry({
	                polygonHierarchy: new Cesium.PolygonHierarchy(Cesium.Cartesian3.fromDegreesArrayHeights(_degreesArrayHeights)),
	                perPositionHeight: true
	            });
	        }
	    }

	    function CreateAppearence(fs, url, opts) {
	        return new Cesium.EllipsoidSurfaceAppearance({
	            material: new Cesium.Material({
	                fabric: {
	                    type: 'Water',
	                    uniforms: {
	                        baseWaterColor: new Cesium.Color.fromCssColorString(opts.waterColor || "#006ab4").withAlpha(0.5), // 颜色对象水的基色。
	                        // blendColor：从水混合到非水区域时使用的 rgba 颜色对象。
	                        // specularMap：用于指示水域区域的单通道纹理。
	                        // specularIntensity：控制镜面反射强度的数字。

	                        normalMap: url, //水法线扰动的法线贴图。
	                        frequency: 400.0, //控制波数的数字。
	                        animationSpeed: 0.02, //控制水的动画速度的数字。
	                        amplitude: 5.0 //控制水波幅度的数字。
	                    }
	                }
	            }),
	            fragmentShaderSource: fs
	        });
	    }

	    function FSWaterFace() {
	        return "\n            varying vec3 v_positionMC;\n            varying vec3 v_positionEC;\n            varying vec2 v_st;\n            void main()\n            {\n                czm_materialInput materialInput;\n                vec3 normalEC = normalize(czm_normal3D * czm_geodeticSurfaceNormal(v_positionMC, vec3(0.0), vec3(1.0)));\n                #ifdef FACE_FORWARD\n                    normalEC = faceforward(normalEC, vec3(0.0, 0.0, 1.0), -normalEC);\n                #endif\n                materialInput.s = v_st.s;\n                materialInput.st = v_st;\n                materialInput.str = vec3(v_st, 0.0);\n                materialInput.normalEC = normalEC;\n                materialInput.tangentToEyeMatrix = czm_eastNorthUpToEyeCoordinates(v_positionMC, materialInput.normalEC);\n                vec3 positionToEyeEC = -v_positionEC;\n                materialInput.positionToEyeEC = positionToEyeEC;\n                czm_material material = czm_getMaterial(materialInput);\n                #ifdef FLAT\n                    gl_FragColor = vec4(material.diffuse + material.emission, material.alpha);\n                #else\n                    gl_FragColor = czm_phong(normalize(positionToEyeEC), material, czm_lightDirectionEC);\n                #endif\n                gl_FragColor.a=0.7;\n            }\n";
	    }

	    _.prototype.remove = function () {
	        if (this.primitive != null) {
	            viewer.scene.primitives.remove(this.primitive);
	            this.primitive = null;
	        }
	    };
	    _.prototype.updateDegreesPosition = function (_degreesArrayHeights, _extrudedHeight) {
	        if (this.primitive != null) {
	            viewer.scene.primitives.remove(this.primitive);
	            if (_degreesArrayHeights && _degreesArrayHeights.length < 3) {
	                return;
	            }
	            geometry = CreateGeometry(_degreesArrayHeights, _extrudedHeight ? _extrudedHeight : 0);

	            this.primitive = viewer.scene.primitives.add(new Cesium.Primitive({
	                allowPicking: false,
	                geometryInstances: new Cesium.GeometryInstance({
	                    geometry: geometry
	                }),
	                appearance: appearance,
	                asynchronous: false
	            }));
	        } else {
	            return;
	        }
	    };
	    return _;
	}();

	exports.default = PrimitiveWaterFace;

/***/ })
/******/ ]);